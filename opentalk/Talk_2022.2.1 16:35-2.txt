Talk_2022.2.1 16:35-2.txt
저장한 날짜 : 2022. 2. 1. 오후 5:16



2022년 1월 9일 일요일
2022. 1. 9. 오후 7:48, 썰~~ : 넥스트를 쓰면 몰라도
2022. 1. 9. 오후 7:49, 개발닥 : MVC가 클라 서버 걸쳐서 말하는게 아니에요
2022. 1. 9. 오후 7:52, 해달 : 엇 그러면요..?  저는 View(클라이언트)에서 컨트롤러를 거쳐 데이터베이스에서 데이터를 다시 받아온다해서 클라이언트랑 서버로 이해를 하고있었는데…!
2022. 1. 9. 오후 7:52, 개발닥 : 그렇게 볼수도 있어요
2022. 1. 9. 오후 7:52, 개발닥 : 옛날 php나 jsp때 그런식으로 했었어요
2022. 1. 9. 오후 7:53, 개발닥 : 그리고 교육기관에서도 그렇게 가르키고도 있고요  MVC는 소스코드 패턴이지 서버 - 클라 걸쳐서 설명하는 구조는 아니에요
2022. 1. 9. 오후 7:53, 개발닥 : 서버 가려두고 프론트만 봐도 MVC 패턴이 나와요
2022. 1. 9. 오후 7:54, 애교뿜뿜 어피치 : 옛날에 유행하던 리액트 container presenter 같은게 이런걸까요?
2022. 1. 9. 오후 7:55, 해달 : 그러면 서버에서 View를 쓰게되는 경우는 어떤경우라고 볼 수 있을까요?? 잘 몰라서 여쭤봅니다.. View를 쓰는경우는 보지를 못해서 ..
2022. 1. 9. 오후 7:55, 해달 : 혹시.. 괜찮으시다면 설명 부탁드려도 될까요 ?? ㅠㅠ
2022. 1. 9. 오후 7:56, 애교뿜뿜 어피치 : pug 같은거 아닌가요?
2022. 1. 9. 오후 7:56, 개발닥 : pug나 php jsp처럼
2022. 1. 9. 오후 7:56, 개발닥 : <?= > 맞나요?
2022. 1. 9. 오후 7:56, 파이버 : 리액트는 본질적으로 플럭스만 되도록 탄생해서
2022. 1. 9. 오후 7:56, 개발닥 : <%= 메로롱 > 이렇게 서버에서 데이터 찍어서 렌더해주는 경우엔 VIew가 되겠죠
2022. 1. 9. 오후 7:57, 개발닥 : 전 다르다고 생각해요
2022. 1. 9. 오후 7:57, 파이버 : 컨테이너 프레젠터도 MVC를 적당히 따라만 한거지 MVC라고 보기엔 무리가 있지 않을까요?
2022. 1. 9. 오후 7:57, 해달 : 서버에서 그러면 데이터를 찍어서 렌더해주지않고 데이터만 전달해주는 방식은 View를 사용하지 않았으니까 MVC패턴이라고 할 수 없는걸까요 ??
2022. 1. 9. 오후 7:57, 개발닥 : 리액트는 View만 해주고, state를 어떻게 구현하느냐 따라 MVC도 되고 flux도 만들수 잇다고 봐요
2022. 1. 9. 오후 7:57, 애교뿜뿜 어피치 : 맞아요 mvc 는 당연히 아니고 뭔가 옛날 개발자들에 의한 비슷한 냄새가 난다고 해야 한다랄까요
2022. 1. 9. 오후 7:58, 썰~~ : 요새는 아토믹패턴 이야기 많이 나오던데
2022. 1. 9. 오후 7:58, 애교뿜뿜 어피치 : 무튼 mvc 라는게 뭔가 클라 서버 나눈다기보단 뭔가 모양새가 아닐까 생각이 들었습니다
2022. 1. 9. 오후 7:58, 썰~~ : 프론트쪽은
2022. 1. 9. 오후 7:58, 개발닥 : 삭제된 메시지입니다. 
2022. 1. 9. 오후 7:59, 해달 : 그러면 리액트에서 MVC라고 볼 수 있는 부분은 어떻게 ……… 알수있을까요…… 지금 알고 있던 개념과 달라서 ……… 질문이 많아서 죄송합니다....
2022. 1. 9. 오후 7:59, 썰~~ : 아마 리액트쪽은 mvp로 이해하면 힘드실거에요
2022. 1. 9. 오후 8:00, 개발닥 : 사진
2022. 1. 9. 오후 8:00, 개발닥 : MVC가 이거죠?
2022. 1. 9. 오후 8:00, 썰~~ : 에초에 리액트는 v만 담당한다 라고이야기가 나왔어서
2022. 1. 9. 오후 8:00, 개발닥 : Model은 State고요 아니면 reducer 일수도 있고요
2022. 1. 9. 오후 8:00, 개발닥 : View는 JSX고요
2022. 1. 9. 오후 8:00, 개발닥 : Controller는 컴포넌트에 있는 로직입니다
2022. 1. 9. 오후 8:00, 개발닥 : View는 State를 바탕으로 화면에 그려지고
2022. 1. 9. 오후 8:00, 개발닥 : 유저는 View를 보고 인터렉션을 하겠죠 ( click, scroll 이런것 .. )
2022. 1. 9. 오후 8:01, 개발닥 : JSX에 이벤트가 바인딩 되어있다면 Controller가 실행되고
2022. 1. 9. 오후 8:01, 개발닥 : State를 바꾸겠죠
2022. 1. 9. 오후 8:01, 개발닥 : 그러면 State 바꼈으니 JSX도 리렌더링 됩니다
2022. 1. 9. 오후 8:01, 개발닥 : MVC 패턴으로 볼 수 있죠
2022. 1. 9. 오후 8:01, 썰~~ : 사진
2022. 1. 9. 오후 8:01, 애교뿜뿜 어피치 : 공감합니다
2022. 1. 9. 오후 8:01, 썰~~ : 정답은아니지만
2022. 1. 9. 오후 8:01, 썰~~ : 벨로퍼트님께서 쓰신책으로
2022. 1. 9. 오후 8:01, 썰~~ : 저렇게 이야기 되어있습니다
2022. 1. 9. 오후 8:02, 애교뿜뿜 어피치 : 예전 컨테이너 프레젠터 패턴에서 프레젠터에 view 코드 외에 로직이 들어가면 안됐던 것 같습니다
2022. 1. 9. 오후 8:02, 파이버 : MVC는 양방향으로 데이터가 바인드되어있는데
2022. 1. 9. 오후 8:02, 파이버 : 리액트는 양방향이 절대 불가능한데 MVC라고 볼 수 있을까요?
2022. 1. 9. 오후 8:03, 해달 : 그러면 제가 아까 맨처음 위에 드렸던 질문 다시 한번 더 여쭤보자면 


1)2)3) 은 MVC 패턴으로 적용되는 부분이 아니고 
(서버와(M,C) 클라이언트가(V) 아니기 때문에)


1-1) 1-2) —>  FLUX 패턴으로 볼 수 있다
2022. 1. 9. 오후 8:03, 개발닥 : 어디쪽 양방향인가요?
2022. 1. 9. 오후 8:03, 해달 : 친절한 설명 감사합니다!!
2022. 1. 9. 오후 8:03, 해달 : 컨트롤러로 서버쪽에서 데이터를 받아와도 그건 MVC로 적용이 되는 부분이아닌거군요..
2022. 1. 9. 오후 8:03, 파이버 : https://ko.reactjs.org/blog/2013/06/05/why-react.html#react-isnt-an-mvc-framework
2022. 1. 9. 오후 8:04, 파이버 : 사진
2022. 1. 9. 오후 8:04, 썰~~ : 리액트 공홈에서도
2022. 1. 9. 오후 8:04, 개발닥 : 네 그래서 구현에 따라 다르다는거에요
2022. 1. 9. 오후 8:04, 썰~~ : 저렇게 나왔네요
2022. 1. 9. 오후 8:04, 개발닥 : 코드를 어떻게 그리냐에 따라서 다른 패턴을 쓸 수 있다는거에요
2022. 1. 9. 오후 8:05, 개발닥 : 저 패턴에서 Model을 전역으로 올리고 Model 변경 흐름을 항상 reducer를 통해서 하게끔 수정한 후 전역 Store를 여러개의 View가 구독하면 Flux가 되는거구요
2022. 1. 9. 오후 8:05, 개발닥 : 아니면 다른 방식으로 풀어낼수도 있어요
2022. 1. 9. 오후 8:06, 썰~~ : 결국 리액트 자체는 mvc가 아니고
2022. 1. 9. 오후 8:06, 썰~~ : 자스로 그렇게 만들수 있다는 것인거죠?
2022. 1. 9. 오후 8:06, 개발닥 : 네 그렇죠
2022. 1. 9. 오후 8:06, 개발닥 : 그리고 저희는 다 저런 식으로 개발하고 있구요
2022. 1. 9. 오후 8:06, 썰~~ : 그럼 결국 리액트는 mvc가 아니라서
2022. 1. 9. 오후 8:07, 썰~~ : 해달님이 햇갈릴 수도 있을거같아요
2022. 1. 9. 오후 8:07, 썰~~ : 자스로 구현이 가능한것이지
2022. 1. 9. 오후 8:07, 썰~~ : 리액트는 mvc로 이해하면 안되는것이니까요
2022. 1. 9. 오후 8:10, 유용태 (teo.yu) : 제가 글에도 적었지만 MVC나 FLUX, MVVM등은 구조를 설명하기 위한 이론적인 개념입니다. 

질문해주신 내용은 범위를 애초에 다르게 설정을 하고 있어요. 서버를 Model로 보고 브라우저를 View로 본다면 모든 javascript 코드는 Controller가 됩니다. 

FLUX 구조에서는 Store를 모델로 보고 React 컴포넌트를 View로 보고 데이터 파이프라인을 단방향이라고 말하는 거에요.

2가지의 패턴을 가지고 있다라고 보기에는 애초에 기준이 다른거라서 제 마지막 글에도 언급했듯이 본인이 이해하고 설명을 하기 위한 도구일 뿐 MVC 논쟁이 의미없다고 말하는 이유이기도 합니다.
2022. 1. 9. 오후 8:13, 유용태 (teo.yu) : MVC가 웹이 생기기도 전에 이미 UI 프로그래밍에는 쓰이던 용어이고 백엔드 개발자들에게 먼저 쓰인 용어라서 DB(M) - 서버로직(C) - 클라(V) 아무나에게 MVC를 물어보게 되면 다들 각자의 기준(?)으로 말하게 될거에요. ㅋㅋ
2022. 1. 9. 오후 8:14, 해달 : 1. 리액트 자체는 MVC패턴이 아니고 (view만 담당)
2. 코드를 어떻게 작성하냐에 따라서 패턴을 바꿀수가 있는부분이고 ..!
[Client - MVC]
Model - State || reducer
controller - 컴포넌트 로직
View - JSX 

View 이벤트 바인딩 되면 -> 컨트롤러 실행(로직) -> State 변경 -> 리 랜더링 

[Client-FLUX]
Model - State || reducer
controller - 컴포넌트 로직
View - JSX 

Model 전역에 올리고 변경 흐름을 reducer를 사용하고 수정 한 후 전역 store를 여러개의 view가 구독하면 Flux 

3. 서버와 클라이언트로 연결해서 보면 안된다 (패턴을)
4. 서버에서 MVC 에서 view 는 pug ( 처음봤슴다) 
 -  <%= 메로롱 > 이렇게 서버에서 데이터 찍어서 렌더해주는 경우엔 (VIew)

이렇게 정리를..
제가 너무 스압을 .. 죄송합니다..
2022. 1. 9. 오후 8:15, 해달 : 뭔가 항상 이 부분이 이해가 안가고 헷갈렸는데 
말씀들으면서 다시 생각해보니까 정리가 되는 기분이라 넘 기쁩니다.. 다들 너무 친절한 설명 감사드립니다 ㅠㅠ 주말인데..
2022. 1. 9. 오후 8:15, 유용태 (teo.yu) : 초창기 웹 프레임워크가 MVC라고 불렸던 것은 컴포넌트 1개를 기준으로 한것이며  JSX(view) -  hooks(Model) - Event처리 (Controller) 이렇게 나눠서 불러서 그래요.
2022. 1. 9. 오후 8:16, 유용태 (teo.yu) : 다 쪼개기 나름(?) 이랄까요? ㅋㅋ
2022. 1. 9. 오후 8:16, 개발닥 : 디자인 패턴이 소스코드에 대한 패턴이에요
2022. 1. 9. 오후 8:17, 해달 : 그러면 정말 마지막 질문으로…!!!!!! 클라이언트에서

1-1) redux로 값을 처리해주는 경우도 있고 (store)
1-2) 그냥 전달받은 값을 view로 처리하는 경우가 있다면 

이렇게 두가지 방식을 만약에 적용하고 있다면 
두가지 패턴방식이 다 사용되고 있는게 맞는건가요 그러면..!?
2022. 1. 9. 오후 8:17, 썰~~ : 요새는 아토믹 디자인패턴 나와서
2022. 1. 9. 오후 8:17, 유용태 (teo.yu) : 오오~ 맞아요! 서버와 클라이언트를 연결해서 보는 관점은 React-Query에도 있어요 연결해서 보면 안되는건 아니에요. 기준은 항상 자기 마음속에 있는 것
2022. 1. 9. 오후 8:17, 썰~~ : 그쪽으로 많이 물어보더라고요…
2022. 1. 9. 오후 8:18, 유용태 (teo.yu) : 아토믹 디자인 패턴이 Recoil, jotai류를 말하는 건가요?
2022. 1. 9. 오후 8:18, 파이버 : "의미 없다" 로 봐주시는 게 어떨까요
2022. 1. 9. 오후 8:18, 파이버 : 결국 패턴이란 건 설명하기 위한 수단만으로 해석하는 거고 부르기 나름이다-
2022. 1. 9. 오후 8:18, 파이버 : 이런 느낌으로
2022. 1. 9. 오후 8:18, 유용태 (teo.yu) : 맞습니다.
2022. 1. 9. 오후 8:18, 애교뿜뿜 어피치 : 명쾌하네요
2022. 1. 9. 오후 8:18, 유용태 (teo.yu) : 그래서 해달님 표현도 맞는 얘기입니다
2022. 1. 9. 오후 8:19, 썰~~ : 원자 유기체 막 있더라고요
2022. 1. 9. 오후 8:19, 썰~~ : 샵검색 : #아토믹 패턴
2022. 1. 9. 오후 8:19, 해달 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 의미없다로 보고싶은데 만약 추후에 프로젝트로 디자인패턴 질문을 받게되면 어떻게 답변할지 고민하다가 … 말씀해주신걸 토대로 제 생각을 덧붙여 답변을 준비하면 될것 같네요…!! 

친절한 답변을 해주신 모든 분들 정말. . 올해 새해복 많이 받으시고.. 항상 건강하시길. . 바라겠습니다.. 정말로 감사합니다 !!!!!!
2022. 1. 9. 오후 8:19, 해달 : 설명해주신걸 토대로 다시 한번 정리를 해봐야겠네요 ㅎㅅㅎ
2022. 1. 9. 오후 8:19, 썰~~ : 이직 할때 많이 물어보돈 패턴이었습니다..
2022. 1. 9. 오후 8:19, 썰~~ : 2달전 쯤에??
2022. 1. 9. 오후 8:21, 유용태 (teo.yu) : 아~ 맞아요~ MVC와 같은 아키텍쳐와는 결이 다르긴 하지만 디자인와 컴포넌트를 다루는 방식으로 중요한 내용이죠
2022. 1. 9. 오후 8:22, 파이버 : 써보고 싶은데 antd 쓰다보니
2022. 1. 9. 오후 8:22, 파이버 : 분자까지는 antd가 다 해주고 있더라고요 ㅋㅋㅋㅋ
2022. 1. 9. 오후 8:22, 썰~~ : 이번 이직에서 얻은 키워드중하나였는데
2022. 1. 9. 오후 8:22, 썰~~ : 사람들이 좋은가에 대해서는 이야기 많이 하더라고요
2022. 1. 9. 오후 8:23, 유용태 (teo.yu) : 이해하면 확실히 좋은 개념은 맞구요
2022. 1. 9. 오후 8:23, 유용태 (teo.yu) : 실전에 가면 그 경계가 저것만으로 충분한가? 에 대한 부분과
2022. 1. 9. 오후 8:25, 유용태 (teo.yu) : 레벨로 자르게 되면 컴포넌트가 엄청 많은 곳에서는 쓰이는 것 끼리 또 묶어줘야 해서 저 방식으로 폴더구조를 만들었다는 나중에는 관리가 잘 안되더라구요
2022. 1. 9. 오후 9:08, Matthew : 혹시..?
2022. 1. 9. 오후 9:09, 유용태 (teo.yu) : 빌드되는 파일들이라고 하면 사용되는 전체 파일을 말씀하시는 건가요?
2022. 1. 9. 오후 9:12, 유용태 (teo.yu) : webpack plugin을 만들어서 로그을 찍어보면 될거에요
2022. 1. 9. 오후 9:12, 유용태 (teo.yu) : https://webpack.js.org/contribute/writing-a-plugin/
2022. 1. 9. 오후 9:13, 유용태 (teo.yu) : 여기 중간쯤에 파일리스트를 보는 플러그인 샘플이 있네요
2022. 1. 9. 오후 9:27, Matthew : 와우 감사합니다 ㅠ 아무리 찾아도 못찾아서 해맸는데 역시..
2022. 1. 9. 오후 9:29, 유용태 (teo.yu) : 아이고 놓쳤네요 ㅋㅋ

2022년 1월 10일 월요일
2022. 1. 10. 오전 1:04, 해달 : 삭제된 메시지입니다. 
2022. 1. 10. 오후 3:14: 삼류개발자님이 들어왔습니다.
2022. 1. 10. 오후 3:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 10. 오후 3:14, 삼류개발자 : 안녕하세요
2022. 1. 10. 오후 3:14, 삼류개발자 : 벨로그보고 들어왔습니다
2022. 1. 10. 오후 3:14, 유용태 (teo.yu) : 안녕하세요 삼류개발자님! 반갑습니다 :)
2022. 1. 10. 오후 3:14, 유용태 (teo.yu) : 어서오세요 ㅎ
2022. 1. 10. 오후 3:16, 삼류개발자 : 넵 환영 감사합니다~!
2022. 1. 10. 오후 3:16, 유용태 (teo.yu) : 여기는 개발 이야기를 하고싶거나 갑자기 궁금한게 생기면 묻고 답하는 공간입니다. 언제든 편하게 글 남겨주세요~
2022. 1. 10. 오후 3:17, 삼류개발자 : 이모티콘 넵!!!
2022. 1. 10. 오후 3:45, 또리 : 안녕하세요 저 궁금한게 있어서요!
2022. 1. 10. 오후 3:45, 또리 : 제가 이번에 프론트 포지션으로 신규입사를 하게 됐는데
2022. 1. 10. 오후 3:46, 또리 : 프론트 외 적으로 서버에 서비스설치 및 사이트 유지보수 업무도 같이 하고있어요
2022. 1. 10. 오후 3:46, 개발닥 : 와 이 방 곧 100명되겠네요
2022. 1. 10. 오후 3:46, 또리 : 신규 서비스는 프론트 포지션으로 들어가긴 하는데 이 업무는 계속 같이 할거같은데
2022. 1. 10. 오후 3:46, 또리 : 보통 다들 프엔 개발자들도 이런업무를 같이 가져가나요ㅠㅠ??
2022. 1. 10. 오후 3:47, 또리 : 아직 프론트쪽 공부도 할게 많은데 백엔소스랑 인프라까지 보려니 좀 버겁기도 해요
2022. 1. 10. 오후 3:47, 파이버 : 그거는 회바회 아닐까요..?
2022. 1. 10. 오후 3:47, 파이버 : 저는 첫회사랑 두번째회사는 안시켰고 지금 회사는 시키더라구요
2022. 1. 10. 오후 3:48, Vintz : 저희 회사는 프론트쪽만 하고있긴 해요..! 회바회인것 같아요
2022. 1. 10. 오후 3:49, 썰~~ : 저도 프론트만 하긴합니다.
2022. 1. 10. 오후 3:52, 또리 : 가뜩이나 신입이라 공부할게 너무 많은데 전체적으로 다 알아야하니 너무 버겁게만 느껴지네요ㅠㅠ
2022. 1. 10. 오후 3:53, 또리 : 매뉴얼  현업교육까지 시키시고..
2022. 1. 10. 오후 3:53, 또리 : ㅠㅠ
2022. 1. 10. 오후 3:54, 파이버 : 근데 회사 도메인에 대한 이해는 필수적이라 신입사원 교육 차원에서 할만하다고 보여요
2022. 1. 10. 오후 3:54, 파이버 : 근데 그걸 가지고 일을 해야 한다면 그건 좀..
2022. 1. 10. 오후 3:55, 또리 : 그래도 버텨보면 나중엔 다방면으로 저한테 도움이 되는거겠죠...
2022. 1. 10. 오후 3:56, Vintz : 그렇죠 또리님은 제너럴리스트가 되는거죠
2022. 1. 10. 오후 3:56, 파이버 : 근데 보통 신입땐 그 신입방패 적용되지 않나요?
2022. 1. 10. 오후 3:56, 파이버 : 한 두달동안 할 일 없어서 사수님한테 맨날 일달라고 조르고
2022. 1. 10. 오후 3:57, 또리 : 저는 입사 하자마자 업무를 주셔서
2022. 1. 10. 오후 3:57, 또리 : 정신이없었어요ㅋㅋㅋㅋㅋㅋ
2022. 1. 10. 오후 3:57, 파이버 : 아..ㅋㅋㅋㅋㅋ 많이 바쁜 곳인가 보네요 ㅜ
2022. 1. 10. 오후 3:57, 또리 : 스프링도 잘 모르는데 코드분석을 하고있으니
2022. 1. 10. 오후 3:57, 또리 : 골치아프네요..
2022. 1. 10. 오후 3:58, 또리 : 정말 기본적인것만 아는데 제가 직접 현업이랑 컨택해서 업무 병행하려니까 너무 무서워요ㅋㅋㅋㅋㅋ
2022. 1. 10. 오후 4:17, Luke : 강제 레벨업에 당첨되셨습니다.....
2022. 1. 10. 오후 4:38, 프론트준비생 : 혹시트위터하시는분?
2022. 1. 10. 오후 4:38, 프론트준비생 : 이모티콘 요새트위터 보고있는데 재밌네요...
2022. 1. 10. 오후 5:08, 상고펭 : 저 트위터 해요ㅎㅎ 유명한 개발자분들 팔로우해놓고 가끔 봅니다
2022. 1. 10. 오후 5:16, 파이버 : 댄 아브라모브랑 응원하는 축구팀 딱 두명 팔로우하고 있는 거 같아요
2022. 1. 10. 오후 5:19, 개발닥 : https://www.youtube.com/watch?v=7mkQi0TlJQo
2022. 1. 10. 오후 5:20, 개발닥 : 리액트 18 완전 쩌네여..
2022. 1. 10. 오후 5:26, 개발닥 : 뷰 앵귤러는 이제 범접할 수 없는 레벨까지 가버리네요
2022. 1. 10. 오후 5:31, 애교뿜뿜 어피치 : 리액트가 발전할수록 차세대 전자정부프레임워크 프론트 부문에서 리액트가 사용되고 있는 점도 좋네요
2022. 1. 10. 오후 5:48, 유용태 (teo.yu) : 안녕하세요 또리님~ 혹시 임시로 맡게 되는거에요? 아니면 본인의 직무로 확정이 된 상황인가요?
2022. 1. 10. 오후 6:15, 유용태 (teo.yu) : https://yozm.wishket.com/magazine/detail/1261/
2022. 1. 10. 오후 6:46, 화가난다 화가나 그래서 난 화가임 : 혹시 input type="date" 일때용! placeholder 설정하는 방법이 있나용?
2022. 1. 10. 오후 6:46, 화가난다 화가나 그래서 난 화가임 : 한글로 하고 싶어서용
2022. 1. 10. 오후 6:47, 화가난다 화가나 그래서 난 화가임 : 보통 '연도-월-일'이라고 적히는 게 디폴트 값인 부분이용!
2022. 1. 10. 오후 6:48, Hardy : https://m.blog.naver.com/ununa25/221732603393
2022. 1. 10. 오후 6:48, Hardy : 이게 정답일까요?
2022. 1. 10. 오후 6:48, Hardy : css로 하는 방법밖엔 안나오네요
2022. 1. 10. 오후 11:57, 유용태 (teo.yu) : https://gitmoji.dev/

2022년 1월 11일 화요일
2022. 1. 11. 오전 7:15, 콘솔 : 깃모지 애용하거잇습니다 ㅎㅎㅎㅎ
2022. 1. 11. 오전 7:50, 유용태 (teo.yu) : 저는 어제 알았어요ㅋㅋ 개발공부을 하다보면 가끔씩 '와~ 왜 나는 이 생각을 한번도 안해봤었지?' 이런 것들을 만나면서  뇌공간(?)이 확장되는 느낌을 받을 때가 있는데 그 기분이 참 좋아요 :)
2022. 1. 11. 오전 8:05, 퍼블퍼블 : 그맛에 개발하죠!!
2022. 1. 11. 오전 9:36, 꼬북 : 깃모지 사용예시 보고싶네요 ㅎㅎ
2022. 1. 11. 오전 10:14, 제레인트20 : 그럴땐 gitmoji commit 목록을 보시면 됩니다.
https://github.com/carloscuesta/gitmoji/commits/master
2022. 1. 11. 오전 11:04, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 11. 오전 11:04, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 11. 오전 11:05, 화가난다 화가나 그래서 난 화가임 : 과연 무슨 문제로, 제대로 데이터는 받아왔는데, html에 append로 붙이면
2022. 1. 11. 오전 11:05, 화가난다 화가나 그래서 난 화가임 : 문자로 나열되는 걸까용?..
2022. 1. 11. 오전 11:05, 개발닥 : 보니까
2022. 1. 11. 오전 11:05, 개발닥 : 이미지 링크가 아니라
2022. 1. 11. 오전 11:05, 개발닥 : 이미지 자체를 받아오셨네요
2022. 1. 11. 오전 11:05, 화가난다 화가나 그래서 난 화가임 : 이미지 주소 복사
2022. 1. 11. 오전 11:05, 화가난다 화가나 그래서 난 화가임 : 라고 눌렀는데 그러면 안되는 거에용?
2022. 1. 11. 오전 11:06, 개발닥 : prefix에
2022. 1. 11. 오전 11:06, 화가난다 화가나 그래서 난 화가임 : 근데, 이미지가 문제나면, 이미지만 오류가 떠야하는 거 아니에용?
2022. 1. 11. 오전 11:06, 개발닥 : Data:image 붙은거 보니까
2022. 1. 11. 오전 11:06, 개발닥 : 이미지 데이터인것 같아요
2022. 1. 11. 오전 11:06, 화가난다 화가나 그래서 난 화가임 : 흠.. 저도 그래서
2022. 1. 11. 오전 11:06, 개발닥 : src에 링크가 들어가야하는데 통짜 데이터가 들어가서 안되는것 같아요 image 객체로 생성해서 붙여보심이?
2022. 1. 11. 오전 11:06, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 11. 오전 11:06, 화가난다 화가나 그래서 난 화가임 : 이미지 태그를 지우고, 나머지 데이터라도 정상적으로
2022. 1. 11. 오전 11:07, 화가난다 화가나 그래서 난 화가임 : 브라우저에 보여지나? 하고 봤는데,
2022. 1. 11. 오전 11:07, 애교뿜뿜 어피치 : base64 포맷인것 같은데
2022. 1. 11. 오전 11:07, 화가난다 화가나 그래서 난 화가임 : 이미지 태그를 지워도 다른 것도 문자열로 나열되더라고용
2022. 1. 11. 오전 11:08, 화가난다 화가나 그래서 난 화가임 : 근데 확실한 건 정상적으로 데이터를 불러오고 있긴 해요
2022. 1. 11. 오전 11:09, 화가난다 화가나 그래서 난 화가임 : 단지 엘레먼트로 렌더링이 안되고, 문자열로 렌더링이 되고 있네용 ㅠ
2022. 1. 11. 오전 11:10, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 11. 오전 11:11, 화가난다 화가나 그래서 난 화가임 : 이렇게 했을 때도, div 태그가 문자열로 그대로 보이는 거 보면 이전에 어디선가 문제가 있나봐용
2022. 1. 11. 오전 11:11, 화가난다 화가나 그래서 난 화가임 : 한 번 더 찾아보겠습니다 ㅠㅠ
2022. 1. 11. 오전 11:11, 개발닥 : 저건
2022. 1. 11. 오전 11:12, 개발닥 : append는 html 텍스트 넣으면 그대로 바인딩해요
2022. 1. 11. 오전 11:12, 개발닥 : innerHTML이나 insertAdjacentHTML 으로 하면 해결될것 같아요
2022. 1. 11. 오전 11:13, 화가난다 화가나 그래서 난 화가임 : 한 번 해볼게용
2022. 1. 11. 오전 11:14, 화가난다 화가나 그래서 난 화가임 : 그 두 메소드를 사용했는데 함수가 아니라고 뜨고용
2022. 1. 11. 오전 11:14, 화가난다 화가나 그래서 난 화가임 : 근데, 해결했는데
2022. 1. 11. 오전 11:14, 화가난다 화가나 그래서 난 화가임 : 어떻게 해결했냐면요..
2022. 1. 11. 오전 11:14, 화가난다 화가나 그래서 난 화가임 : $('.rank_list').append(temp_html);
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : $('.rank_list').append(temp_html);
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 왜 ajax쓰니가 되는 거지..
2022. 1. 11. 오전 11:15, 개발닥 : 제이쿼리에요?
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 넹
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 제이쿼리랑
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : dom 섞어서
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 하고 있었어용
2022. 1. 11. 오전 11:15, 개발닥 : 그렇구낭..
2022. 1. 11. 오전 11:15, 개발닥 : 제이쿼리는 써본적 없어서 잘 모르겠어요
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 통신만 ajax 쓰고, 지정할 때는 document.queryselector
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 사용했는데
2022. 1. 11. 오전 11:15, 화가난다 화가나 그래서 난 화가임 : 이게 뭔일이지
2022. 1. 11. 오전 11:41, 설아아빠 : $('.rank_list').append($(temp_html));
2022. 1. 11. 오후 12:04, Vintz : 다들 common 또는 utils 폴더에 어떤 요소들을 넣으시나요..? 그리고 어떤 상황에 추가하시는지도 궁금합니다.
2022. 1. 11. 오후 12:05, 개발닥 : utils는 프레임워크 의존없는 함수들 넣어요
2022. 1. 11. 오후 12:06, 개발닥 : 날짜 계산하거나, 커스텀 오퍼레이터, 문자열 바꿔주는애들
2022. 1. 11. 오후 12:06, 개발닥 : common에는 공통 컴포넌트들 넣어요
2022. 1. 11. 오후 12:07, Vintz : 오호..그렇군여 😍 간단명료하게 답해주셔서 감사합니다!!
2022. 1. 11. 오후 12:08: 택배 상자를 든 네오님이 들어왔습니다.
2022. 1. 11. 오후 12:08, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 11. 오후 12:10, 택배 상자를 든 네오 : 안녕하세요
2022. 1. 11. 오후 12:10, 택배 상자를 든 네오 : 혹시
2022. 1. 11. 오후 12:10, 택배 상자를 든 네오 : 프론트엔드
2022. 1. 11. 오후 12:10, 택배 상자를 든 네오 : 일하실분
2022. 1. 11. 오후 12:10, 택배 상자를 든 네오 : 계신가요?
2022. 1. 11. 오후 12:10, 택배 상자를 든 네오 : 생각있으시면 Requirements List 보내드릴게요
2022. 1. 11. 오후 12:33, 유용태 (teo.yu) : 어떤 일인가요? 관심이 있다기보다는 일의 일정과 구체적인 내용을 먼저 알려주셔야 생각이 생기지 않을까 싶어요~
2022. 1. 11. 오후 12:36, 이엘로 : 그냥 js Element.append로 문자열을 넣으면 문자열이 그대로 들어가게 되는데 jquery를 쓰면 html로 들어갑니다!
innerHTML이 함수가 아니라고 뜨는 건 Element.innerHTML() 형식으로 쓰신 것 같은데 Element.innerHTML = '' 이렇게 쓰셔야 값이 들어갑니다
2022. 1. 11. 오후 12:37, 택배 상자를 든 네오 : 보안때문에
2022. 1. 11. 오후 12:37, 택배 상자를 든 네오 : 자세한건 미팅으로 하자고하더라구요
2022. 1. 11. 오후 12:38, 택배 상자를 든 네오 : 우선 요구사항은
2022. 1. 11. 오후 12:38, 택배 상자를 든 네오 : HTML5, CSS3 및 JavaScript 숙련도

• 대응력 있는 개발 경험

• 프런트 엔드 프레임워크에 대한 노출(부트스트랩)

• 액세스 가능 및 SEO 기반 코딩

• 다음과 같은 WYSIWYG 도구를 사용하지 않고 프런트 엔드를 핸드 코딩할 수 있는 셀프 스타터

• 사용성에 대한 명확한 이해

• W3C 표준 개발에 능숙함

• 점진적 향상 및 우아한 성능 저하

• Bash 셸 작업 경험

• 모바일 기기의 최적화 경험 및 대응성 및 적응성 방법에 대한 익숙함
2022. 1. 11. 오후 12:38, 화가난다 화가나 그래서 난 화가임 : 매우 잘 이해됐습니다! 감사합니다!!
2022. 1. 11. 오후 12:40, 택배 상자를 든 네오 : 저도 제가 직접구하는게아니라 구해주는입장이라ㅠㅠ
2022. 1. 11. 오후 12:40, 택배 상자를 든 네오 : 삭제된 메시지입니다. 
2022. 1. 11. 오후 12:40, 택배 상자를 든 네오 : 삭제된 메시지입니다. 
2022. 1. 11. 오후 12:42, 택배 상자를 든 네오 : 삭제된 메시지입니다. 
2022. 1. 11. 오후 12:48, 프론트 : 요구사항 내용들이 너무 추상적으로 느껴집니다. 그리고 업무 관련 도메인도 같이 알려주시면 더 관심을 가지지 않을까요?
2022. 1. 11. 오후 12:48, Hardy : 서비스와 업무가 궁금하네요
2022. 1. 11. 오후 12:49, 택배 상자를 든 네오 : 아 제가 지금 다시물어봤는데
2022. 1. 11. 오후 12:49, 택배 상자를 든 네오 : 정직원을 구하는거라고하네요
2022. 1. 11. 오후 12:49, 택배 상자를 든 네오 : 외주가아니라
2022. 1. 11. 오후 12:50, 택배 상자를 든 네오 : 프로필주시면
2022. 1. 11. 오후 12:50, 택배 상자를 든 네오 : 메일드리겠습니다
2022. 1. 11. 오후 12:50, 택배 상자를 든 네오 : 회사 소재지는 강남 압구정동입니다
2022. 1. 11. 오후 12:50, 유용태 (teo.yu) : 감사합니다. 이제 관련 링크나 연락처만 남겨주시고 마무리 해주시면 좋을 것 같아요. :)
2022. 1. 11. 오후 12:51, 택배 상자를 든 네오 : 네 불쑥 들어와서
2022. 1. 11. 오후 12:51, 택배 상자를 든 네오 : 죄송합니다ㅠㅠ 급하다보니
2022. 1. 11. 오후 12:52, 택배 상자를 든 네오 : 카카오톡 프로필
2022. 1. 11. 오후 12:53, 택배 상자를 든 네오 : 제 프로필입니다 혹시 관심있으시면 톡 주세요!
2022. 1. 11. 오후 12:57, TriplexLab : https://developer.mozilla.org/ko/docs/Web/API/Element/insertAdjacentHTML
2022. 1. 11. 오후 12:57, TriplexLab : 이거 보시면 제이쿼리 처럼 append할수 있습니다.
2022. 1. 11. 오후 12:57, TriplexLab : 자바스크립트에서도 append 할수 있습니다~
2022. 1. 11. 오후 2:59, Vintz : 개인 프로젝트에 테일윈드 적용해보고 있는데 신기하면서도 어렵네요 ㅎㅎ;
2022. 1. 11. 오후 3:00, Vintz : 적응이 좀 필요하겠네요
2022. 1. 11. 오후 3:00, Vintz : 이거랑 어도러블 둘 다 써보고 비교도 해볼 생각입니닷..ㅎㅎ
2022. 1. 11. 오후 6:55, 유용태 (teo.yu) : 환영합니다. 공홈이랑 문서 만들고 있어요! 기대해주세요 :)
2022. 1. 11. 오후 7:10, Vintz : 기대하겠습니당 ㅎㅎ :D
2022. 1. 11. 오후 7:10, Vintz : 이모티콘 
2022. 1. 11. 오후 8:19, 해달 : 이미지주소가 담긴 배열로 이미지를 다운받으려면 개발자도구에서는 할수 없는걸까요 ??
2022. 1. 11. 오후 8:19, 유용태 (teo.yu) : 조금 더 설명해주실수 있나요?
2022. 1. 11. 오후 8:21, 해달 : 아!
 페이지에서 개발자도구 이용해서 class네임으로 이미지 주소로만 이루어진 배열을 만드는거까지는 했는데..!
이거로 이미지 한번에 다운받을 수 있었던걸로 기억은 하는데 오래돼서 기억이 잘 안나네요 ㅠㅠ
2022. 1. 11. 오후 8:21, 해달 : 구글링해서 찾아보고 있긴한데 원하는 답을 아직 못찾아서 여쭤봤습니답
2022. 1. 11. 오후 8:24, 유용태 (teo.yu) : 으음.. 그렇군요. 툴이 필요하지 않을까요? 개발자도구에서는 잘 모르곘네요
2022. 1. 11. 오후 8:29, 해달 : 그런거같아서 좀더 찾아보려구요..!
2022. 1. 11. 오후 8:29, 유용태 (teo.yu) : 저도 찾아지면 공유드릴게요 :)
2022. 1. 11. 오후 9:09, TriplexLab : https://youtu.be/caTP-P4LpLk
2022. 1. 11. 오후 9:09, TriplexLab : 이거 재미게 봤네요ㅎ 시간될때 한번 보세요ㅎ
2022. 1. 11. 오후 9:36, 개발닥 : 점심으로 랍스타 꼬리가 나온다니
2022. 1. 11. 오후 10:53, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 11. 오후 10:53, 화가난다 화가나 그래서 난 화가임 : <h2>사랑해</h2>랑
2022. 1. 11. 오후 10:53, 화가난다 화가나 그래서 난 화가임 : createElement해서 만든 h2랑은 약간
2022. 1. 11. 오후 10:53, 화가난다 화가나 그래서 난 화가임 : 다른 개념이군용
2022. 1. 11. 오후 10:53, 화가난다 화가나 그래서 난 화가임 : 이거 하면서 알았어용
2022. 1. 11. 오후 10:54, 화가난다 화가나 그래서 난 화가임 : <h2>사랑해</h2> 이거는 엘레멘트 타입이 아니라고 뜨네용
2022. 1. 11. 오후 10:54, 화가난다 화가나 그래서 난 화가임 : 그에 비해 createElement로 하면 제대로 뜨고용
2022. 1. 11. 오후 11:18, 이엘로 : insertAdjacentHTML 쓰시면 제대로 들어갈 거예요
2022. 1. 11. 오후 11:18, 화가난다 화가나 그래서 난 화가임 : 엘로님은
2022. 1. 11. 오후 11:18, 화가난다 화가나 그래서 난 화가임 : 평소에 공부하실 때,
2022. 1. 11. 오후 11:18, 화가난다 화가나 그래서 난 화가임 : 이런 메소드 기능
2022. 1. 11. 오후 11:19, 화가난다 화가나 그래서 난 화가임 : 철저하게
2022. 1. 11. 오후 11:19, 화가난다 화가나 그래서 난 화가임 : 외우시는 편이신가용?
2022. 1. 11. 오후 11:19, 화가난다 화가나 그래서 난 화가임 : 되게 탄탄하신 거 같아서용!
2022. 1. 11. 오후 11:19, 이엘로 : 삽질의 힘입니다… 제가 철저하게 외우기보다는 그냥 자연스럽게 외워진 것 같아요
2022. 1. 11. 오후 11:19, 이엘로 : 자주 찾아보기도 하고요
2022. 1. 11. 오후 11:20, 이엘로 : 답변드린 것도 조금 찾아보고 드린거예요! 기본은 있지만 전부 외우고 있는 건 아니에요 ㅋㅋㅋㅋ
2022. 1. 11. 오후 11:22, 화가난다 화가나 그래서 난 화가임 : 아하!
2022. 1. 11. 오후 11:22, 화가난다 화가나 그래서 난 화가임 : 저도 삽질의 힘을 키우겠습니다!

2022년 1월 12일 수요일
2022. 1. 12. 오전 9:50, 코린이 : 으아, 10분뒤에 스파이더 주짓수도복 판매시작되는데, 긴장돼서 공부가 안되네요..!
2022. 1. 12. 오전 9:50, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 9:50, 콘솔 : ㅋㅋㅋㅋㅋㅋ 그게몬가용ㅋㅋㅋ귀여울것같네옄ㅋㅋ
2022. 1. 12. 오전 9:51, 코린이 : 사진
2022. 1. 12. 오전 9:51, 코린이 : 이거사고 이번년도 운동도 공부도 열심히 하겠습니다 ..
2022. 1. 12. 오전 9:51, 유용태 (teo.yu) : 오! 멋지네요!
2022. 1. 12. 오전 9:51, 삼류개발자 : 저바지는
2022. 1. 12. 오전 9:51, 삼류개발자 : 멋지네요
2022. 1. 12. 오전 9:51, 삼류개발자 : ㅋㅋㅋㄱㅋ
2022. 1. 12. 오전 9:51, 유용태 (teo.yu) : 바지가 운동복인데 까리하네요
2022. 1. 12. 오전 9:51, 코린이 : 아 ㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 9:51, 코린이 : 도복이라
2022. 1. 12. 오전 9:51, 삼류개발자 : 청바지인줄알았습니다ㅋㄱㅋ
2022. 1. 12. 오전 9:51, 코린이 : 도복간지 .. ㅎ
2022. 1. 12. 오전 9:51, 유용태 (teo.yu) : 그러니까요
2022. 1. 12. 오전 9:52, 유용태 (teo.yu) : +_+bbb
2022. 1. 12. 오전 9:52, Vintz : 오와..ㅋㅋㅋ 이뿌네요
2022. 1. 12. 오전 9:52, 코린이 : 크크
2022. 1. 12. 오전 9:52, 삼류개발자 : 끈이 간지....
2022. 1. 12. 오전 9:52, 코린이 : 운동들 다들 하시나요??
2022. 1. 12. 오전 9:52, 콘솔 : 오,,, 멋지네요 스파이더가 브랜드 스파이더말씀하신거군옄ㅋㅋㅋㅋ
2022. 1. 12. 오전 9:52, 코린이 : 네네 브랜드 !
2022. 1. 12. 오전 9:52, 삼류개발자 : 숨쉬기합니다
2022. 1. 12. 오전 9:52, 코린이 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ숨쉬기가 젤 중요하죠
2022. 1. 12. 오전 9:52, Vintz : ㅋㅋㅋㅋㅋㅋㅋㅋ 저두 헬스장 9시에 저는 무너졌어요..
2022. 1. 12. 오전 9:52, 삼류개발자 : 씁씁호습
2022. 1. 12. 오전 9:52, 삼류개발자 : 호흡
2022. 1. 12. 오전 9:53, Vintz : 코로나때문에 헬스장이 너무 일찍 닫아요 ㅠㅠ
2022. 1. 12. 오전 9:53, 코린이 : 아 그 9시
2022. 1. 12. 오전 9:53, 코린이 : 사실 잘 이해가 가지 않습니다만
2022. 1. 12. 오전 9:53, Vintz : 집도착하면 8시라..후
2022. 1. 12. 오전 9:53, 코린이 : 와우
2022. 1. 12. 오전 9:54, Vintz : 코린이님은 운동 즐겨하시나봐요..!
2022. 1. 12. 오전 9:54, 코린이 : 졸업하고 혼자 공부할라니까
2022. 1. 12. 오전 9:54, 코린이 : 살짝 우울증도 오고 그랬어가지고
2022. 1. 12. 오전 9:54, j : 생존을 위해서 운동을 해야합니다
2022. 1. 12. 오전 9:54, 코린이 : 그냥 뇌가 썩어가는 기분이드라구요
2022. 1. 12. 오전 9:54, Vintz : 운동이 그런거 없애는데 좋긴하져 ㅎㅎ
2022. 1. 12. 오전 9:55, 코린이 : 그래서 몸도 건강도 정신도 챙길겸 해서요 ㅋㅋ ...
2022. 1. 12. 오전 9:55, 코린이 : 네넵
2022. 1. 12. 오전 9:55, j : 뭐든 스트레스 풀 방법이 있으면 좋은거죠
2022. 1. 12. 오전 9:55, Vintz : 특히 개발자는 건강 챙기는거 좋은 것 같아요!
2022. 1. 12. 오전 9:55, j : 허리 목 잘 챙기세요ㅠㅠ
2022. 1. 12. 오전 9:55, 코린이 : 허리 목 ..
2022. 1. 12. 오전 9:55, 코린이 : 목 너무아파요 ㅠ-ㅠ
2022. 1. 12. 오전 9:55, 코린이 : 스트레칭들 자주 하시나요
2022. 1. 12. 오전 9:55, j : 전 필테..
2022. 1. 12. 오전 9:55, Vintz : https://velog.io/@mslee300/%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9A%A9-%EC%9A%B4%EB%8F%99%ED%8C%81-5%EA%B0%80%EC%A7%80
2022. 1. 12. 오전 9:55, Vintz : 이런것도 있더라구요 ㅋㅋㅋ
2022. 1. 12. 오전 9:55, j : 스트레칭은 간간히 자리에서
2022. 1. 12. 오전 9:55, 코린이 : 옼ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 9:55, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 9:55, 코린이 : 필테!!
2022. 1. 12. 오전 9:55, 코린이 : 운동팁ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 9:56, 코린이 : 거북목분들 많으시나요 주변에 ??..
2022. 1. 12. 오전 9:56, j : 코어
2022. 1. 12. 오전 9:56, j : 추천
2022. 1. 12. 오전 9:56, j : 진짜 추천..
2022. 1. 12. 오전 9:56, Vintz : 저는 거묵복 되어가고 있습니다..
2022. 1. 12. 오전 9:56, Vintz : 어느새 정신차리고 보면 목이 쭈욱 나와있어요
2022. 1. 12. 오전 9:56, 코린이 : 와...엄청 신경써야겠네요
2022. 1. 12. 오전 9:56, 코린이 : 자세
2022. 1. 12. 오전 9:56, 코린이 : 필테는 쫌 무서워요 ..
2022. 1. 12. 오전 9:56, j : 저도 요새 거북목 심해지던데
2022. 1. 12. 오전 9:56, j : 작년까지 그래도 라운드숄더 신경쓰고 했는데
2022. 1. 12. 오전 9:56, j : 점점..망가지는 몸..
2022. 1. 12. 오전 9:56, j : 필테 무서워하지 마세요 ㅋㅋㅋ
2022. 1. 12. 오전 9:56, 코린이 : 앉아있는 시간이 많으니까
2022. 1. 12. 오전 9:56, j : 맞거나 던져지진 않아요
2022. 1. 12. 오전 9:57, Vintz : 저도 이얘기하면서 바로 자세 고쳤습니다..ㅋㅋ
2022. 1. 12. 오전 9:57, 코린이 : 거의 고문 아닌ㄴ가요 ㅋㅋㅋ
2022. 1. 12. 오전 9:57, 코린이 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 9:57, j : 아뇨아뇨
2022. 1. 12. 오전 9:57, 코린이 : 다들 목 한번씩 뒤로 쭉
2022. 1. 12. 오전 9:57, j : 전 오히려 몸이 쓰레기구나 하면서
2022. 1. 12. 오전 9:57, j : 운동 더 해야지
2022. 1. 12. 오전 9:57, j : 살라면 해야지
2022. 1. 12. 오전 9:57, 코린이 : 근데 정말 .. 29인데 진짜
2022. 1. 12. 오전 9:58, 코린이 : 운동 쫌 필요성을 많이 느껴요
2022. 1. 12. 오전 9:58, j : 영양제도 챙겨 드시구요
2022. 1. 12. 오전 9:58, j : 건강해야 오래 개발하죠
2022. 1. 12. 오전 9:58, 코린이 : 오 뭐챙겨드세요?
2022. 1. 12. 오전 9:58, 코린이 : 눈?
2022. 1. 12. 오전 9:58, Vintz : 오메가3 종합비타민 먹구있습니다..ㅎㅎ
2022. 1. 12. 오전 9:58, j : 루테인이랑 비타민 D, 오메가3
2022. 1. 12. 오전 9:58, 코린이 : 오 저도 오메가 3 ㅋㅋㅋ
2022. 1. 12. 오전 9:58, 코린이 : 비타민d도 중요한거같아요 다 실내근무하시니까
2022. 1. 12. 오전 9:59, j : 칼슘흡수에 좋다고해서..
2022. 1. 12. 오전 9:59, j : 뼈 챙겨야죠
2022. 1. 12. 오전 10:00, j : 아 저 요새 이력서 쓰고 보고 하면서 드는 생각인데
2022. 1. 12. 오전 10:00, j : 다들 프론트앤드 개발에 최종목표점이 뭐라고 생각하시나요?
2022. 1. 12. 오전 10:00, j : 기술적인 부분 말고 본인이 생각하는 지향점?
2022. 1. 12. 오전 10:00, 코린이 : 사진
2022. 1. 12. 오전 10:00, j : 눙물...
2022. 1. 12. 오전 10:00, 코린이 : 허허 ..
2022. 1. 12. 오전 10:01, 코린이 : 프론트엔드 최종은 뭘까요 ...?
2022. 1. 12. 오전 10:02, j : 테오님 블로그 글 읽고 웹 개발 분야가 나뉘게 된 이유나 이런걸 생각하게 되니까 심오해지더라구요
2022. 1. 12. 오전 10:03, j : 복잡시럽네여ㅋㅋㅋ
2022. 1. 12. 오전 10:05, Vintz : 저는 너무 길게 보기보단 최대 3년 뒤까지만 보고있어요 ㅋㅋㅋ 3년 이상부턴 어떻게 될지 모른다고 생각해서
2022. 1. 12. 오전 10:06, Vintz : 현재는 팀 리드가 목표입니다
2022. 1. 12. 오전 10:06, j : 뭔가 이 분야를 선택한 이유를 생각하게 되서리..
2022. 1. 12. 오전 10:06, j : 저는 1인분만 하자..
2022. 1. 12. 오전 10:06, j : 1인분이라도 하자
2022. 1. 12. 오전 10:06, Vintz : 네오님은 프론트 선택하신 이유가 뭐에요?
2022. 1. 12. 오전 10:08, 유용태 (teo.yu) : 저는 figma나 게더타운 같이 프론트엔드가 백엔드보다 더 큰 가치를 만들어내는 서비스를 만들어 내는 거요. ㅋㅋ 여러모로 아직은 사업에서는 백엔드 영향력이 강해서 속상합니다. ㅋ
2022. 1. 12. 오전 10:08, j : 저는 데이터 시각화에 처음에 관심을 가지다가, 그떈 빅데이터다 뭐다 실 생활에서 더 사람들이 알기 쉬웠음 좋겠고 그러다보니 웹을 하게 되었고
2022. 1. 12. 오전 10:08, j : 일단 초기 진입 장벽도 고려하다 보니까 웹을 하고 있더라구요
2022. 1. 12. 오전 10:08, j : 첨엔 분석도 배우고 했는데 수학적 머리가 부족해서
2022. 1. 12. 오전 10:09, j : 마케팅적 요소도 생각해야 하고
2022. 1. 12. 오전 10:09, j : 뭔가 데이터를 유의미하게 다시 추출한다는 관점이 부족해서 누군가 추출해준 데이터를 좀 보기 쉽게 접근하기 쉽게 만들어 주는것도 의미 있지 않을까
2022. 1. 12. 오전 10:10, j : 생각 정리가 잘 안되네여 단타 죄송해요 ㅠㅠ
2022. 1. 12. 오전 10:10, Vintz : 시각화가 얼마나 중요한데요
2022. 1. 12. 오전 10:10, Vintz : 안예쁘면 안봐요! ㅋㅋㅋ
2022. 1. 12. 오전 10:10, Vintz : UI/UX 고려가 중요하긴 한것 같아요
2022. 1. 12. 오전 10:11, j : ux도 되게 생각할게 많더라구요
2022. 1. 12. 오전 10:11, 유용태 (teo.yu) : 전혀 죄송하지 말아요ㅋ 계속 자기 생각을 남에게 말하는거 여기서 충분히 연습하고 가세요 :) 저는 남의 생각 듣는거 아주 좋아합니다. ㅎ
2022. 1. 12. 오전 10:11, j : 아휴 다들 잘 들어주셔서 감사합니다ㅠㅠ
2022. 1. 12. 오전 10:12, j : 이력서 쓰다가 현타와서리..
2022. 1. 12. 오전 10:12, 남대영 : 프론트분들의 생각을듣는게 참 재미있네요
2022. 1. 12. 오전 10:13, 유용태 (teo.yu) : 맞아요~ 이력서 쓰다 보면 자신을 되돌아보면서 현타가 오죠 ㅋ
2022. 1. 12. 오전 10:14, j : 매우요..ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 10:15, 유용태 (teo.yu) : 지나고보면 한때고 그때 했던 빡센 자아성찰(?)로 인해서 동기부여가 되는것 같더라구요! 화이팅입니다!!
2022. 1. 12. 오전 10:23, Vintz : 화이팅입니다아!!! 저도 이력서 10번은 넘게 고쳐썼어요
2022. 1. 12. 오전 10:27, j : 감사합니다 !!ㅠㅠ
2022. 1. 12. 오전 10:31, 떨고있는 어피치 : https://ui.toast.com/weekly-pick/ko_20220106
2022. 1. 12. 오전 10:32, 떨고있는 어피치 : 삭제된 메시지입니다. 
2022. 1. 12. 오전 10:56, 개발닥 : 이력서 현타 공감해요
2022. 1. 12. 오전 10:56, 개발닥 : 열심히 굴렀지만 되돌아보면 별거 아니었다~
2022. 1. 12. 오전 10:56, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 11:00, j : 열심히 굴렀는데 뭔가 결과물이 애매하다..
2022. 1. 12. 오전 11:26, Vintz : 와..이게 막상 말로 해당 개념을 설명하려니까 힘드네요 ㅠㅠ 입사동기분께서 백엔드 개발자신데, JS관련 질문하시면 아~그거요? 이렇게 시작해서 결국 제대로 설명을 못합니다 ㅋㅋㅋ
2022. 1. 12. 오전 11:26, Vintz : 자바스크립트 기본을 더 튼튼하게 공부해야겠어요
2022. 1. 12. 오전 11:27, Vintz : 여러분은 누가 구조분해 할당에 대해 물어보면 어떻게 설명하실건가요..?!
2022. 1. 12. 오전 11:28, j : 배열이나 객체에 저장된 값을 변수처럼 사용할 수 있게 해준다?
2022. 1. 12. 오전 11:28, j : 반대의 개념인데..
2022. 1. 12. 오전 11:28, j : 이건...
2022. 1. 12. 오전 11:28, 개발닥 : 그거는 그거입니다
2022. 1. 12. 오전 11:28, 개발닥 : 대충 아시죠? 파이썬 그거같은거에요
2022. 1. 12. 오전 11:29, Vintz : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 11:29, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 11:29, j : 현답이네요 ㅋㅋㅋ
2022. 1. 12. 오전 11:29, Vintz : 아 현웃터졌습니다 ㅋㅋㅋㅋㅋ
2022. 1. 12. 오전 11:30, j : 배열이나 객체 사용할 떄 인덱스나 키로 접근하는데 그걸 변수로 쉽게 사용할 수 있게 해주는거
2022. 1. 12. 오전 11:30, j : 닉네임 설정한다 생각하세여 하면 안되나..
2022. 1. 12. 오전 11:31, Vintz : 저는 객체의 뎁스를 한단계 줄어줌으로써 중복해서 사용되는 키값을, 코드를 줄여준다고 했었어요..! 말 그대로 구조를 분해한다..라는 개념으로
2022. 1. 12. 오전 11:32, j : 오 띵크빅..
2022. 1. 12. 오전 11:34, Vintz : 리액트에서 프롭스 내려줄때 자주 사용하다보니 이렇게 설명을 했네요..ㅎㅎ
2022. 1. 12. 오전 11:34, Vintz : 경험부족을 느꼈어요 ㅠㅠ
2022. 1. 12. 오전 11:36, j : 사람마다 개념을 받아들이고 이해하는 관점이 달라서 생기는 문제 인걸요 ㅋㅋㅋ
2022. 1. 12. 오전 11:37, j : 그걸 바탕으로 기본기 학습과 더 좋은 설명을 하려 노력하는 모습 배워갑니다!!
2022. 1. 12. 오전 11:40, Vintz : 감사합니다 :) 네오님의 설명도 잘 들었습니다!! 👍
2022. 1. 12. 오후 12:23, 자율 : 궁금한게 있는데 자바스크립트도 객체지향이 중요한가요???
2022. 1. 12. 오후 12:26, TriplexLab : 네 저는 중요하다고 생각합니다~
2022. 1. 12. 오후 12:41, Vintz : 저도 중요하다고 생각해요!
2022. 1. 12. 오후 12:59, 프론트준비생 : 저 CSs공부하다가 질문있습니다 현재 인강으로 html css배우고 강의내용에있는데로 강사님이 실습할 탬플렛같은거 주어지면 그대로 클론코딩하는식으로 공부중입니다 

현재 수준은 레이아웃은 어느정도 잡고 대략적인 외관은 따라할수준은 되는데 디테일한부분은 따라할정도의 수준은아닙니다..

html,css를 강의로배워서 약간 주먹구구식으로 배우긴했는데.. 따로 책이나 그런걸 봐야 제대로 개념이잡힐까요??혹시 css는 다들어떤식으로 공부하셨는지궁금합니다…
2022. 1. 12. 오후 1:03, j : 저는 그때그때 적용하면서 기본 개념도 같이 봤어요
2022. 1. 12. 오후 1:03, 유용태 (teo.yu) : CSS는 깊은 이해보다는 일단 숙달이 더 중요하다고 생각해요
2022. 1. 12. 오후 1:03, Vintz : html, css는 책으로 공부하는거 개인적으로 비추해요..저는 따라치기 해도 괜찮다고 생각하는데, 따라친 후에 더 추가할 게 있는지 보시고 직접 해보시는걸 추천드려요.
2022. 1. 12. 오후 1:03, Vintz : 필요할 때마다 가져다 쓰는게 좋다고 생각합니다!
2022. 1. 12. 오후 1:04, j : 같은 레이아웃이더라도 어떻게 다루게 짤수있나?
2022. 1. 12. 오후 1:04, j : 이런식으로 공부했던거같아요
2022. 1. 12. 오후 1:05, Hardy : 홈페이지 하나 잡고 그거 그대로 만들어봤어요
2022. 1. 12. 오후 1:05, Hardy : 그게 css 공부하기엔 최고인거 같아요
2022. 1. 12. 오후 1:06, Hardy : 막히면 구글 선생님 이용하고
2022. 1. 12. 오후 1:09, 프론트준비생 : 다들감사합니다!
2022. 1. 12. 오후 1:13, 유용태 (teo.yu) : 일단 레이아웃과 서식을 구분을 하셔서 마크다운과 같은 서식 기반의 페이지는 기초로 익히시되 레이아웃의 경우에는 flexbox만 잘하셔도 되요. 

CSS는 동일한 결과를 만들어내는 방법이 여러개 있다보니 헷갈릴 수 있는데 1) 더 적은 코드 2) 더 최신 스펙 을 이용한다를 원칙으로 계속 본인만의 Rule이나 패턴을 게속 만드셔야 되요
2022. 1. 12. 오후 1:14, 유용태 (teo.yu) : 결국 CSS는 주어진 디자인 요구사항을 그대로 구현하되 얼마나 빨리 그리고 차후 수정에 대응할 수 있도록 유연한가 하는게 중요한 거라서 내 Best Practice가 있고 반복 숙달이 되는게 중요합니다.
2022. 1. 12. 오후 1:22, Vintz : 와..정답에 가까운 답변인 것 같아요 테오 👍
2022. 1. 12. 오후 1:22, 유용태 (teo.yu) : CSS 책 쓰고 있습니다 .ㅋㅋㅋ
2022. 1. 12. 오후 1:23, Vintz : 앜ㅋㅋㅋㅋㅋ
2022. 1. 12. 오후 1:29, 프론트준비생 : 이모티콘 답변감사합니다!
2022. 1. 12. 오후 1:45, j : https://brunch.co.kr/@artpen/7
2022. 1. 12. 오후 1:46, j : 어떤 분야에서든 다 적용될 수 있는 좋은 글인거 같아서 공유합니다.
2022. 1. 12. 오후 1:47, 유용태 (teo.yu) : 와~ 멋지네요
2022. 1. 12. 오후 1:47, j : 디자인이든 개발, 기획이든 데이터를 더 나은 방법으로 보여주고 경험시켜주기 위한 과정들이라 한번 가볍게 쓱 보기 좋은거 같아요
2022. 1. 12. 오후 1:48, 유용태 (teo.yu) : 톡게시판 '공지': https://brunch.co.kr/@artpen/7
2022. 1. 12. 오후 1:49, 유용태 (teo.yu) : 다시 좋은 글들은 한번씩 공지에 담을게요. CSS 너무 오래 달고 있었던것 같아요. ㅋ
2022. 1. 12. 오후 1:49, 유용태 (teo.yu) : 톡게시판 '공지': https://ui.toast.com/weekly-pick/ko_20220106
2022. 1. 12. 오후 1:50, 유용태 (teo.yu) : 톡게시판 '공지': https://youtu.be/caTP-P4LpLk
2022. 1. 12. 오후 1:50, 유용태 (teo.yu) : 톡게시판 '공지': https://gitmoji.dev/
2022. 1. 12. 오후 1:50, 유용태 (teo.yu) : 톡게시판 '공지': https://yozm.wishket.com/magazine/detail/1261/
2022. 1. 12. 오후 1:51, 유용태 (teo.yu) : 톡게시판 '공지': https://zest-cheddar-2c4.notion.site/7ba4db39a94b40fbb082bc32c66d0811
2022. 1. 12. 오후 1:52, 유용태 (teo.yu) : 아! 링크는 그냥 모이는 군요!?
2022. 1. 12. 오후 1:52, 유용태 (teo.yu) : ^^;;
2022. 1. 12. 오후 1:54, 유용태 (teo.yu) : 사진
2022. 1. 12. 오후 1:54, 유용태 (teo.yu) : 저희들 링크에 유용한 글들이 참 많네요~ 감사합니다 :)
2022. 1. 12. 오후 1:55, 콘솔 : 우왕 감사해용!!
2022. 1. 12. 오후 1:57, Vintz : 오..? 저렇게 모아볼 수 있군요
2022. 1. 12. 오후 1:58, Vintz : 이런 기능이 있었다니 ㅋㅋㅋㅋ
2022. 1. 12. 오후 1:58, 유용태 (teo.yu) : 저도 지금 알았습니다. ㅋㅋㅋ
2022. 1. 12. 오후 2:01, 개발닥 : Q : 프로그래머를 고용하는 데 있어 가장 힘든 것이 무엇인가요?

A (John Byrd, Gigantic Software CEO; Sega Director; EA Sr. Manager; Harvard '91) :

소프트웨어 업계의 수십년 묵은 썩은 채용 습관에 대한 애착을 극복하는 게 제일 힘들다. 다른 업계  중에서는 매일 주어지는 일과 아무 상관이 없는 작업에 대한 전문성을 후보들에게 묻는 것이 보편적인 업계는 하나도 없다.

흔한 면접 질문으로 연결 리스트가 있다. 면접 질문은 대개 이렇다: 연결 리스트 내에 루프가 있는지를 효율적으로 찾아내는 함수를 짜시오. 내가 C++로 짠 정답은 이렇다.

#include <iostream>

int main() {
    std::cout << "그딴 건 아무도 신경 안 써" << std::endl;
}

소프트웨어 회사의 그 어느 누구도, 면접 때가 아니면 연결 리스트에서 루프를 찾는 코드를 짜라는 일은 할당하지 않을 것이다. 연결 리스트에는 루프같은 것이 없으니까. std::forward_list나 다른 라이브러리 함수를 써서 연결 리스트를 만들었을 것이고 검증을 하기 위해선 그걸로 충분하다.

만약 터무니없는 기적이 일어나서 당신이 어떤 연결 리스트에서 어떤 루프를 찾아야 할 일이 생기면, 당신은 다른 모든 제정신 박힌 사람들처럼 행동할 것이다; 구글링을 하거나 스택오버플로우를 찾아서, 문제를 이해하는 데 15분 쓰고, 문제를 풀기 위해 코드를 쓰거나 아니면 tortoise-and-hare 코드를 복사 붙여넣기할 것이다.

"그치만!" 테크노크라트들의 이 말이 벌써 들려오는 듯 하다. "좋은 프로그래머라면 이 문제를 스스로 풀 수 있어야 한다구요. 다른 인터넷이나 강의 자료 없이. 이 문제는 너무 당연하니까." 그들은 아마도 마지막 단어를 그만큼의 조롱을 담아 발음할 것이 틀림없다. 그 문제가 얼마나 당연한지를 스스로 확인하기 위해서.

대단하신 가정을 다시 살펴보자: 좋은 프로그래머라면 인터넷 같은 레퍼런스를 찾아보는 일 없이 코드를 쓸 수 있어야 한다. 이 가정은 거의 모든 대기업 프로그래밍 면접 아래 깔려 있다.

근본적인 채용 평가 - 프로그래머가 실제 컴퓨터나 레퍼런스 자료를 참조하지 않고 학문적 문제를 풀 수 있는지 - 는 프로 프로그래밍에서는 절대, 전혀, 결코 어디에서도 일어나지 않는다.

그리고 아직도 화이트보드 면접은 핵심으로 자리잡아 있다. "나는 정수 배열에서 최대 부분 수열을 효율적으로 찾는 간단하기 짝이 없는 문제도 못 푸는 PhD를 면접 봤어." 흠, 이 문제가 1977년에 처음 진술되었고, 효율적인 해가 1984년에 출판되었고, 효율적인 답이 나오기 전까지 전 세계가 7년동안 노력한 걸 생각한다면... 그리고 당신은 면접자에게 답을 10분 안에 찾아내도록 기대하고 있다는 걸 생각한다면... 그리고 프로그래밍 면접 때가 아니면 그 누구도 하지 않는, 프로덕션 코드를 화이트보드에 쓰는 일을 시키는 걸 생각한다면...

흠, 아마도 당신의 최대 부분수열 문제는 정말 쓰레기 같은 면접 문제가 아닐까? 왜냐면 당신은 면접자를 그의 채용이 특정 지식을 아는지 여부에 달리게 되는 상황에 두는 것이니까 - Kadane 알고리즘! 그걸 아느냐, 모르느냐다. 만약 면접자가 그걸 안다면, 축하한다. 당신은 Kadane 알고리즘을 최근에 공부한 엔지니어를 만났다! 이를 공부하기 위해서는 아마도 다른 모든 그럭저럭 유능한 프로그래머는 위키피디아를 참고할 수 있을 것이다.

만약 면접자가 모른다면, 흠, 그건 그냥 면접관이 얼마나 잘났는지를 증명할 뿐이다. 그 때 되면 그 면접자는 얼마나 많은 사람들이 그의 너무나도 단순한 면접 문제를 대답하지 못했는지를 당신에게 뽐내 줄 수 있을 것이다.

그래프 내에서 간선들이 최소 가중치를 갖는 신장 트리를 찾아라. 아마도 프로그래머 1만 명 중 한 명 - 엄청 양보해서 말하는 거다 - 이 한 번이라도 프로덕션 코드에서 이 알고리즘을 구현해 봤을 거다. 이 알고리즘을 쓸 일이 있는 곳은 업계 내에서 굉장히 특수한 몇 군데 뿐이다. 이걸 쓰는 사람이 거의 있지도 않음에도 불구하고, 이 문제는 직업 면접에서 다뤄져야 한다. 그리고 당신은 자료를 찾아보지 않고 프로덕션 퀄리티의 코드를 써 내야 한다. 왜냐하면 당신은 확실히 Kruskal 알고리즘을 알고 있을 테니까 - 그건 당연하지 않은가!

질문 : 왜 맨홀 뚜껑은 둥근가요?
답변 : 니가 런던에서 산다면 맨홀 뚜껑은 둥글지 않아. 삼각형인 것도 있고 직사각형인 것도 다른 여러 종류도 있어. 왜 니 면접 문제는 그 따위냐? 왜 문제에 깔린 가정이 진짜 맞는지 체크도 안 해보고 무작정 면접 문제를 베끼는 거냐? "둥근 맨홀 뚜껑은 굴러내리기 쉬우니까요"가 좋은 대답이라고 생각하냐? 300 파운드짜리 철 코인을 굴려본 적은 있냐? 굴려서 살아남아 봤냐? "맨홀 커버가 둥글면 맨홀에 떨어지지 않으니까요"가 좋은 대답이라고 생각하냐? '정폭도형'이 뭔지 들어 봤냐? 'Reuleaux 삼각형'이 뭔지는 아냐? 너 런던에 가 보긴 했냐?

면접의 목적이 그냥 면접자를 쩔쩔매게 하는 거라면, 내 전공 분야에 대해서 너한테 질문을 하나 하겠다. "수정된 이산 코사인 변환하에서의 래핑 연산 중, 재합성이 완전 재구성이 됨이 보장될 때 윈도윙 조건은 무엇인가요?" 그 답은 당연히 Princen-Bradley 조건이야! 윈도윙 함수가 h(k)^2 + h(k+N)^2 = 1과 h(k) = h(2N - 1 - k)을 만족할 때라구. 그걸 모르는 사람이 어디 있어? 그건 기본적인 컴퓨터 사이언스야. 너무 당연해서, 어린 꼬마도 거기에 대한 답은 알고 있어. 그건 당연하다고. 너는 아마 니 대가족 전부를 너의 우주적인 멍청함으로 당황시킬 것이 틀림없어. 그 멍청함의 값은 float으로는 범위가 불충분할 것이기 때문에 double로만 저장할 수 있을 거야.

#include <iostream>
#include <limits>
using namespace std;
 
int main() {
    // 경고: 이 결과는 구현체 의존적이다.
    // 대부분의 구현체에서 네 멍청함은 무한대로 오버플로우하지만,
    // C++ 표준에서 double은 float보다 더 정확하다는 보장이 없다.
    // https://github.com/cplusplus/draft/blob/master/papers/n4713.pdf
    // 의 N4713 6.7.1 8문단을 참조하라.
    auto your_stupidity_incorrect =  
(float)numeric_limits<double>::max();
    cout << your_stupidity_incorrect << endl;

    // 기반 구현체가 IEEE 754-2008이라고 가정할 때
    // 네 멍청함 값을 DBL_MAX 또는 ~1.79769e+308 로 올바르게 리턴한다.
    auto your_stupidity_correct = numeric_limits< double >::max();
    cout << your_stupidity_correct << endl;
     
    cout << "그딴 건 아무도 신경 안 써" << endl;
}

수십 년 동안, 이런 고장난 채용 방식을 쓰는 것에 대한 근본적인 정당화는 항상 이랬다: "이 문제에 대한 답은 엔지니어링의 어느 분야의 가장 기초적 학생에게도 극도로 당연하다고."

알다시피, 이걸 오래된 오만이라 한다.

누군가, 좀, 제발, 내가 틀렸다고 증명해 줘 봐. 개인적인 일화 말고 다른 걸 좀 보여 줘. 화이트보드 면접 능력이랑 프로그래머 생산성이나 퀄리티와의 상관 관계를 증명하는 실제 과학적 연구를 좀 보여 달란 말이야. 왜냐하면 심지어 구글에서 수행한 연구(https://www.nytimes.com/2013/06/20/business/in-head-hunting-big-data-may-not-be-such-a-big-deal.html?_r=1)는 그게 반대라고 주장하고 있단 말이야! 난 슈미트와 헌터의 (http://citeseerx.ist.psu.edu/vie
2022. 1. 12. 오후 2:02, 개발닥 : 블라펌인데 글이 너무 재밌네요
2022. 1. 12. 오후 2:05, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ 비슷한 주제로 저희도 한번 논의해본적이 있어요
2022. 1. 12. 오후 2:05, 유용태 (teo.yu) : 기술 면접이나 코테에서 이런걸 물어보는게 의미가 있는가?
2022. 1. 12. 오후 2:21, TriplexLab : 근데 갑자기 궁금해서 물어보는건데요 디자이너가 기본적인 HTML + CSS정도는 알고 있어야 한다고 생각들 하시나요??
2022. 1. 12. 오후 2:22, 유용태 (teo.yu) : HTML + CSS를 알아야 한다기보다는 디자인과 개발의 차이를 이해하는 것은 필요하다고 생각합니다.
2022. 1. 12. 오후 2:23, 유용태 (teo.yu) : 그리는게 아니라 구조적으로 조립되고 반응한다는 개념?
2022. 1. 12. 오후 2:24, TriplexLab : 아하 그렇쿤요ㅎ
2022. 1. 12. 오후 2:36, 삼류개발자 : 하
2022. 1. 12. 오후 2:36, 삼류개발자 : useEffect와 useLayoutEffect 공부중인에
2022. 1. 12. 오후 2:36, 삼류개발자 : 서로 써야할때아 안써야할때를 구분짓기가 어렵네요
2022. 1. 12. 오후 2:37, 삼류개발자 : 유즈 이펙트는 렌더링이후에 effect를 실행하고
2022. 1. 12. 오후 2:37, 삼류개발자 : useLayoutEffect는 렌더링 되는 과정에서 실행하는걸로알고있는데
2022. 1. 12. 오후 2:37, 삼류개발자 : 사실 useEffect보다 useLayEffect가 더 좋은 방법같기도해서
2022. 1. 12. 오후 2:37, 삼류개발자 : 자주쓰거든요
2022. 1. 12. 오후 2:38, 삼류개발자 : 다른 글들을 찾아보면 useEffect 로직에서 화면이 껌뻑거리는 현상이있다면 그떄 useLayoutEffect를 사용하라고하는 사람도있고
2022. 1. 12. 오후 2:38, 삼류개발자 : useLayoutEffect는 말그대로 레이아웃 변경시에만 사용하라는 답번도있고하니..
2022. 1. 12. 오후 2:38, 삼류개발자 : 적절한 예시를 찾기어렵네요 ㅠㅠ
2022. 1. 12. 오후 2:39, 콘솔 : https://velog.io/@sunhwa508/useLayoutEffect%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%A0%EA%B9%8C
2022. 1. 12. 오후 2:40, 삼류개발자 : 오한번
2022. 1. 12. 오후 2:40, 삼류개발자 : 참고해보겠습니다
2022. 1. 12. 오후 2:40, 삼류개발자 : 감사합니다~!
2022. 1. 12. 오후 2:41, 삼류개발자 : 아
2022. 1. 12. 오후 2:41, 삼류개발자 : 저건 알고이쓴ㄴ 내용이네요
2022. 1. 12. 오후 2:42, 삼류개발자 : 페인팅전에 실행시기기때문에 화면상에 이동이 안보이는것
2022. 1. 12. 오후 2:42, 책팔아요 : 베스트 프랙티스는 어디서 찾고 어떻게 익히는게 효율적일까요 ㅠㅎㅎ
2022. 1. 12. 오후 2:42, Hardy : 렌더링 과정에서 진행된다면 로직의 처리 속도에 따라 렌더링 결과가 더 늦어지지 않을까요...?
2022. 1. 12. 오후 2:43, 삼류개발자 : 흐음
2022. 1. 12. 오후 2:44, 삼류개발자 : 사실 layouteffect를 자주쓰면서 느려지는부분이 없다고느껴지면
2022. 1. 12. 오후 2:44, 삼류개발자 : useeffect대신 써도될것같기도하고
2022. 1. 12. 오후 2:44, 삼류개발자 : 단지 관점차이인건지
2022. 1. 12. 오후 2:44, 개발닥 : 화면에 변화를 줘야하는 이펙트면 layouteffect를 쓰면 될것 같아요
2022. 1. 12. 오후 2:45, 삼류개발자 : 그 과정이
2022. 1. 12. 오후 2:45, 삼류개발자 : api를 호출하는과정이면여
2022. 1. 12. 오후 2:45, 개발닥 : 변화를 줘야하는데 비동기 통신하지 않는 경우?
2022. 1. 12. 오후 2:45, 개발닥 : 그럼 안되죠
2022. 1. 12. 오후 2:45, Vintz : 저도 같은 생각이에요 이펙트가 렌더링에 많이 의존되는 것이라면 layouteffect를 쓰지 않을까요?
2022. 1. 12. 오후 2:46, Hardy : 위에서 말하신거 처럼 그러한 경우에만 쓰는게 맞는거 같아요
2022. 1. 12. 오후 2:46, 삼류개발자 : 음 api속출 속도가 빠른편이고 화면상에 바로 노출되진 않은 부분은
2022. 1. 12. 오후 2:46, 삼류개발자 : useEffect를 사용하는게 확실한것같구..
2022. 1. 12. 오후 2:46, 개발닥 : Api가 아무리 빨라도
2022. 1. 12. 오후 2:46, 삼류개발자 : 음
2022. 1. 12. 오후 2:46, Hardy : 아무리 빨라도 렌더 속도에 비하면...
2022. 1. 12. 오후 2:46, 개발닥 : 렌더링보단 몇백배는 느리죠
2022. 1. 12. 오후 2:46, 삼류개발자 : 아아 그렇겠죠
2022. 1. 12. 오후 2:46, 삼류개발자 : 으흠
2022. 1. 12. 오후 2:47, 유용태 (teo.yu) : 저도 항상 고민하고 있습니다. 사람마다 달라서 저에게는 AdorableCSS가 그 결과물이에요. 라이브러리를 강요하기 보다는 방법론은 지금 글을 작성해보고 있습니다. 계속 공유를 드릴게요. 혹시 https://docs.google.com/spreadsheets/d/1KYXZCgI7UDJq5g7VvPnjOxGN2WPiRnDeoesexc3r8lY/edit#gid=0 여기 참가 하고 싶으시면 같이 얘기 나눠봐요. 사실 정답은 없는거라서요 ㅠ
2022. 1. 12. 오후 2:47, 삼류개발자 : 이런경우가
2022. 1. 12. 오후 2:47, Hardy : 그런 코드들이 쌓이고 나중에 늦어진다는게 체감 될 시점에 그 코드들을 수정해야 한다면 그때 심정은 어떨가 생각이 드네요
2022. 1. 12. 오후 2:47, 삼류개발자 : 좋겠네여
2022. 1. 12. 오후 2:48, 개발닥 : 네
2022. 1. 12. 오후 2:48, 개발닥 : 근데 쓸일 거의없겠네요
2022. 1. 12. 오후 2:48, 유용태 (teo.yu) : 그 2가지 경우는
2022. 1. 12. 오후 2:48, 삼류개발자 : 저도 쓰면서 고민이 되는부분이였는데
2022. 1. 12. 오후 2:49, 삼류개발자 : 좀금더 잘쓸수있게된것같네여
2022. 1. 12. 오후 2:49, 유용태 (teo.yu) : getBoundingClientRect나 offsetWidth, 아니면 textarea나 contenteditable과 같이
2022. 1. 12. 오후 2:49, 유용태 (teo.yu) : 클라이언트 화면의 업데이트와 연계해서 React가 먼저 그려주고
2022. 1. 12. 오후 2:50, 유용태 (teo.yu) : 처리를 해야하는 경우에 LayoutEffect를 쓰시고
2022. 1. 12. 오후 2:50, 유용태 (teo.yu) : 나머지는 일반적으로 Effect를 쓰신다고 생각하면 되요
2022. 1. 12. 오후 2:50, Hardy : 저도 그렇게 생각합니다
2022. 1. 12. 오후 2:50, 유용태 (teo.yu) : React가 그려주기 전에 처리해야한다. -> Effect
2022. 1. 12. 오후 2:50, Vintz : 오..
2022. 1. 12. 오후 2:50, 유용태 (teo.yu) : React가 그리고 나서 처리해야 한다. LayoutEffect
2022. 1. 12. 오후 2:50, 개발닥 : 근데 그런 부분은
2022. 1. 12. 오후 2:51, 삼류개발자 : 이부분이
2022. 1. 12. 오후 2:51, 삼류개발자 : layoutEffect아닌감여?
2022. 1. 12. 오후 2:51, 삼류개발자 : 그리기전에 로직처리하는게 레이아웃이고 그리고난뒤에 처리하는게 유즈이펙트
2022. 1. 12. 오후 2:51, 개발닥 : 계륵같아요 레이아웃 이펙트가
2022. 1. 12. 오후 2:51, 삼류개발자 : 그러게요..
2022. 1. 12. 오후 2:51, 개발닥 : 뭔가 돔 변경 감지를 한다면 ref걸어두고 쓰거나.. 상태값 변경은 state 걸어두는게 더 깔끔해서
2022. 1. 12. 오후 2:52, 개발닥 : 함부로 쓰면 스파게티 코드 될것같은 느낌이 드네요
2022. 1. 12. 오후 2:52, 유용태 (teo.yu) : React 생태계에서는 크게 쓸일이 없을테고
2022. 1. 12. 오후 2:52, 삼류개발자 : 저두 그렇게 생각합니다....
2022. 1. 12. 오후 2:52, 삼류개발자 : 저도 뭔가 너무 자주사용하게 되서
2022. 1. 12. 오후 2:52, 삼류개발자 : 스스로 브레이크를 걸어보고자..
2022. 1. 12. 오후 2:52, 삼류개발자 : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오후 2:52, 유용태 (teo.yu) : 마크다운 에디터나 위치 getBoundingRect와 같이 위치를 정교하게 써야할때만 쓰는거라
2022. 1. 12. 오후 2:52, 유용태 (teo.yu) : 당장은 봉인(?) 하셔도 ㅋㅋ
2022. 1. 12. 오후 2:52, 삼류개발자 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오후 2:53, 삼류개발자 : 뭔가 쓰다보면 전부다 화면에 관련된 로직이다보니 이름그대로 그리기전에 처리해야한다는 생각이 박히다보니..
2022. 1. 12. 오후 2:53, 퍼블퍼블 : 저 죄송하지만,, vue물어봐도 될까요
2022. 1. 12. 오후 2:53, 퍼블퍼블 : 사진
2022. 1. 12. 오후 2:53, 삼류개발자 : 자주쓰게됬던것같은데 다시한번 수정해야겠네요 감사합니다!
2022. 1. 12. 오후 2:55, 퍼블퍼블 : v-for문돌려서 option나오게 하고 selected: A해줘서 A나오게는 이해가 가는데   A,B,C가 어떻게해서 바뀌는건가용?
2022. 1. 12. 오후 2:59, 설아아빠 : 재미있고 공감가는글이네요 ㅎㅎ
2022. 1. 12. 오후 3:00, 유용태 (teo.yu) : vue에서 양방향이 되도록 만들어줘서요? 어떠한 레벨의 설명을 원하실까요?
2022. 1. 12. 오후 3:01, 퍼블퍼블 : 저 완전 뷰린이라서요ㅠㅠ
2022. 1. 12. 오후 3:02, 책팔아요 : 어도러블 참고해보겠습니다
2022. 1. 12. 오후 3:02, 퍼블퍼블 : v-model이 양방향인거는 아는데 :value랑 {{ selected }} v-model="selected"  이 삼각관계가,,,뭔지 모르겠어요ㅠㅠ
2022. 1. 12. 오후 3:05, 삼류개발자 : ㅋㄱㅋ
2022. 1. 12. 오후 3:05, 삼류개발자 : 재미있네여
2022. 1. 12. 오후 3:05, 삼류개발자 : ㅋㄱㅋ
2022. 1. 12. 오후 3:12, 생못미 : useLayoutEffect를 써야할 때를 분명히 알고 쓰는 이의 뒷모습은 얼마나 아름다운가... 분분한 렌더링...
2022. 1. 12. 오후 3:16, 파이버 : 저는 그냥 아예 안 씁니다 ㅋㅋㅋㅋ 쓸일이 없더라고요
2022. 1. 12. 오후 3:21, j : 전 보여주기 위함인가 처리하기 위함인가를 초점으로 보는 것도 나쁘지 않다 생각합니다. 화면의 목적이 보여준다도 있지만 보여주는것에도 세부 목적이 존재하니까..
2022. 1. 12. 오후 3:29, 프론트 : v-model 속성에 v-bind 랑 v-on 속성이 결합된거라v-model로 지정한 selected값에 연결되어 value값으로 나올거에요
2022. 1. 12. 오후 3:34, 프론트 : https://joshua1988.github.io/web-development/vuejs/v-model-usage/
2022. 1. 12. 오후 3:35, 프론트 : 제가 설명이 좀 부족해서 관련 링크 한번 보시면 좋을 것 같습니다!
2022. 1. 12. 오후 4:02, 퍼블퍼블 : 아 !! v-on이랑 결합!! 맞네용
2022. 1. 12. 오후 4:02, 퍼블퍼블 : 넵 읽어보겠습니당 설명감사해요!!
2022. 1. 12. 오후 4:03, 퍼블퍼블 : 이모티콘 
2022. 1. 12. 오후 4:06, 설아아빠 : 혹시 vue에서 :href="'/test/a'" 로 요청이 들어오면 url을 /prefix/test/a 로 가도록 설정할수 있는 방법이 있을까요..? ㅠ
2022. 1. 12. 오후 4:08, 설아아빠 : a라는 사용자가 들어오면 전체적으로 url앞에 a라는 prefix를 붙여야하는데 라우터에서 패스로 받아서 처리하려고 해도 적용되있는 파일 전체에 적용해야해서 다른 방안이 없을까요...
2022. 1. 12. 오후 4:10, 개발닥 : 프론트에서 보내는것보단
2022. 1. 12. 오후 4:10, 프론트 : 애초에 서버에서
2022. 1. 12. 오후 4:10, 개발닥 : 서버에서 리다이렉트 보내주는게 깔끔해요
2022. 1. 12. 오후 4:10, 프론트 : 엇 저도 그생각입니다
2022. 1. 12. 오후 4:11, 프론트 : 사용자 라우팅 목록을 서버에서 받아오시늠거면 그걸 수정하는게 나아보여요
2022. 1. 12. 오후 4:31, 설아아빠 : 백이랑 프론트가 아에 분리된 다른 서버라서...
2022. 1. 12. 오후 4:34, 화가난다 화가나 그래서 난 화가임 : 혹시 input 으로 이미지 파일을 받아서 DB에서 하나의 문서에 저장시키려면 gridFs라는 걸 배워야하는 건가요?
2022. 1. 12. 오후 4:34, 화가난다 화가나 그래서 난 화가임 : 다른 데이터타입과 다르게 유독 어려워서 물어봅니다. 구글링하는데, 이미지 서버를 따로 만들어서 한다. gridFS를 배어ㅜ야 한다등 다양한 의견이
2022. 1. 12. 오후 4:34, 화가난다 화가나 그래서 난 화가임 : 보여서용
2022. 1. 12. 오후 4:41, 파이버 : 잘 모르지만 찾아보니까 그냥 몽고디비에서 이미지를 다루는 방법 중 하나인 거 같은데요?
2022. 1. 12. 오후 5:12, 화가난다 화가나 그래서 난 화가임 : 깊게 공부 한 번 해봐야겠어요
2022. 1. 12. 오후 5:12, 화가난다 화가나 그래서 난 화가임 : 파일을 url로
2022. 1. 12. 오후 6:47, 자율 : 저 궁금한게 있어서 질문하는데 
실무에서 readline 많이 사용되나요?
2022. 1. 12. 오후 7:03, 개발닥 : 프론트는 못쓰지않나여?
2022. 1. 12. 오후 7:04, 화가난다 화가나 그래서 난 화가임 : `{${id} == ${username} &&  <button class="modify_button">수정</button>}`
2022. 1. 12. 오후 7:04, 화가난다 화가나 그래서 난 화가임 : 혹시 자바스크립트로 이런 느낌 내는 방법이 있을까요?
2022. 1. 12. 오후 7:04, 개발닥 : 무슨의미에요?
2022. 1. 12. 오후 7:04, 화가난다 화가나 그래서 난 화가임 : 리액트에서
2022. 1. 12. 오후 7:04, 개발닥 : 그런느낌이라니
2022. 1. 12. 오후 7:04, 화가난다 화가나 그래서 난 화가임 : 저런 거 가능하지 않나요?
2022. 1. 12. 오후 7:04, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 7:04, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 7:05, 화가난다 화가나 그래서 난 화가임 : 사용하는 방식이용
2022. 1. 12. 오후 7:05, 화가난다 화가나 그래서 난 화가임 : jsx
2022. 1. 12. 오후 7:05, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 7:05, 개발닥 : 아
2022. 1. 12. 오후 7:05, 화가난다 화가나 그래서 난 화가임 : 아니다 조건부렌더링요
2022. 1. 12. 오후 7:05, 개발닥 : 음
2022. 1. 12. 오후 7:05, 개발닥 : 라이브러리 없이 하고싶다
2022. 1. 12. 오후 7:05, 개발닥 : 이거죠?
2022. 1. 12. 오후 7:05, 화가난다 화가나 그래서 난 화가임 : 넹넹
2022. 1. 12. 오후 7:05, 화가난다 화가나 그래서 난 화가임 : 자바스크립트만으로요
2022. 1. 12. 오후 7:05, 개발닥 : 저거 템플릿 계산해서
2022. 1. 12. 오후 7:06, 개발닥 : InnerHTML으로 주입하는 외에 라이브러리 없이는 어려워요
2022. 1. 12. 오후 7:06, 화가난다 화가나 그래서 난 화가임 : 크흐.
2022. 1. 12. 오후 7:06, 화가난다 화가나 그래서 난 화가임 : 리액트가
2022. 1. 12. 오후 7:06, 화가난다 화가나 그래서 난 화가임 : 편한거였구나
2022. 1. 12. 오후 7:06, 개발닥 : handlebar 쓰면
2022. 1. 12. 오후 7:06, 개발닥 : 비슷하게 처리 가능해요
2022. 1. 12. 오후 7:06, 개발닥 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 7:07, 화가난다 화가나 그래서 난 화가임 : innerHTML로 한 번 해보겠습니다
2022. 1. 12. 오후 7:47, 해달 : 혹시 반응형 구현하실 때 ::after 많이 사용 하시나요 ??
2022. 1. 12. 오후 7:52, 유용태 (teo.yu) : 저는 별로 안쓰는것 같아요 IE에서 16:9 이런거 ratio한거 만들때 padding 이용해서 쓰는데
2022. 1. 12. 오후 7:52, 유용태 (teo.yu) : 요새는 aspect-ratio가 나와서
2022. 1. 12. 오후 7:53, 유용태 (teo.yu) : 아 flexbox wrap이 같이 쓸따
2022. 1. 12. 오후 7:53, 유용태 (teo.yu) : 밀어주는 용도?
2022. 1. 12. 오후 7:54, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 12. 오후 7:55, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 7:56, 화가난다 화가나 그래서 난 화가임 : if 문이 제대로 작동은 하는데, 저게 왜 true가 나오는 순간이랑 상관없이 첫번째 엘레멘트에 적용될까요?
2022. 1. 12. 오후 7:57, 유용태 (teo.yu) : 조금 더 설명해주세요 ㅎ 컨텍스트를 전혀 모르겠어요
2022. 1. 12. 오후 7:58, Hardy : position이라는 클래스가 여러개 있나요??
2022. 1. 12. 오후 7:59, 화가난다 화가나 그래서 난 화가임 : 하나에요
2022. 1. 12. 오후 7:59, 화가난다 화가나 그래서 난 화가임 : 잠깐만용
2022. 1. 12. 오후 8:01, 화가난다 화가나 그래서 난 화가임 : for(let i = 0; i< 배열.length; i++){}
for문을 통해서 배열을 돌리고 있는데요!
2022. 1. 12. 오후 8:01, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 12. 오후 8:01, 화가난다 화가나 그래서 난 화가임 : 이런식으로 변수로 값을 추출하고 있는데용!
2022. 1. 12. 오후 8:01, 화가난다 화가나 그래서 난 화가임 : 이렇게 돌다가 loginName이랑 username이 같은 순간
2022. 1. 12. 오후 8:01, 화가난다 화가나 그래서 난 화가임 : 아까 올린 사진처럼
2022. 1. 12. 오후 8:02, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 12. 오후 8:02, 화가난다 화가나 그래서 난 화가임 : innerHTML을 삽입하려고 하는데
2022. 1. 12. 오후 8:02, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 8:02, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 12. 오후 8:07, 화가난다 화가나 그래서 난 화가임 : 헐..
2022. 1. 12. 오후 8:07, 화가난다 화가나 그래서 난 화가임 : 하디님 말이 결국엔 맞았어용
2022. 1. 12. 오후 8:07, 화가난다 화가나 그래서 난 화가임 : 저게 똑같은 position이 결국엔 여러개 생성되니까
2022. 1. 12. 오후 8:07, 화가난다 화가나 그래서 난 화가임 : 첫번째에만 계속 적용된 거였어용
2022. 1. 12. 오후 8:24, 유용태 (teo.yu) : https://jbee.io/web/from-2021-to-2022/?utm_campaign=JBEE.io&utm_medium=email&utm_source=Revue%20newsletter
2022. 1. 12. 오후 8:41, Hardy : Vercel은 얼마나 내 개발을 편하게 해주려나?

제 눈엔 인피니티 스톤을 모으는 타노스로 보여요. 아무튼 엄청난 회사가 된 것 같아요.

ㅋㅋㅋㅋㅋㅋ
2022. 1. 12. 오후 8:42, 화가난다 화가나 그래서 난 화가임 : 하아.. 리액트가 아니라서 조건부렌더링이 없는 바람에 엄청나게 짱구를
2022. 1. 12. 오후 8:42, 화가난다 화가나 그래서 난 화가임 : 굴렸는데 후..
2022. 1. 12. 오후 8:42, 화가난다 화가나 그래서 난 화가임 : 결국에 해내긴했는데, 코드 양이 되게 많이 늘어났어용..
2022. 1. 12. 오후 9:58, 자율 : 지금 읽어보고 있는데 정말 다양한 기술들이 있네요 ㅠㅠ 이걸 언제 다하져 ㅋㅋㅋㅋ
2022. 1. 12. 오후 9:58, 유용태 (teo.yu) : 관심만 가지시고 주전공은 돈되고 좋아하는걸로 하시면 되죠 ㅋ
2022. 1. 12. 오후 10:00: 유지남님이 들어왔습니다.
2022. 1. 12. 오후 10:00, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 12. 오후 10:23, 자율 : 이거 보니까 진짜 FE 기술들 빨리 바뀌는게 보이네요 ㅋㅋㅋㅋㅋ 백엔드는 잘 모르지만
2022. 1. 12. 오후 10:36, 유용태 (teo.yu) : 안녕하세요 신나는 프로도님 반갑습니다 :)
2022. 1. 12. 오후 11:08, 유지남 : 반갑습니다 ^^
2022. 1. 12. 오후 11:10, 유지남 : 여기는 어떤 주제를 가지고 이야기 하는 곳인가요?
2022. 1. 12. 오후 11:10, 유용태 (teo.yu) : 여기는 개발 얘기 하고 싶거나 궁금한 거나 관심사나 본인이 공유 하고 싶은 것들을 공유 하는 곳입니다
2022. 1. 12. 오후 11:10, 유용태 (teo.yu) : 언제든 편하게 아무 얘기나 공유 해주세요 :)
2022. 1. 12. 오후 11:12, 유지남 : 아하~ 네 알겠습니다. 저도 아는 내용이 있으면, 공유 해볼께요~ ㅎㅎ
2022. 1. 12. 오후 11:12, 유용태 (teo.yu) : 감사합니다 :)
2022. 1. 12. 오후 11:12, 유용태 (teo.yu) : 프로도님은 최근 관심사가 뭐에요?
2022. 1. 12. 오후 11:13, 유지남 : 저는 api 연동 관련해서 데이터를 쉽게 관리 할 수 있는 super set model을 연구(?) 하고 있어서, 데이터 포맷팅에 관심이 있어요.
2022. 1. 12. 오후 11:14, 유용태 (teo.yu) : 와! 모르는 용어들이 많네요! 데이터 포맷팅이 구체적으로 뭐에요?
2022. 1. 12. 오후 11:14, 유용태 (teo.yu) : +_+
2022. 1. 12. 오후 11:14, 유지남 : 음… 말로 짧게 표현하기가 어려워서 글을 하나 공유 해도 될까요.?
2022. 1. 12. 오후 11:14, 유용태 (teo.yu) : 좋아요 링크 공유는 언제든 환영입니다
2022. 1. 12. 오후 11:15, 유지남 : https://uznam8x.tistory.com/m/59
2022. 1. 12. 오후 11:16, 유지남 : 윗 글과 관련되 라이브러리로

https://www.npmjs.com/package/notadb

를 개발 중입니다.
2022. 1. 12. 오후 11:17, 유용태 (teo.yu) : 아! 뭔가 좋은 이름의 컨벤션을 만들고 활용을 하는 걸까요?
2022. 1. 12. 오후 11:17, 유지남 : 어쩌면 그 반대 인 것 같아요.
2022. 1. 12. 오후 11:19, 유지남 : 프론트에서 대부분 하는 일들이 api를 통해서 ui를 그리게 되는 일인데,

이 때 api 마다 리스폰스가 다르고, 변경도 자주 되다 보니 프론트 입장에서는 이를 대응 하는 것이 어려운적이 많아요.
2022. 1. 12. 오후 11:19, 유용태 (teo.yu) : 아! 이렇게 보편적인 샛을 만들어서 두고 이걸 활용하는 거군요
2022. 1. 12. 오후 11:19, 유용태 (teo.yu) : *셋
2022. 1. 12. 오후 11:20, 유용태 (teo.yu) : 맞아요 백엔드들 이름 짓는거 보면 열불날때가 있죠 ㅋ
2022. 1. 12. 오후 11:22, 얼굴마사지하는 제이지 : ㅋㅋㅋ죄송합니다..

제가 곧 백엔드로 신입 입사예정이라서 그런데, 혹시 어떤 경우에 열불나는지 알수잇을까요?
2022. 1. 12. 오후 11:22, 유지남 : 네 맞아요. 어차피 프론트는 데이터 모델 자체가 불필요 할 수 있는데, 백엔드 처럼 oop로 개발을 하는 자체가 백엔드 의존도가 너무 높기 때문에, 어떤 리스폰스간에 어댑터 패턴을 통한 dock type으로 포맷팅을 해주고 ui를 그린다면

데이터와 ui를 분리 할 수 있기 때문에 api 추가/변경 작업시 유지 보수가 용이 하더라구요.

해서 어떤 리스폰스던간에 확장이 용이 하면서 유지보수가 쉬운 포맷팅을 계속 개발하고 있어요
2022. 1. 12. 오후 11:23, 유지남 : 뭐 열불 난다기 보다, 사람이 하는 일이다 보니 변경이 되는 건 아주 당연한 일인데, 백엔드들간에 데이터 타입 정의 없이(인터페이스) 개발을 먼저 진행하면 좀 빡칠 때가 있죠
2022. 1. 12. 오후 11:24, 유용태 (teo.yu) : user.display_name, account.name, post.title
2022. 1. 12. 오후 11:24, 유지남 : 예를 들면 어느 페이지에서는 api 하나에 모든 데이터를 다 주는데, 거의 90% 똑같은 페이지 인데 api가 3~4개로 분리되어 주면 프론트는 페이지를 재 사용하지 못하고, 다시 만들게 되거든요.
2022. 1. 12. 오후 11:25, 유용태 (teo.yu) : user.image_url, account.avartar_url, post.imageURL
2022. 1. 12. 오후 11:25, 유지남 : 이런 과정이 자주 반복되면 이제 빡치죠 ㅋㅋ
2022. 1. 12. 오후 11:25, 유용태 (teo.yu) : 예시가 아니라 실제입니다;;
2022. 1. 12. 오후 11:26, 얼굴마사지하는 제이지 : ㅋㅋㅋㅋㅋㅋㅋ그렇군요..
2022. 1. 12. 오후 11:26, 얼굴마사지하는 제이지 : 유의하겠습니다~!
2022. 1. 12. 오후 11:27, 유용태 (teo.yu) : 프론트에서 몰아서 출력해야 할때

name: a.name ?? a.display_name ?? a.summary
imageUrl: a.image_url ?? a.avartar_url
desc: a.desc ?? a.description
2022. 1. 12. 오후 11:27, 유지남 : 그래서 차안으로 생각해본건 백엔드 의존 없이 프론트도 데이터 모델을 가지고 그 모델에 맞게 어댑팅을 하고 사용자 화면을 그리자! 가 된겁니다.
2022. 1. 12. 오후 11:27, 유용태 (teo.yu) : 접근은 너무 공감이 갑니다!
2022. 1. 12. 오후 11:28, 유지남 : 이걸 간략하게 정리 하면
데이터을 가져 온다 -> 정제 한다 -> 그린다
2022. 1. 12. 오후 11:28, 유용태 (teo.yu) : 그러면 도메인 특화된 내용들은 어떡하나요?
2022. 1. 12. 오후 11:28, 유용태 (teo.yu) : 아 그런것들도 이제 이름을 하나씩 만들면 되시겠군요
2022. 1. 12. 오후 11:28, 유지남 : 음 예를 들면
2022. 1. 12. 오후 11:29, 유지남 : 보통 user 객체를 다루면
username, thumbnail, email 등의 데이터가 있다고 가정 하면
2022. 1. 12. 오후 11:30, 유지남 : 이를 username -> subject
email -> description 등으로 치환해서 ui 쪽에 넘겨주게 됩니다.
2022. 1. 12. 오후 11:30, 유지남 : 해서 도메인을 타지 않도록 설계를 하는게 제 관심사 입니다.
2022. 1. 12. 오후 11:31, 유용태 (teo.yu) : username -> subject는 이해가 가지만
2022. 1. 12. 오후 11:32, 유용태 (teo.yu) : email -> description은 좀 비약이 아닐까요?
2022. 1. 12. 오후 11:32, 유지남 : 충분히 그럴수 있어요.
2022. 1. 12. 오후 11:33, 유지남 : 그래서… 약간의 억지 같지만, 위에 공유해 드린 npm 모듈에서는 author 라는 타입이 따로 존재해요…
2022. 1. 12. 오후 11:33, 유지남 : 저도 고민 고민 하다가 … 이건 좀 아닌 것 같아서 ㅋㅋ
2022. 1. 12. 오후 11:34, 유용태 (teo.yu) : css 마냥 property를 늘려놔도 될 것 같긴해요
2022. 1. 12. 오후 11:34, 유지남 : 어쨋든 팩트는 약간의 이질감이 있긴 하지만 약속이 명확하면 개발이 쉽다 였어요.
2022. 1. 12. 오후 11:34: 화나서 방방 뛰는 튜브님이 나갔습니다.
2022. 1. 12. 오후 11:35, 유용태 (teo.yu) : 취지가 정말 공감합니다 ㅎ
2022. 1. 12. 오후 11:35, 유용태 (teo.yu) : 그렇게 만들면 프론트 컴포넌트들도 데이터 바인딩 할때
2022. 1. 12. 오후 11:35, 유용태 (teo.yu) : 재사용성이 훨씬 더 높아지겠죠 ㅎ
2022. 1. 12. 오후 11:35, 유지남 : 네 실제로 생산성이 훨씬 높아졌어요.
2022. 1. 12. 오후 11:36, 유지남 : 이 고민을 3년간 했고, 여러 시행착오도 거쳐서 현재는 어느 정도 안정화가 된 느낌?
2022. 1. 12. 오후 11:37, 유지남 : 신규 입사자의 경우도 처음은 좀 낯설긴 한데 약속이 명확해서 다른 내용을 보더라고 쉽게 이해가 간다는 피드백을 받았어요
2022. 1. 12. 오후 11:38, 유용태 (teo.yu) : 좋네요! 사용해야할 이름 목록을 범주에 맞게 쭉 fix해두고 라이브러리가 없더라도 컨벤션으로 활용하면 좋을 것 같아요!
2022. 1. 12. 오후 11:38, 유지남 : 멎습니다.!! ㅎㅎ
2022. 1. 12. 오후 11:38, 유지남 : 개발을 어렵게 하고 싶지 않아요 ㅠㅠ
2022. 1. 12. 오후 11:40, 유용태 (teo.yu) : 좋은거 하나 건졌네요! 저도 앞으로 좋은 property만 좀 모아두는 wiki를 하나 파야겠어요 ㅋ
2022. 1. 12. 오후 11:47, 유지남 : 잘 만들어 주시면 잘 갖다 쓸께요 ㅎㅎ
2022. 1. 12. 오후 11:47, 유용태 (teo.yu) : 조만간 좋은 이름 경진대회를 한번 해야겠네요 ㅋ

2022년 1월 13일 목요일
2022. 1. 13. 오전 12:03, 유지남 : 제가 영감을 얻은 사이트 입니다.
https://www.schema.org/Action
2022. 1. 13. 오전 11:39: 손을 번쩍 든 무지님이 들어왔습니다.
2022. 1. 13. 오전 11:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 13. 오후 12:07, 유용태 (teo.yu) : https://github.com/rodneylab/sveltekit-blog-mdx
2022. 1. 13. 오후 12:22, Vintz : 오..? 스벨트로 블로그 만드는건가요?
2022. 1. 13. 오후 12:23, Vintz : 라이트하우스 성능 테스트도 좋네여
2022. 1. 13. 오후 12:25, Vintz : 타입스크립트 이슈 관련 질문이 있습니다..! 이슈 내용은 다음과 같아요.

1. 타입스크립트로 jest 테스트 작성 후 실행 시 절대 경로로 설정한 module을 인식하지 못하는 이슈 발생

2. 구글링 해보니 타입스크립트일 경우 상대 경로를 사용하라고 stackoverflow에서 찾게 됨

3. 이슈는 해결했지만 왜 타입스크립트에서 절대 경로가 인식이 안되는지 궁금해짐(상대 경로 말고 라이브러리를 통해서 절대 경로를 사용할 수 있습니다)

4. 질문: 내부적으로 어떻게 작동을 하길래 절대 경로가 인식이 안되는지 궁금합니다!!
2022. 1. 13. 오후 12:43, 파이버 : tsconfig 수정하면 절대경로 모듈 읽을 수 있지 않아요?
2022. 1. 13. 오후 12:43, 파이버 : 예전에 했을 때 됐던 거 같은데.. 아닌가
2022. 1. 13. 오후 12:46, 떨고있는 어피치 : 그러게요…저도 이전회사에서
타입스크립트도 쓰고 jest도 썼는데
절대경로 문제 없었습니당
2022. 1. 13. 오후 12:48, 떨고있는 어피치 : https://jestjs.io/docs/configuration#modulenamemapper-objectstring-string--arraystring
2022. 1. 13. 오후 12:49, 떨고있는 어피치 : https://trustyoo86.github.io/frontend/2019/12/31/jest-mocha-path.html
2022. 1. 13. 오후 12:49, 떨고있는 어피치 : 이 글 참조하시면, 해결하실 수 있을 것같습니다
2022. 1. 13. 오후 1:12, 유용태 (teo.yu) : 안녕하세요 손을 번쩍 든 무지님 반갑습니다. 인사가 늦었습니다~ 오전에 회의가 있어서 확인이 늦었네요
2022. 1. 13. 오후 1:24, Vintz : 모두 답변 감사합니다! ㅎㅎ 왜 절대경로가 안되는지 궁금했는데 좀 더 찾아봐야곘어요.
2022. 1. 13. 오후 5:01, 유용태 (teo.yu) : 서버없이 프론트만 가지고 좀 해볼만한 유용한 서비스들은 어떤게 있을까요?
2022. 1. 13. 오후 5:02, 김동현 : https://ddooddoo.com/ko/games/streetwomanfighter/
2022. 1. 13. 오후 5:02, 김동현 : 제가 아는 분이 만든건데, input 이 정해져있고
2022. 1. 13. 오후 5:02, 김동현 : 해당 input 에 해당하는 결과값도 몇없어서 프론트에서 다 처리할 수 있는 것들이 서버없이 돌아갈 수 있는 서비스이지 않을까요
2022. 1. 13. 오후 5:03, 유용태 (teo.yu) : 그러네요~ 감사합니다. :)
2022. 1. 13. 오후 5:13, 삼류개발자 : 음
2022. 1. 13. 오후 5:13, 삼류개발자 : 저는
2022. 1. 13. 오후 5:13, 삼류개발자 : 문제풀이추천드립니다
2022. 1. 13. 오후 5:13, 삼류개발자 : 마침 퀴즈 가져오는 무료 api도 있기도하구용
2022. 1. 13. 오후 5:22, 설아아빠 : 블로그용
2022. 1. 13. 오후 5:31, 또리 : 안녕하세요 저 질문이 있습니다..!
2022. 1. 13. 오후 5:31, 또리 : 혹시 intellij 커뮤니티 버전 사용을 하는데 여기서는 eslint 플러그인 설치가 안되나요!?
2022. 1. 13. 오후 5:31, 또리 : 플러그인 검색해도 안보이네요ㅠㅠ
2022. 1. 13. 오후 5:35, 프론트 : https://www.jetbrains.com/help/idea/eslint.html
2022. 1. 13. 오후 5:41, 또리 : 설치는 되어있고 node_modules에도 있는데 적용이 안되어서요 ㅠㅠ
2022. 1. 13. 오후 5:42, 프론트 : jwt.io 나 json을 xml로 바꿔준다던지 이런 변환 서비스도 백엔드 서버 없이 가능하지 않을까요??
2022. 1. 13. 오후 5:43, 유용태 (teo.yu) : 감사합니다
2022. 1. 13. 오후 5:44, 프론트 : 린트파일 설정 하셨는데 안되는건가요??제가 인텔리제이로 프론트 설정은 해본적이 없어서 링크만 공유드렸어요 ㅎㅎ;;
2022. 1. 13. 오후 5:46, 프론트 : 공식문서에도 린트파일 지원한다고 나와있는데… 문서 한번 보시는게 좋을 것 같아요
2022. 1. 13. 오후 5:49, 코린이 : 여러분..노트북 바꿔야하는데 가벼운게 그냥 최고인가요? ㅠ_ㅠ 고민쓰..,
2022. 1. 13. 오후 5:50, 또리 : 넵 감사합니다 ㅎㅎㅎ
2022. 1. 13. 오후 5:52, Vintz : 맥북이 최고입니다
2022. 1. 13. 오후 5:53, Vintz : 저는 2키로짜리 잘 들고 다니고 있어요. ㅎㅎ
2022. 1. 13. 오후 5:54, 파이버 : 맥북이 최고입니다
2022. 1. 13. 오후 5:54, 파이버 : 사실 리눅스가 최곤데 리눅스는 일상생활이 불가능하니 맥북이 최고입니다
2022. 1. 13. 오후 5:54, 코린이 : 오우.. 맥북,ㅋㅋㅋ
2022. 1. 13. 오후 5:55, 파이버 : 가성비는 맥북이죠
2022. 1. 13. 오후 5:55, j : 맥북 지금 에어랑 프로중에 고민중입니다
2022. 1. 13. 오후 5:56, 파이버 : 전 프로 쓰는데 에어도 성능 안꿀리더라고요
2022. 1. 13. 오후 5:57, 떨고있는 어피치 : 저는 만약 돈이 된다면 프로를 추천드립니다 ㅋㅋㅋ
2022. 1. 13. 오후 5:59, 코린이 : 맥북이 가성비였나요?!!
2022. 1. 13. 오후 5:59, 썰~~ : 네
2022. 1. 13. 오후 5:59, 썰~~ : 다시 중고판매시 가격이 안떨어지니..
2022. 1. 13. 오후 5:59, 코린이 : 아하
2022. 1. 13. 오후 6:03, 파이버 : 실제로도 더 싸고 더 좋죠
2022. 1. 13. 오후 6:03, 파이버 : 샵검색 : #맥북 에어 13 m1
2022. 1. 13. 오후 6:03, 파이버 : 요즘세상에 117만원..
2022. 1. 13. 오후 6:03, 파이버 : 물론 옵션 추가하면 본성 드러내기 시작합니다
2022. 1. 13. 오후 6:04, j : 에어가 모니터 연결이..한대밖에 안된다고 들어서..ㅠㅠ
2022. 1. 13. 오후 6:05, 코린이 : 13인치면 너무 불편하지 않으시나요??
2022. 1. 13. 오후 6:06, 파이버 : 모니터 연결해서 듀얼로 쓰고 있어서 불편한건 딱히 못느꼈어요!
2022. 1. 13. 오후 6:08, Vintz : 13인치 진짜 작아요..
2022. 1. 13. 오후 6:08, Vintz : 전 무겁더라도 16인치 추천드립니다
2022. 1. 13. 오후 6:08, 코린이 : 모니터연결 없으면 근데 쫌 빡세겠죠
2022. 1. 13. 오후 6:08, 코린이 : ?
2022. 1. 13. 오후 6:08, 코린이 : 16인치
2022. 1. 13. 오후 6:08, 떨고있는 어피치 : M1맥북은 한 대만 연결 가능해요

추후에 듀얼모니터 + 클림쉘 모드가 불가능합니당.....
2022. 1. 13. 오후 6:08, 떨고있는 어피치 : (13인치랑 에어)
2022. 1. 13. 오후 6:08, 썰~~ : 저는 그래서 아이패드 가지고 다니면서
2022. 1. 13. 오후 6:08, 썰~~ : 사이드카로 합니다
2022. 1. 13. 오후 6:09, 코린이 : 왘ㅋㅋㅋㅋ사이드카 방금 블로그에서 찾아봤는데
2022. 1. 13. 오후 6:09, 코린이 : 엄청신기하네요
2022. 1. 13. 오후 6:09, 파이버 : 요즘 코로나라 무거운거 사셔도 큰 타격 없을거같긴해요
2022. 1. 13. 오후 6:09, 코린이 : 이런맛에 애플쓰는군요..
2022. 1. 13. 오후 6:10, 썰~~ : 애플만쓰면 삼성페이가 안됩니다..
2022. 1. 13. 오후 6:10, 썰~~ : 지금 저 아이폰으로 바꾸고 제일 불편..
2022. 1. 13. 오후 6:11, 코린이 : 삼성페이가 진짜 꿀이죠,
2022. 1. 13. 오후 6:29, 프론트 : 13인치 맥푹프로가
2022. 1. 13. 오후 6:29, 프론트 : 가성비 젤 좋은거 같아요 ㅋㅋ
2022. 1. 13. 오후 6:29, 프론트 : 라기엔 250…
2022. 1. 13. 오후 6:30, 프론트 : 근데 전 대만족하고 사용중입니다
2022. 1. 13. 오후 6:31, 코린이 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ라기엔 250
2022. 1. 13. 오후 6:33, 삼류개발자 : 핸드폰배터리가 너무 빨리다네요...
2022. 1. 13. 오후 6:33, 삼류개발자 : 핸드폰바꾸고
2022. 1. 13. 오후 6:33, 삼류개발자 : 다시들어오겠늡니당..
2022. 1. 13. 오후 6:33: 삼류개발자님이 나갔습니다.
2022. 1. 13. 오후 6:33, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 13. 오후 6:57, 열심히 일하는 네오 : 혹시 여기 계신 분들 중 react-native로 현재 일하고 계신 분이 있을까요?
2022. 1. 13. 오후 7:12, 김동현 : 저 일하고있습니다~~
2022. 1. 13. 오후 7:15, 개발닥 : 재밌나요 RN?
2022. 1. 13. 오후 7:15, 열심히 일하는 네오 : 헐ㄹ 지금 rn으로 취업생각하고 잇는데 어느정도까지 해야하는지 감이 안오네요 ㅠㅠ
2022. 1. 13. 오후 7:16, 열심히 일하는 네오 : 물론 공부의 끝은 없지만요 ㅋㅋㅋ
2022. 1. 13. 오후 7:20, 김동현 : 저는
2022. 1. 13. 오후 7:20, 김동현 : 외주 하나를 매우 운좋게구해서
2022. 1. 13. 오후 7:20, 김동현 : 그걸로 취업했어요
2022. 1. 13. 오후 7:21, 김동현 : 혼자서 할수있는 플젝 2개 + 외주
로 취업했습니다
2022. 1. 13. 오후 7:21, 유용태 (teo.yu) : 자본주의식 포폴 좋죠 ㅋ
2022. 1. 13. 오후 7:22, 열심히 일하는 네오 : 혹시 개인 플젝은 난이도가 어느정도였는지 여쭤봐도 될까요?
2022. 1. 13. 오후 7:24, 김동현 : https://github.com/DonghyunKim98
2022. 1. 13. 오후 7:24, 김동현 : 제 깃헙 보여드릴게요!
2022. 1. 13. 오후 7:27, 열심히 일하는 네오 : 와 감사합니다!
2022. 1. 13. 오후 7:35, 해달 : 저 M1 에어쓰고있는데 모니터 두개 연결해서 쓰고있어요!
2022. 1. 13. 오후 7:35, 해달 : 원래는 한개만 연결되는게 맞긴한데 무슨 꼼수(?) 같은거로 해서 두개 연결해서 쓰고있습니다 허허
2022. 1. 13. 오후 7:58, 유용태 (teo.yu) : https://velog.io/@soonmac/%ED%86%A0%EC%9D%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%82%98%EB%A7%8C%EC%9D%98-%EB%B0%B1%EC%8B%A0-%EC%9D%B8%EC%A6%9D-%EC%B9%B4%EB%93%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0
2022. 1. 13. 오후 8:05, 해달 : https://www.burndogfather.com/243
2022. 1. 13. 오후 8:05, 해달 : 저는 이거보고 연결했는데 필요하신분은 봐보시는것도좋을거같아요!
2022. 1. 13. 오후 8:29: Aram님이 들어왔습니다.
2022. 1. 13. 오후 8:29, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 13. 오후 8:35, 유용태 (teo.yu) : 안녕하세요 Aram님! 반갑습니다 :) 어서오세요~~
2022. 1. 13. 오후 8:36, Aram : 안녕하세요 잘부탁드립니다 :)
2022. 1. 13. 오후 8:37, 유용태 (teo.yu) : 네~ 궁금한게 있거나 개발 얘기 하고 싶을때 언제든 편하게 글 남겨 주세요~
2022. 1. 13. 오후 8:41, Aram : 넵
2022. 1. 13. 오후 9:11, 유지남 : 서버리스라도 가능하다면, aws s3기반 cms 툴이 있으면 좋을 것 같습니다.
2022. 1. 13. 오후 9:23, 유용태 (teo.yu) : db를 아무거나 연결할 수 있는 서비스 인가요?
2022. 1. 13. 오후 11:15, 유지남 : cms가 보통 디비가 있는 상태가 많은데, 이렇게 하다보면 잡속자가 많은 겅우 트랜잭션이 많으면 노드가 터질때가 많아요. 그래서 디비 대신 s3를 이용해서 하면 aws가 터지지 않는 이상은 서버가 다운 될 일이 없고, cloudfront까지 붙인다면 더 빠른 속도와 안정성을 보장 할 수 있는 백오피스 입니다.
2022. 1. 13. 오후 11:18, 유지남 : 쇼핑, 뉴스, 주식 같은 실시간적 요인이 많은 곳은 절대 할 수 없겠지만, 관리자만 사용하는 공지사항 보도자료와 같은 정적인 데이터는 s3만으로도 충분한데, 이런 솔루션이 없더라구요~
2022. 1. 13. 오후 11:19, 프론트 : CMS는 어떤 도메인을 말하시는건지 알 수 있을까요??
2022. 1. 13. 오후 11:21, 유지남 : cms = content management system 으로 조금 쉽게 할 수 있는 예시라면, 블로그 글을 올릴 수 있는 워드프레스와 같은 백오피스를 말합니다.
2022. 1. 13. 오후 11:23, 유지남 : 공지사항을 예로 들면, 목록과 글 보기만 있으면 되는데 이런 글들을 관리 할 수 있는 백오피스라고 예를 들면 좀 쉬울까요?
2022. 1. 13. 오후 11:24, 설아아빠 : 고것은 서버없이 프론트만으로 할수있는거랑 반대 아닌가용...
2022. 1. 13. 오후 11:25, 유지남 : 네 맞습니다. 그래서 serverless 라도 가능 하다면…. 이였습니다.
2022. 1. 13. 오후 11:30, 유지남 : 제가 설명을 잘 못하나봐요 ^*; 무시해 주세요~
2022. 1. 13. 오후 11:32, 설아아빠 : 아닙니당 ㅎ 저도 요새 프론트없이 돌아가는 자바버전 cms나 만들어보려고 각잡고 있는중이에여
2022. 1. 13. 오후 11:37, 유지남 : 프론트가 없다는건 restful api로만 한다는 말씀이싱까요?
2022. 1. 13. 오후 11:42, 설아아빠 : 네 ㅎㅎ
2022. 1. 13. 오후 11:43, 유지남 : 저도 필요해서 한참 찾아봤었는데, 의외로 없더라구요~ 만드시면 알려 주세요  ㅎㅎ
2022. 1. 13. 오후 11:43, 설아아빠 : 외국 솔루션은 좀 있어요 ㅎㅎ 국내산이 없어서 그렇지 ...

2022년 1월 14일 금요일
2022. 1. 14. 오전 12:00: 멋쟁이 프로도님이 들어왔습니다.
2022. 1. 14. 오전 12:00, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 12:14, 으쓱으쓱 어피치 : 말씀하신 거와 조금 다르기는 하지만 제가 일종의 cms 같은걸 만들고 있긴 합니다. :)
2022. 1. 14. 오전 12:29: 피카츄돈까스/React,RN님이 들어왔습니다.
2022. 1. 14. 오전 12:29, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 9:56, 유용태 (teo.yu) : 안녕하세요 김수로님! 반갑습니다 :)
2022. 1. 14. 오전 9:58, 유용태 (teo.yu) : 대화에 다시 늦게 탑승해봅니다~ ㅎ 그러면 우리가 보통 VSCODE랑 github으로 블로그를 만드는 것을 해주는 웹서비스 같은 걸까요?
2022. 1. 14. 오전 10:00, 유용태 (teo.yu) : 일종의 정적 사이트 온라인 웹 빌더 같은거네요?
2022. 1. 14. 오전 10:25, 유지남 : 맥락은 비슷합니다. s3를 이용한다는건 json 파일을 s3에 올려 두고 마치 서버가 있는거마냥 사용하니 정적인듯 아닌듯 사용 할 수 있는 그런 cms 입니다
2022. 1. 14. 오전 10:26, 유용태 (teo.yu) : 아! 그러네요. json을 올려둬도!
2022. 1. 14. 오전 10:26, 피카츄돈까스/React,RN : 왓 환영 감사합니다 블로그 글 읽고 너무 좋아서 들어와 봤습니다 잘 부탁드립니다!
2022. 1. 14. 오전 10:30, Vintz : 곧 100명 되겠네요..🚀!!
2022. 1. 14. 오전 10:32, 유지남 : 위 s3와 함께 nextjs 를 사용한다면 보안에도 조금 더 신경 쓸 수 있고, ssr도 가능 하니 너무 좋을 것 같아요.
2022. 1. 14. 오전 10:35, 유용태 (teo.yu) : 감사합니다. 어서오세요 여기는 개발 애기 하고 싶거나 궁금한 게 있을때 언젠든지 공유하고자 하는 장소입니다.
2022. 1. 14. 오전 10:36, 유용태 (teo.yu) : 편하게 아무 얘기나 해주세요. 재미나거나 유용한 링크가 있다면 공유 해주세요 저희 링크에 좋은 글이나 자료들 많이 있어요 ㅎ
2022. 1. 14. 오전 10:36, 피카츄돈까스/React,RN : 이모티콘 옙!!
2022. 1. 14. 오전 10:39, 피카츄돈까스/React,RN : 이모티콘 아...제가 어쩌다보니 단톡을 만들어서 프론트를 더 좋게 만들기위해 토론하는 방을 만들었는데 테오님 방의 글들을 보니까 제가 얘기하고 이야기 나누고싶었던 것들이 다 여기 있네요!!
2022. 1. 14. 오전 10:40, 유용태 (teo.yu) : 와! 멋지네요~ 좋은 글이나 내용들이 공유 많이 부탁드려요 ㅎ
2022. 1. 14. 오전 10:40, 피카츄돈까스/React,RN : 폴더구조대회 이런거 진짜...ㅋㅋㅋㅋ
2022. 1. 14. 오전 10:40, 피카츄돈까스/React,RN : 넵 감사합니다!!
2022. 1. 14. 오전 10:40, 유용태 (teo.yu) : 그거 2회 해야 되는데 요새는 좀 이벤트는 덜 하게 되는거 같아요 ㅋㅋ
2022. 1. 14. 오전 10:41, 피카츄돈까스/React,RN : ㅋㅋㅋ 바쁘셔서..글도쓰시고 일도하시고 이벤트도 하시고 ㅋㅋ
2022. 1. 14. 오전 10:47, Vintz : 2회 기다리는 중입니다..ㅋㅋㅋ
2022. 1. 14. 오전 10:53, 피카츄돈까스/React,RN : 테오님 저희 방에서 이 방 링크 공유 해도 괜찮을까요??
2022. 1. 14. 오전 10:53, 유용태 (teo.yu) : 네 얼마든지요~ 감사합니다
2022. 1. 14. 오전 10:54, 피카츄돈까스/React,RN : 아 옙!!! 저야말로 감사합니닷!
2022. 1. 14. 오전 10:56: 부끄러운 어피치님이 들어왔습니다.
2022. 1. 14. 오전 10:56, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 10:56, 유용태 (teo.yu) : 안녕하세요 부끄러운 어피치님 반갑습니다!
2022. 1. 14. 오전 10:56, 부끄러운 어피치 : 이모티콘 
2022. 1. 14. 오전 10:57: 엄지척 어피치님이 들어왔습니다.
2022. 1. 14. 오전 10:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 10:57: 나이스하게개발하기님이 들어왔습니다.
2022. 1. 14. 오전 10:57: 레몬사이다맛젤리님이 들어왔습니다.
2022. 1. 14. 오전 10:57, 유용태 (teo.yu) : 안녕하세요 엄지척 어피치님 음악듣는 어피치는 퇴근하는 프로도님 반갑습니다 :)
2022. 1. 14. 오전 10:58, Hardy : 와 100명 됐네요
2022. 1. 14. 오전 10:58: 리린이님이 들어왔습니다.
2022. 1. 14. 오전 10:58, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 10:58, 레몬사이다맛젤리 : 안녕하세용~~!
2022. 1. 14. 오전 10:58: 손을 번쩍 든 무지님이 들어왔습니다.
2022. 1. 14. 오전 10:58, 유용태 (teo.yu) : 안녕하세요 리린이님 반갑습니다
2022. 1. 14. 오전 10:58: 초롱초롱 튜브님이 들어왔습니다.
2022. 1. 14. 오전 10:58, 엄지척 어피치 : 안녕하세요~
2022. 1. 14. 오전 10:58, 리린이 : 안녕하세요 반갑습니다.
2022. 1. 14. 오전 10:58, 손을 번쩍 든 무지 : 안녕하세요
2022. 1. 14. 오전 10:59: 결과보단 과정을 / React,JS님이 들어왔습니다.
2022. 1. 14. 오전 10:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:01: 알모님이 들어왔습니다.
2022. 1. 14. 오전 11:01, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:02: 스타트업개발자님이 들어왔습니다.
2022. 1. 14. 오전 11:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:02, 유용태 (teo.yu) : 안녕하세요 한번에 너무 많이 들어오셔서 인사를 다 못드리는 점 양해 부탁드립니다. 엄치적 제이지님 휘파람 프로도님 스타트업 개발자님 환영합니다.
2022. 1. 14. 오전 11:02, 떨고있는 어피치 : 갑자기 엄청 들어오네요
2022. 1. 14. 오전 11:02, 유용태 (teo.yu) : 여기는 개발 얘기를 하고 싶거나 궁금한게 있을때 언제든지 편하게 물어 볼 수 있는 자리입니다.
2022. 1. 14. 오전 11:03, 유용태 (teo.yu) : 좋은 자료가 있거나 본인의 관심사가 있다면 얼마든지 공유 해주세요 :)
2022. 1. 14. 오전 11:03, 리린이 : 좋은 방 만들어주셔서 감사합니다
2022. 1. 14. 오전 11:03: 생각하는오뎅님이 들어왔습니다.
2022. 1. 14. 오전 11:03, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:03, Vintz : 우왘ㅋㅋㅋㅋㅋㅋㅋ 수로님 방 인원분들이 대이동을 하셨나보군요
2022. 1. 14. 오전 11:03, 피카츄돈까스/React,RN : 저희방에 사람이 좀 있었어서..숑숑 좋은건 널리 알리라고 배워서요
2022. 1. 14. 오전 11:03, 생각하는오뎅 : 안녕하세요! 링크 타고 왔습니다.
2022. 1. 14. 오전 11:03, Vintz : 수로님은 기술 스택 어떤거 쓰세요??
2022. 1. 14. 오전 11:04, 피카츄돈까스/React,RN : 200분 정도 계셔서...너무 많이 오시면 불편하실까 걱정되네요 ㅜ
2022. 1. 14. 오전 11:04, Vintz : 헐..엄청 많으시구나
2022. 1. 14. 오전 11:04, 피카츄돈까스/React,RN : 삭제된 메시지입니다. 
2022. 1. 14. 오전 11:04, 피카츄돈까스/React,RN : 아니
2022. 1. 14. 오전 11:04, 피카츄돈까스/React,RN : 뭐래
2022. 1. 14. 오전 11:04, Vintz : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오전 11:04, 영보떼 : 우왕
2022. 1. 14. 오전 11:04, 영보떼 : 많이 배울 수 있게따,,
2022. 1. 14. 오전 11:04, 생각하는오뎅 : 수로님이 그분이시군요! ㅋ
2022. 1. 14. 오전 11:04, 손을 번쩍 든 무지 : 피돈님이수로님이시군여
2022. 1. 14. 오전 11:04, 피카츄돈까스/React,RN : 아닠ㅋ 정신없네요 리액트와 RN을 사용합니다 ㅜ
2022. 1. 14. 오전 11:04, 피카츄돈까스/React,RN : 아...아닙니다
2022. 1. 14. 오전 11:05, Vintz : 리액트랑 RN 차이가 많이 나나요?? 모바일 환경 고려할 것들이 좀 있다던데 화면 레이어라던지..
2022. 1. 14. 오전 11:06, 결과보단 과정을 / React,JS : 아하 수로님이 피돈이셨구나
2022. 1. 14. 오전 11:06: 리끼룽님이 들어왔습니다.
2022. 1. 14. 오전 11:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:07, 피카츄돈까스/React,RN : 그 기본적인 테그들이 좀 많이 다르고 스타일도 다르고 첨에는 엄청 많이 차이가 나게 느껴져요 사용할수 없는 것들도있고
String같은건 무조건 Text태그와 같이써야한다거나

고런것들이요 저도 막 자세히아는것은 아닙니닷
2022. 1. 14. 오전 11:07, 생각하는오뎅 : 피돈님 맞으시네요 ㅋ
2022. 1. 14. 오전 11:07, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오전 11:08, 생각하는오뎅 : 테오님 블로그 글 보고 참 글 잘 쓰신다고 생각했습니다.
이 방에서 많이 배우고 가겠습니다. 
잘 부탁드립니다!
2022. 1. 14. 오전 11:08, 피카츄돈까스/React,RN : 그리고 이게 음 네비게이션을 구성하려니까 웹이랑 좀 많이 다르더라구요 네이티브의 네비게이션을 좀 이해 해야 합니다 ㅜ
2022. 1. 14. 오전 11:09, 피카츄돈까스/React,RN : 저도 동의되는부분이 너무 많아서 정말 이런 글을 많이 읽고 생각하고 고민하는 사람들이 많아졌으면 좋겠다고 생각했습니다 ㅜ ㅜ 갓갓
2022. 1. 14. 오전 11:10: 욱신 / 리액트님이 들어왔습니다.
2022. 1. 14. 오전 11:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:11, 개발닥 : 리액트하고싶어요
2022. 1. 14. 오전 11:12, 피카츄돈까스/React,RN : 이모티콘 저도 리액트하고싶어요...RN말구..
2022. 1. 14. 오전 11:13, Vintz : 오홍..그렇군요 친절한 답변 감사드려요!! :)
2022. 1. 14. 오전 11:13, Vintz : 개발닥님 리액트 하시는줄 알았는데..?!
2022. 1. 14. 오전 11:14: 프린이님이 들어왔습니다.
2022. 1. 14. 오전 11:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:15, 개발닥 : 흑흑… 리액트 너무 좋아보아네요
2022. 1. 14. 오전 11:15, 개발닥 : 리액트.. 옛날에 했었어요
2022. 1. 14. 오전 11:16, 프린이 : 안녕하세요
2022. 1. 14. 오전 11:21, 개발닥 : 안녕하세요
2022. 1. 14. 오전 11:22, 피카츄돈까스/React,RN : 아 그래도 저기까지 익숙 해지시면 그 내부구조는 좀 비스무리합니다

하지만 여러모로 지원이 부족한 부분이 느려지는게 검색어는 React에 가려지는 부분도 있고 라이브러리들은 좀 늦습니다 관리가 잘 안되는것도 많고 ㅜ 
Ios는 잘되는데 Android에서는 문제 있는아이들이나 그반대 아이들이나 ㅋㅋ

스토리북도 아직 5점대에 문제가 너무 많고 올해 6점대 버전 나온다 하니 기다려봐야죰 ㅜ
2022. 1. 14. 오전 11:22: 여니님이 들어왔습니다.
2022. 1. 14. 오전 11:22, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:23: 알파카님이 들어왔습니다.
2022. 1. 14. 오전 11:23, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:23, 개발닥 : 112명
2022. 1. 14. 오전 11:24, 개발닥 : ㄷㄷ
2022. 1. 14. 오전 11:24, Vintz : 그렇군요..! 리디북스에서 RN으로 개발을 했다길래 어느정도 수준인지 궁금했는데 깨나 불편한점들이 있네요. 요즘은 플러터가 치고 나오던데..
2022. 1. 14. 오전 11:25, 생각하는오뎅 : 리액트를 안해본 사람 입장에서는 플러터가 나을 수 있는데, 
리액트를 해본 사람 입장에서는 많은걸 공유하는 RN이 더 나을 수 있으니까요! ㅋ
2022. 1. 14. 오전 11:25, 피카츄돈까스/React,RN : 아하 고것도 요번에 Rn에 flutter에서 사용하는 skia를 적용하려는 시도를 하고 있어서 RN도 힘내고 있대요 그리고 번들러도 업글업글 하고 있고 ㅋㅋㅋ

0.70.0 나올거라던데...기대중입니다 ㅜ
2022. 1. 14. 오전 11:26, Luke : 문득 궁금해져서 질문드립니다. 
보통 로그인이나 회원가입 등에서 POST 요청을 서버로 전송할 때 request payload에 담기는 정보를 어떻게 관리하시나요??

저희는 client에서 salt된 HASH값을 email, password에 담고 다른 정보는 평문으로 전송해서 처리하고 있는데요, 물론 https는 적용되어있구요.
사실 브라우저 개발자도구에서 보이는 평문은 어쩔 수 없는 거라고 생각하는데, 그렇지 않다고 생각하시는 분들도 있는 거 같기도 하고, 저도 너무 타성에 젖어서 나이브하게 생각하는 건가 싶기도 해서요.

다른 분들은 어떻게 처리하고 계신지가 궁금해서 여쭤봅니다!
2022. 1. 14. 오전 11:27, 피카츄돈까스/React,RN : 플러터가 성능면에서 비할바가 못된다고 하던데 다트라는 언어의 모양새가 개발하기 초콤 불편하게 느껴져서 저는 포기에 가까웠습니닷 많이해본것은 아니지만 ㅎㅎ
2022. 1. 14. 오전 11:28, Vintz : 글쿤여 ㅎㅎㅎ 경험 공유 감사드립니다 :D !! 토이 플젝으로 한번 해보고싶은 마음이 있어여
2022. 1. 14. 오전 11:29, 피카츄돈까스/React,RN : 저도 초창기에 써보다가 웹뷰가 그때 정식버전도 아니고 제대로 안움직여서 포기하고 RN했는데 지금은 2버전인가 나와서 괜찮을거같습니댜
2022. 1. 14. 오전 11:30, 개발닥 : https://beb.oopy.io
2022. 1. 14. 오전 11:30, 개발닥 : 이런거 어떨까요?
2022. 1. 14. 오전 11:31: 음악듣는 어피치님이 들어왔습니다.
2022. 1. 14. 오전 11:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:32: 마이크를 든 라이언님이 나갔습니다.
2022. 1. 14. 오전 11:37: 쑥스럽게 인사하는 프로도님이 들어왔습니다.
2022. 1. 14. 오전 11:37, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:40: 프린이님이 들어왔습니다.
2022. 1. 14. 오전 11:40, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:45: 프론트맨님이 들어왔습니다.
2022. 1. 14. 오전 11:45, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:45, 개발닥 : 혹시
2022. 1. 14. 오전 11:46, 개발닥 : 크롬에서 응답값 납치해서 조작하는 플러그인 있나요?
2022. 1. 14. 오전 11:46, 개발닥 : 없을려나..
2022. 1. 14. 오전 11:48: 뚜둔님이 들어왔습니다.
2022. 1. 14. 오전 11:48, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:48, 피카츄돈까스/React,RN : 어헛??요것이 그 해킹방법중에 뭐 있는데 중간탈취 였나 ㅋㅋㅋ
2022. 1. 14. 오전 11:50, 피카츄돈까스/React,RN : 아전에 보안 공부할때 배웠었는데 까무겄네요
2022. 1. 14. 오전 11:55: 튜튜님이 들어왔습니다.
2022. 1. 14. 오전 11:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오전 11:55, 튜튜 : 안뇽하세요~^^
2022. 1. 14. 오전 11:56, 나이스하게개발하기 : 서비스워커로 할 수 있을것도 같네요
2022. 1. 14. 오후 12:02: 오카이님이 들어왔습니다.
2022. 1. 14. 오후 12:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 12:05: hyeoki님이 들어왔습니다.
2022. 1. 14. 오후 12:05, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 12:06: 엄지척 제이지님이 들어왔습니다.
2022. 1. 14. 오후 12:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 12:06: Hyo님이 들어왔습니다.
2022. 1. 14. 오후 12:13: 졸린 라이언님이 들어왔습니다.
2022. 1. 14. 오후 12:13, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 12:17, Vintz : 여러분 const VINTZ_NAME = ''; 이렇게 변수명을 대문자에 스네이크 케이스로 하는 경우가 어떤 경우들이 있을까요? 좀 더 엄격한 const 값에 쓰이는건지 궁금해요.

예를 들어 env값이라던지..다른 분들은 어떻게 사용하시나요?
2022. 1. 14. 오후 12:17, Vintz : 그리고 대부분 전역 변수에 사용하시는지도 궁금합니다..!
2022. 1. 14. 오후 12:20, 피카츄돈까스/React,RN : 저도 저런식으로 사용하는 것들이 대부분 constant값인데 명확한 기준이 없습니다. 그냥 느낌상 저렇게 쓰고 있는데 …. ..고민을 좀 더 해봐야겠네요 ㅠ
2022. 1. 14. 오후 12:21, Vintz : 피돈님도 같은 고민을 하고 계시군요!!
2022. 1. 14. 오후 12:22, 개발닥 : 상수는 다 저렇게 했었어요
2022. 1. 14. 오후 12:24, 튜튜 : 매직넘버, 반복적으로 쓰이는 스트링이나 값
2022. 1. 14. 오후 12:24, 튜튜 : 요론거는 거의 상수화하죠
2022. 1. 14. 오후 12:25, 피카츄돈까스/React,RN : API_CONST.HEADER.REQUEST.ACCESS_TOKEN
2022. 1. 14. 오후 12:25, 피카츄돈까스/React,RN : 요런식으로 저장해두고 쓰고 있었어요
2022. 1. 14. 오후 12:26, 피카츄돈까스/React,RN : 느무 구..구려 … ㅋㅋㅋㅋ
2022. 1. 14. 오후 12:26, 피카츄돈까스/React,RN : 리퀘스트는 지워야겠네여
2022. 1. 14. 오후 12:35, 유용태 (teo.yu) : 안녕하세요!!! CSS 스터디를 하는 동안 엄청난 사람들이 들어오셨네요! 인사를 하나도 놓치지 않고 다 드렸었는데... 새로 들어오신 분들 이름을 언급을 다 못하지만 너무너무 환영합니다!!!
2022. 1. 14. 오후 12:38, 유용태 (teo.yu) : 저는 BEM마냥 conset API__ACCESS_TOKEN 처럼 1depth 방식으로 그룹화 해서 쓰고 있어요
2022. 1. 14. 오후 12:41, 피카츄돈까스/React,RN : 오호..이방법도 괜찮군요
2022. 1. 14. 오후 12:42, 유용태 (teo.yu) : 다른 서비스에서도 그냥 가는 거 보면 괜찮지 않나 생각합니다
2022. 1. 14. 오후 12:43, 유용태 (teo.yu) : 감사합니다 (하트)
2022. 1. 14. 오후 12:43: 무지개귀여워님이 들어왔습니다.
2022. 1. 14. 오후 12:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 12:43, 유용태 (teo.yu) : 안녕하세요~ 무지개귀여워님! 반갑습니다 :)
2022. 1. 14. 오후 12:43, Vintz : 이모티콘 다들 답변 감사합니다 🙆🏻‍♂️
2022. 1. 14. 오후 12:43, 유용태 (teo.yu) : 안녕하세요~
2022. 1. 14. 오후 12:44, 무지개귀여워 : 이모티콘 안녕하세요 반갑습니다
2022. 1. 14. 오후 12:45, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 얘기 고프거나 문득 궁금한게 생겼을때 남들은 어떻게 하고 있나 싶을때 공유 하는 공간입니다
2022. 1. 14. 오후 12:45, 유용태 (teo.yu) : 편하게 글 남겨주세요 :)
2022. 1. 14. 오후 12:47, 프린이 : 테오님 벨로그 글 잘 보고 있습니다.
2022. 1. 14. 오후 12:48, 유용태 (teo.yu) : 감사합니다 :) 소재 확보차 질문 드려봅니다 ㅋㅋ 혹시 최근에 관심사는 무엇이신가요?
2022. 1. 14. 오후 12:49, 프린이 : 제가 며칠 전에 클린소프트웨어 책을 보니 SOLID 법칙이 나오던데요, 자바나 C++ 같은 클래스 구조로 객체를 만드는 언어에서는 쉽게 따라해볼 수 있겠는데, 함수 위주로 작성하는 js, ts를 사용하는  프론트엔드에서도 사용이 가능한지, 현업에서 클린 소프트웨어를 만들기 위해 SOLID 법칙을 사용하고 계신 부분이 있는지 궁금합니다
2022. 1. 14. 오후 12:51, 피카츄돈까스/React,RN : 음 제가 블라에서 그 주제로 작은 공을 쏘아올려 200분을 모앗는데요 ㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 12:52, 유용태 (teo.yu) : 와! 감사합니다 js는 클래스 기반 언어가 아니고 함수형에 객체지향을 끼얹은 언어가 방법은 다르지만 기본 원리는 같다고 생각합니다 :) js와 함수형 언어 입장에서 solid를 해석 해보는 거 한번 검토해볼게요 ㅋ 재밌겠네요
2022. 1. 14. 오후 12:53, 프린이 : 넵넵 감사합니다.
2022. 1. 14. 오후 12:53, 유용태 (teo.yu) : 오오? 어땠었나요?
2022. 1. 14. 오후 12:54, 피카츄돈까스/React,RN : 그냥 제 짧은 경험을 말씀드리면 SOLID 개념을 문제를 해결하기 위한 방법이라고 생각하시고 각각의 원칙들이 어떤문제를 해결하려고 했나? 그런걸 생각하신다음에 그럼 내가 풀어야 할 문제에 이걸 적용 할 수 있나 생각하고 적용을 해 나가면 저는 충분히 적용 할 수 있다고 생각했습니다!
2022. 1. 14. 오후 12:54, 피카츄돈까스/React,RN : 엇 적용이란말을 몇번이나 쓴거지 ㅋㅋㅋ
2022. 1. 14. 오후 12:54, 프론트 : 오 제가 그래서
2022. 1. 14. 오후 12:54, 프론트 : https://github.com/labs42io/clean-code-typescript
2022. 1. 14. 오후 12:54, 프론트준비생 : 저오늘생일인데 축하해주실분?
2022. 1. 14. 오후 12:54, 프론트 : 심심할 떄 여기 자주 봐요
2022. 1. 14. 오후 12:54, 피카츄돈까스/React,RN : 어맛..축하드려요
2022. 1. 14. 오후 12:54, 프론트 : ㅋㅋㅋㅋ
2022. 1. 14. 오후 12:54, 프론트준비생 : 이모티콘 
2022. 1. 14. 오후 12:55, 피카츄돈까스/React,RN : 오 저거 좋죠 저거 번역해놓으신분이 계시던데
2022. 1. 14. 오후 12:55, 피카츄돈까스/React,RN : 저도 동료가 알려줬는데 ㅋㅋㅋ
2022. 1. 14. 오후 12:55, 프론트 : 테오님도 그렇고 이런 글들 정리해주신들 분들 보면 정말 존경심이 듭니다 ㅋㅋㅋㅋ
2022. 1. 14. 오후 12:55, 유용태 (teo.yu) : 이모티콘 
2022. 1. 14. 오후 12:55, 유용태 (teo.yu) : 생일 축하드려요!!
2022. 1. 14. 오후 12:56, 피카츄돈까스/React,RN : 타입스크립트를 사용하다보면 OOP를 사용 해야 하는 때가 있어서 그때도 사용 할 수 있구요!
2022. 1. 14. 오후 12:56, 퍼블퍼블 : 이모티콘 
2022. 1. 14. 오후 12:56, 피카츄돈까스/React,RN : 저는 충분히 사용 가능하다고 생각합니다! SRP는 진짜 너무 중요하고 어디서나 사용가능 한거같구요 파일이든 모듈이든 함수든
2022. 1. 14. 오후 12:58, 프론트 : 그래서 궁금한게 있는데 블로그나 깃으로 글 정리하시는 분들은 
1. 글쓰는게 좋아서 한다.
2. 내가 아는 것들을 공유하기 위해 조금 귀찮아도 나름 즐겁게 한다.
3. 오직 나만의 정리를 위해 대충 쓴다.
4. 개발 커리어를 위해 억지로 쓴다.
2022. 1. 14. 오후 12:58, 설아아빠 : 저는 3번...
2022. 1. 14. 오후 12:58, 프론트 : 어떤 유형들 이신가요?? 저는 글 쓰려고 해도 매번 3번으로 빠져버려서
2022. 1. 14. 오후 12:58, 프론트 : ㅋㅋㅋㅋㅋ결국 혼자만 봐요
2022. 1. 14. 오후 12:58, 피카츄돈까스/React,RN : 2번 3번에 가깝지 않을까 ㅋㅋㅋ 합니다. 1번은 너무어렵 ㅠ
2022. 1. 14. 오후 12:59, 설아아빠 : 그것도 도움이 되요 나만의 정리만을 위해쓴것도 남이 필요한때도있는걸요 ㅋㅋ
2022. 1. 14. 오후 12:59, 피카츄돈까스/React,RN : 아 그런거 있어요 나 진짜 이거 하느라 개고생했고 문제가 뭔지 알았는데 내가 누군가의 블로그를 보고 도움이 많이 됐는데 나도 누군가에게 도움이 돼야겠다 라는 생각도 해욤
2022. 1. 14. 오후 12:59, 피카츄돈까스/React,RN : ㅋㅋㅋㅋ뭐랰ㅋㅋㅋㅋ마음만은 전해졌길ㅋㅋㅋㅋ
2022. 1. 14. 오후 1:00, 썰~~ : 저는 적어놓으니 나중에 기억이 애매할때 제가 정리한거 보면
2022. 1. 14. 오후 1:00, 썰~~ : 바로 이해되더라고요
2022. 1. 14. 오후 1:00, 프린이 : 2번으로 생각하려다 쓰다보면 3번 4번으로 가는듯해요 ㅋㅋ,,,
2022. 1. 14. 오후 1:00, 설아아빠 : 뭘 위해서 쓰더라도 안쓰는것보다 나은거는 확실..
2022. 1. 14. 오후 1:03, 유용태 (teo.yu) : 제가 만든 것도 그렇고 내가 좋다고 생각하는 것들이 좀 힙하다 보니... 주위에서 또 회사에사 쓰게 하려고 설득을 하기 위해서는 내가 좀 유명(?)해져야겠다는 생각과 함께 설득력을 가지는 지 증명을 하기 위해서 시작했어요
2022. 1. 14. 오후 1:03, 설아아빠 : 테오님은 글을 참 잘쓰시는거 같아요.. 부럽.. ㅎ
2022. 1. 14. 오후 1:04, 이엘로 : 저는 1번 같아요!!
정리하는 게 재밌더라고요 그리고 글을 안 쓰면 제가 어디서 어떤 노력을 했는지 아무도 모르니까 점점 쓰고 싶어지는 것 같아요
2022. 1. 14. 오후 1:04, 유용태 (teo.yu) : 무엇보다 면접을 보는 입장에사 면접관이 되고보니 나는 블로그를 안쓰는데 블로그를 쓰라고 하는 제 얘기도 안 맞기도 한것도 컸구요
2022. 1. 14. 오후 1:04, 프론트 : 맞아요 ㅠㅠ 작문능력 향상을 위해 따로 배우신게 있나요 ??
2022. 1. 14. 오후 1:05, 유용태 (teo.yu) : 감사합니다. 전에 공유 드렸었는데 말하듯이 쓰는게 글을 잘 쓰는 거라고 해서 음성 메모랑 클로버노트 이용해서 말을 글로 옮긴 뒤에 필요 없는 말 정리하듯이 쓰고 있어요
2022. 1. 14. 오후 1:06, 설아아빠 : 말도 참 잘하시던데 베이스 지식이 그만큼 있으니 그런것 같네요 ㅎㅎ
2022. 1. 14. 오후 1:07, 프론트 : 맞아여 세션도 되게 흥미롭게 봤었습니다 저도!
2022. 1. 14. 오후 1:09, 개발닥 : 저는 바빠서 안쓰는데 대단하네여
2022. 1. 14. 오후 1:09, 설아아빠 : 저는 예전에 쓰다가 몇년정도 안썼는데 이제 다시 쓰려구요... 후회되더라구요 꾸준히 안한게
2022. 1. 14. 오후 1:10, 유용태 (teo.yu) : 저도 10년간 그랬었는데 한번 쓰고 나서 댓글이랑 반응을 보여주시니까 이게 좀 중독(?) 되더라구요 ㅋㅋ
2022. 1. 14. 오후 1:11, 프론트 : 블로그도 sns 와 같은 중독성이 있나보네요 ㅋㅋㅋㅋ
2022. 1. 14. 오후 1:11, 설아아빠 : ㅋㅋㅋ 저 블로그할때도 막 하루방문자 1명2명이었는데 쓰다보니 평균방문자가 조금씩 늘어서 하루 200명씩되니까 더 재미있어서 썼었어요
2022. 1. 14. 오후 1:11, 유용태 (teo.yu) : 그런거 같아요~ 저는 SNS는 전혀 안하거든요 ^^;;
2022. 1. 14. 오후 1:13, 설아아빠 : https://blog.naver.com/dhrod0325
2022. 1. 14. 오후 1:13, 설아아빠 : 2015년이 마지막이네요....
2022. 1. 14. 오후 1:18, j : react 쓰는데..java, jsp로 제안왔는데 이건 거절하는게 맞겠죠..?
2022. 1. 14. 오후 1:18, 썰~~ : 저는 거절하거나 면접경험 하러갑니다
2022. 1. 14. 오후 1:19, j : 지역이 멀어서..
2022. 1. 14. 오후 1:19, j : 그냥 거절해야겠네요ㅜㅜ
2022. 1. 14. 오후 1:22: ㅋㅋ/React님이 들어왔습니다.
2022. 1. 14. 오후 1:22, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 1:22, 개발닥 : ㅋㅋ
2022. 1. 14. 오후 1:22, 유용태 (teo.yu) : 안녕하세요 엄지척 어피치님 반갑습니다 :)
2022. 1. 14. 오후 1:22, 개발닥 : jsp 이젠 거의 안쓰나봐요?
2022. 1. 14. 오후 1:22, ㅋㅋ/React : 안녕하세요!! 반갑습니다 ~^^
2022. 1. 14. 오후 1:23, 알파카 : jsp 아직 si 나 공공에서 많이 쓰이는걸로 알아요
2022. 1. 14. 오후 1:23, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 얘기 하고 싶을 때나 궁금한게 생겼을때 다른 개발자들은 뭘 궁금해 하고 있나 알고 싶을때 얘기 나누는 공간입니다. ㅎ
2022. 1. 14. 오후 1:23, 유용태 (teo.yu) : 편하게 애기 나누세요 :0
2022. 1. 14. 오후 1:23, 개발닥 : 얼른 사장됐으면
2022. 1. 14. 오후 1:23, 피카츄돈까스/React,RN : 저도 사장해보고싶네요
2022. 1. 14. 오후 1:24, 개발닥 : ㅋㅋㅋㅋㅋㅋㅌㅋㅋㅋㅋ
2022. 1. 14. 오후 1:24, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋ요즘들어 CEO가해보고싶어요…망할거 아는데..왠지..해보고싶...
2022. 1. 14. 오후 1:26, 개발닥 : 이거 하고싶은데 하.. 플젝 기간이랑 딱겹쳐서 아쉽네여

https://beb.oopy.io/
2022. 1. 14. 오후 1:28, ㅋㅋ/React : 질문이 있습니다 ㅎㅎ 

보통 백엔드와 api 통신 하실 때 어떤 방법들을 사용 하시는지 여쭤봐도 될까요? 

저는 경험이 부족하지만 
지금까지 리액트에서 axios통신을 사용 하면서 custom hook을 사용하여 api통신을 하는 방법을 사용 하고 있습니다.

혹시 다른분들은 어떻게 하고 계신 지 궁금 합니다!
2022. 1. 14. 오후 1:28, 개발닥 : 훅까지 달 필요가 있나요?
2022. 1. 14. 오후 1:29, j : 저는 그냥..패치 때리는데..
2022. 1. 14. 오후 1:29, 개발닥 : 리덕스 있으면 리덕스에 데이터 우겨넣거나
2022. 1. 14. 오후 1:29, 파이버 : 저는 리액트쿼리 쓰고 있어요 쿼리키는 엔드포인트로
2022. 1. 14. 오후 1:30, 개발닥 : 데이터는 어쩃든 스토어에 담길거고.. 보통 스토어에서 상태변경 감지하는 로직이 있으니 훅까진 필요없어보여요
2022. 1. 14. 오후 1:30, ㅋㅋ/React : 저도 리액트 쿼리를 고려 하고 있습니다. 
커스텀 훅을 사용 하게 된다면 리액트 쿼리가 더 심플 하더라구요..
2022. 1. 14. 오후 1:30, ㅋㅋ/React : 상태 관리 라이브러리를 따로 안쓰고 있어서요 ㅎㅎ
2022. 1. 14. 오후 1:30, j : 커스텀 훅을 붙인 이유가 뭔가요?
2022. 1. 14. 오후 1:30, j : 수시로 데이터를 받아와야 하는ㄴ건지
2022. 1. 14. 오후 1:31, 개발닥 : Context API에 데이터가 모이지 않나요?
2022. 1. 14. 오후 1:31, j : 아니면 그냥 렌더링 초반에 한번만 받아오면 되는거면
2022. 1. 14. 오후 1:31, 파이버 : 작년 6월부터 계속 썼으니 이제 반 년 넘게 썼는데 아주 만족하고 있어요
2022. 1. 14. 오후 1:31, 개발닥 : 리액트 쿼리쓰면 훅도 필요 없어보이구여..
2022. 1. 14. 오후 1:31, j : hook까지는 안붙여도 될꺼같은데
2022. 1. 14. 오후 1:31, 유용태 (teo.yu) : 저희쪽 React하시는 분들은 React-Query로 많이 넘어 가고 있어요. SPA 가 아니라 CMS와 같은 화면에서는 상태관리가 너무 불편하다고 하시더라구요
2022. 1. 14. 오후 1:32, j : react-query 함 붙여봐야겠네요..
2022. 1. 14. 오후 1:32, 유용태 (teo.yu) : react-query 쓰면서 hook을 쓰는 이유는 일종의 문서화 같은 역할을 해준다고 생각합니다.
2022. 1. 14. 오후 1:32, j : 구버전 쓰니까 바꾸려니 무섭..
2022. 1. 14. 오후 1:32, j : 전 apollo로 불러와서..
2022. 1. 14. 오후 1:32, 개발닥 : 이게 어떤 말씀이신가요?
2022. 1. 14. 오후 1:33, 유용태 (teo.yu) : 1명이 전담해서 백엔드 API를 관리해주고 나머지들은 SDK를 쓰듯이 그냥 쓰면 되고 typescript interface라던가 이런것들이 다 정리되어 있어서
2022. 1. 14. 오후 1:33, 유용태 (teo.yu) : 문서화라기 보다는 SDK에 가깝겠네요
2022. 1. 14. 오후 1:33, 개발닥 : 구조가 어떻게 되어있는지 궁금하네여
2022. 1. 14. 오후 1:34, ㅋㅋ/React : 종합 적으로 정리를 해보면 
굳이 훅을 쓸 필요 가 없다.
상태관리 라이브러리를 쓰거나
또는 
리액트쿼리로 커스텀 훅 대체 방법이 있다. 

리액트 쿼리를 쓰면서 SDK느낌으로 훅을 함께 쓰는 경우 도 있다.

요정도 일까요? ㅎ
2022. 1. 14. 오후 1:34, 개발닥 : 근데 저는 api  쏘는건 리액트가 몰라도 된다고 생각해서 분리해요
2022. 1. 14. 오후 1:34, 파이버 : 저도 이 부분이 되게 장점이라고 생각해서 좋아했는데, 왜인지 점점 개발하다 보니까 하나의 엔드포인트가 딱히 여러 곳에서 쓰이지 않더라고요.. 그래서 요즘은 안 쓰고 있어요
2022. 1. 14. 오후 1:34, 유용태 (teo.yu) : 1) axios layer
2) react-query로 연동하는 layer
3) component layer
2022. 1. 14. 오후 1:35, 개발닥 : hook을 쓴다는건 리액트 기능 (useEffect,useState) 이런걸 쓸려는 의도인데 api 쏘는건 리액트랑 묶을 필요가 없다고 생각이 들어서요
2022. 1. 14. 오후 1:35, 피카츄돈까스/React,RN : 아 그 유연함을 위해서
2022. 1. 14. 오후 1:36, 피카츄돈까스/React,RN : 중간에 의존성을 낮춰주는 역할들을 만들어놓는다면
2022. 1. 14. 오후 1:36, 피카츄돈까스/React,RN : 변경사항이 생겼을때 유연한 대처가 가능해집니다.
2022. 1. 14. 오후 1:36, 유용태 (teo.yu) : const [data] = useQuery(['todos', todoId], () =>fetchTodoById(todoId));
2022. 1. 14. 오후 1:36, 유용태 (teo.yu) : 이렇게 쓰라고 보통 하는데
2022. 1. 14. 오후 1:36, 유용태 (teo.yu) : const [data] = usePost(id)
2022. 1. 14. 오후 1:36, 유용태 (teo.yu) : 이런식으로 한번더 Layer를 감싸준다고 생각하시면
2022. 1. 14. 오후 1:36, 개발닥 : 한번 더 랩핑하는 용도로 쓰신다는 거군요
2022. 1. 14. 오후 1:37, 유용태 (teo.yu) : 이게 혼자서 할때는 크게 상관이 없다가
2022. 1. 14. 오후 1:37, 유용태 (teo.yu) : 여럿이서 하게 되면 다같이 백엔드 문서를 보면서 REST 구조를 알아야 하는데
2022. 1. 14. 오후 1:37, 유용태 (teo.yu) : 컴포넌트 만드는 입장에서는 데이터만 알면 되고
2022. 1. 14. 오후 1:38, j : query 함수를 문서화 한다 -> query를 다른 함수나 레이어로 감싸서 sdk처럼 활용한다
2022. 1. 14. 오후 1:38, 유용태 (teo.yu) : 특히 짜증나는것 중에 하나가 화면의 스키마 구조랑 서버 스키마 구조가 달라서 중간에 좀 바꿔줘야 할때에도
2022. 1. 14. 오후 1:38, j : 이렇게 이해해도 되는부분인가요?
2022. 1. 14. 오후 1:38, 유용태 (teo.yu) : 가령 image_url 필드와 avatar_url과 같이 같은 용도인데 필드명이 다르다거나..
2022. 1. 14. 오후 1:38, 유용태 (teo.yu) : 이런걸 중간에서 처리해주는 용도? 뭐 그렇습니다.
2022. 1. 14. 오후 1:39, j : 어젠가 어떤분이 말씀하신 그..
2022. 1. 14. 오후 1:39, 유용태 (teo.yu) : 네~ 문서화 한다보다는 SDK화 한다가 맞는 표현인것 같아요 ㅎ
2022. 1. 14. 오후 1:40, 유용태 (teo.yu) : 접니다 ㅋㅋ
2022. 1. 14. 오후 1:40, j : 엌ㅋㅋㅋ태오님이셨군요
2022. 1. 14. 오후 1:40, 유용태 (teo.yu) : 그리고 나중에 useMutation에서도 Auto로 Invalidate시켜줘야 하는 부분도 감춰두는 것도 좋은 것 같아요
2022. 1. 14. 오후 1:41, j : 저런 부분도 한번 고민해 봐야겠네요..
2022. 1. 14. 오후 1:41, 피카츄돈까스/React,RN : 저희가 생각하고 사용 하는 구조는 
Service - Repository - Presentation 인데 
여기서 Service와 Repository 사이에 ResponseAdapter를 두고 RequestAdapter를 두어서 백엔드에서 API 변경이 되었을때 수정되어야 하는 부분을 Service나 adapter영역으로 한정하고 다른곳은 그대로 사용 하기 위함이고 

같은 원리로 Repository(redux,mobx,react-query)가 달라져도 Presentation(component)에는 영향을 주지 않기 위해 Proxy를 hook으로 구현해서 인터페이스를 제공해주는 형태로 사용해주면 
나중에 Repository 단에서 변경이 일어나도 Presentation에서는 수정이 거의 필요없도록 하기 위해서? hook을 연결 해줍니담
2022. 1. 14. 오후 1:41, 유용태 (teo.yu) : 그냥 생각없이 useDeletePost(id) 이렇게 호출하기만 하면 되니까요
2022. 1. 14. 오후 1:41, Vintz : 와..진짜 현업의 경험들을 이렇게 듣는것만으로도 좋은 참고가 되겠어요.
2022. 1. 14. 오후 1:42, j : 여기서 repository를 vm으로 생각하고 이해해도 되나요?ㅠ
2022. 1. 14. 오후 1:42, 피카츄돈까스/React,RN : 넹넹 마자여
2022. 1. 14. 오후 1:42, 피카츄돈까스/React,RN : 딱 그자리에여 ㅠ
2022. 1. 14. 오후 1:42, 피카츄돈까스/React,RN : 근데 저 구조를 생각하다 보니 mobx는 못사용하겠더라구요 ㅠ
2022. 1. 14. 오후 1:42, j : mobx는 mvvm에 너무 특화되어 있어서..
2022. 1. 14. 오후 1:42, 피카츄돈까스/React,RN : mobx 사용했더니 스크린에 다 observer 요게 붙어 버리니 의존성이 대폭증가 ㅠ
2022. 1. 14. 오후 1:43, 피카츄돈까스/React,RN : 저희도 mvvm인뎅 사용법을 모르다보니 그런건지..ㅠㅠ
2022. 1. 14. 오후 1:43, j : 저도 아직 잘 모르고 사용중입니다..
2022. 1. 14. 오후 1:43, j : observer 다 떄버리고 싶어요..
2022. 1. 14. 오후 1:43, 핸디 : 초반에 썼을때는 좋았는데 쓰면 쓸수록 의존성이 커져서 저도 다른 개인플젝할떄는 안쓰게 되더라구요
2022. 1. 14. 오후 1:43, j : 데이터 변경 시점 제대로 못잡는 경우도 있고..
2022. 1. 14. 오후 1:43, 피카츄돈까스/React,RN : MST를 사용했는데도 어쩔수없는 힘듬 ㅠㅠ 그리고 자료도 부족하구 ㅠㅠ 그래서 Redux로 갈아탔어욤 ㅋㅋ 근데 여기서 또! 이제 비동기 통신이 문제가 되고!
2022. 1. 14. 오후 1:44, 피카츄돈까스/React,RN : 그래서 RTK Query도 사용해봤는데 이게 의도가 빤히 보이는게 이놈이…Service랑 강한 결합을 이뤄야 되는 모양새라 ㅠㅠ
2022. 1. 14. 오후 1:44, 피카츄돈까스/React,RN : Redux 진영이 시장을 잡아 먹으려고 저렇게 만들었나 싶은 생각이 들더라구요
2022. 1. 14. 오후 1:44, 피카츄돈까스/React,RN : 그래서 좀 더 가벼운 React-query를 사용해서 VM을 만들었습니당…
2022. 1. 14. 오후 1:45, ㅋㅋ/React : 혹시 이렇게 구현된 예제가 있을 까요? 다들 리액트 쿼리만 적용을 한 예제들이 대부분 이네요 ㅠㅠ
2022. 1. 14. 오후 1:45, 피카츄돈까스/React,RN : 근데 신기하게도 여러번 VM을 수정했지만 정말 뷰단은 거의 수정없이 갔습니당
2022. 1. 14. 오후 1:45, 피카츄돈까스/React,RN : 예제 ㅠㅠ 저희회사오시면…
2022. 1. 14. 오후 1:45, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 1:45, Vintz : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 1:45, ㅋㅋ/React : 앜ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 1:45, 피카츄돈까스/React,RN : 농담이구옄ㅋㅋㅋ..
2022. 1. 14. 오후 1:46, 피카츄돈까스/React,RN : 저한테 저 구조나 이런저런것들 알려준 동료가 있는뎅
2022. 1. 14. 오후 1:46, 유용태 (teo.yu) : https://if.kakao.com/session/118
2022. 1. 14. 오후 1:46, 피카츄돈까스/React,RN : 그분하고 얘기해서 정리해서 올려보지 않을까 싶습니다.
2022. 1. 14. 오후 1:46, 유용태 (teo.yu) : 저희 팀은 아닌데 사람 생각은 다 비슷한것 같아서 공유 해봅니다
2022. 1. 14. 오후 1:46, 피카츄돈까스/React,RN : 오호
2022. 1. 14. 오후 1:47, 피카츄돈까스/React,RN : 이미 좋은 발표가 있군요!
2022. 1. 14. 오후 1:47, 유용태 (teo.yu) : 초반은 react-query 소개고 중반 이후부터 나옵니다
2022. 1. 14. 오후 1:47, ㅋㅋ/React : 테오님 감사합니다 ㅎㅎ 피카츄돈까스님 좋은 내용 기다리겠습니다 ~!! ㅎㅎ
2022. 1. 14. 오후 1:48, 피카츄돈까스/React,RN : 앗 옙 알겠습니다!
2022. 1. 14. 오후 1:48, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 14. 오후 1:48, 피카츄돈까스/React,RN : 리액트쿼리 https://tkdodo.eu/blog/practical-react-query 요거 잘보시면 팁들이 많습니다 공홈에 있는 링크인데 저는 아주 도움이많이 됐습니다!
2022. 1. 14. 오후 1:49, 유용태 (teo.yu) : 감사합니다~
2022. 1. 14. 오후 1:49, 피카츄돈까스/React,RN : queryKey관리하는 내용이 저는 젤 도움 됐고 select라는걸 주입받아 사용하는것도 저는 좋은 도움이 됐습니다
2022. 1. 14. 오후 1:50, j : 뭔가 언습 알림이있었는데..
2022. 1. 14. 오후 1:50, 핸디 : 지금 막 clean-code-typescript 읽고 있는데 좋은 자료들이 쌓이네요 ㅎㅎ
2022. 1. 14. 오후 1:50, ㅋㅋ/React : 이모티콘 ㅎㅎㅎㅎ 좋은내용 공유 주셔서 정말 감사합니다!! 
전 공유 주신 내용 공부해보러 가겠습니다!!
2022. 1. 14. 오후 1:51, j : mvvm 고찰을 해보긴 해야겠어요..
2022. 1. 14. 오후 1:51, j : 저 자료들 보면소 초기 들어갔던 서비스 구조를 오ㅑ 이렇게했나..고찰시작..
2022. 1. 14. 오후 1:53, 개발닥 : 회사 팀마다 구조가 다 다르네요
2022. 1. 14. 오후 1:53, 유용태 (teo.yu) : 그렇죠 ㅋㅋ
2022. 1. 14. 오후 1:53, 피카츄돈까스/React,RN : 마자욤! 도메인도 상황도 달라서
2022. 1. 14. 오후 1:54, 피카츄돈까스/React,RN : 완벽한 하나의 구조는 없..지않을까 싶은데….제가 생각하는 프로젝트..중 하나가 ㅋㅋㅋㅋ 완벽한 구조를 한번 만들어볼까…ㅋㅋㅋㅋ 하는…ㅋㅋ
2022. 1. 14. 오후 1:55, 피카츄돈까스/React,RN : 다양한 직장에 계신 분들의 의견을 모아서 계속 방법을 고민 해 나가면 만들어 볼 수 있지 않을까 싶긴한데…
2022. 1. 14. 오후 1:56, 개발닥 : 완볃한 구조는
2022. 1. 14. 오후 1:56, 유용태 (teo.yu) : 저희 1회 천하제일폴더구조가 그렇게 시작되었고
2022. 1. 14. 오후 1:56, 유용태 (teo.yu) : 1시간 30분을 넘게 설전을 이어갔지요 ㅋ
2022. 1. 14. 오후 1:57, 유용태 (teo.yu) : 저는 그런 것들을 하면 좋을 것 같기는 해요
2022. 1. 14. 오후 1:57: 네오님이 들어왔습니다.
2022. 1. 14. 오후 1:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 1:57, 유용태 (teo.yu) : 회사에서는 이걸 논의하는게 정치로 이어지고 작업을 해야 하는 부담감 때문에
2022. 1. 14. 오후 1:57, 유용태 (teo.yu) : 안녕하세요 네오님! 반갑습니다! :)
2022. 1. 14. 오후 1:57, 유용태 (teo.yu) : 솔직히 좋은 구조랑 현업에서 타협을 하게 되거든요
2022. 1. 14. 오후 1:58, 피카츄돈까스/React,RN : 아..ㅠㅠㅠ
2022. 1. 14. 오후 1:58, 피카츄돈까스/React,RN : 정치..ㅠㅠ너무 …싫…
2022. 1. 14. 오후 1:58, 개발닥 : 정치까진 아니지만
2022. 1. 14. 오후 1:58, 개발닥 : 이 결정으로 구조가 바뀌면 일도 늘어나서 말하기가 좀 그래요
2022. 1. 14. 오후 1:58, 피카츄돈까스/React,RN : 아..
2022. 1. 14. 오후 1:59, 피카츄돈까스/React,RN : 마자요 이게 음
2022. 1. 14. 오후 1:59, 피카츄돈까스/React,RN : 균형을 잘 맞춰야 하는거같아요
2022. 1. 14. 오후 1:59, 개발닥 : 나는 괜찮은데 다른 분들 업이 늘어나니…
2022. 1. 14. 오후 1:59: 킴티오님이 들어왔습니다.
2022. 1. 14. 오후 1:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 1:59, 킴티오 : 안녕하세요
2022. 1. 14. 오후 1:59, 유용태 (teo.yu) : 안녕하세요 킴티오님! 반갑습니다. :)
2022. 1. 14. 오후 1:59, 킴티오 : 용태님 반갑습니다
2022. 1. 14. 오후 2:00, 개발닥 : 구조가 바뀌면
2022. 1. 14. 오후 2:00, 피카츄돈까스/React,RN : 요것도 음 고민 해봐야 하는게 구조가 바뀌는걸로 결정되면 이점이 있어서 변경되는것이고 일이 늘어나는걸 상쇄할 이점이 있기때문에 변경하기로 동의 한거라서
2022. 1. 14. 오후 2:00, 개발닥 : 이전에 QA로 검증된 코드도 변경이 가해져서 사이드 이펙트가 늘어나서 무섭기도하구요
2022. 1. 14. 오후 2:00, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 얘기 하고 싶을때 궁금하게 생겼을때 남들은 어떻게 하는지 궁금할때 공유하고픈 자료가 생겼을때 함께 하고자 하는 공간입니다. 환영합니다~
2022. 1. 14. 오후 2:00, 피카츄돈까스/React,RN : 아아 ㅠㅠ
2022. 1. 14. 오후 2:00, 피카츄돈까스/React,RN : 그래서 저는 만약에 변경해야한다면
2022. 1. 14. 오후 2:01, 피카츄돈까스/React,RN : 테스트코드를 준비해놓고 변경하면 어떨까 이상적으로 생각은 해봤어요
2022. 1. 14. 오후 2:01, 피카츄돈까스/React,RN : 그럼 좀 자신감 있게 변경 할 수 있을거같아서요
2022. 1. 14. 오후 2:01, 유용태 (teo.yu) : 그쵸 당사자랑 고민을 하는 것은 좋은 구조를 만들기 위한 방향과 그래서 우리 현업에 맞는가 라는 고민을 동시에 해야 해서
2022. 1. 14. 오후 2:01, 킴티오 : 동기 소개로
2022. 1. 14. 오후 2:01, 킴티오 : 들어오게되었습니다
2022. 1. 14. 오후 2:01, 유용태 (teo.yu) : 대부분은 좋은 건 알곘지만 다음에 생각해보자 이렇게 마무리 되는 것 같아요
2022. 1. 14. 오후 2:01, 개발닥 : 맞아요 테스트코드가 있어야 하는데
2022. 1. 14. 오후 2:01, 개발닥 : 이것도 큰 난관이잖아요 ㅋㅋ
2022. 1. 14. 오후 2:01, 유용태 (teo.yu) : 훌륭한(?) 동기분을 두셨군요. ㅋㅋ 환영합니다 .ㅎ
2022. 1. 14. 오후 2:01, 피카츄돈까스/React,RN : ㅋㅋ 그져
2022. 1. 14. 오후 2:01, 킴티오 : 혹시 여기 분들 중에 일렉트론으로
2022. 1. 14. 오후 2:01, 개발닥 : 없던 프로젝트에 테스트 가능한 구조로 뜯기 시작하면 인생도 뜯겨서..
2022. 1. 14. 오후 2:01, 피카츄돈까스/React,RN : 말이 테스트코드지 ㅠ
2022. 1. 14. 오후 2:01, 킴티오 : 프로젝트하시는 분 계신가요?
2022. 1. 14. 오후 2:02, 피카츄돈까스/React,RN : 저는 그래서 이번에 인생을 뜯어서 ..
2022. 1. 14. 오후 2:02, 피카츄돈까스/React,RN : 몸을 갈아 넣어서 ..
2022. 1. 14. 오후 2:02, 피카츄돈까스/React,RN : 구조를 변경했습..
2022. 1. 14. 오후 2:02, 개발닥 : ㅠㅠ
2022. 1. 14. 오후 2:05, 유용태 (teo.yu) : 써보고 싶어서 억지로 했었는데 회사에서 해주지 못해서 부러졌습니다. ㅎ
2022. 1. 14. 오후 2:05, 피카츄돈까스/React,RN : 그래도 배운게 많아서 좋아요!
2022. 1. 14. 오후 2:05, 유용태 (teo.yu) : 멋지십니다!
2022. 1. 14. 오후 2:05, 유용태 (teo.yu) : 그렇게함으로써 앞으로 쌓일 기술부채를 미리 해결했다고 생각합니다
2022. 1. 14. 오후 2:05, 피카츄돈까스/React,RN : 하지만 실력은 아직도 주니어 ㅠ
2022. 1. 14. 오후 2:06, 피카츄돈까스/React,RN : 맞습니다 ㅠ
2022. 1. 14. 오후 2:06, 피카츄돈까스/React,RN : 저는 미래에 편학 위해서 현재를 잠시 희생 하는게 맞다고 생각해서 ㅠ
2022. 1. 14. 오후 2:06, 유용태 (teo.yu) : 훌륭하십니다! 그리고 이걸 자주 해줘야 나중에 대규모 공사를 안할 수 있어서 정기적으로 작게 작게 하는 것은 필요하다고 생각해요
2022. 1. 14. 오후 2:07, 피카츄돈까스/React,RN : 아 용태님은 스벨트 사용하신다던데 저도 리액트 빨리 통달해서 다른 언어도 이해해보고싶네요
2022. 1. 14. 오후 2:07, 피카츄돈까스/React,RN : 실력좀 더 키워야지 ㅠ
2022. 1. 14. 오후 2:08, 유지남 : 저희 팀은 swr을 사용하고 있습니다.
2022. 1. 14. 오후 2:08, 피카츄돈까스/React,RN : 오 next 사용하시나여
2022. 1. 14. 오후 2:08, 유지남 : 넵 next를 백오피스로 사용 하고 있습니다.
2022. 1. 14. 오후 2:09, 피카츄돈까스/React,RN : 아하 그럼 SWR이 찰떡이라고 하더라구요
2022. 1. 14. 오후 2:09, 유지남 : 서비스에 react 에도 점진적으로 변경을 하고 있는데, 현재까지는 만족도가 높더라구여.
2022. 1. 14. 오후 2:10, 킴티오 : 지금 일렉트론으로 프로그램 만들어서 판매중인 데
2022. 1. 14. 오후 2:11, 유지남 : 네이티브 e2e 테스트 에뮬레이터를 일렉트론으로 하고 있어요.
2022. 1. 14. 오후 2:11, 킴티오 : 원래 데이터 엔지니어 쪽이라 막 개발해서
2022. 1. 14. 오후 2:11, 킴티오 : 디버깅세팅이 참 안되서 여쭙고자..
2022. 1. 14. 오후 2:11, 킴티오 : 오
2022. 1. 14. 오후 2:11, 킴티오 : Ide는 지금 어떤거 쓰시나요?
2022. 1. 14. 오후 2:13, 유지남 : ide는 주로 vs code 사용하고 있고, 구성원 중에 webstom 고인물이 있어서 혼용해서 사용하고 있어요.
2022. 1. 14. 오후 2:18, 킴티오 : 오 그러시군요 좀만 더 세팅해보고 막히는 부분 있으면 물어볼게요^.^/
2022. 1. 14. 오후 2:18, 유용태 (teo.yu) : 아~ 저는 대신 React는 잘(?) 못해요 ㅋㅋ
2022. 1. 14. 오후 2:18, 피카츄돈까스/React,RN : 글의 내용만 봐도 고민하신 흔적이나 흐름이 보이는데…못하신다고 해도 못하실리 없죠 ㅠㅠ ㅋㅋㅋ안하신거아닙니까 ㅋㅋㅋ 스벨트가 좋아서 ..
2022. 1. 14. 오후 2:21, 유용태 (teo.yu) : 감사합니다. ㅎ
2022. 1. 14. 오후 2:21, 유용태 (teo.yu) : 일렉트론 디버깅은 크롬 디버그 툴 연동하는게 아니라 IDE에서 연결하는게 또 따로 있어요? +_+
2022. 1. 14. 오후 2:36: 티비보는 무지님이 들어왔습니다.
2022. 1. 14. 오후 2:36, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 2:36, 유용태 (teo.yu) : 안녕하세요 티비보는 무지님~ 반갑습니다! :)
2022. 1. 14. 오후 2:37, 티비보는 무지 : 안녕하세요~! 반갑습니다 :)
2022. 1. 14. 오후 2:43, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 얘기를 나누는 공간입니다. ㅎ 궁금한게 있다면 혹은 다른 사람들은 어떤걸 궁금해 하고 있는지 궁금하다면 얼마든지 편하게 글 남겨주세요. TMI식 지식 자랑도 환영합니다. ㅎ
2022. 1. 14. 오후 2:57: 맥줘님이 들어왔습니다.
2022. 1. 14. 오후 2:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 2:57, 유용태 (teo.yu) : 안녕하세요 맥줘님! 반갑습니다 :)
2022. 1. 14. 오후 3:05, 떨고있는 어피치 : 오늘 새로운 글 쓰셨나요? ㅋㅋㅋ
갑자기 이렇게 들어올 수가 있나…?싶을정도로 들어오네요 ㅋㅋㅋ
2022. 1. 14. 오후 3:06, 유용태 (teo.yu) : 피카츄돈가스님이 자신의 커뮤니티에 알려주셨다고 하네요 :) 대단하다고 생각합니다! +_+
2022. 1. 14. 오후 3:06, Hardy : 와 128명이 됐네요
2022. 1. 14. 오후 3:06, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:07, 유용태 (teo.yu) : 이벤트를 한번 다시 해야될 것 같아요
2022. 1. 14. 오후 3:07, 피카츄돈까스/React,RN : 좋은건 나눠야죠 ! 저희 방 주제가 더 좋은 프론트앤드를 같이 고민하자는 주제라서 ...
2022. 1. 14. 오후 3:07, 피카츄돈까스/React,RN : 여기가 훨씬 좋은 주제와 멘토님이 계셔서 거침없이 소개를 했습니다 ㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:07, Vintz : 피돈님 감사합니다 ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:08, 피카츄돈까스/React,RN : 아잇..제가 더 감사하져 ㅠ
2022. 1. 14. 오후 3:09, Vintz : 테오의 구글 스프린트 1기라 다행입니다..이번에 2기 시작하면 경쟁 장난아니겠네여 ㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:09, 유용태 (teo.yu) : ㅋㅋㅋ 그때 2기 하자고 했을때 반응이 미지근했던걸로 기억하는데.. 큼..
2022. 1. 14. 오후 3:09, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:10, 유용태 (teo.yu) : 하기사 그때는 시기가 연말인지라
2022. 1. 14. 오후 3:10, Vintz : 저는 2기 하면 또 도전할거에요 ㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:11, Hardy : 저도 안정적이면 또 참가하고 싶어요 ㅋㅋㅋ
2022. 1. 14. 오후 3:11, Hardy : 지금은 과제 3개 해결하고 3개 남아있는 바쁜 상황입니다... 과제만 줘...
2022. 1. 14. 오후 3:11, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ
2022. 1. 14. 오후 3:11, j : 음..구글 스프린트요?
2022. 1. 14. 오후 3:11, Hardy : 과제 멈춰!!
2022. 1. 14. 오후 3:12, 유용태 (teo.yu) : 네~ 여기서 길게 뭘 같이 하기에는 너무 부담스럽고 짧게 뭔가를 해보자는 걸로 하면 구글 스프린트 만한게 없다고 생각해서
2022. 1. 14. 오후 3:12, 유용태 (teo.yu) : 한번 해봤었구요
2022. 1. 14. 오후 3:12, 유용태 (teo.yu) : 무엇이 좋은 폴더 구조인가 - 천하제일폴더구조대회 도 한번 개최 해봤습니다
2022. 1. 14. 오후 3:13, 유용태 (teo.yu) : 프로도님이 얘기해주셨던 좋은 이름 발견하기도 재밌을 것 같고
2022. 1. 14. 오후 3:14, 유용태 (teo.yu) : 개발할때 네이밍은 힘드니까
2022. 1. 14. 오후 3:14, 유용태 (teo.yu) : 내가 관심가지고 있는 github star 목록 공유해주기
2022. 1. 14. 오후 3:14, 유용태 (teo.yu) : 이런것도 재밌을것 같아요
2022. 1. 14. 오후 3:15, 유용태 (teo.yu) : 단톡방에서만 물어보게 되면 좀 피상적으로 답변이 끝나는 경우가 많아서 원하신다면 말로 하면서 deep dive 해보는것도 재밌을거라 생각합니다
2022. 1. 14. 오후 3:15, j : 그런거 있으면..미약한 실력이지만..저도 해보고싶네요
2022. 1. 14. 오후 3:16, j : 요새 개념 깊이도 얕아지고..코드 실력도 낮아지는 기분이라ㅠㅠ
2022. 1. 14. 오후 3:17: 신나는 프로도님이 들어왔습니다.
2022. 1. 14. 오후 3:17, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 3:17, 유용태 (teo.yu) : 안녕하세요 신나는 프로도님! 반갑습니다 :)
2022. 1. 14. 오후 3:18, 신나는 프로도 : 안녕하세요 :)
2022. 1. 14. 오후 3:18, 유용태 (teo.yu) : 반갑습니다 프로도님~
2022. 1. 14. 오후 3:22, 킴티오 : 크롬 dev툴뿐만 아니라 ide에서 breakpoint 주고 디버깅해야하는데 세팅이 막혀서요ㅠ
2022. 1. 14. 오후 3:22, 유용태 (teo.yu) : 오오! 그런게 되는 군요~ 확인되면 저도 링크 좀 공유 부탁드려요! +_+
2022. 1. 14. 오후 3:31, 유용태 (teo.yu) : 톡게시판 '공지': 이벤트를 한번 해볼까 합니다. 다같이 온라인으로 모여 1시간 정도 할 수 있는 것들로 생각합니다. 자유롭게 의견 주세요!
2022. 1. 14. 오후 3:33, 유용태 (teo.yu) : 혼자서는 하기 힘들었던 것들을 함께 해보되 부담없이 간단히 할 수 있는 것들에 대해 의견을 받아봅니다
2022. 1. 14. 오후 3:45, 스타트업개발자 : axios / recoil로 개발중인데…
react-query 를 쓰는 이유가 먼지 궁금합니다.
2022. 1. 14. 오후 3:46, 유용태 (teo.yu) : react-query가 캐싱과 refetch기능을 제공해주고 dx가 좀더 편하기 때문이라고 생각해요
2022. 1. 14. 오후 3:46, 유용태 (teo.yu) : 가령 내가 Post를 목록에서 삭제를 하면 반드시 목록을 재 갱신 해줘야 할텐데
2022. 1. 14. 오후 3:47, 스타트업개발자 : 그러면 사용하게되면,,,
recoil + react-query + axios 로 하면 되는건지 좀 궁금합니다.
2022. 1. 14. 오후 3:47, 피카츄돈까스/React,RN : 고렇게 하시면 되지 않을까 싶습니다
2022. 1. 14. 오후 3:47, 유용태 (teo.yu) : 네 그렇게 생각합니다.
2022. 1. 14. 오후 3:47, 피카츄돈까스/React,RN : fetcher에 axios를 샤샥
2022. 1. 14. 오후 3:47, 피카츄돈까스/React,RN : 슈슉
2022. 1. 14. 오후 3:48, 스타트업개발자 : 저거 기준으로 좀 찾아봐야겠네요! 감사합니다!
2022. 1. 14. 오후 3:49, 유용태 (teo.yu) : CMS이 같이 단순한 requset + mutation 조합이라면 react-query 수준에서 끝날터이고 조금더 상태 관리 스러운 것들이 중간에 필요하다면 recoil로 한번 더 UI상태 트리를 만들어주면 되지 않을까 생각해요
2022. 1. 14. 오후 3:59, 파이버 : 철학이 되게 괜찮더라고요 서버 상태랑 클라이언트 상태를 아예 다르다고 정의하는 게
2022. 1. 14. 오후 4:01, 파이버 : 대부분 react-query 로 처리하는데 "클라이언트 상태"라고 봐야 할 전역적인 상태들이 좀 있어서 react-query + redux + saga 사용중입니다
2022. 1. 14. 오후 4:05, 유용태 (teo.yu) : saga는 좀 어때요? 상용 라이브러리 중에서 제네릭 function을 쓰는 거의 유일한 느낌인데
2022. 1. 14. 오후 4:05, 개발닥 : 사가
2022. 1. 14. 오후 4:05, 개발닥 : 사가 보면 게임회사만 떠오르네요
2022. 1. 14. 오후 4:05, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 14. 오후 4:05, 프린이 : 포가튼사가
2022. 1. 14. 오후 4:06, 유용태 (teo.yu) : 아~
2022. 1. 14. 오후 4:06, 유용태 (teo.yu) : 이로서 대강 연배 추측이. ㅋㅋㅋ
2022. 1. 14. 오후 4:06, 프린이 : 헉 ㅠㅠ
2022. 1. 14. 오후 4:06, 개발닥 : ㅋㅋㅋㅋ
2022. 1. 14. 오후 4:08, 엄지척 제이지 : "이걸 이렇게까지 해야하나?" 싶었습니다 ㅎㅎ
2022. 1. 14. 오후 4:09, 유용태 (teo.yu) : 와~ 제가 생각한 느낌이랑 똑같은데 차마 그렇게 말하지 못했지만
2022. 1. 14. 오후 4:09, 유용태 (teo.yu) : 쓰시는 분도 그렇게 생각하시는 군요
2022. 1. 14. 오후 4:24, 썰~~ : 리액트 쿼리로도 충분히 상태관리가 되지않나요
2022. 1. 14. 오후 4:24, 썰~~ : 진짜 고민중이라서
2022. 1. 14. 오후 4:24, 썰~~ : 물어봅니다..
2022. 1. 14. 오후 4:24, 썰~~ : 로컬상태도 저장할수있는걸로 알아서
2022. 1. 14. 오후 4:25, 피카츄돈까스/React,RN : 캐시 기능을 사용해서 로컬상태도 관리 할 수 있는걸로 알고는 있는데 추천하는 방법은 아니더라구요
2022. 1. 14. 오후 4:25, 유용태 (teo.yu) : 사람마다 다른 거라서 CMS처럼 백엔드 데이터가 대부분의 상태관리라면 필요없고 UI가 복잡한 앱의 경우에는 recoil과 같은 로컬 상태관리 layer가 하나 더 있으면 좋다고는 생각합니다
2022. 1. 14. 오후 4:26, 썰~~ : 그래서 리코일로 많이하더라고요
2022. 1. 14. 오후 4:26, 유용태 (teo.yu) : recoil과 react-query가 둘 중하나의 개념은 아닌것 가아요
2022. 1. 14. 오후 4:26, 썰~~ : 리덕스는 너무 무겁고
2022. 1. 14. 오후 4:26, 유용태 (teo.yu) : *같아요
2022. 1. 14. 오후 4:26, 피카츄돈까스/React,RN : 맞습니당
2022. 1. 14. 오후 4:26, 피카츄돈까스/React,RN : 리덕스 무거운거..인정..ㅠ
2022. 1. 14. 오후 4:26, 썰~~ : 가벼운거중에 리코일로 한다고 많이 들었어요
2022. 1. 14. 오후 4:26, 피카츄돈까스/React,RN : 저희는 그냥 client쪽이 많이 무겁지 않아서
2022. 1. 14. 오후 4:26, 피카츄돈까스/React,RN : context .. ㅋㅋㅋ
2022. 1. 14. 오후 4:26, 유용태 (teo.yu) : react-query는 axios보다 조금 더 발전한 api layer랄까요?
2022. 1. 14. 오후 4:26, 썰~~ : context API로 한다고도 들어었는데
2022. 1. 14. 오후 4:27, 피카츄돈까스/React,RN : 그 단계별로 스탭을 밟아서 데이터를 모아야 하는 부분이 있는데
2022. 1. 14. 오후 4:27, 썰~~ : axios도 사용하고 상태관리도 가능하고
2022. 1. 14. 오후 4:27, 피카츄돈까스/React,RN : 거기에 context를 사용하고
2022. 1. 14. 오후 4:27, 피카츄돈까스/React,RN : ref를 하나 선언해서 거기다 데이터를 쌓아가는것으로 …
2022. 1. 14. 오후 4:28, 개발닥 : axios + behaviorSubject = react-query
2022. 1. 14. 오후 4:29, 유용태 (teo.yu) : rxjs는 로딩중 처리가 아쉬운것 빼고는 개발닥님 의견에 동의합니다. ㅋ
2022. 1. 14. 오후 4:29, 피카츄돈까스/React,RN : 오…behavier Subject?  찾아봐야겠네요
2022. 1. 14. 오후 4:30, 피카츄돈까스/React,RN : rxjs …도 써보고싶은데 ㅠ 허..ㅠ..넘나 어려븐것들..ㅠ
2022. 1. 14. 오후 4:37, 프린이 : 리덕스가 무겁다는게 번들 사이즈가 무겁다는 말씀인가요?
2022. 1. 14. 오후 4:39, 피카츄돈까스/React,RN : 사용할때 구현할게 너무 많다는 의미로 말해써욤
2022. 1. 14. 오후 4:42, 프린이 : 아..
2022. 1. 14. 오후 4:44, 썰~~ : 저도
2022. 1. 14. 오후 4:44, 썰~~ : 뭔가 러닝커브도 높고
2022. 1. 14. 오후 5:13, 파이버 : 99프로의 상황에서 “이렇게까지 해야되나” 싶다가 진짜 1프로의 상황에서 너무 코드가 명확해져서 기분이 좋더라고요 ㅋㅋㅋㅋ
2022. 1. 14. 오후 5:13, 유용태 (teo.yu) : ㅋㅋㅋ 멋지네요! ㅎ
2022. 1. 14. 오후 5:26: 실무뿌론트님이 들어왔습니다.
2022. 1. 14. 오후 5:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 5:26, 유용태 (teo.yu) : 안녕하세요 실무뿌론트님 반갑습니다 :)
2022. 1. 14. 오후 5:28, 실무뿌론트 : 안녕하세요!
2022. 1. 14. 오후 5:28, 실무뿌론트 : 프론트 개발잘하고싶은 개발자여서 참가하게됬어요 잘부탁드려요
2022. 1. 14. 오후 5:28, 유용태 (teo.yu) : 안녕하세요 반갑습니다~ 어서오세요 ㅎ
2022. 1. 14. 오후 5:29, 유용태 (teo.yu) : 네 감사합니다. 여기는 개발 얘기나 궁금한 얘기를 나눌 수 있는 공간입니다. 언제든지 편하게 말 남겨주세요
2022. 1. 14. 오후 5:39: 피자 먹다 자는 무지님이 들어왔습니다.
2022. 1. 14. 오후 5:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 5:39, 유용태 (teo.yu) : 안녕하세요~ 피자 먹다 자는 무지님 반갑습니다
2022. 1. 14. 오후 5:40, 피자 먹다 자는 무지 : 안녕하세요 소문듣고 찾아왔습니다 (__)
2022. 1. 14. 오후 5:40, 유용태 (teo.yu) : 오! 소문이 어디로 났나요? ㅋㅋ 반갑습니다 .ㅎ
2022. 1. 14. 오후 5:41, 피자 먹다 자는 무지 : 프론트 오픈톡방에서 추천해주시더라구요 ㅎㅎ
2022. 1. 14. 오후 5:41, 유용태 (teo.yu) : 아! 감사합니다. 어서오세요 오늘 엄청 오셨네요! +_+
2022. 1. 14. 오후 5:41, 유용태 (teo.yu) : 여기는 개발 얘기가 하고 싶거나 궁금한게 생겼을때 남들은 어떻게 개발하고 있는지 궁금할때 언제든 편한게 공유 할 수 있는 공간입니다.
2022. 1. 14. 오후 5:41, 유용태 (teo.yu) : 가끔씩 이벤트도 한번 진행해보려고 합니다. ㅎ
2022. 1. 14. 오후 5:44, 피자 먹다 자는 무지 : 네 잘 부탁드립니다 ㅎㅎ
2022. 1. 14. 오후 6:49: 감자감자님이 들어왔습니다.
2022. 1. 14. 오후 6:49, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 14. 오후 6:50, 유용태 (teo.yu) : 안녕하세요. 감자감자님~ 반갑습니다! +_+
2022. 1. 14. 오후 6:50, 감자감자 : 안녕하세요~!! 다른 프론트방에서 링크 타고 왔습니다☺️
2022. 1. 14. 오후 7:03, 유용태 (teo.yu) : 반갑습니다. 어서오세요~ 여기는 개발 이야기를 공유하고 궁금한게 있거나 다른 개발자들은 어떻게 하고 있는지 궁금할때 서로 공유해보는 그런 공간입니다.
2022. 1. 14. 오후 7:04, 유용태 (teo.yu) : 문득 궁금한게 생긴다면 언제든 편하게 글 남겨주세요 :)
2022. 1. 14. 오후 7:06: 얼굴마사지하는 제이지님이 나갔습니다.
2022. 1. 14. 오후 7:06: Aram님이 나갔습니다.
2022. 1. 14. 오후 8:26, 유용태 (teo.yu) : 해보고 싶은 이벤트는 "스프린트" 랑 "스터디" 군요!
2022. 1. 14. 오후 8:27, 유용태 (teo.yu) : 요새 Z세대는 스터디를 어떤식으로들 하나요? +_+?
2022. 1. 14. 오후 8:33, ㅋㅋ/React : 메타..버스? ㅋㅋ
2022. 1. 14. 오후 8:44, 유용태 (teo.yu) : 제가 알고 있는 스터디는 발표주제 정해서 세션 형식으로 발표하는 것 밖에 없어서... 스터디는 제가 꼭 아이템으로 챙겨둬 보겠습니다!
2022. 1. 14. 오후 8:50, Vintz : 이모티콘 좋습니다!!!
2022. 1. 14. 오후 8:52, 유용태 (teo.yu) : 발표 한번 해보고 싶으신분 계시나요? 나에게도 if(kakao)의 기회를 달라!
2022. 1. 14. 오후 8:53, 유용태 (teo.yu) : 강제로 동기부여와 마감을 주입시켜드리고 여러사람들 앞에서 온라인이지만 발표할 수 있는 기회를 드리곘습니다!
2022. 1. 14. 오후 9:01, 결과보단 과정을 / React,JS : 과연 두둥…
2022. 1. 14. 오후 9:12, 숑숑 : 저 해보고 싶습니다!!
2022. 1. 14. 오후 9:12, 유용태 (teo.yu) : 이모티콘 
2022. 1. 14. 오후 9:13, 숑숑 : 관심사가 같은 다른 분들 앞에서 발표하는거 엄청 좋은 기회인 것 같아요
2022. 1. 14. 오후 9:14, 유용태 (teo.yu) : 맞아요! 그런 기회를 가지기 쉽지 않죠~ 여러분 많이 봐주세요
2022. 1. 14. 오후 9:15, 숑숑 : ㅋㅋㅋㅋ테오님께서 스터디를 하신다면 바로참여하겠습니다!
2022. 1. 14. 오후 9:46, Vintz : 오..!! 스터디한 내용을 발표하는 것인가요??
2022. 1. 14. 오후 9:46, 결과보단 과정을 / React,JS : 멋지십니다 !!
2022. 1. 14. 오후 10:09, 알모 : 지금은 용기가 안나지만 언젠간 해보고 싶네요....!!!☺☺
2022. 1. 14. 오후 10:11, 유용태 (teo.yu) : 기억하고 있겠습니다 ㅋ 감사합니다 부담을 가지지 않을 수 있게 점진적인 방법을 좀 고민해보겠습니다 :)
2022. 1. 14. 오후 10:12, 유용태 (teo.yu) : 이미 여기에 해보겠다고 말씀 하신 것만으로도 한발자국 걸어갔다고 생각합니다 +_+bbb 응원하겠습니다!!
2022. 1. 14. 오후 10:17, 알모 : 넘나 따수운 말씀...ㅠㅠㅠ
2022. 1. 14. 오후 10:17, 알모 : 이모티콘 
2022. 1. 14. 오후 10:34, 피카츄돈까스/React,RN : 오...저도 해보고싶은데..실력좀 더쌓고...
2022. 1. 14. 오후 10:35, 유용태 (teo.yu) : https://ingsta.tistory.com/m/123
2022. 1. 14. 오후 10:35, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㄱㄱ타이밍이...
2022. 1. 14. 오후 10:35, 피카츄돈까스/React,RN : 기가막히네요
2022. 1. 14. 오후 10:35, 유용태 (teo.yu) : 아ㅋㅋㅋ 노린것은 아니었습니다
2022. 1. 14. 오후 10:35, 피카츄돈까스/React,RN : 글 쓰자마자 첫번째가 지금한다 ㅋㅋ
2022. 1. 14. 오후 10:36, 유용태 (teo.yu) : 일단 스터디는 고민해볼 생각이고 스프린트 먼저 진행해보려고 합니다 자연스레 이어질수도 있을 것 같아요
2022. 1. 14. 오후 10:36, 피카츄돈까스/React,RN : 옙!
2022. 1. 14. 오후 10:42, 공공 : 스터디일 수도 발표일 수도..? 있는데, 요즘 컨퍼런스 등에서 핸즈온 세션으로 간단한 실습을 같이 해보는 방식도 있는데 집중도 더 잘 되고 좋더라구요..!
2022. 1. 14. 오후 10:45, 유용태 (teo.yu) : +_+
2022. 1. 14. 오후 10:45, 유용태 (teo.yu) : 예시나 조금 더 구체적인 내용이 있을까요?
2022. 1. 14. 오후 10:48, 공공 : 테스트에 관한 발표였는데, 기본 환경 설정이 되어 있는 저장소를 같이 공유해주시고 발표를 시작해서, 발표하는 동안 아주 간단한 테스트 케이스를 순서대로 만들어가는 식으로 진행하시는 방식이었던 것 같아요..!
2022. 1. 14. 오후 10:48, 유용태 (teo.yu) : 아! 실습할수 있는 과제를 실시간으로 진행을 하는 방식이군요
2022. 1. 14. 오후 10:49, 공공 : 네네!
2022. 1. 14. 오후 10:49, 유용태 (teo.yu) : 오! 좋네요~ 감사합니다!! rxjs 같은 것들은 해볼만할것 같아요
2022. 1. 14. 오후 10:50, 공공 : 같이 해볼 과제는 정말 작은 규모로 제한해서! 하면 괜찮더라구요 :)
2022. 1. 14. 오후 10:51, 유용태 (teo.yu) : 좋은아이디어 주셔서 감사합니다 스터디1기는 이런식으로 할 수 있는 거 하나 짜보도록 하겠습니다. svetlekit으로 github을 이용해서 내 홈페이지 만들기 이런것도 좋겠네요
2022. 1. 14. 오후 10:52, 설아아빠 : 혹시 ...
2022. 1. 14. 오후 10:52, 설아아빠 : <script context="module">
    import {base} from '$app/paths';

    export async function load({fetch}) {
        const posts = await fetch(`${base}/data/posts.json`).then(response => response.json());
        return {props: {posts}};
    }
</script>
2022. 1. 14. 오후 10:52, 설아아빠 : 요 펑션을 다른 파일로 뺄수 있나용?... ㅠ
2022. 1. 14. 오후 10:52, 설아아빠 : 엇 저두 지금 스벨트킷으로 블로그 만들구 있는뎅..ㅎㅎ
2022. 1. 14. 오후 10:52, 유용태 (teo.yu) : ts 파일을 만들어서 export func 한다다음에
2022. 1. 14. 오후 10:53, 유용태 (teo.yu) : svelte에서 import 시켜서 함수 호출 하시면 됩니다 :)
2022. 1. 14. 오후 10:53, 공공 : 오 좋네요..!
2022. 1. 14. 오후 10:53, 설아아빠 : 그런식으로 해봤는데 안되서요 ㅠ
2022. 1. 14. 오후 10:53, 유용태 (teo.yu) : load안에서 호출해야 되고
2022. 1. 14. 오후 10:53, 설아아빠 : 아아 로드 안에서!
2022. 1. 14. 오후 10:54, 유용태 (teo.yu) : load는 스벨트킷 고유 문법이라서
2022. 1. 14. 오후 10:54, 설아아빠 : 감사합니다!
2022. 1. 14. 오후 11:00, ㅋㅋ/React : 우와 발표기회는 정말 좋은 것 같아요 ㅎㅎ
2022. 1. 14. 오후 11:00, 유용태 (teo.yu) : 언제든지 기회는 열려있습니다. +_+bb
2022. 1. 14. 오후 11:00, 유용태 (teo.yu) : 여기분들이 얼마나 모일지는 모르겠지만 10명 정도는 들어주시지 않을까 ^^;;
2022. 1. 14. 오후 11:18, 유용태 (teo.yu) : 🔥 구글 스프린트 2기 시작합니다! 1/19(수) ~ 1/23(일) 5일간 진행할 예정이며 인원수가 모자라면 연기 될 수 있습니다. 신청을 원하시는 분은 아래 시트를 읽어 보시고 참가 신청 부탁드립니다. 

https://docs.google.com/spreadsheets/d/1ga5HCoAgM4x9jSFDVa3cNyFnj7S-oD0r_jciFRugqfQ/edit#gid=0
2022. 1. 14. 오후 11:19, 유용태 (teo.yu) : 톡게시판 '공지': 🔥 구글 스프린트 2기 시작합니다! 1/19(수) ~ 1/23(일) 5일간 진행할 예정이며 인원수가 모자라면 연기 될 수 있습니다. 신청을 원하시는 분은 아래 시트를 읽어 보시고 참가 신청 부탁드립니다. 

https://docs.google.com/spreadsheets/d/1ga5HCoAgM4x9jSFDVa3cNyFnj7S-oD0r_jciFRugqfQ/edit#gid=0
2022. 1. 14. 오후 11:20, 유용태 (teo.yu) : 늦은시간에 공지하게 되어 죄송합니다. 생각날때 해야 될것 같아서 또 한번 해보려고 합니다. 다음주 수요일 부터 진행해볼까 합니다. 지난 1기때에는 정석으로 월~금으로 하다보니 구현하는 시간이 부족하다고 느껴졌습니다. 사이드 프로젝트인 만큼 완성도를 생각한다면 주말을 할애해봐도 좋지 않을까 생각했습니다. 구글 스프린트가 궁금하신 분들은 https://velog.io/@teo/google-sprint-1  한번 읽어 봐 주세요 감사합니다 :)

2022년 1월 15일 토요일
2022. 1. 15. 오전 12:27, 유용태 (teo.yu) : https://velog.io/@teo/css-history-1
2022. 1. 15. 오전 12:30, 코린이 : 18번은 굉장히 신기하네요 ㅋㅋ ..
2022. 1. 15. 오전 12:31, 유용태 (teo.yu) : 근데.. 외모를 꾸미고 있을때에는 나도 모르게 더 집중상태가 되는 것은 맞는것 같아요 ㅎ
2022. 1. 15. 오전 12:32, 코린이 : 아 그런가요 ??!  그럼 담주에 머리나 하나 새로 해야겠습니다 ..ㅋㅋㅋ
2022. 1. 15. 오전 12:44, 자율 : 저 여기 이 방 처음 들어왔을 때 30명 정도였는데…지금 130명이네요?? ㅎㅎ
2022. 1. 15. 오전 12:44, 유용태 (teo.yu) : 그렇게 되버렸네요! 신기할 따름입니다 ㅎ
2022. 1. 15. 오전 12:47, 자율 : 축하드려요 ㅋㅋㅋㅋ
2022. 1. 15. 오전 12:49, 유용태 (teo.yu) : 감사합니다!
2022. 1. 15. 오전 1:15, 설아아빠 : 프론트는 만드는것보다 설정잡는게 일이군요... 모르는 상태에서 하려니까 설정 하는거 찾다 시간 다뺐기네용 ㅠ
2022. 1. 15. 오전 1:15, 유용태 (teo.yu) : 뭐든 남의 것을 가져다가 쓰는게 제일 어렵죠ㅋ 내가 배워놓은게 무쓸모인채로 삽질의 연속들. ㅋ
2022. 1. 15. 오전 1:16, Vintz : 흐아..21일에 여행가는데 너무 아쉽네요 ㅠ
2022. 1. 15. 오전 1:16, Vintz : 주말에 하는거 너무 좋은거 같아요 테오..!
2022. 1. 15. 오전 1:17, 유용태 (teo.yu) : 지금 신청자가 없는데 다음주로 예비 신청해주세요ㅋ 사람이 맞으면 곧바로 3기 해보죠(2기가 미달될수도 있고;;;) ㅋ
2022. 1. 15. 오전 1:17, Vintz : 0순위로 대기하고 있을게요!! ㅎㅎ
2022. 1. 15. 오전 1:20, 유용태 (teo.yu) : 혹시 시간이 안되신다면 1/26(수) ~ 1/30(일)도 받아 봅니다. 인원이 모이면 3기를 바로 시작하고 2기 인원이 미달이 되면 1주 미루도록 하겠습니다!
2022. 1. 15. 오전 1:24, 이엘로 : 사진
2022. 1. 15. 오전 1:24, 이엘로 : 새로 올리신 글 너무 잘 읽었는데 여기가 끊겨 있어요! 오늘 분량 역대급이라 좋네요…♡
2022. 1. 15. 오전 1:26, 유용태 (teo.yu) : 아...! ㅋㅋ 글을 다시 채워두고 다시 링크 공유 할게요. 양이 많아서 쓰다가 후반부에 좀 퍼졌습니다. ^^;
2022. 1. 15. 오전 1:26, 이엘로 : 네!! 그때 다시 또 읽을게요 ㅋㅋㅋ
2022. 1. 15. 오전 1:43, 생못미 : 너무나 알찬 글 이번에도 감사히 읽었습니다 🙏
2022. 1. 15. 오전 1:47, 유용태 (teo.yu) : 끊긴거 복구 했습니다. 알려줘서 너무 고마워요 ❤️
2022. 1. 15. 오전 8:41, 나이스하게개발하기 : 너무 훌륭한글이네요 ! 인사이트가 대단하세요 혹시 FE개발과 마크업개발이 별도로 있는 것에 대해서 어떻게 생각하세요? 

저희는 마크업게발자분이 따로 계신데 가끔은 업무에 컨텍스트스위칭이 적어 편하다고 느끼지만 가끔 마크업개발을 하지않고 로직만 집중하는게 올바른 방법일까 하는 생각이 드네요ㅜ
2022. 1. 15. 오전 8:50, 유용태 (teo.yu) : 감사합니다 :) 저희 회사의 경우에도 프론트랑 마크업이 분리가 되어 있는데 디자인기획팀이랑 백엔드팀이 분리 되어 있다보니 협업 라인을 줄이는 방향으로 일하는 팀이 있고 혼자서 다 하는 팀이 있긴 해요
2022. 1. 15. 오전 8:52, 유용태 (teo.yu) : CMS나 데브 콘솔과 같이 디자인적인 요소가 사업적으로는 크게 비중이 있지 않지만 사실상 UI작업이 엄청 많은 것들은
2022. 1. 15. 오전 8:53, 유용태 (teo.yu) : 대부분 마크업을 붙여주고 화상회의같이 UI요소와 개발요소가 좀 쫀쫀하게 붙은 것들은 같이 하는 편이고
2022. 1. 15. 오전 8:54, 유용태 (teo.yu) : 홈페이지나 이메일 화면같이 로직이 전혀 없는 것들은 마크업이 전담해주고
2022. 1. 15. 오전 8:54, 유용태 (teo.yu) : 결국은 효율을 따지는 것 같아요 UI랑 백엔드 연동은 말씀하신대로 컨텍스트 스위칭이 발생하니까요
2022. 1. 15. 오전 8:56, 나이스하게개발하기 : 답변 감사합니다 ! 말씀해주신것과 같이 어떤것을 작업하느냐에 따라서 효과적인 방법이 있겠네요
2022. 1. 15. 오전 8:57, 나이스하게개발하기 : 그럼에도 불구하고 마크업개발자가 별도로 있다고해서 css학급을 소홀히하면 안되겠죠?ㅎㅎ 마크업을 실무에서 안쓰니 점점 멀어져가는 느낌이 ;;
2022. 1. 15. 오전 9:00, 유용태 (teo.yu) : 네! 그렇죠 회사는 효율을 추구하는게 맞지만 개발자는 본인의 성장을 해야 하니까요! 하지만 CSS를 잘한다는게 꼭 마크업만은 아니라서 회사에서는 마크업 실무를 해서가 아니라 본인의 역할에서 CSS를 어떻게 더 잘 다룰수 있고 마크업과의 협업을 어떻게 하면 좀 거 편하게 할지 이런것들을 고민해보시면 좋을 것 같아요~
2022. 1. 15. 오전 9:02, 나이스하게개발하기 : 네 맞는 말씀입니다 ! 조언 감사해요ㅠㅠ
2022. 1. 15. 오전 9:54, 유용태 (teo.yu) : https://m.youtube.com/watch?v=DHjqpvDnNGE
2022. 1. 15. 오전 9:57, 홀리몰리 : 마크업과 프론트가 따로 있으면 마크업 개발자가 어디까지 개발을 해주나요..?

리액트로 따지면, 마크업분들이 jsx만 작성해주고 hooks, 상태관리, fetch작업은 프론트가 하는 식인가요.??
2022. 1. 15. 오전 9:58, Luke : 다른 곳은 모르겠지만 제가 예전에 일하던 곳은 html과 css로 마크업을 만들어주면 그걸 프론트에서 jsx 문법으로 바꿔서 컴포넌트화 하거나 하는 식으로 개발했어요
2022. 1. 15. 오전 9:59, 유용태 (teo.yu) : 회바회 팀바팀이겠지만 저희 마크업팀은 디자인 시스템을 할 수 있게 개발자들이 컴포넌트를 가져다 쓸 수 있도록 스토리북으로 배포하는데 까지의 역할로 하고 있어요
2022. 1. 15. 오전 9:59, 프린이 : 어 .. 닉네임 동일하게 설정 가능하구나
2022. 1. 15. 오전 10:00, 유용태 (teo.yu) : 마크업이 컴포넌트를 만들어주지 않고 정말 css만 하면 전문성에서 좀 떨어지다보니 일종의 쟁취(?)에 가까웠지만 지금은 서로 잘 만족하는 거 같아요
2022. 1. 15. 오전 10:01, 프린이 : 저희는 scss 까지만 작성해서 전달해주세요
2022. 1. 15. 오전 10:02, 프린이 : 마크업 작업된 뷰를 따로 호스팅해서 제공해주고
2022. 1. 15. 오전 10:02, 프린이 : 저도 마크업 작업하는 걸 좋아하는데, ROI 떄문에 안시키려는 것 같더라구요
2022. 1. 15. 오전 10:05, 유용태 (teo.yu) : 그렇긴하죠 css만 할 수 있는 인력은 조금더 저가이긴 하니까요
2022. 1. 15. 오전 10:08, 홀리몰리 : 디자인시스템까지 관리를 한다.. 그럼 css만 하는 것보가 조금 고가?의 인력이지 않나요??
2022. 1. 15. 오전 10:09, 홀리몰리 : 당근마켓이나 토스보면 프론트엔드 개발자 중 디자인 시스템만 관리하는 팀을 따로 채용하더라구요.

그럼 마크업개발자보다는 프론트개발자에 가까운게 아닐까요.??
2022. 1. 15. 오전 10:09, 홀리몰리 : https://team.daangn.com/jobs/4820547003/
2022. 1. 15. 오전 10:16, 프린이 : 고급인력이네요
2022. 1. 15. 오전 10:33, 유용태 (teo.yu) : 이제 그런 전문가 영역이 생기는 거죠. 프론트나 마크업씬이 예전에는 고급인력이 아니었으니 성장을 하기 위해서는 전문가 영역이 필요하니까요 프론트엔드 하시던 분들도 그래서 그런 영역을 마크업에서 가져오고 싶어 하기도 했고
2022. 1. 15. 오전 10:34, 유용태 (teo.yu) : 저희 팀에서도 충분한 합의와 논의가 있었던 부분이었습니다
2022. 1. 15. 오전 10:34, 유용태 (teo.yu) : 개발에서 넘어오신분들도 계시지만 퍼블리싱을 전문으로 하시던 분들도 있었거든요
2022. 1. 15. 오전 11:08, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 15. 오전 11:12, 유용태 (teo.yu) : https://www.30secondsofcode.org/css/p/1?from=chips
2022. 1. 15. 오후 12:04, 유용태 (teo.yu) : https://parceljs.org/blog/parcel-css/
2022. 1. 15. 오후 2:57, 유용태 (teo.yu) : https://stateofjs.com/
2022. 1. 15. 오후 2:57, 유용태 (teo.yu) : stateofjs 2021 설문조사가 시작되었습니다! +_+bb 올해는 어떤 트렌드가 있었는지 본인은 새로운 JS 생태계를 얼마나 아는지 한번 체크해보세요! 강추 강추

2022년 1월 16일 일요일
2022. 1. 16. 오전 12:00, 유용태 (teo.yu) : 톡게시판 '투표 종료': 이벤트를 한번 해볼까 합니다. 다같이 온라인으로 모여 1시간 정도 할 수 있는 것들로 생각합니다. 자유롭게 의견 주세요!
2022. 1. 16. 오전 9:30, 결과보단 과정을 / React,JS : 질문이 한가지 있는데요. 기존 커리어가 FW였고 10년 정도는데 지금은 커리어를 바꿔서 프론트 일한지 대략 3년차예요. 프론트로 이직 하려고 하면 지원하려는 회사에선 어떤 대우를 받게 되나 궁금해요? 실력에 따라 다르긴 하겠지만 어떻게 대우 하는지 회사 정책이 어떤지 궁금해서 질문해봐요.
2022. 1. 16. 오전 9:51, 프린이 : FW가 뭔가요?
2022. 1. 16. 오전 9:57, 썰~~ : Fe가 뭔지 모르겠지만 회바회일거같아요
2022. 1. 16. 오전 9:57, 썰~~ : fw
2022. 1. 16. 오전 9:57, 썰~~ : 가 뭔지 모르겠어요
2022. 1. 16. 오전 10:02, 피카츄돈까스/React,RN : 펌웨어아닐까요
2022. 1. 16. 오전 10:05, 프린이 : 펌웨어 같네요
2022. 1. 16. 오전 10:13, 결과보단 과정을 / React,JS : 네. 맞아요. 펌웨어예요
2022. 1. 16. 오전 10:14, 결과보단 과정을 / React,JS : 프론트 일이 재밌더라구요. 그래서 쭉 이일을 하고 싶은데 나이가 많아서 이직이 가능할지 잘 모르겠어서요
2022. 1. 16. 오전 10:17, 결과보단 과정을 / React,JS : 지금 회사는 제조업인데 프론트 일을 혼자 하다보니 배움이 부족해서 여러 사람이랑 같이 일하고 싶은데 나이가 걸려서 가능할지 몰라서 물어보게되었어요
2022. 1. 16. 오전 10:17, 결과보단 과정을 / React,JS : 경력도 글코
2022. 1. 16. 오전 10:46, 유용태 (teo.yu) : 요새는 잘 하는 개발자가 귀하고 나이는 따지지 않는편인데 그 전 커리어를 인정 받기는 힘들지 않을까 싶어서 걱정이네요
2022. 1. 16. 오전 10:47, 유용태 (teo.yu) : 펌웨어 하시던 분들이 Rust는 잘 하신다고 들었는데
2022. 1. 16. 오전 10:48, 유용태 (teo.yu) : wasm쪽과 연관시켜서 커리어로 연결시켜서 강점으로 내세워 볼수 있을까요?
2022. 1. 16. 오전 10:48, 유용태 (teo.yu) : AI나 3d등을 웹프론트에 접목시키는 쪽은 많이 귀하기도 하구요
2022. 1. 16. 오전 10:49, 유용태 (teo.yu) : 단순 3년차 중니어급과 같은 프론트엔드 기술 스택 경쟁을 하기에는 좀 불리하실것 같아요
2022. 1. 16. 오전 11:01, 프린이 : 근데, 로우레벨 언어 다루시다가 js, ts 익히시는 속도는 엄청 빠르실 것 같은데요
2022. 1. 16. 오전 11:02, 프린이 : 일정 궤도만 넘으시면 오히려 기존 커리어에서 쌓으신 지식들이 큰 자산이 되실 것 같아 부럽습니다.  프론트엔드 로드맵 시 끝판왕이라 불리는 웹 어셈블리를 학습하시는 데도 러닝커브가 높지 않으실거구요.
2022. 1. 16. 오전 11:04, 피카츄돈까스/React,RN : 오...그렇네요 웹어셈
2022. 1. 16. 오전 11:04, 유용태 (teo.yu) : 저도 그렇게 생각합니다~ 이직을 하실때는 그걸 증명 할 수 있는 방법이 필요해서
2022. 1. 16. 오전 11:04, 프린이 : 성능 개선의 경험은 어느 회사의 면접관에게나 관심있는 부분이니 wasm을 이용해 성능 개선한 경험을 말씀하시면 좋은 인상을 줄 수 있지 않을까 하네요
2022. 1. 16. 오전 11:04, 피카츄돈까스/React,RN : 어마어마한 강점이 되겠네요
2022. 1. 16. 오전 11:05, 유용태 (teo.yu) : 그런 차별화 요소를 갖추셔야 되지 않을까 싶어서 말씀드려봤어요
2022. 1. 16. 오전 11:05, 피카츄돈까스/React,RN : FW는 메모리관리가 기본이니까 웹에 접목만 잘 된다면..
2022. 1. 16. 오전 11:05, 피카츄돈까스/React,RN : 역시 참 안목도 좋으시네욤
2022. 1. 16. 오전 11:05, 피카츄돈까스/React,RN : 프린이님도 진짜 ...
2022. 1. 16. 오전 11:05, 피카츄돈까스/React,RN : 고수의 향기가
2022. 1. 16. 오전 11:05, 프린이 : 아유 저는 별거 아닙니다
2022. 1. 16. 오전 11:05, 피카츄돈까스/React,RN : 저는 약간 번아웃 와서 살짜쿵 쉬고있어서 ㅋㅋㅋ내일부턴 다시 힘내서 일 해야겠네요
2022. 1. 16. 오전 11:06, 유용태 (teo.yu) : 화이팅입니다!!
2022. 1. 16. 오전 11:06, 피카츄돈까스/React,RN : 옙!!
2022. 1. 16. 오전 11:06, 프린이 : 화이팅화이팅
2022. 1. 16. 오전 11:06, 피카츄돈까스/React,RN : 저번주는 완전 능률 1도안나고 일이손에 안랍비더라구요 ㅋㅋ
2022. 1. 16. 오전 11:06, 피카츄돈까스/React,RN : 안잡히 ㅋㅋㅋ
2022. 1. 16. 오전 11:07, 유용태 (teo.yu) : 하기싫어병은 무섭죠 ㅋㅋ
2022. 1. 16. 오전 11:07, 피카츄돈까스/React,RN : 힝...ㅋㅋㅋ무섭네요 전 안올거라고 생각했는데
2022. 1. 16. 오전 11:08, 프린이 : 저는 여가시간 이용해 공부하려니 집중이 잘 안되더라구요 ㅋㅋ
2022. 1. 16. 오전 11:08, 프린이 : 몬가 시각적으로 같이 공부하는 사람이 있다는 느낌을 줄 수 있는 플랫폼이 있으면 좋겠네요
2022. 1. 16. 오전 11:09, 피카츄돈까스/React,RN : 저는 '해야돼' 속에서 계속 저를 밀어붙이다보니 2달만에 방전된거같아요 ㅋㅋ
2022. 1. 16. 오전 11:09, 피카츄돈까스/React,RN : 오홍..
2022. 1. 16. 오전 11:09, 유용태 (teo.yu) : 요새 z세대들의 캠 공유 온라인 독서실 같은 거 말씀하시는 군요 ㅋㅋ
2022. 1. 16. 오전 11:09, 피카츄돈까스/React,RN : VR공부 ㅋㅋㅋ
2022. 1. 16. 오전 11:09, 프린이 : ㅋㅋㅋㅋ
2022. 1. 16. 오전 11:10, 프린이 : 피카츄님은 요즘 어떤 주제를 학습하시나요
2022. 1. 16. 오전 11:10, 결과보단 과정을 / React,JS : 와…. 감사합니다..
2022. 1. 16. 오전 11:10, 유용태 (teo.yu) : 개발자들이 방송을 하면 과연 진짜로 볼까 싶기도 해요 ㅋㅋ
2022. 1. 16. 오전 11:10, 결과보단 과정을 / React,JS : 이렇게 구체적으로 조언 받아본적이없어서…뭔가 좀 기분이 뭉클하네요
2022. 1. 16. 오전 11:10, 결과보단 과정을 / React,JS : 맨날 혼자서 고민만 했었는데…
2022. 1. 16. 오전 11:10, 피카츄돈까스/React,RN : 저는 요즘 프론트 아키텍쳐 관련해서 공부를 좀 했어요
2022. 1. 16. 오전 11:11, 피카츄돈까스/React,RN : 회사 앱 리빌딩하면서 제대로 배보고 싶어서요
2022. 1. 16. 오전 11:11, 유용태 (teo.yu) : 언제든 물어보세요 집단지성의 힘이란게 있디 않겠습니까? ㅎㅎ
2022. 1. 16. 오전 11:11, 결과보단 과정을 / React,JS : 그렇지 않아도 제가 하는 일이 3d ridar 데이터를 이용해서 웹으로 표현하는 일을 하는데
2022. 1. 16. 오전 11:11, 결과보단 과정을 / React,JS : 어떻게 딱 알고서 말씀하셨는지…
2022. 1. 16. 오전 11:11, Hardy : 벨로퍼트님 방송은 시청자가 좀 있더라고요 ㅋㅋㅋ
2022. 1. 16. 오전 11:11, 피카츄돈까스/React,RN : 오......
2022. 1. 16. 오전 11:11, 유용태 (teo.yu) : 와! 메타버스!
2022. 1. 16. 오전 11:12, 프린이 : webgl!
2022. 1. 16. 오전 11:12, 유용태 (teo.yu) : 금세 핫해지시겠ㄴ는데요?
2022. 1. 16. 오전 11:12, 결과보단 과정을 / React,JS : 네. 그쪽 일 해요
2022. 1. 16. 오전 11:12, 피카츄돈까스/React,RN : 이거 저 아는 회사에서도 이런 인재를 구하는거같던데
2022. 1. 16. 오전 11:12, 유용태 (teo.yu) : 괜한 오지랍이였군요 ㅋㅋ
2022. 1. 16. 오전 11:12, 유용태 (teo.yu) : 이미 귀하긴 몸이신데요??
2022. 1. 16. 오전 11:12, 피카츄돈까스/React,RN : ㅋㅋㅋㅋ
2022. 1. 16. 오전 11:12, 결과보단 과정을 / React,JS : 헐… 그런가요 ;;
2022. 1. 16. 오전 11:12, Hardy : 오우
2022. 1. 16. 오전 11:12, 유용태 (teo.yu) : TO가 적어서 그렇치
2022. 1. 16. 오전 11:13, 결과보단 과정을 / React,JS : 아 힘이 납니다 ㅎㅎㅎ
2022. 1. 16. 오전 11:13, 유용태 (teo.yu) : 필요로하는 미래 프론트인재시긴 합니다
2022. 1. 16. 오전 11:13, 결과보단 과정을 / React,JS : 감사합니다. 여러분들.
2022. 1. 16. 오전 11:14, 프린이 : 저도 메타버스에 관심이 많아요! 앞으로 많이 공유해주세요
2022. 1. 16. 오전 11:15, 유용태 (teo.yu) : 저도요!
2022. 1. 16. 오전 11:15, 유용태 (teo.yu) : 발표 한번 해주세요+_+
2022. 1. 16. 오전 11:15, 프린이 : >0<
2022. 1. 16. 오전 11:18, 결과보단 과정을 / React,JS : 이런… 제가 발표 할 실력이 될지 모르겠지만 해보고 싶다는 마음은 드네요. 너무 감사드립니다 ㅎㅎㅎ
2022. 1. 16. 오전 11:20, 유용태 (teo.yu) : 면접용 포폴이나 발표 경험을 만드신다고 생각하시고 저희는 새로운 분야에 대한 간접 경험을 하고 윈윈이지 않을까 싶어요 ㅋㅋ 언제든 준비되면 알려주세요 사람 모아 보겠습니다 :)
2022. 1. 16. 오전 11:21, 유용태 (teo.yu) : 카톡은 채널 기능이 없군요 ㅠㅠ
2022. 1. 16. 오전 11:22, 유용태 (teo.yu) : 사람들이 많아지니 뭔가 주제별로 좀 더 나눠서 얘기 할수 있으면 좋겠다 싶네요
2022. 1. 16. 오전 11:24, 이엘로 : 저는 디스코드 좋더라고요!!
2022. 1. 16. 오전 11:25, 파이버 : 슬랙이나 디스코드가 딱이죠..!
2022. 1. 16. 오전 11:25, 피카츄돈까스/React,RN : 저도 디코 만들었는데 ㅜ 생각보다 카톡을 벗어나니 힘을 많이 잃더라구요 ㅜ
2022. 1. 16. 오전 11:26, 결과보단 과정을 / React,JS : 지금 진행 중인 프로젝트가 터치디텍트라고 사람이 손을 뻗으면 어디에 터치 되는지를 감지 하는데 이를 웹으로 표현하고 셋팅하는걸 하고 있는데 이게 마무리 데면 한번 준비해보겠습니다.
2022. 1. 16. 오전 11:26, 유용태 (teo.yu) : 그렇군요
2022. 1. 16. 오전 11:26, 피카츄돈까스/React,RN : 디코를 만든이유가 정보를 기록하고자 하는 마음이 커서 만든건데...
2022. 1. 16. 오전 11:26, 피카츄돈까스/React,RN : 에휴 ㅜ ㅜ
2022. 1. 16. 오전 11:26, 피카츄돈까스/React,RN : 저조차도 잘 안쓰게 되네요 ㅎㅎ
2022. 1. 16. 오전 11:26, 꼬북 : 테오의 프론트엔드 슬랙 개설...
2022. 1. 16. 오전 11:26, 피카츄돈까스/React,RN : 슬랙은 기록이 날아가버려서
2022. 1. 16. 오전 11:27, 꼬북 : 두둥탁
2022. 1. 16. 오전 11:27, 피카츄돈까스/React,RN : 유료버전아니면
2022. 1. 16. 오전 11:27, 피카츄돈까스/React,RN : 아 그리고 디스코드에 리액트 커뮤니티 큰게 있어서 react flux라고
2022. 1. 16. 오전 11:27, 유용태 (teo.yu) : 개발자들은 디코를 많이 쓰고 있길래
2022. 1. 16. 오전 11:27, 피카츄돈까스/React,RN : 겸사겸사 들어가있긴 합니담
2022. 1. 16. 오전 11:27, 피카츄돈까스/React,RN : 저도 그럴줄 ㅜ ㅜ
2022. 1. 16. 오전 11:28, 프린이 : reactiflux
2022. 1. 16. 오전 11:28, 프린이 : 근데 디코 너무 글이 빨리 쌓여서
2022. 1. 16. 오전 11:28, 유용태 (teo.yu) : 디코도 생각을 좀 해보고 있었는데 아직은 시기상조이겠네요
2022. 1. 16. 오전 11:28, 프린이 : 개인적으로 참가자가 많을 수록 팔로업하기가 어렵더라구요
2022. 1. 16. 오전 11:28, 유용태 (teo.yu) : 저희는 아직 괜찮죠?
2022. 1. 16. 오전 11:29, 프린이 : 디코는 게시판이 나뉘어져있어서 그런 것 같아요
2022. 1. 16. 오전 11:29, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 16. 오전 11:32, 피카츄돈까스/React,RN : 앗...ㅋㅋㅋ
2022. 1. 16. 오전 11:32, 피카츄돈까스/React,RN : 이모티콘 제방도...힝 말하시는분말 말씀하시궁...
2022. 1. 16. 오전 11:33, 피카츄돈까스/React,RN : 삭제된 메시지입니다. 
2022. 1. 16. 오전 11:40, 유용태 (teo.yu) : 장작을 피우는 건 제가 조금 더 고민해볼게요 :) 

지금처럼 언제든 궁금한 내용이나 고민상담 좋은 링크 공유 공부한거 자랑하기 이런식의 공간이었으면 좋겠어요~
2022. 1. 16. 오전 11:46, 유용태 (teo.yu) : 너무 감사합니다 +_+
2022. 1. 16. 오후 12:19, 결과보단 과정을 / React,JS : 무엇을 해야 할지 구체적인 방향을 찾은것 같아서 저 또한 너무 감사드립니다. 저처럼 혼자 일하는 프론트 개발자들이 많을텐데 이런 커뮤니티가 많이 활성화 되서 알려지고 서로 서로 도움 주고 받고 할 수 있다면 더 재밌게 일을 할 수 있을꺼 같아요. 프린이님이랑 테오님 피돈님 조언이 정말 큰 힘이 되었습니다. 다시 한번 감사드립니다.
2022. 1. 16. 오후 12:20, 유용태 (teo.yu) : 이모티콘 
2022. 1. 16. 오후 12:44, 프린이 : 이모티콘 
2022. 1. 16. 오후 3:10, 시간없음 : 태오님 블로그 글 항상 잘 보고 있습니다. 글을 술술 잘 읽히네요
2022. 1. 16. 오후 3:10, 유용태 (teo.yu) : 감사합니다 :)
2022. 1. 16. 오후 3:10, 시간없음 : Flex와 Grid를 언제 사용하면 좋은가? 각 레이아웃의 특징으로 알아보는 실전 레이아웃 <— 요 포스트는 언제 올라오나요? (압박아님) ㅋㅋㅋㅋㅋㅋ
2022. 1. 16. 오후 3:13, 유용태 (teo.yu) : 함수형 프로그래밍에서도 SOLID가 맞는 말일까? 와 CSS position 과 에니메이션을 쓰고 나면... 일까요? ㅎㅎ
2022. 1. 16. 오후 3:14, 유용태 (teo.yu) : 농담이고 grid는 아직 실전에 쓰일만한 것들이 많이 발견되지 않아서
2022. 1. 16. 오후 3:14, 개발닥 : 블라보셨군요
2022. 1. 16. 오후 3:14, 시간없음 : 오… 이것들도 기대되네요 ㅎㅎ
2022. 1. 16. 오후 3:14, 개발닥 : 저도 solid 관련되서 포스팅 할려구요
2022. 1. 16. 오후 3:14, 유용태 (teo.yu) : grid가 많이 보이면 한번에 풀려고 조금씩 자료 수집 중입니다 ㅠ 그리드 시스템이 grid-aria말고는 아직 유용한게 없는데
2022. 1. 16. 오후 3:15, 개발닥 : 사람들이 solid는 class에만 적용된다고 오해하는 것 같아요
2022. 1. 16. 오후 3:15, 유용태 (teo.yu) : 없다고 하면 안될꺼 같아서 아니면 1부 정도만 먼저 올리면 될것 같긴 하네요~ 저도 아직은 잘 안쓰는데 예시를 올리기가 좀 그랬엉요 ㅎ
2022. 1. 16. 오후 3:16, 유용태 (teo.yu) : 기대하겠습니다 ㅎ 공유해주세요!!
2022. 1. 16. 오후 3:18, 유용태 (teo.yu) : 말이나와서 말인데 혹시 grid를 실전에서 쓰고 계신분 있으신가요? 조언을 구합니다!!
2022. 1. 16. 오후 3:24, 프린이 : 제 경우 아직 IE에서 그리드를 완전히 지원하지 않기 때문에 적용을 중단하고 flex로 갔던 경험이 있네요
2022. 1. 16. 오후 3:25, 유용태 (teo.yu) : 그러게요 내년은 되어야 IE가 완전 퇴출이 되겠죠 ㅠㅠ
2022. 1. 16. 오후 3:26, 프린이 : 브라우저가 하나로 통합되었으면 좋겠어요 ㅋㅋ
2022. 1. 16. 오후 3:26, 유용태 (teo.yu) : 그래서 IE가 탄생한거라 ㅋㅋ
2022. 1. 16. 오후 3:27, 프린이 : 아 진짜요 ? ㅋㅋ
2022. 1. 16. 오후 3:27, 유용태 (teo.yu) : 경쟁자는 있어야 될텐데 크롬 점유율이 IE처럼 될것 같긴 하네요
2022. 1. 16. 오후 3:27, 유용태 (teo.yu) : 아... 이유때문이 아니라
2022. 1. 16. 오후 3:28, 유용태 (teo.yu) : 독점적인 위치에 있다 보니까 IE가 말썽이 된거죠 앞뒤가 바뀐 말이었습니다
2022. 1. 16. 오후 3:30, 유용태 (teo.yu) : 그래도 크롬 좋죠
2022. 1. 16. 오후 3:33, 프린이 : 개발 운영환경을 가상화 기술을 이용해서 개발 환경과 프로덕트 환경을 통일하는 것처럼 브라우저도 하나로 통합했으면 좋겠네요. 크로스 브라우징 이슈 너무 싫습니다.
2022. 1. 16. 오후 3:33, 프린이 : 브라우저 가상화 같은 아이디어는 없나
2022. 1. 16. 오후 3:36, 개발닥 : 가상화를 해도
2022. 1. 16. 오후 3:36, 개발닥 : 모든 유저가 받아들여야 해서.. 차라리 IE 쓰시는 분들 컴퓨터 부셔버리고 새로 맞춰주는게 빠를것 같아요 ㅋㅋ
2022. 1. 16. 오후 3:36, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 16. 오후 3:36, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 16. 오후 3:39, 유용태 (teo.yu) : IE하시는 분들은 크로스브라우징 이제 엣지로 리다이렉트 되니까 안 하자고 논의가 안되나요?
2022. 1. 16. 오후 3:39, 유용태 (teo.yu) : 하기사 저희도 말 엄청 많긴 했었는데
2022. 1. 16. 오후 3:40, 유용태 (teo.yu) : 10%나 되는 핵심 사용층이 있다며!!
2022. 1. 16. 오후 3:41, 프린이 : IE 왜 쓰는지 모르겠는 1인입니다
2022. 1. 16. 오후 3:42, 유용태 (teo.yu) : 그러게요
2022. 1. 16. 오후 3:42, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋ핵심 사용층 아 진짜...ㅜ ㅜ
2022. 1. 16. 오후 3:43, 피카츄돈까스/React,RN : 클린아키텍쳐 다시 맘잡구읽어보는데 와닿는말들이 많네요 역시..
2022. 1. 16. 오후 3:44, 프린이 : 클린 뭐시기 책들은 읽는데 속도가 너무 안나네요
2022. 1. 16. 오후 3:44, 스타트업개발자 : 궁금한게있습니다!
기존에 회사에서 앱내의 웹뷰를 개발하고있는데,
하나의 repo로 되어져있다보니 개발한 페이지 말고 다른 페이지까지 빌드되서 올라가는 상황이었습니다.
이러한 상황에서 각 페이지별 빌드하고 s3로 올리는 환경을 구축하려고해서  monorepo 를 도입하고 여기다가 webpack module federation 로 url로 연결하는 걸 도입하려고 하는데 괜찮은지 궁금합니다. 
참고중인 글은 
https://michalzalecki.com/micro-frontends-module-federation-monorepo/
입니다.
2022. 1. 16. 오후 3:45, 개발닥 : 저도 진짜 이해 안됐었는데
2022. 1. 16. 오후 3:45, 피카츄돈까스/React,RN : 고민 많이 하고 경험으로 익혀보고 다시 읽으니까 조금 와닿네요...이거 알려준 동료는 6번 정독으로 감을 잡았다고...ㄷㄷ
2022. 1. 16. 오후 3:46, 개발닥 : 친구쪽 회사 논리가 돈 많이 들고있는 분들이 나이가 드신분들이 있고, 나이 드신 분들은 IE 쓰기 때문에 유지한다고 하더라구여..
2022. 1. 16. 오후 3:46, 피카츄돈까스/React,RN : 삼성인터넷도...
2022. 1. 16. 오후 3:47, 프린이 : 실리콘 벨리 회사들은 IE 신경쓰는지 궁금하네요
2022. 1. 16. 오후 3:47, 개발닥 : 그건 진짜 궁금하네요 ㅎㅎ
2022. 1. 16. 오후 3:47, 개발닥 : 우리만 고통받는 것인지.. 전 세계적으로 고통받는 것인지..
2022. 1. 16. 오후 3:48, 프린이 : 아니 IE 사용률이 삼성 인터넷 브라우저보다 낮아요
2022. 1. 16. 오후 3:49, 프린이 : 저 10% 가 아마 우리나라에서만 10% 일 것 같은데
2022. 1. 16. 오후 3:49, 프린이 : global stats로 보면 0.46%에요 ㅋㅋ
2022. 1. 16. 오후 3:50, 피카츄돈까스/React,RN : 윈도우에 내장되어 있던것과 activex 의 영향이 많지않았을까 합니답..
2022. 1. 16. 오후 3:51, 유용태 (teo.yu) : 어떤게 괜찮은지 궁금하신건가요 monorepo인가요 아니면 webpack 방법말인거요?
2022. 1. 16. 오후 3:52, 스타트업개발자 : 한번에 도입하는것이 맞는지 궁금합니다. 어떻게 보면 페이지별 빌드 환경 구축이 주된 목적인데 맞는것인지…
2022. 1. 16. 오후 3:53, 유용태 (teo.yu) : 원론적으로 말씀드리면 돌리기 힘든 결정은 점진적으로 하나씩 가는게 맞죠
2022. 1. 16. 오후 4:01, 스타트업개발자 : 음,,, 왜 써야되는지 좀 더 생각해보면서 더 찾아봐야겠네요 ㅋㅋ
2022. 1. 16. 오후 4:05, 유용태 (teo.yu) : 취지와 상황에 대해서는 충분히 공감이가고 필요한 상황이라고 샹각합니다
2022. 1. 16. 오후 4:06, 스타트업개발자 : 네네!! 감사합니다!!
2022. 1. 16. 오후 4:16, 프린이 : 테오님 근무하시는 팀에서는 e2e 테스트를 어떻게 운영하고 계신가요?
2022. 1. 16. 오후 4:17, 유용태 (teo.yu) : 프로젝트 마다 달라요 제가 아는 팀은 platwrigt쓰고 있고
2022. 1. 16. 오후 4:17, 유용태 (teo.yu) : 저는 아직입니다
2022. 1. 16. 오후 5:14, 피카츄돈까스/React,RN : 사진
2022. 1. 16. 오후 5:15, 피카츄돈까스/React,RN : 요기요!!
2022. 1. 16. 오후 5:46, 화가난다 화가나 그래서 난 화가임 : 여러분은 특정 웹사이트가 고퀄로 느껴질 때가 언제이신가요?
2022. 1. 16. 오후 5:48, 프린이 : 애니메이션이 부드럽고 이쁘게 나올때..?
2022. 1. 16. 오후 5:52, 프린이 : 반응형이 구현되어있을때요
2022. 1. 16. 오후 5:52, 프린이 : 애플 제품 설명 사이트보면
2022. 1. 16. 오후 5:52, 프린이 : 볼때마다 이쁘네여
2022. 1. 16. 오후 5:52, 프린이 : 폰트도 그렇고
2022. 1. 16. 오후 5:53, 유용태 (teo.yu) : 저도요 과한거 말고 마이크로 인터렉션이 깔끔하게 들어갔을때요
2022. 1. 16. 오후 5:55, 유용태 (teo.yu) : 그리고 정렬이 반듯하고 글자 가독성이 좋을때요
2022. 1. 16. 오후 5:55, 유용태 (teo.yu) : 좋은 이미지는 너무 당연한거지만 이미지 퀄리티가 사실 제일 큰 것 같아요
2022. 1. 16. 오후 5:56, 엄지척 제이지 : 로딩이 빠를때 ? ㅎㅎ
2022. 1. 16. 오후 5:56, 유용태 (teo.yu) : 오오!
2022. 1. 16. 오후 6:01, 스타트업개발자 : 기술적으로는 로딩!
디자인적으로는 가독성 + 반응형!
2022. 1. 16. 오후 6:02, 화가난다 화가나 그래서 난 화가임 : 공감합니다!
2022. 1. 16. 오후 6:06, 설아아빠 : 혹시 크롬 읽기모드나 엣지 몰입형리더 활성화 조건이 뭔지 아시는분 계세용? ㅠ
2022. 1. 16. 오후 7:57, 유용태 (teo.yu) : 그게 뭔지 모르겠어요 ㅠ
2022. 1. 16. 오후 8:03, 유용태 (teo.yu) : 사진
2022. 1. 16. 오후 8:04, 유용태 (teo.yu) : 투표하신 12분!! 어디계신가요? 함께 하시죠 ㅋㅋ 다음 주 스프린트 이벤트 공지 끌올 해봅니다 :) 공지 확인 고고!
2022. 1. 16. 오후 8:19, 유용태 (teo.yu) : https://m.youtube.com/watch?v=2KBHvaAWJOA
2022. 1. 16. 오후 8:23, 유용태 (teo.yu) : vue3

https://m.youtube.com/watch?v=2KBHvaAWJOA

에반유가 vue3를 설명해주는 세션입니다

vite가 주력이 되고 vitepress라는 ssg를 추가하려나 보네요

debug 툴이 강화 되고 pinia하는 vuex의 다음 버전인 상태관리도 제공을 한다고 합니다 기대되네요

svetle와 같이 $컨벤션을 이용해서 ref를 단순화 하는 기능 도 추가 되네요
2022. 1. 16. 오후 8:36, 해달 : 혹시 flexbox로 아이템 구현할때 [a,b,c,d] 이렇게 row로 정렬하면 
a 뒤에 d 배치할 수 있는 방법은 없을까요..!
2022. 1. 16. 오후 8:36, 유용태 (teo.yu) : order요!
2022. 1. 16. 오후 8:48, 프론트 : https://github.com/vbenjs/vue-vben-admin
2022. 1. 16. 오후 8:49, 프론트 : vue3 +typescript 로 소스분석하기 좋은 템플릿 입니다 ㅎㅎ;;저 소스보고 도움 많이 되었어요
2022. 1. 16. 오후 8:55, 해달 : order 한번 찾아보겠습니다! 감사합니답
2022. 1. 16. 오후 8:58, 유용태 (teo.yu) : 좋은 자료 감사합니다
2022. 1. 16. 오후 9:34, 이엘로 : 저저 ㅋㅋㅋㅋㅋ 할거예요 신청서를 쓸 짬이 안나네요...
최대한 빨리 써보겠습니다
2022. 1. 16. 오후 9:37, j : 저 내일 출근해서 확인하고 쓸게요!!제가 아직 개발 역량이 적어서ㅠㅠ
2022. 1. 16. 오후 9:46, 유용태 (teo.yu) : 아! 제가 맘이 급했군요! 됐습니다 인원은 확정이니 미루지는 않겠습니다 신청서는 천천히 써주세요
2022. 1. 16. 오후 9:48, 유용태 (teo.yu) : 이모티콘 일정을 조정해야 하나 싶어서^^;; 괜히 맘 졸였네요 휴~ 천천히 수요일까지만 작성해주세요! 일정대로 출발할게요! 다음주에 봐요 :)
2022. 1. 16. 오후 9:58, Vintz : 삭제된 메시지입니다. 
2022. 1. 16. 오후 9:59, Vintz : 구글 스프린트 엄청 재밌어요!! 홧팅입니다 ㅎㅎㅎ 저는 한번 쉬고 다음에 참여하겠습니다 😆
2022. 1. 16. 오후 10:04, 프론트준비생 : https://zero-base.co.kr/category_dev_camp/JS_challenge?utm_source=facebook&utm_medium=paid&utm_campaign=JS_challenge_conv_all_dr&utm_content=set3_ad5&fbclid=IwAR3DQU96ZtFlt7W0o8xRBH6V1OVEh3xkHIvbLSbPvcnPxvY9gZa5ZoT6uUw 혹시이강의들어보신분?
2022. 1. 16. 오후 10:07, 부끄러운 어피치 : 패캠은 개인적으로 다 손절
2022. 1. 16. 오후 10:08, 프론트준비생 : 혹시들어보셨나요?
2022. 1. 16. 오후 11:41, Matthew : https://youtu.be/EMOlLLTAZMs
2022. 1. 16. 오후 11:41, Matthew : picture, datalist 같은 태그들은 정말 처음봐서 공유드려요~
2022. 1. 16. 오후 11:42, 유용태 (teo.yu) : 감사합니다 :)
2022. 1. 16. 오후 11:43, 프론트맨 : 감사합니다~!

2022년 1월 17일 월요일
2022. 1. 17. 오전 12:19: Deveeni님이 들어왔습니다.
2022. 1. 17. 오전 12:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 17. 오전 7:11, 욱신 / 리액트 : 정말 완전 참석하고 싶은데 이 주는 야간근무네여! ㅠㅠ 다음번에 꼭 참석하겠습니다!!
2022. 1. 17. 오전 8:03, 유용태 (teo.yu) : 감사합니다 :) 3기는 더 재밌고 많은 사람들이 해볼수 있도록 2기를 잘 진행해볼게요
2022. 1. 17. 오전 8:04, 유용태 (teo.yu) : 안녕하세요 deveen님! 반갑습니다 :)
2022. 1. 17. 오전 8:33, Deveeni : 안녕하세요! 프론트엔드 개발자 deveeni입니다
2022. 1. 17. 오전 8:41, 유용태 (teo.yu) : 어서오세요 데비니님~ :) ㅎ
2022. 1. 17. 오전 8:42, 유용태 (teo.yu) : 여기는 개발 얘기 하고 싶거나 궁금한게 생겼을때 다른 개발자들은 어떻게 하고 있는지 좋은 읽을거리가 생겨서 공부 하고 싶을때 본인이 만든거 자랑하고 싶을때
2022. 1. 17. 오전 8:42, 유용태 (teo.yu) : 언제든지 편하게 글 남기고 공유하는 공간입니다. :) 편하게 언제든지 글 남겨 주세요 ㅋ
2022. 1. 17. 오전 8:52, Deveeni : 네~반갑습니다!
2022. 1. 17. 오전 8:53, 유용태 (teo.yu) : 어떻게 오시게 되었나요? +_+
2022. 1. 17. 오전 8:56, Deveeni : 스프린트 참석하신 분의 글을 읽다가 테오님 velog로 타고 넘어오게 되었습니다~
2022. 1. 17. 오전 8:56, 유용태 (teo.yu) : 오! 그러시군요 ㅎㅎ
2022. 1. 17. 오전 8:58, 유용태 (teo.yu) : 와~ 벌써 예비 3기 신청을 하셨군요 ^^;; 감사합니다. 일정은 fix는 아니고 인원수가 모자라면 연기될 수도 있어서 항상 공지를 드릴게요 ㅎ
2022. 1. 17. 오전 8:59, 콘솔 : npm init vite 해봤는데 preact + typescript 조합이 정말 쉽네요.. ㄷ ㄷ 앞으로 cra 아예 안쓸듯…..ㅎㅎㅎㅎ
2022. 1. 17. 오전 9:00, 유용태 (teo.yu) : 맞아요 개발환경도 좋은데 빌드 속도도 훨씬 더 빨라서 내가 꼭 써야 하는 webpack 플러그인이 없다면 꼭 추천합니다.
2022. 1. 17. 오전 9:00, 유용태 (teo.yu) : 올해 statofjs 설문에는 vite가 한자리를 차지했더라구요. 올해 설문 결과 기대합니다. ㅎ
2022. 1. 17. 오전 9:00, 유용태 (teo.yu) : 당당하게 주류가자!
2022. 1. 17. 오전 9:02, 유용태 (teo.yu) : https://stateofjs.com/
2022. 1. 17. 오전 9:02, 유용태 (teo.yu) : 혹시 설문안해보신분 있다면 한번 해보시는거 추천드립니다. 프로트엔드 트렌트 파악에 엄청 도움이 됩니다!
2022. 1. 17. 오전 9:46, 콘솔 : 와..진짜 모르는것 많네여 ㅠㅠ
2022. 1. 17. 오전 9:46, 콘솔 : 사진
2022. 1. 17. 오전 9:48, 유용태 (teo.yu) : 다 알 필요는 없어요~ 백엔드 프레임워크나 프론트엔드 프레임워크, 테스팅 라이브러리 같은 것들은 선택사항이 하나만 알고 계셔도 무방하기도 하구요. ㅎ 이런게 있구나를 알게 되신것 만으로 충분히 의미가 있다고 생각합니다!!
2022. 1. 17. 오전 9:59, 프린이 : Solid가 있는게 신기하네요
2022. 1. 17. 오전 9:59, 프린이 : 성능이 좋아서 그런가
2022. 1. 17. 오전 10:02, 유용태 (teo.yu) : 저도 좀 놀랬습니다 ㅋ 아무래도 그런것 같아요 svetle가 좋긴하지만 tsx의 장점이란게 있어서 합칠수 있지 않을까 해서 살펴보던게 solid였는데 확실히 성능으로는 차별화 할 수 있을 것 같더라구요
2022. 1. 17. 오전 10:03, 유용태 (teo.yu) : 근데 virtualDOM을 안쓰려면 템플릿 문법은 필수불가결하고 이 부분은 jsx하고는 안 어울려서 아직까지 제 평가는 애매라인입니다
2022. 1. 17. 오전 10:15, 프린이 : 스벨트도 virtualDOM을 안쓰지 않나요?
2022. 1. 17. 오전 10:15, 유용태 (teo.yu) : 맞아요
2022. 1. 17. 오전 10:15: 모모님이 들어왔습니다.
2022. 1. 17. 오전 10:15, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 17. 오전 10:16, 유용태 (teo.yu) : 안녕하세요 모모님 반갑습니다 :)
2022. 1. 17. 오전 10:16: 모모님이 나갔습니다.
2022. 1. 17. 오전 10:17, 프린이 : 스벨트 말고 lit이 뜨길 바랬는데
2022. 1. 17. 오전 10:17, 프린이 : 리치해리스가 vercel로 가버려서 ㅋㅋ
2022. 1. 17. 오전 10:18, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 17. 오전 10:18, 프린이 : 업계 상황 보다가 svelte로 건너가려고요
2022. 1. 17. 오전 10:18, 유용태 (teo.yu) : lit polymer 때부터 지켜봤었는데 웹 컴포넌트가 못 뜨는게 아쉽더라구요
2022. 1. 17. 오전 10:18, 유용태 (teo.yu) : 어서오세요 svelte로!
2022. 1. 17. 오전 10:18, 프린이 : 지난 회사에서 디자인 시스템 제작하면서
2022. 1. 17. 오전 10:18, 프린이 : 공수가 진짜 많이 드는구나 싶은데
2022. 1. 17. 오전 10:19, 프린이 : 만들다가 드는 생각이
2022. 1. 17. 오전 10:19, 프린이 : 근데 이거 계속 사용하려면 리엑트 밖에 못쓰는거 아닌가
2022. 1. 17. 오전 10:19, 프린이 : 이런 생각이 들더라고요.
2022. 1. 17. 오전 10:19, 프린이 : 웹 컴포넌트로 만드는걸 고려해야 하는거 아닌가 의견을 냈는데 반려당했어요 ㅋㅋ
2022. 1. 17. 오전 10:22, 피카츄돈까스/React,RN : 오오 웹컴포넌트 방금찾아봤는데
2022. 1. 17. 오전 10:23, 피카츄돈까스/React,RN : 디자인 시스템 만드는 공수보다 두배정도는 공수가 더 들긴 하겠네요..간단한 아이들이라면 괜찮겠지만
2022. 1. 17. 오전 10:23, 피카츄돈까스/React,RN : Js를 진짜 잘해야겠네요
2022. 1. 17. 오전 10:24, 프린이 : 두배나 들까요? ㅋㅋ
2022. 1. 17. 오전 10:24, 프린이 : 마이크로 프론트엔드를 도입하게 되면 프레임워크의 선택지가 다양화 될 수 있으니까 저는 가치가 있다고 생각했어요
2022. 1. 17. 오전 10:24, 피카츄돈까스/React,RN : 아아 아닌가요...한번도 안만들어보고 바닐라가 넘 익숙치않아서 제기준...히히..
2022. 1. 17. 오전 10:25, 피카츄돈까스/React,RN : 분명 가치는 있어요!! 해보고싶구요
2022. 1. 17. 오전 10:25, 피카츄돈까스/React,RN : 저희 회사 인력이 턱없이 모자란 상태라 ㅎㅎ
2022. 1. 17. 오전 10:25, 썰~~ : 그걸 도입할때까지의 비용이
2022. 1. 17. 오전 10:25, 피카츄돈까스/React,RN : 눈물
2022. 1. 17. 오전 10:25, 썰~~ : 그걸로 만들어낼 수익을 앞설수있나는
2022. 1. 17. 오전 10:25, 썰~~ : 좀 의문이 들긴해요
2022. 1. 17. 오전 10:25, 피카츄돈까스/React,RN : 회사가 크다면 저는 해볼만 하다 생각해욤
2022. 1. 17. 오전 10:25, 썰~~ : 이건 인정입니다
2022. 1. 17. 오전 10:25, 프린이 : 디자인 시스템 같은 경우는 개발팀 뿐만 아니라 디자인 팀 리소스도 많이 드니깐요
2022. 1. 17. 오전 10:26, 피카츄돈까스/React,RN : 사실 프론트가 어떻게 흘러갈지모르는 요 시대에 걸맞는 대처라고 생각이드네요
2022. 1. 17. 오전 10:26, 유용태 (teo.yu) : svelte로 만들면 web-component로 컴파일 할수 있어요
2022. 1. 17. 오전 10:26, 피카츄돈까스/React,RN : 어제 클린아키텍쳐 봤는데 거기도 프레임워크에대한 의존도를 가지는건 굉장히 위험하다고 하긴 하더라구요
2022. 1. 17. 오전 10:26, 프린이 : 컴포넌트가 한 두개도 아니고 검수할때 드는 시간도 만만치 않을텐데 한번 만들 떄 이식성 좋은걸 만드는게 낫지 않나 싶은 개인적인 생각입니다
2022. 1. 17. 오전 10:26, 피카츄돈까스/React,RN : 오 저도 이런방식없나 궁금했어요
2022. 1. 17. 오전 10:26, 피카츄돈까스/React,RN : 맞습니다 요 생각에 저도 동의합니담
2022. 1. 17. 오전 10:27, 프린이 : svelte가 쉐도우 돔을 사용하나요
2022. 1. 17. 오전 10:27, 피카츄돈까스/React,RN : 처음 고생이 나중의 고생을 줄여줄수있다면
2022. 1. 17. 오전 10:27, 피카츄돈까스/React,RN : 시간을 좀 들이는게 낫다!
2022. 1. 17. 오전 10:27, 피카츄돈까스/React,RN : 역시있군뇨
2022. 1. 17. 오전 10:27, 프린이 : 지난 추석연휴때 몇일 공부해서 sapper 앱 만들다가 엄청 고생한 기억이 있어요 ㅋㅋ
2022. 1. 17. 오전 10:28, 유용태 (teo.yu) : sapper는 x를 눌러 조의를 표하셔야 합니다. ㅋㅋ
2022. 1. 17. 오전 10:28, 유용태 (teo.yu) : 미국 갔어요
2022. 1. 17. 오전 10:28, 피카츄돈까스/React,RN : https://www.npmjs.com/package/react-to-webcomponent
2022. 1. 17. 오전 10:28, 유용태 (teo.yu) : sveltekit이 표준이에요
2022. 1. 17. 오전 10:28, 피카츄돈까스/React,RN : 요런게 있긴하네요
2022. 1. 17. 오전 10:28, 피카츄돈까스/React,RN : 방금 검색해봤긴해서 잘되나는 모르겠고 작년이 라스트커밋...
2022. 1. 17. 오전 10:48, 나이스하게개발하기 : 혹시 (시니어) FE개발자를 위한 좋은 면접질문이 있을까요? 면접관이 처음이라 막연하네요 ㅎㅎ 의견주시면 감사히 활용하겠습니다 ㅠ
2022. 1. 17. 오전 10:50, 유용태 (teo.yu) : 여기와서 프로젝트를 맡게 되면 어떤 기술 스택으로 세팅하고 싶나요? (텀을 두고...) 어떤 팀 구성이길 바라나요? (...탐을 두고) 그 이유가 뭘까요?
2022. 1. 17. 오전 10:52, 나이스하게개발하기 : 기술스택을 자유롭게 설정해보도록 요구하는건 그 사람의 생각을 천천히 들어볼 수 있는 좋은 질문 같네요 ㅎㅎ
2022. 1. 17. 오전 10:52, 나이스하게개발하기 : 팀 구성은 어떤 의미일까요?
2022. 1. 17. 오전 10:53, 유용태 (teo.yu) : 몇명이서 작업을 하는 걸 선호하는지
2022. 1. 17. 오전 10:53, 유용태 (teo.yu) : 어떻게 협업을 하는걸 선호하는지
2022. 1. 17. 오전 10:54, 유용태 (teo.yu) : 리딩을 선호하는지 팔로업을 선호한느지
2022. 1. 17. 오전 10:57, j : 와,,저거 물어보면..
2022. 1. 17. 오전 10:57, 나이스하게개발하기 : 팀에 맞는 사람인지 파악하는 꼭 필요한 질문이겠네요 ㅎㅎ ! 의견감사합니다.
2022. 1. 17. 오전 10:57, j : 대답 못할거가튼데..
2022. 1. 17. 오전 10:57, 나이스하게개발하기 : 그래서 더 솔직한 대답이 나올것 같아요 ㅎㅎ
2022. 1. 17. 오전 10:57, j : 이번주 면접인데..
2022. 1. 17. 오전 10:58, j : 일단 저 질문 준비해봐야겠네요
2022. 1. 17. 오전 10:59, 나이스하게개발하기 : 대답을 잘하면 네오님이라 생각하겠습니다 ..
2022. 1. 17. 오전 11:04, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 17. 오전 11:06, 유용태 (teo.yu) : 우리회사의 성장과 개인의 성장을 연관시켜보는 질문 (질문의 모양은 프로젝트 물어보면서 물어보는거라서... 딱 전형적인게 생각이 안 나네요)
2022. 1. 17. 오전 11:06, 썰~~ : 혹시 신입 프론트엔드 질문에 실행컨텍스트 물어보면 너무 딥하게 물어보는건가요???
2022. 1. 17. 오전 11:07, 썰~~ : 두명정도 물어봤는데 두명다 읽어본적없이 들어온거 같아서 ㅠㅠ
2022. 1. 17. 오전 11:07, 유용태 (teo.yu) : 대답을 못해도 상관없다 어떤식으로 대응하지를 보겠다는 생각이라면 어려운 걸 물어봐도 상관업다고 생각해요
2022. 1. 17. 오전 11:08, Hardy : ec 정도는 물어볼법하다 생각하는데...
2022. 1. 17. 오전 11:11, j : 저랑 같은 날 아니시죠..?
2022. 1. 17. 오전 11:11, j : 전 물어봤어요..js 동작시 메모리 영역에선 무슨일이 일어날까요?
2022. 1. 17. 오전 11:11, j : 이것도 물어봤습니다
2022. 1. 17. 오전 11:12, 나이스하게개발하기 : 아마 용어자체를 모르는 경우도 있을까하여 힌트를 조금 주셔서 대답이 나올 수 있는지 유도하는 것도 방법일 것 같습니다.
2022. 1. 17. 오전 11:12, 김동현 : 클로저랑 컨텍스트 말하는건가여?
2022. 1. 17. 오전 11:15, j : 클로저와 실행 컨텍스트는 다른 개념으로 알고 있습니다.
2022. 1. 17. 오전 11:15, j : 컨택스트가 contextAPI를 말씀하시는거라면 두위 질문과는 다른 답변인거 같구요..
2022. 1. 17. 오전 11:16, 김동현 : lexical scoping 이 hoisting , closer 등이랑 연결되는 개념이니깐요
2022. 1. 17. 오전 11:18, 스타트업개발자 : css 관련 궁금한게 있는데 웹뷰 페이지를 개발중인데 기존에는 px로 설정(폰트, 여백 등등) 그래서 이번에 rem으로 수정을 하려고하는데 html단에 기본적으로 10px 로 설정하면 계산하기가 쉬울텐데 왜 그렇게 설정하고 계산하는 블로그 글들이 없는 것인지,,,
2022. 1. 17. 오전 11:19, 김동현 : 일단 저는 신입 면접때 물어보지 않았습니다. 한 9군데 정도 돌아다녔는데 물어본곳 없었던것 같아요.
2022. 1. 17. 오전 11:20, 썰~~ : 하디.. 맞죠…. 저도 그렇게 생각하고.. 읽어보고오기만 하고 간단히 대답만해도 오케이인데
2022. 1. 17. 오전 11:21, 썰~~ : 제가 면접봤던 두분은 아예 모른다는 식으로 이야기되어성 ㅠ ㅠ
2022. 1. 17. 오전 11:21, 썰~~ : 저도 이렇기 때문에 물어본거였는데
2022. 1. 17. 오전 11:21, Hardy : 실행 컨텍스트를 모르고 클로저 호이스팅을 안다고 말하는건 모순이 아닐까요...
2022. 1. 17. 오전 11:21, j : 연결되는 개념이지만 실행컨텍스트 개념에서 scope 까지 결합하여 나가는 개념으로 저는 보고있어서요ㅠㅠ
2022. 1. 17. 오전 11:21, 썰~~ : 다음번엔 물어보는건 지양해보려고요
2022. 1. 17. 오전 11:22, 썰~~ : 뭐 부분부분 먼저 알수도 있긴하니까요
2022. 1. 17. 오전 11:22, 김동현 : 음 왜 물어보셨던건가요?
2022. 1. 17. 오전 11:22, 김동현 : 실행컨텍스트를 활용해서 작업을 하시고 계신건가요 아니면 얼마나 공부했는지를 보고싶은건가요
2022. 1. 17. 오전 11:22, 썰~~ : 간단하게나마 자바스크립트 동작원리를 알고 쓰는건가?
2022. 1. 17. 오전 11:22, 썰~~ : + 공부 하고있나?
2022. 1. 17. 오전 11:22, j : 그럼 그냥 동작원리에 알고 있으신가요?
2022. 1. 17. 오전 11:22, 썰~~ : 이런느낌을 위해서 물어보긴 했습니다
2022. 1. 17. 오전 11:22, j : 정도로 끝내도 될거같아요
2022. 1. 17. 오전 11:22, 썰~~ : 넵!!
2022. 1. 17. 오전 11:22, j : 실행컨텍스트라고 하면 못알아들으시는 분들 있어서
2022. 1. 17. 오전 11:22, 김동현 : javascript 가 one thread 라는거 모르는 신입이 80%넘는다는거에 제가 한표를 겁니다.
2022. 1. 17. 오전 11:23, 썰~~ : 그런가요
2022. 1. 17. 오전 11:23, j : 222222
2022. 1. 17. 오전 11:23, 김동현 : 대부분 작업위주로 공부하실거에요
2022. 1. 17. 오전 11:23, 썰~~ : 보니까 활용법위주로 하신분들이 많긴하더라고요
2022. 1. 17. 오전 11:23, j : 저는 그래서 js가 싱글쓰레드로 돌아가는데 멀티쓰레드와 싱글쓰레드 설명 부탁드려요
2022. 1. 17. 오전 11:23, j : 이런식으로 질문 나아갔을때도 있어요
2022. 1. 17. 오전 11:24, 김동현 : 일단 회의하고 돌아와서 제 의견 좀더 이야기하겠습니다 ㅋㅋㅋ
2022. 1. 17. 오전 11:24, 썰~~ : 흠 신입분들에게는 좀 고차원적인 질문이 될거같아서
2022. 1. 17. 오전 11:24, 썰~~ : ㅠㅠ 다들 귀한 의견 감사합니다
2022. 1. 17. 오전 11:24, j : 원시타입 참조타입이 메모리에서 어떻게 다르게 동작하나요
2022. 1. 17. 오전 11:24, 썰~~ : 또 면접이 잡혔는데 걱정이라서요
2022. 1. 17. 오전 11:24, j : 이것도 모르는 사람들 꽤 있더라구요
2022. 1. 17. 오전 11:26, 김동현 : 오… 이건 저 신입때 진짜로 몰랐는데..
2022. 1. 17. 오전 11:26, j : 저는 보고 들어갔어서..
2022. 1. 17. 오전 11:27, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 17. 오전 11:28, 유용태 (teo.yu) : 없지는 않지만 실질적으로 rem의 실전효용가치가 없어서가 아닐까 생각합니다 rem의 이득이 비해 불편한 리스크가 더 크다 랄까요?
2022. 1. 17. 오전 11:29, 유용태 (teo.yu) : 최근에 가장 관심이 두고 있는 것은 무엇인가요?
2022. 1. 17. 오전 11:29, 유용태 (teo.yu) : 이런 질문도 좋아합니다
2022. 1. 17. 오전 11:30, 스타트업개발자 : px 보다 rem의 이득에 비해 불편한 리스크가 먼지 궁금합니다
2022. 1. 17. 오전 11:36: 정도님이 나갔습니다.
2022. 1. 17. 오후 12:01, 유용태 (teo.yu) : 계산이 귀찮고 IE에서 정확히 안동작하는 것도 있고
2022. 1. 17. 오후 12:02, 유용태 (teo.yu) : 워딩이 과했다 싶네요~ 그냥 굳이...? 이정도 느낌인것 강아요
2022. 1. 17. 오후 12:02, 유용태 (teo.yu) : 같아요
2022. 1. 17. 오후 12:03, Vintz : 저는 개인적으로 10px로 계산해서 사용하면 영향을 받는 모든 요소에 rem을 적용해야돼서 불편하더라구요. 그렇지 않으면 폰트 사이즈가 10px로 보이니까요..!
2022. 1. 17. 오후 12:09, 프린이 : 저 이거 모르는데 어떻게 동작하나요?
2022. 1. 17. 오후 12:17, 파이버 : 저도 궁금합니다! 그냥 원시타입은 값이고 참조타입은 주소값이고 그얘기인가요?
2022. 1. 17. 오후 12:21, 프린이 : 나만 모르는 것 같지는 않은데 ㅋㅋ
2022. 1. 17. 오후 12:22, 프린이 : 좋은 참고 자료가 있으면 링크 올려주심 감사할 것 같습니다 ㅎㅎ
2022. 1. 17. 오후 12:23, 프린이 : 삭제된 메시지입니다. 
2022. 1. 17. 오후 12:25, 유지남 : 저는 면접 질문에 대한 정확한 답을 해야하는 경우도 있지만, 보통은 그 질문을 대하는 자세를 조금 더 관찰합니다.

모르는 것 같은데 아는척을 하는지,
알긴아는데 주요 관심사랑은 달랐는지등을 봅니다.

결론적으로는 문제해결 능력을 지녔는지를 중점적으로..
2022. 1. 17. 오후 12:25, 프린이 : https://poiemaweb.com/js-object
4. Pass-by-reference
부분부터 읽어보시면 될 것 같습니다!
2022. 1. 17. 오후 12:29, 프린이 : 감사합니다.  동명이인끼리 상부상조하니까 좋군요!
2022. 1. 17. 오후 12:34, 파이버 : https://blog.bitsrc.io/memory-leaks-in-nodejs-54ac7bbd4173 이 글 초반부에 잘 나와있는 거 같네요
2022. 1. 17. 오후 12:35, 프린이 : 좋은 자료 감사합니다~!
2022. 1. 17. 오후 12:36, 파이버 : 원시타입이 콜스택에 들어가는 건 처음 알았네요.. 갈길이 멀군요 🥲
2022. 1. 17. 오후 12:37, TriplexLab : 저 혹시 타입스트립트에서 oop 공부하는 중인데
interface라는것이 생소해서요
2022. 1. 17. 오후 12:37, TriplexLab : interface라는것이 무슨 개념이에요?
2022. 1. 17. 오후 12:38, 설아아빠 : 연결고리라고 생각하면 편할거같아요
2022. 1. 17. 오후 12:39, 설아아빠 : 할수있는 행위를 만들어놓고 여러가지로 확장할수있게 정의해 두는거져
2022. 1. 17. 오후 12:40, 실무뿌론트 : api로 받은 response를 interface로 정의해서 타입을 쓰기도해요
2022. 1. 17. 오후 12:40, TriplexLab : 아 그렇쿤요ㅎ 보니깐 인터페이스 안에 여러 함수를 호출하고
class에서 정의를 하는 것 같네요
2022. 1. 17. 오후 12:42, 설아아빠 : 네 혼자 작업할땐 큰 프로젝트 아닌이상 별 필요성을 못느끼는데 만들면서 다른사람이 내가만든 코드를 라이브러리로 쓸거라고 생각하면서 만들어보시면 필요성이 좀 쉽게 이해될수 있어여
2022. 1. 17. 오후 12:42, TriplexLab : 오호 그렇쿤요ㅎ
2022. 1. 17. 오후 12:43, TriplexLab : ES6로만 API를 만들어 봤는데
2022. 1. 17. 오후 12:43, TriplexLab : 타입스크립트를 공부 시작해보니 신기한게 많네요
2022. 1. 17. 오후 12:44, TriplexLab : 감사합니다~ㅎ
2022. 1. 17. 오후 12:45, TriplexLab : 근데 궁금한게 있는데 실무에서도 프론트가 이런 API를 직접 구현해야 할 일이 있나요??
2022. 1. 17. 오후 12:46, 알파카 : 음 회사마다 다르지 않을까여 저희는 백앤드 api 클라우드에 띄워놓은거 정의서 받아서 구현하는 방식을 쓰고 있습니다.
2022. 1. 17. 오후 12:46, TriplexLab : 아하~ㅋㅎ
2022. 1. 17. 오후 12:47, TriplexLab : 그렇쿤요
2022. 1. 17. 오후 12:47, 알파카 : 근데 또 딴회사는 어떨지 잘 몰르겠네여
2022. 1. 17. 오후 12:48, 실무뿌론트 : api를 직접 구현한다기보단 graphQL을 써서 원하는 데이터만 가져오는걸 선호해요 저는
2022. 1. 17. 오후 12:49, TriplexLab : 아 그렇네요ㅎㅎ
2022. 1. 17. 오후 12:49, TriplexLab : FE에서 원하는 데이터 가져와서 가공하는 연습을 많이 했었던 기억이 나네요ㅋㅋㅋ
2022. 1. 17. 오후 12:50, 실무뿌론트 : 네넵 ㅎㅎ
2022. 1. 17. 오후 12:51, TriplexLab : 아 백엔드에서 이런식으로 API를 만드는 구나를 최근에 타입스크립트로 공부하면서 알게 되어서 
순간 FE개발자 역할을 해깔렸던것 같네요ㅎㅎㅠㅠ
2022. 1. 17. 오후 12:52, j : 엇 늦었네요..점심시간이라 확인 안했더니 ㅠㅠ
2022. 1. 17. 오후 12:59, 스타트업개발자 : 그러면 궁금한게… 하나의 브라우저로 rem 작업을 해두고 나머지는 각 브라우져 기본 폰트사이즈로 보이게 한다고 생각하면 될까요?
2022. 1. 17. 오후 1:26, j : 보통 변수를 선언한다 하면 메모리 공간을 할당하고, 할당된 주소값을 변수명을 통해 접근합니다.
원시타입의 경우엔 바로 stack에 저장되어 그 메모리 값으로 변수 접근이 되고, 참조타입의 경우는 heap에 저장이 되어 heap의 주소가 stack에 저장된 다음 그 stack의 주소로 변수가 접근을 하게 되는것이죠.
여기서 원시타입은 stack의 메모리 재할당을 통해 값을 변경하고, 참조타입은 stack에 저장된 heap의 주소값을 통해 heap에 저장된 값을 변경합니다. 
라고 저는 정리해두고 있습니다.
2022. 1. 17. 오후 1:27, j : 여기서 변수 선언 할당의 개념까지 같이 공부해서 let, const 까지 접근하면 변수 관리가 잘 되지 않을까요?
2022. 1. 17. 오후 1:29, j : 아무래도 함수형 프로그래밍은 불변성을 중요시 하니까 데이터 원본의 훼손을 줄이기 위해서라도 저 개념은 한번은 집고 넘어가야 한다 생각해서 전 면접볼때 작게 나마 물어보는 편이에요.
2022. 1. 17. 오후 1:31, Vintz : 음..제가 웹뷰 작업은 안해봐서 질문에 대해 이해를 잘 못했어요 스타트업 개발자님. 브라우저마다 기본 폰트사이즈가 달라서 하시는 얘긴가요? 보통은 16px로 알고있는데..

하나의 브라우저로 rem 작업을 한다는 게 무슨 말씀이신지 모르겠어용
2022. 1. 17. 오후 2:03, 홀리몰리 : px을 쓰지 않는 이유
- 고정값이여서 유저가 브라우저 기본 폰트값을 변경해도 바뀌지 않는다.
- 크롬의 경우, 기본 폰트값을 설정->모양->글꼴맞춤설정에서 변경 가능

제가 예상하는 rem 10px를 쓰지 않는 이유
- html에 10px로 하면 하위에 있는 font-size는 상대값으로 되면서 계산하기 편리하지만, html 10px이 고정값이여서 유저가 기본 폰트값을 바꾸는 문제는 여전히 해결하지 못한다

굳이 rem을 써야하나?
- 유저가 기본 폰트값을 설정->모양->글꼴맞춤설정에 가서 폰트 바꾸는 일이 거의 없음..
- 브라우저 확대/축소 (ctrl +/-)는 px로도 대응 가능
2022. 1. 17. 오후 2:08: 초롱초롱 네오님이 들어왔습니다.
2022. 1. 17. 오후 2:08, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 17. 오후 2:08, 리린이 : 홀리몰리님 의견에 덧붙이자면.. 기본폰트를 62.5%로 설정하면 됩니다 ㅎ
2022. 1. 17. 오후 2:09, 스타트업개발자 : html {
 font-size: 62.5%
}
2022. 1. 17. 오후 2:09, 스타트업개발자 : 이렇게 말인가요!?
2022. 1. 17. 오후 2:10, 리린이 : 네 ㅎ
2022. 1. 17. 오후 2:11, 스타트업개발자 : 찾아보고 공부 좀 해보겠습니다!! 두분다 너무 감사합니다!
2022. 1. 17. 오후 2:12, Vintz : https://brunch.co.kr/@clay1987/170
2022. 1. 17. 오후 2:12, Vintz : 이거 참고하시면 좋을 것 같아요!
2022. 1. 17. 오후 2:13, 스타트업개발자 : 네네!! 감사합니다 ㅠㅠ
2022. 1. 17. 오후 2:20, 개발닥 : 피쿠셀
2022. 1. 17. 오후 2:34, 리린이 : 테오님을 비롯한 선배님들은 spa 프로젝트 설계를 어떻게 하시나요? 저도 오늘 오전에 나왔던 분들처럼 회사에서 혼자 개발하다보니 이런 사소한것들은 어떻게들 하시는지 궁금하네요.
2022. 1. 17. 오후 2:35, 리린이 : 현재는 .. 부모 컴포넌트에서 (index.jsx) 뭐 예를들어 회원목록 컴포넌트가 있으면 부모컴포넌트에서 서버 통신하여 응답값을 회원목록 컴포넌트로 props전달해주는 식으로 하고있는데 다른분들은 어떻게 하시는지 궁금합니다.
2022. 1. 17. 오후 2:36, 리린이 : 코드로 예시를 들자면.. index.jsx파일은

const [회원데이터, 셋회원데이터] = useState

const 서버통신 = 셋회원데이터(서버통신.응답값)

<>
	<회원목록 컴포넌트  회원데이터={회원데이터{/>
</>
이런식이 되겠네요..
2022. 1. 17. 오후 2:36, j : auth같은 전역적인 상태관리는 context 사용해서 provider로 주입하고, 각각의 페이지에서 필요한 데이터들은 페이지에서 데이터 fetch해서 상태관리 하는 식으로 구성했어요
2022. 1. 17. 오후 2:38, j : 각 컴포넌트 별로 필요한 데이터는 component 그려줄때 fetch 한다 이런 느낌..
2022. 1. 17. 오후 2:44, 파이버 : 디자인 패턴 크게 신경 안 쓰고 그때그때 필요한 위치 적절하게 찾아서 fetch 하고 있습니다
2022. 1. 17. 오후 2:45, 리린이 : 그렇군요 꼭 부모 컴포넌트에서 fetch 해야한다는 건 아니네요 그게 깔끔한 것 같아서 작성하긴 했는데 props 가 점점 많아지니까 이게 좀 모양새가 거시기해져서..ㅋㅋㅋ
2022. 1. 17. 오후 2:47, 파이버 : + "적절하게"라는 말이 너무 애매한 거 같아서 추가하자면 렌더 최적화랑 데이터 fetch 최적화를 1순위로 고려해서 구현하고 있는 거 같아요!
2022. 1. 17. 오후 3:49, 유용태 (teo.yu) : 확인이 늦었네요. 저는 전역 상태관리 방식으로 하고 있어요. 화면과 비지니스 로직을 확실히 분리하는게 좋더라구요. props drill 문제도 유쾌한게 아니라서
2022. 1. 17. 오후 3:50, 유용태 (teo.yu) : props는 id와 같이 조회를 하기 위한 최소한의 값만 받을 수 있도록 하고 싶고 dispatch와 data subscribe를 분리하는 형태로 만드려고 하고 있어요.
2022. 1. 17. 오후 3:56, 리린이 : 답변 감사드립니다. ㅎ 저도 일단은 Props를 줄이려고 Id같은 api call에 필요한 정보만 넘기도록 하고있었는데 다행이네요
2022. 1. 17. 오후 3:56, 유용태 (teo.yu) : react로 굳이 표현하자면
2022. 1. 17. 오후 3:57, 유용태 (teo.yu) : const export  MyComponent = (props) => {

	const [xxx, isLoadingXXX] = useXXX(props.p1)
	const [yyy, isLoadingYYY] = useYYY(props.p2, props.p3)
	
	const 저장하기 = (value:XXX) => dispatch(["저장하기", value])
	const 수정하기 = (value:YYY) => dispatch(["수정하기", value])

	return <>
		<div>{xxx}</div>
		<div>{yyy}</div>
		<button onClick={() => 저장하기(xxx2)}>저장하기</button>
		<button onClick={() => 수정하기(yyy2)}>수정하기</button>
	</>
}
2022. 1. 17. 오후 3:57, 유용태 (teo.yu) : 이런 모양새의 코드랄까요?
2022. 1. 17. 오후 3:58, 리린이 : 아 ㅎㅎ 감사합니다 코드로 쉽게 보여주셔서 한번에 이해되네요
2022. 1. 17. 오후 3:58, 리린이 : 테오님 매일 답변해주시느라 힘드실듯 ㅎ
2022. 1. 17. 오후 3:59, 유용태 (teo.yu) : 아니에요 제 행복입니다. ㅋㅋ 뭐가(?) 된 것 같은 기분이랄까요?
2022. 1. 17. 오후 4:05, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:06, 화가난다 화가나 그래서 난 화가임 : sort함수 에서용! 매개변수로 (a,b)를 받는 함수를 삽입했을 때용! if(a.value > value){return 1;}
2022. 1. 17. 오후 4:06, 화가난다 화가나 그래서 난 화가임 : 이런 부분이 앞의 원소와 뒤의 원소의 값을 비교하여서, 정렬하는 방식인 거 같은데용!
2022. 1. 17. 오후 4:07, 화가난다 화가나 그래서 난 화가임 : 근데, 결국 이항을 하면 if( a.value - b.value > 0 ){ return 1}
2022. 1. 17. 오후 4:07, 화가난다 화가나 그래서 난 화가임 : 이렇게 되는데,
2022. 1. 17. 오후 4:08, 화가난다 화가나 그래서 난 화가임 : (1). if( a.value - b.value > 0 ) 이 부분과
2022. 1. 17. 오후 4:08, 화가난다 화가나 그래서 난 화가임 : (2). {return 1}
2022. 1. 17. 오후 4:08, 화가난다 화가나 그래서 난 화가임 : 이 부분을 어떻게 해석해야 저 sort 함수가 잘 이해할 수 있을까용? ㅠㅠ
2022. 1. 17. 오후 4:08, 화가난다 화가나 그래서 난 화가임 : 문자열을 sort 하는 부분의 MDN을 읽어봤는데 이해가 안돼요..
2022. 1. 17. 오후 4:09, 화가난다 화가나 그래서 난 화가임 : if( a - b ){ return 1} 이런 방식으로 사용하면은 안되는 건가용?
2022. 1. 17. 오후 4:10, 프린이 : 리턴 1,-1일때 어떻게 위치가 바뀌는지 확인해보시는게 어떤가요?
2022. 1. 17. 오후 4:10, 화가난다 화가나 그래서 난 화가임 : 저거 반대로 했을 때는 , 오름차순과 내림차순으로
2022. 1. 17. 오후 4:10, 프린이 : 그 후 본인이 원하는 정렬 로직을 알맞게 넣으면 되지 않을까요?
2022. 1. 17. 오후 4:10, 화가난다 화가나 그래서 난 화가임 : 바뀌는 걸 확인했는데욥!
2022. 1. 17. 오후 4:11, 화가난다 화가나 그래서 난 화가임 : 저 로직이 이해가 안돼요! 뭔가 암기하는 느낌이 들어서용 ㅠㅠ
2022. 1. 17. 오후 4:11, j : 비교하고 싶으신게 각 배열 원소의 value 값 아닌가여?
2022. 1. 17. 오후 4:11, 화가난다 화가나 그래서 난 화가임 : 사실 문자열도 비교하고 싶지만, 일단은
2022. 1. 17. 오후 4:12, 화가난다 화가나 그래서 난 화가임 : 저 부분 value 값 비교도 이해가 안됩니다
2022. 1. 17. 오후 4:12, j : 문자열의 경우는 유니코드값으로 값을 정렬할 텐데
2022. 1. 17. 오후 4:12, 화가난다 화가나 그래서 난 화가임 : 이제껏 sort는
2022. 1. 17. 오후 4:12, 화가난다 화가나 그래서 난 화가임 : sort((a,b) => a-b) 만 사용하다가
2022. 1. 17. 오후 4:12, 유용태 (teo.yu) : 원래 보통 return a - b 이렇게 쓰고 음수면 내림 차순
2022. 1. 17. 오후 4:12, 화가난다 화가나 그래서 난 화가임 : 비교등호가 생기니까 멘붕이옵니다!
2022. 1. 17. 오후 4:12, 유용태 (teo.yu) : 양수면 오름 차순
2022. 1. 17. 오후 4:12, 유용태 (teo.yu) : 반대였나? 암튼
2022. 1. 17. 오후 4:13, j : a-b 일 경우에 정수 값이 나타나는 건데
2022. 1. 17. 오후 4:13, 유용태 (teo.yu) : 문자열은
2022. 1. 17. 오후 4:13, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:14, 유용태 (teo.yu) : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare
2022. 1. 17. 오후 4:14, j : 보통 T/F를 1/0 으로 나타내잖아요
2022. 1. 17. 오후 4:14, j : 그걸 (a, b) =>  a-b로 나타낸거죠
2022. 1. 17. 오후 4:14, 화가난다 화가나 그래서 난 화가임 : 이거 안 써도 비교할 수 있지 않나요?
2022. 1. 17. 오후 4:14, 콘솔 : ㅎㅎㅎㅎㅎㅎ이말너무 재밌네요 🤣 뭐가 된 것 같은 기분(?)ㅋㅋㅋㅋㅋ
2022. 1. 17. 오후 4:14, j : 0이면 false로 받아들이니까
2022. 1. 17. 오후 4:15, 유용태 (teo.yu) : 문자열 비교는 이 함수 쓰시면 될거에요
2022. 1. 17. 오후 4:15, 화가난다 화가나 그래서 난 화가임 : 그 함수를 보긴 했는데욥
2022. 1. 17. 오후 4:15, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:15, 화가난다 화가나 그래서 난 화가임 : 이렇게도 해결이 가능한 거 아닌가 싶어서용
2022. 1. 17. 오후 4:16, 화가난다 화가나 그래서 난 화가임 : 참고로 코테 공부중이였습니다1
2022. 1. 17. 오후 4:16, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:16, 유용태 (teo.yu) : 맞아요. 원하는 정렬이 있으면 그렇게 하시면 되죠
2022. 1. 17. 오후 4:16, j : 가능하죠
2022. 1. 17. 오후 4:17, 화가난다 화가나 그래서 난 화가임 : 숫자열 정렬할 때는 sort((a,b) => a-b)를 공식처럼 이용하듯이
2022. 1. 17. 오후 4:17, 화가난다 화가나 그래서 난 화가임 : 문자열 정렬할 때는
2022. 1. 17. 오후 4:17, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:17, 화가난다 화가나 그래서 난 화가임 : 이거를 공식처럼 이용하는 건가요?
2022. 1. 17. 오후 4:19, 유용태 (teo.yu) : (a,b) => a.localeCompare(b)
2022. 1. 17. 오후 4:19, 유용태 (teo.yu) : (a,b) => -a.localeCompare(b)
2022. 1. 17. 오후 4:19, 유용태 (teo.yu) : 이렇게 하셔도 되고
2022. 1. 17. 오후 4:20, 유용태 (teo.yu) : 아스키순서랑 영어한글 특수기호 순서가 미묘하게 달라서
2022. 1. 17. 오후 4:20, 유용태 (teo.yu) : 상황보고 필요한것을 쓰시면 될거겡요
2022. 1. 17. 오후 4:20, j : sort가 a-b가 
1) 양수면 b가 a 앞으로
2) 0이면 변경 X
3) 음수면 a가 b 앞으로
2022. 1. 17. 오후 4:20, 화가난다 화가나 그래서 난 화가임 : 용태님이 설명하신 방법이 좋아요를 많이 받은 풀이이긴 해욥 ㅋㅋㅋ
2022. 1. 17. 오후 4:20, j : 이거 부터 알고계셔야 할거 같네요
2022. 1. 17. 오후 4:21, j : 그래야 저 공식이 왜 문자형에서 저렇게 쓰이고 정수형에서 그렇게 쓰이는지
2022. 1. 17. 오후 4:21, j : 두개가 결국 같은 식을 나타내는거에요
2022. 1. 17. 오후 4:21, 화가난다 화가나 그래서 난 화가임 : 근데 비교등호가 있을 때는 어떻게 받아들여야 해용?
2022. 1. 17. 오후 4:21, 화가난다 화가나 그래서 난 화가임 : 예를 들어서, if(a<b) return -1 이용
2022. 1. 17. 오후 4:22, 화가난다 화가나 그래서 난 화가임 : a-b가 아니라 a-b<0 일때욥
2022. 1. 17. 오후 4:22, 유용태 (teo.yu) : b-a
2022. 1. 17. 오후 4:23, j : arr.sort(function(a, b)  {
  return a - b;
});
2022. 1. 17. 오후 4:23, j : 이건 기본적인 오름차순 정렬
2022. 1. 17. 오후 4:23, 화가난다 화가나 그래서 난 화가임 : 네넹! b-a는 내림차순정렬
2022. 1. 17. 오후 4:24, j : 저걸 if를 이용해서
2022. 1. 17. 오후 4:24, j : 풀어쓴겁니다
2022. 1. 17. 오후 4:24, 화가난다 화가나 그래서 난 화가임 : 아 저걸 풀어쓴 거라고용?
2022. 1. 17. 오후 4:24, 화가난다 화가나 그래서 난 화가임 : 헐..
2022. 1. 17. 오후 4:24, j : 네
2022. 1. 17. 오후 4:24, 화가난다 화가나 그래서 난 화가임 : 이걸 풀어쓴게
2022. 1. 17. 오후 4:24, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:24, 화가난다 화가나 그래서 난 화가임 : 이런 내용이라는 건가요?
2022. 1. 17. 오후 4:24, j : 네
2022. 1. 17. 오후 4:25, 화가난다 화가나 그래서 난 화가임 : 잠깐만요 띵킹을 더 해보겠습니다. 소름돋네용
2022. 1. 17. 오후 4:25, j : a - b 가 양수냐 0 이냐 음수냐
2022. 1. 17. 오후 4:25, j : a-b을 했을떄 조건이 양수냐 음수냐 0이냐에 따라 sort 안의 내부 로직이 처리가 되는건데
2022. 1. 17. 오후 4:26, j : 거기서 return 1 => 양수 return 0 => 0, return -1 => 음수
2022. 1. 17. 오후 4:27, 화가난다 화가나 그래서 난 화가임 : 그럼
2022. 1. 17. 오후 4:27, 화가난다 화가나 그래서 난 화가임 : if(a<b) return -1; 이
2022. 1. 17. 오후 4:27, 화가난다 화가나 그래서 난 화가임 : if(a>b) return -1로
2022. 1. 17. 오후 4:27, 화가난다 화가나 그래서 난 화가임 : 부등호만 바뀐다면
2022. 1. 17. 오후 4:27, 화가난다 화가나 그래서 난 화가임 : 내용은 반대로 전복되는 건가용?
2022. 1. 17. 오후 4:27, j : 그렇죠
2022. 1. 17. 오후 4:28, 화가난다 화가나 그래서 난 화가임 : 제가 헷갈리는데, 양수냐 음수냐 물어보는 부분이
2022. 1. 17. 오후 4:28, 화가난다 화가나 그래서 난 화가임 : >, <, === 이렇게 세 개랑
2022. 1. 17. 오후 4:28, 화가난다 화가나 그래서 난 화가임 : return -1, 1, 0 이렇게 세 개가
2022. 1. 17. 오후 4:28, 화가난다 화가나 그래서 난 화가임 : 있는데
2022. 1. 17. 오후 4:28, 화가난다 화가나 그래서 난 화가임 : 왜 양수냐 음수냐 물어보는 부분이 두 파트로 나눠져있는 건가.. 이게 너무 헷갈리더라고요
2022. 1. 17. 오후 4:28, j : 잠시만요
2022. 1. 17. 오후 4:28, j : 네네
2022. 1. 17. 오후 4:29, j : 물어보는 파트가 두파트라는게 제가 이해가 안되서요 ㅠㅠ
2022. 1. 17. 오후 4:29, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 17. 오후 4:29, 화가난다 화가나 그래서 난 화가임 : 이 사진에서, if(a<b) return -1 이 라인 한 줄만 봐도
2022. 1. 17. 오후 4:29, 화가난다 화가나 그래서 난 화가임 : 'a<b' 부분이랑 'return -1' 부분 이렇게 두 개가
2022. 1. 17. 오후 4:29, j : 조건식은 1개고 그 조건에 맞으면 저 값을 return 해라 인데..
2022. 1. 17. 오후 4:29, 화가난다 화가나 그래서 난 화가임 : 양수냐 음수냐 묻는 파트 아닌가용?
2022. 1. 17. 오후 4:31, 화가난다 화가나 그래서 난 화가임 : 그럼 죄송하지만 마지막으로 물어보고싶습니다! 
if(a<b) return -1; 이 부분을 어떻게 풀어 말하면 되는 걸까요?
2022. 1. 17. 오후 4:31, j : 저기서 
if(a < b) { return -1 }
=> b가 a보다 크면 return -1 을 하렴
2022. 1. 17. 오후 4:32, 화가난다 화가나 그래서 난 화가임 : 여기서 return -1은 오름차순일까요?
2022. 1. 17. 오후 4:32, 화가난다 화가나 그래서 난 화가임 : 오름차순 하렴?
2022. 1. 17. 오후 4:33, j : -1 이면 a는 b 앞에 있겠죠?
2022. 1. 17. 오후 4:35, j : sortedArray = array.sort((a, b) => {
	if(a - b < 0) return -1
	if(a - b > 0) return 1
	if(a === b) return 0
	else return -1
}
2022. 1. 17. 오후 4:36, 화가난다 화가나 그래서 난 화가임 : 이제
2022. 1. 17. 오후 4:36, 화가난다 화가나 그래서 난 화가임 : 알 것만 같아용
2022. 1. 17. 오후 4:36: 부탁하는 네오님이 들어왔습니다.
2022. 1. 17. 오후 4:36, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 17. 오후 4:36, 화가난다 화가나 그래서 난 화가임 : 감사합니다 먹보네오님 ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ
2022. 1. 17. 오후 4:36, 화가난다 화가나 그래서 난 화가임 : 정말로요 ㅠㅠㅠㅠ
2022. 1. 17. 오후 4:37, 유용태 (teo.yu) : 안녕하세요 부탁하는 네오님! 반갑습니다. :)
2022. 1. 17. 오후 4:37, j : 아니에여 저도 헷갈리게 설명해드렸는걸요 ㅠㅠ
2022. 1. 17. 오후 4:39, j : 아 저 조건식이 헷갈릴 순 있겠네요..제가 너무 아무렇지 않게 보고 설명해서 어려우셨겠다..ㅠㅠ
2022. 1. 17. 오후 4:39, 화가난다 화가나 그래서 난 화가임 : if (a > b) {
    return 1;
  }
이 부분은 a가 b보다 크면, b가 a 앞에 있겠군요
2022. 1. 17. 오후 4:39, 부탁하는 네오 : 안녕하세요
2022. 1. 17. 오후 4:39, 화가난다 화가나 그래서 난 화가임 : 이거 맞죠?
2022. 1. 17. 오후 4:39, j : 그쵸
2022. 1. 17. 오후 4:40, 화가난다 화가나 그래서 난 화가임 : 이해가 된 거 같아요! 사실, 예전에도 저 sort 부분의 문자열 비교 부분을 이해를 시도하다가 실패했던 부분이였는데 덕분에 이해할 수 있었습니다 ㅠㅠ 감사드려요
2022. 1. 17. 오후 4:40, 화가난다 화가나 그래서 난 화가임 : 용태님도 감사드립니다. 알려주신 메소드의 방식으로 푸는 방법도 살펴보겠습니다!
2022. 1. 17. 오후 4:41, j : if(조건식), 여기서 조건식을 어떻게 설정하고 return 을 하느냐에 따라 sort의 방식이 custom 되는거라 이것저것 값 바꿔보고 돌려보세요
2022. 1. 17. 오후 4:41, 유용태 (teo.yu) : 반갑습니다. 여기는 개발 얘기를 나누고 궁금한 내용을 공유 하고 다른 개발자들은 어떤 생각을 하고 있는지 공유하는 공간입니다.
2022. 1. 17. 오후 4:42, 화가난다 화가나 그래서 난 화가임 : 넹넹!!
2022. 1. 17. 오후 4:42, 유용태 (teo.yu) : 언제든지 편하게 얘기 남겨주세요 :)
2022. 1. 17. 오후 8:37: 비오는 날 오리와 개구리님이 들어왔습니다.
2022. 1. 17. 오후 8:37, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 17. 오후 8:41: 네오님이 나갔습니다.
2022. 1. 17. 오후 9:04, 유용태 (teo.yu) : 안녕하세요 비오는 날 오리와 개구리님 반갑습니다 :) 어서오세요!! ㅎ
2022. 1. 17. 오후 9:04, 비오는 날 오리와 개구리 : 안녕하세요!!
2022. 1. 17. 오후 9:05, 유용태 (teo.yu) : 반갑습니다. 여기는 개발 하다가 궁금한 점 다른 개발자는 어떻게 하고 있는지 궁금할때 좋은 자료를 찾아서 같이 공유하고 싶을때 본인이 만든거 공부한거 자랑하고 싶을때 이용하는 공간입니다. :)
2022. 1. 17. 오후 9:06, 유용태 (teo.yu) : 언제든 편하게 글 남겨주시고 다른 사람들이 질문한 경우 내가 안다~ 싶으면 답변 남겨주세요 ㅎ
2022. 1. 17. 오후 9:06, 비오는 날 오리와 개구리 : 넴! 잘 부탁드립니다
2022. 1. 17. 오후 9:06, 유용태 (teo.yu) : 네~ 감사합니다 :)
2022. 1. 17. 오후 9:07, 유용태 (teo.yu) : 오리와 개구리 님은 최근 관심사는 뭔에요? +_+
2022. 1. 17. 오후 9:24, 비오는 날 오리와 개구리 : 음 요즘 크게 관심을 가지게 된건
2022. 1. 17. 오후 9:24, 비오는 날 오리와 개구리 : 클린 코드, 타입 스크립트 쪽인 것 같아요
2022. 1. 17. 오후 9:25, 유용태 (teo.yu) : 그렇군요~ 이제 타입스크립트는 그냥 해야 되는게 되버린것 같아요 esbuild가 나오면서 build time은 이제 단점도 아니게 되어버렸구요 ㅎ
2022. 1. 17. 오후 9:26, 유용태 (teo.yu) : 클린코드는 영원한 숙제이지 않을까 싶네요 ㅎ
2022. 1. 17. 오후 9:26, 비오는 날 오리와 개구리 : 그런 것 같아요
2022. 1. 17. 오후 9:53, 시무룩한 튜브 : 안녕하세요. 혹시 polyfill된 javascript의 성능이 browser native? 성능 문법과 비교해서 어떤 차이가 있는지 정리된 곳이나 방법이 있는지 아시는 분 있을까요?
2022. 1. 17. 오후 9:54, 시무룩한 튜브 : 성능 문법 -> 문법 성능
2022. 1. 17. 오후 9:54, 시무룩한 튜브 : http://incaseofstairs.com/six-speed/
2022. 1. 17. 오후 9:55, 시무룩한 튜브 : 구글링 해본 결과로 이런 페이지가 있던데
2022. 1. 17. 오후 9:56, 유용태 (teo.yu) : 오~ 멋지네요!
2022. 1. 17. 오후 9:58, 시무룩한 튜브 : 이게 제가 찾는 결과물이 맞는것 같으면서도 babel이라는 항목이 es몇을 타겟으로 했는지 헷갈리는 부분이 있어서 같이 질문을 올려봐요
2022. 1. 17. 오후 9:59, 시무룩한 튜브 : 사진
2022. 1. 17. 오후 9:59, 시무룩한 튜브 : 결과적으로 성능 비교 정리된 곳이있거나 할 수 있는 방법이 있는지? + 저 곳이 제가 찾던 곳이 맞는건지.. 질문하다보니 README.md에 위처럼 돼있는 곳에
2022. 1. 17. 오후 9:59, 시무룩한 튜브 : profile:node 부분을 profile:원하는타겟 으로 변경하면 되는건가보네용.. 러버덕 디버깅..

2022년 1월 18일 화요일
2022. 1. 18. 오전 8:07, 유용태 (teo.yu) : 스프린트 모임 시각은 수,목,금 밤 11시로 하겠습니다. 일찍 하고 싶지만 개인 사정상 10시는 좀 힘들었습니다 양해 부탁드립니다
2022. 1. 18. 오전 8:08, 유용태 (teo.yu) : 마감 시간은 수요일 미팅 시간까지 오시기만 하면 참가로 여기고 함께 하도록 하겠습니다 추후 다시 공지 올리겠습니다. 신청 해주신 분들 다시 한번 감사드립니다!
2022. 1. 18. 오전 10:09, 피카츄돈까스/React,RN : 으앗 저도 참여 해보고싶었는데 ㅠ 회사 일이 바빠서 이것만 좀 마무으리 되면 ㅠ
2022. 1. 18. 오전 10:09, j : 저도..이번주 이직준비로 정신이 없어서..
2022. 1. 18. 오전 10:21, 유용태 (teo.yu) : 네~ 언제든 부담 느끼지 않으셨으면 좋겠습니다. 대부분 개발자들은 교류를 원하면서도 딱히 그런 명분이나 공간은  많이 없다고 생각을 해서요ㅋ 스프린트는 확실히 부담이 되는게 맞으니 좀 다른 것도 같이 생각해봐요 :)
2022. 1. 18. 오전 11:08, Vintz : 궁금한게 있습니다 여러분! 혹시 다들 이슈 생성하실 때 범위를 어느 정도로 하시나요? 커밋 단위로 이슈를 생성하라고 하시는데 감이 잘 잡히지 않네요..ㅠ
2022. 1. 18. 오전 11:10, 유용태 (teo.yu) : 저도 딱 떨어지는 기준은 없지만 일단 주중으로 끝낼 수 있는 분량이 넘지 않도록 하자라는 최소한의 마지노선이 있습니다. ㅎ
2022. 1. 18. 오전 11:14, 프엔공부중 : 현업에서도 let을 쓰는 경우가 있나요? 어떻게든 let을 안쓰려고 하는데 어쩔수 없이 써야겠다는 생각이 드는 경우가 있어서 질문해봅니다 ㅠ
2022. 1. 18. 오전 11:15, 유용태 (teo.yu) : 안 쓸 수가 없죠. ㅎ 가급적 안쓰면 좋다는 거고 가급적 대입문을 가까운 위치에서만 쓸 수 있도록 하시면 되고 정말 안쓰고 싶다면.
2022. 1. 18. 오전 11:16, 유용태 (teo.yu) : const = xxx = ((abc, def) => { ..여기에 let 이 필요한 로직들....... }(abc, def)
2022. 1. 18. 오전 11:16, Luke : 절대 쓰지말라는 건 var지, let이 아닙니다 ㅎㅎㅎ 필요하면 써야죠!
2022. 1. 18. 오전 11:16, 유용태 (teo.yu) : 이런식으로도 쓸 수 있어요.
2022. 1. 18. 오전 11:18, 프엔공부중 : 아 그렇군요 ㅎ..
2022. 1. 18. 오전 11:18, 프엔공부중 : 제가 너무 강박관념처럼 최대한 안쓰다가 너무 스트레스를 받아서 ㅋㅋㅋ
2022. 1. 18. 오전 11:18, 프엔공부중 : 두 분 감사합니다!
2022. 1. 18. 오전 11:19, 유용태 (teo.yu) : 좋은 거에요! ㅋ
2022. 1. 18. 오전 11:19, 피카츄돈까스/React,RN : 저도 let 안쓰려고 노력했는데 ㅋㅋㅋㅋㅋㅋㅋㅋ…var가 global이라는걸 얼마전에 알고 깜짝 놀란..쓰지말래서 안썼는데 이유가 이거라니!
2022. 1. 18. 오전 11:21, 프엔공부중 : ㅋㅋㅋㅋㅋ
2022. 1. 18. 오전 11:21, 프엔공부중 : var은 정말 제 머리속에 없습니다
2022. 1. 18. 오전 11:21, 피카츄돈까스/React,RN : 아니 그리고 신기한거 또 알았던게 
zz = 1 이렇게 하면
2022. 1. 18. 오전 11:22, 피카츄돈까스/React,RN : 변수 없을때 자동으로 global로 선언될수있는것도
2022. 1. 18. 오전 11:22, 피카츄돈까스/React,RN : 첨알았어요 ㅋㅋㅋ
2022. 1. 18. 오전 11:22, 피카츄돈까스/React,RN : 자바스크립트의 매운맛
2022. 1. 18. 오전 11:23, 피카츄돈까스/React,RN : 저희 회사 백앤드 코드에 말도안되는 린트오류가 있어서 봤는데 코드는 잘 돌아가더라구요?!
2022. 1. 18. 오전 11:24, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 18. 오전 11:24, 피카츄돈까스/React,RN : 검색해봤더니 var와 없는 변수는 자동으로 var로 선언되…
2022. 1. 18. 오전 11:24, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 18. 오전 11:29, 프론트 : 혹시 백단 같이 하시는분들 아직도 행정표준용어로 DB 컬럼명 정의하시나요??
2022. 1. 18. 오전 11:29, 어피치 : 요즘 라이브러리 중 일부는 코드 사이즈를 줄이고, 입력하는게 더 편하다는 이유로 const 대신 let 위주로 쓰는 곳도 있더라구요
2022. 1. 18. 오전 11:30, 피카츄돈까스/React,RN : 오호..immutable..보장을..
2022. 1. 18. 오전 11:33, 프론트 : Ex ) 구글 스플린트로 컬럼명을 정의할 때
1. google_splint
2. googleSplint
3. ggle_splt
2022. 1. 18. 오전 11:34, 프론트 : 지금 레거시코드가 3번의 형태인데요 . 그래서 프론트쪽 변수명들도 다 저런 형태로 되어있더라구요 ㅠㅠ 점진적으로 개선할 방향성을 찾고 있는데 여러 사람들의 의견을 좀 듣고자 합니다
2022. 1. 18. 오전 11:35, 피카츄돈까스/React,RN : 음 백앤드에서 오는 데이터를 adapter로 프론트앤드에서 사용 할 변수로. 한번 변환해서 사용하시면 좋을것 같습니다.
2022. 1. 18. 오전 11:37, 프론트 : 아 먼저 api랑 view 사이에 adapter로 변수명들 프론트에서만 따로 재정의 하는 걸 말씀하시는거죠??
2022. 1. 18. 오전 11:38, 피카츄돈까스/React,RN : 사진
2022. 1. 18. 오전 11:38, 피카츄돈까스/React,RN : 넵 이런식으루요
2022. 1. 18. 오전 11:38, 피카츄돈까스/React,RN : 이러면 서버가 어떤 형태이든 View에는 영향을 전혀 주지 않을 수 있습니다.
2022. 1. 18. 오전 11:39, 프론트 : 와 난 왜 이생각을 못했을까…
2022. 1. 18. 오전 11:39, 프론트 : 감사드립니다 정말!
2022. 1. 18. 오전 11:39, 피카츄돈까스/React,RN : 앗 저도 필요성을 안지 몇개월 안됐어요 ㅋㅋ 처음이어렵지 알고나면 쉽습니답!
2022. 1. 18. 오전 11:40, 유용태 (teo.yu) : 오오~ 맞아요
2022. 1. 18. 오전 11:40, 핸디 : 관련되서 읽어보실만한 글인거 같아서 추가합니다
https://jojoldu.tistory.com/617?category=635878
2022. 1. 18. 오전 11:40, 유용태 (teo.yu) : 서버 네이밍 별로인 경우 진짜 힘들죠 ㅠ
2022. 1. 18. 오전 11:41, 피카츄돈까스/React,RN : 오 class-transformer…오호
2022. 1. 18. 오전 11:41, 피카츄돈까스/React,RN : 저거 대표님이 사용하시고 말씀해주셨는데 안썼는데..
2022. 1. 18. 오전 11:42, 피카츄돈까스/React,RN : 아니 근데 이거 엄청 좋네요 생각해보니까
2022. 1. 18. 오전 11:43, 피카츄돈까스/React,RN : 클래스로 관리한다 자체가 repository역할을 할 수 있군요
2022. 1. 18. 오전 11:43, 프론트 : 한 15년 된 레거시들 보고있는데 머리가 터질거 같네요 ㅎㅎ…;;
2022. 1. 18. 오전 11:43, 피카츄돈까스/React,RN : 헣헣..저는 5년치 레거시만 보고있는데도
2022. 1. 18. 오전 11:43, 피카츄돈까스/React,RN : 뒤엎자고 했는데..
2022. 1. 18. 오전 11:43, 핸디 : 근데 막상 도입해보면 결국 피카츄돈까스님이 하신 방식으로 쓰고 있는 자신을 발견하게된다는...
2022. 1. 18. 오전 11:43, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 18. 오전 11:43, 피카츄돈까스/React,RN : 그런가요
2022. 1. 18. 오전 11:43, 피카츄돈까스/React,RN : 아 근데 이거 진짜 좋아보이는데..
2022. 1. 18. 오전 11:44, 프론트 : 프론트도 액티브x에요 …마이플랫폼???
2022. 1. 18. 오전 11:44, 핸디 : 새로운 방식이 프로젝트 중간에 들어오는게 생각보다 어렵더라구요
2022. 1. 18. 오전 11:44, 피카츄돈까스/React,RN : 그런거같아요
2022. 1. 18. 오전 11:44, 피카츄돈까스/React,RN : 지금 설계해놓은 구조에 이걸 넣으려니
2022. 1. 18. 오전 11:44, 피카츄돈까스/React,RN : 머리가 약간 복잡해지긴 하네요 '
2022. 1. 18. 오전 11:44, 핸디 : 다른 분들도 설득해야하고 또 제가 이걸 도입하자고 했으니 확실히 알아야하는데 그것도 부담스럽고
2022. 1. 18. 오전 11:44, 피카츄돈까스/React,RN : 흐음 그렇군요
2022. 1. 18. 오전 11:45, 피카츄돈까스/React,RN : 그래도 저는 질렀습니다
2022. 1. 18. 오전 11:45, 피카츄돈까스/React,RN : 제가 잘 모르면 잘아는 사람 델고 오자 해서
2022. 1. 18. 오전 11:45, 피카츄돈까스/React,RN : 델고와서...ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 18. 오전 11:45, 피카츄돈까스/React,RN : 아 근데 요것이 데코레이터 문법을 사용하는군요
2022. 1. 18. 오전 11:46, 피카츄돈까스/React,RN : RN에서는 사용하기가 애매..하긴 하겠네요
2022. 1. 18. 오전 11:47, 피카츄돈까스/React,RN : android 에서 사용하는 js 버전이 너무 낮아서 문제가 되는 경우가 좀 있더라구요
2022. 1. 18. 오전 11:47, 피카츄돈까스/React,RN : 사진
2022. 1. 18. 오전 11:47, 피카츄돈까스/React,RN : 예를 들어 이런것들이요
2022. 1. 18. 오전 11:48, 피카츄돈까스/React,RN : intl이 적용이 안되서 뭐지 했는데 알아보니 …안드로이드는 폴리필이 필요하다 ㅠ
2022. 1. 18. 오전 11:55, 피카츄돈까스/React,RN : 데코레이터도 사용 가능 하겠네요! 바벨 플러그인쓰면 된다고 하네요.
2022. 1. 18. 오후 12:08, 프엔공부중 : 리액트-스프링으로 사이드 프로젝트 협업 진행을 한다고 하면 개발 단계에서 프론트도 스프링 환경을 구현해야 api 요청이 가능하겠죠..?
2022. 1. 18. 오후 12:09, 썰~~ : 아뇨..
2022. 1. 18. 오후 12:10, 썰~~ : 프론트에는 스프링 환경이 필요없습니다
2022. 1. 18. 오후 12:10, 썰~~ : http 프로토콜만 맞추면 될거같아요
2022. 1. 18. 오후 12:11, 프엔공부중 : 제 로컬에서 백엔드를 서버를 안켰는데도 요청이 정상적으로 보내질 수가 있나요?
2022. 1. 18. 오후 12:11, 썰~~ : 백앤드는 켜져있다는 가정이죠
2022. 1. 18. 오후 12:11, 프엔공부중 : 그러면 가정으로 api 문서 등을 보고 우선 개발 후에 테스트 서버 같은걸로 배포했을 때 그때 제대로 테스트를 해보는건가요?
2022. 1. 18. 오후 12:12, 썰~~ : 넵 저는 그렇게 하고 있습니다
2022. 1. 18. 오후 12:12, 썰~~ : 목데이터로 구현한다음에
2022. 1. 18. 오후 12:12, 프엔공부중 : 오 그렇군요.. 감사합니다!
2022. 1. 18. 오후 12:36, 파이버 : https://www.jetbrains.com/ko-kr/lp/javascript-25/ 흥미롭네요 👀
2022. 1. 18. 오후 12:57, 피카츄돈까스/React,RN : 사진
2022. 1. 18. 오후 12:57, 피카츄돈까스/React,RN : HTML도 역시 KHTML
2022. 1. 18. 오후 12:58, 개발닥 : K-HTML
2022. 1. 18. 오후 12:58, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 18. 오후 1:14, 유용태 (teo.yu) : 와! 이 자료 너무 좋네요! 역사를 배우는 것은 중요하죠 좋은 자료 너무 감사합니다
2022. 1. 18. 오후 1:14, 유용태 (teo.yu) : 저도 비슷한 고민을 했는데 좋은것 같아요. 한번 시도해보려고 합니다.
2022. 1. 18. 오후 1:15, 유용태 (teo.yu) : 저도 User와 관련된 4가지 종류의 다른 엔티티가 네이밍컨벤션이 달라서 엄청 헷갈리거든요
2022. 1. 18. 오후 1:16, 유용태 (teo.yu) : 근데 결국은 개발을 문서를 바탕으로 하다보니 최대한 백엔드가 정의한 스키마에 맞게 해야 네트워크 탭을 이용한 디버깅이나 로그 분석에 도움이 되는데
2022. 1. 18. 오후 1:17, 유용태 (teo.yu) : 또 막상 다른 비슷한 필드의 다른 이름을 화면에 표기하려고 하면 o.aaa ?? o.aaa1 ?? o.aa_a 이런식의 코드나 Type 선엉이 엉망이라 참 고민이 많습니다.
2022. 1. 18. 오후 1:26, 엄지척 제이지 : Proxy 로 비슷한걸 해보다가 왠지 일을 두 번하고 있는 느낌이 들어서 접었던 기억이..
2022. 1. 18. 오후 1:26, 유용태 (teo.yu) : 무슨 느낌인지 알것 같아요 ㅋ
2022. 1. 18. 오후 1:30, 엄지척 제이지 : protobuffer 같은걸로 타입을 정의해서 서버 클라이언트가 갖다 쓰면 좋지 않을까 하는
2022. 1. 18. 오후 1:30, 엄지척 제이지 : 생각만 수년 째 했네요 ㅎㅎ
2022. 1. 18. 오후 1:30, 유용태 (teo.yu) : 그게 뭐에요?
2022. 1. 18. 오후 1:33, 엄지척 제이지 : 아 프로토버퍼는 데이터 정의 라이브러리에요 구글에서 만든
2022. 1. 18. 오후 1:36, 엄지척 제이지 : 근데 데이터 구조는 보통 백엔드 설계하면서 만들게 되고 프론트에서 참조하게 되는데
2022. 1. 18. 오후 1:37, 엄지척 제이지 : 백엔드 개발자 입장에선 또 클래스만 만들면 될걸 왜 일을 두번 시키냐는 느낌을 받아서 ㅋㅋ
2022. 1. 18. 오후 1:39, 유용태 (teo.yu) : 어렵네요. 스키마라는게 참 한번 정해지면 쉽게 바꾸기 힘들다라는 문제가 해결되는 도구가 좋은게 나왔으면 좋겠어요
2022. 1. 18. 오후 4:20, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 18. 오후 4:21, 화가난다 화가나 그래서 난 화가임 : 아스키코드를 공부하는 중인데용. 제가 이해한 바가 맞을까요? 컴퓨터에 'A'라는 문자를 전송하면 1과 0의 신호로 바뀌면서 100 0001로 변환되고, 컴퓨터는 변환된 이진수를 보고 해석을 하면서 웹에 A로 다시 변환시켜 보여주는 건가요?
2022. 1. 18. 오후 5:00, 유용태 (teo.yu) : 네
2022. 1. 18. 오후 5:27, 돈다발 들고 좋아하는 무지 : 삭제된 메시지입니다. 
2022. 1. 18. 오후 5:29, 화가난다 화가나 그래서 난 화가임 : 감사합니다!
2022. 1. 18. 오후 5:29, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 18. 오후 5:30, 화가난다 화가나 그래서 난 화가임 : charset ='UTF-8' 이라는 유니코드의 인코딩 방식도 이제야 이해가 가네요 ㅋㅋ
2022. 1. 18. 오후 5:33, 유용태 (teo.yu) : 화가님은 잊고 있었던 cs관련 지식을 되돌아 볼수 있게 환기를 해주셔서 참 고맙다고 생각합니다 :) 이렇게 짧은 공유 알게된 사실 공유 활동 너무 고마워요!!
2022. 1. 18. 오후 5:38: 신지민님이 들어왔습니다.
2022. 1. 18. 오후 5:38, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 18. 오후 5:39, 유용태 (teo.yu) : 안녕하헤요 신지민님!! 반갑습니다 :) 어서오세요~
2022. 1. 18. 오후 5:42, 화가난다 화가나 그래서 난 화가임 : 저도 용태님처럼 도움되는 글을 쓰는 그 날까지~
2022. 1. 18. 오후 5:42, 유용태 (teo.yu) : 이미 충분히 도움이 되고 있습니다 도움을 요청을 하는 것도 질문을 하는 것도 능력이라고 생각해요 ㅎ
2022. 1. 18. 오후 5:44, 유용태 (teo.yu) : 남에게 설명을 해주는 것 만큼 머리속에 선명하게 각인되는게 앖는데 sort를 알려주신 먹보네오님은 이제 남들에게 sort를 설명해주실만큼 각인 되시지 않았을까 생각합니다 ㅎ
2022. 1. 18. 오후 5:45, j : 아 저요..?ㅋㅋㅋㅋㅋ
2022. 1. 18. 오후 5:51, 화가난다 화가나 그래서 난 화가임 : 아 참고로
2022. 1. 18. 오후 5:51, 화가난다 화가나 그래서 난 화가임 : 저 먹보 네오님 덕분에 sort 지금 완벽히 이해갔어용 ㅋㅋ
2022. 1. 18. 오후 5:51, 화가난다 화가나 그래서 난 화가임 : 은인이십니다 ㅋㅋㅋ
2022. 1. 18. 오후 5:52, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 18. 오후 5:52, 화가난다 화가나 그래서 난 화가임 : locale 메소드도 리턴값이 어떻게 반환하는지 봤어용 감사합니댜~~
2022. 1. 18. 오후 5:52, 화가난다 화가나 그래서 난 화가임 : localeCompare
2022. 1. 18. 오후 5:52, 유용태 (teo.yu) : 아름다운 선순환이네요 ㅋ 여기 공간의 취지에 가장 부합하는 것 같아요 ㅋ
2022. 1. 18. 오후 5:56: 모아즈님이 들어왔습니다.
2022. 1. 18. 오후 5:56, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 18. 오후 5:57, 유용태 (teo.yu) : 안녕하세요 모아즈님! 반갑습니다 어서오세요 :)
2022. 1. 18. 오후 5:57, j : 근데 저도 설명하면서 다시 이해했어요..
2022. 1. 18. 오후 5:57, j : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 18. 오후 5:57, j : 어서오세여
2022. 1. 18. 오후 5:57, 모아즈 : 안녕하세요 ^_^
2022. 1. 18. 오후 5:58, 유용태 (teo.yu) : 네 안녕하세요~ 여기는 개발 얘기 하면서 노는 공간입니다 궁금한거 있으면 물어보고 다른 개발자들은 어떻게 하는지 궁금하면 물어보고 좋은 글이나 자료 있으면 공유 해주세요 :)
2022. 1. 18. 오후 5:59, 모아즈 : 네 감사합니다
2022. 1. 18. 오후 5:59, 유용태 (teo.yu) : 저희 링크에 놀러가보시면 엄선된(?) 좋은 글이나 자료들도 많이 있으니 확인해보셔도 좋을 것 같아요 ㅎ
2022. 1. 18. 오후 6:02, Hardy : https://www.surfit.io/explore/develop/web-dev
2022. 1. 18. 오후 6:02, Hardy : 이런걸 발견했는데
2022. 1. 18. 오후 6:02, Hardy : 테오 글이 많이 보이네요 ㅋㅋㅋ
2022. 1. 18. 오후 6:03, 유용태 (teo.yu) : 하하 멋쩍음과 기분 좋음이 함께하는 묘한 기분이네요 ^^;;
2022. 1. 18. 오후 6:03, Hardy : 제 글도 살포시 껴있습니다 ㅋㅋ
2022. 1. 18. 오후 6:03, Hardy : 어쩐지 갑자기 조회수가 늘어나더라니...
2022. 1. 18. 오후 6:04, Vintz : 오 하디글은 어떤건가요?
2022. 1. 18. 오후 6:04, 유용태 (teo.yu) : 무슨 글이에요? 공유해주세요 ㅋ
2022. 1. 18. 오후 6:04, j : 이거 유용해요 ㅋㅋㅋ저도 일하다가 한번씩 봐요
2022. 1. 18. 오후 6:04, Hardy : 저는 성능 개선글이에요 ㅋㅋㅋ
2022. 1. 18. 오후 6:04, Hardy : https://velog.io/@wooogie/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C%EB%8A%94-%EC%84%B1%EB%8A%A5-%EA%B0%9C%EC%84%A0%EC%9D%84-%EC%9C%84%ED%95%B4-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C
2022. 1. 18. 오후 6:04, Hardy : 다시 보니까
2022. 1. 18. 오후 6:04, j : 헐..
2022. 1. 18. 오후 6:04, Hardy : 부끄럽네요
2022. 1. 18. 오후 6:04, j : 저 그거 봤어요
2022. 1. 18. 오후 6:04, j : 헐...
2022. 1. 18. 오후 6:05, 유용태 (teo.yu) : 아! 저도 이거 봤어요 ㅋㅋ
2022. 1. 18. 오후 6:05, 유용태 (teo.yu) : 무슨 기분인지 압니다 ㅋㅋ
2022. 1. 18. 오후 6:05, Hardy : 코드 스플리팅은 다시 뺏습니다 ㅠ
2022. 1. 18. 오후 6:05, Hardy : 리액트에선 아직 완전하지 않더라고요
2022. 1. 18. 오후 6:05, Hardy : 역시 넥스트가...
2022. 1. 18. 오후 6:09, 해달 : 여기에 멋있는분이 굉장히 많군요..
2022. 1. 18. 오후 6:10, 개발닥 : 해달님도 멋지십니다
2022. 1. 18. 오후 6:11, 레몬사이다맛젤리 : 많이배워가겠습니닷
2022. 1. 18. 오후 6:18, Vintz : 하디 글 너무 잘 읽었어요!! 성능을 엄청 끌어올리셨네요 ㅎㅎㅎ 깃헙도 팔로우 했어요 😆
2022. 1. 18. 오후 6:44, j : 보툥 경력 면접은..무슨 내용 물어보나요?
2022. 1. 18. 오후 6:44, 유용태 (teo.yu) : 대충 몇년차 일까요?
2022. 1. 18. 오후 6:45, j : 3년차에요
2022. 1. 18. 오후 6:45, j : 이제 4년차?
2022. 1. 18. 오후 6:46, 유용태 (teo.yu) : 그정도라면 저는 실제로 작업한 프로젝트에서 어느 정도 기여를 했는지를 좀 확인하는 편입니다
2022. 1. 18. 오후 6:47, j : 아 제가 어떤 부분을 맡아서 일했고, 뭘 했는가
2022. 1. 18. 오후 6:47, 유용태 (teo.yu) : 네 3년차-5년차면 그냥 뭘 맡겨도 알아서 해야 하는 짬인데
2022. 1. 18. 오후 6:48, 유용태 (teo.yu) : 도움을 받는 사람인지 스스로 할 수 있는 사람인지를 주로 검증할거 같아요 저라면
2022. 1. 18. 오후 6:49, 유용태 (teo.yu) : 그리고 협업 방식이나 커뮤니케이션 등 회사 업무 프로세스를 전반적으로 알고 있는지
2022. 1. 18. 오후 6:50, 유용태 (teo.yu) : 협업튤 사용법 깃 컨벤션 코딩 컨벤션 기술 스택 커뮤니케이션 방법들
2022. 1. 18. 오후 6:53, j : 아하..
2022. 1. 18. 오후 6:53, j : 큰일났네요..
2022. 1. 18. 오후 6:53, j : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 18. 오후 6:53, j : 코딩컨벤션 없는데..
2022. 1. 18. 오후 6:55, 개발닥 : 지금부터
2022. 1. 18. 오후 6:55, 개발닥 : 만들면 되죠 ㅎㅎ
2022. 1. 18. 오후 6:57, 유용태 (teo.yu) : 없어도 되요 ㅋㅋ 뭐랄까 뭘 검증하고 싶은지는 아실것 같은데 움...
2022. 1. 18. 오후 6:58, 유용태 (teo.yu) : 3-5년차면 이제 자리 마련해주고 문서 링크 던져놓고 "할수 있죠?" 이런 짬차라
2022. 1. 18. 오후 6:58, j : 네네 협업시에 어려움을 없는지를
2022. 1. 18. 오후 6:58, j : 전반적으로 물어보긴 하겠네요,,
2022. 1. 18. 오후 6:58, j : 와 입사해서 딱히 제가 설계를 하거나 이런 부분이 적어서..
2022. 1. 18. 오후 6:58, j : 일단 열심히 해봐야겠네요
2022. 1. 18. 오후 7:00, 유용태 (teo.yu) : 화이팅입니다 근데 케바케라 그게 아닐수도 있지요
2022. 1. 18. 오후 7:01, j : 플젝 구조 파악하다가 머리 싸맸네요..
2022. 1. 18. 오후 7:02, j : 이걸 왜 이렇게 했을까..하고..
2022. 1. 18. 오후 7:03, 공공 : 와 근데 저도 공감되네요. 프로덕션 수준으로 전체적인 앱을 처음부터 구성해보라고 하면 막상 막막할 거 같아요 🤔
2022. 1. 18. 오후 7:04, 공공 : 요런 전체적인 구성? 설계?는 작은 규모로 개인 플젝이라도 이렇게 저렇게 해보면서 연습해보아야 성장하려나요
2022. 1. 18. 오후 7:04, 유용태 (teo.yu) : 아! 맞아요 저는 주니어 시니어 안따지고항상 물어봅니다. 프로젝트를 본인이 맞게 되면 어떤 기술 스택으로 환경을 갖추실껀가요?
2022. 1. 18. 오후 7:04, j : 어...저거 나오면 저 얼탈거같아욬ㅋㅋㅋㅋ
2022. 1. 18. 오후 7:04, j : 진지하게..음...
2022. 1. 18. 오후 7:24, 프린이 : 테오는 인프라쪽은  공부 어떻게 하셨나요?
2022. 1. 18. 오후 7:24, 유용태 (teo.yu) : 몸으로요? ㅋㅋ
2022. 1. 18. 오후 7:25, 유용태 (teo.yu) : 솔직히 인프라는 구글의 힘을 빌렸습니다
2022. 1. 18. 오후 7:25, 유용태 (teo.yu) : 처음에는 자체적으로 서버 구축해서 했었는데 수지 타산이 너무 안 맞더라구요 ㅠㅠ
2022. 1. 18. 오후 7:25, 프린이 : 음..
2022. 1. 18. 오후 7:26, 유용태 (teo.yu) : 솔직히 aws는 잘몰라요~ 제일 가성비 좋은 구글 App Engine을 사용했어요
2022. 1. 18. 오후 7:27, 프린이 : 글쿤요 요즘 쿠버네티스가 배포환경에서 쓰이는 de facto가 되었는데.. 공부하기 넘 어렵다는..
2022. 1. 18. 오후 7:27, 유용태 (teo.yu) : 최대한 돈이 안드는 github pages나 App engine을 통해서 맡겨버렸어요 그때 부터 반강제로 웹 개발자에사 프론트엔드가 된거 같아요
2022. 1. 18. 오후 7:27, 유용태 (teo.yu) : 1인 개발자로 회사를 운영하다보니
2022. 1. 18. 오후 7:28, 유용태 (teo.yu) : 작은 화사에게는 클라 요구사항이 백에 있진 않자나요 ㅋㅋ
2022. 1. 18. 오후 7:28, 유용태 (teo.yu) : *회사
2022. 1. 18. 오후 7:33, 유용태 (teo.yu) : 솔직히 프론트엔드 세상이 완전히 왔다고는 생각안하지만 저는 여기를 전문성을 가지고 serverless 세상을 꿈꿔봅니다 ㅋ
2022. 1. 18. 오후 7:44, 프린이 : 개인적인 생각이지만 트래픽이 많은 서비스에서 serverless를 이용해 모든 api 호출을 처리할 수 있을지 조금 의문입니다 :)
2022. 1. 18. 오후 7:45, 유용태 (teo.yu) : 그정도로 서비스가 크면 전문가를 한명 고용할수 있지 않을까? 생각을 했어요 ㅋㅋ
2022. 1. 18. 오후 7:46, 프린이 : 프론트엔드가 서비스 전체 영역에 걸쳐서 종횡무진 하는 날이 빨리 왔으면 좋겠네요 ^^
2022. 1. 18. 오후 8:03, 공공 : 아예 WebGL같이 그래픽스적으로 나가는 방향이면 더 가능성 있으려나 싶기도 하구요ㅋㅋ
2022. 1. 18. 오후 8:04, 유용태 (teo.yu) : 이미 문서를 다루는 도구로써의 프론트엔드 가치는 이미 검증이 되었다고 생각을해요
2022. 1. 18. 오후 8:04, 유용태 (teo.yu) : 메타버스가 웹이랑 얼마나 엮일지는 좀 애매하지만 좋아질거라고 생각합니다 :)
2022. 1. 18. 오후 8:22, 화가난다 화가나 그래서 난 화가임 : if문으로 해결하면 되는데 단축평가를 쓰면 부적절한 위치에서 할당한다고 뜨는데 왜 그런건지 에러 원인이 보이시나용?
2022. 1. 18. 오후 8:22, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 18. 오후 8:22, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 18. 오후 8:23, 유용태 (teo.yu) : 평가식에도 괄호를 넣어주세요
2022. 1. 18. 오후 8:23, 유용태 (teo.yu) : 우선순위에 의해서 (.....) += i
2022. 1. 18. 오후 8:24, 유용태 (teo.yu) : 로 인식되고 있어서 그런다고 생각해요
2022. 1. 18. 오후 8:24, 화가난다 화가나 그래서 난 화가임 : 괄호 넣으니까 통과가 되네요..
2022. 1. 18. 오후 8:24, 화가난다 화가나 그래서 난 화가임 : 특수문자의 우선순위
2022. 1. 18. 오후 8:24, 화가난다 화가나 그래서 난 화가임 : 그런 건가요?
2022. 1. 18. 오후 8:24, 화가난다 화가나 그래서 난 화가임 : css의 우선순위 내용은 본 거 같긴한뎅..
2022. 1. 18. 오후 8:25, 유용태 (teo.yu) : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
2022. 1. 18. 오후 8:27, 화가난다 화가나 그래서 난 화가임 : 감샤합니다
2022. 1. 18. 오후 9:41, TriplexLab : 재귀함수(재귀패턴) javascript #hacker-news#hacker-news-api#데이터 구조 depth#재귀패턴#재귀함수#재귀함수 사례#재귀함수 실행#재귀함수 실행 결과#재귀함수 실행 순서
2022. 1. 18. 오후 9:42, TriplexLab : 재귀함수에 관해서 간단하게 나름대로 정리 해봤습니다~
2022. 1. 18. 오후 9:42, TriplexLab : 필요하신 분들 있으면 한번 보세요~
2022. 1. 18. 오후 9:43, 프론트맨 : 감사합니다~!
2022. 1. 18. 오후 9:43, Hardy : 확실히 그림으로 설명하니까 확 와닿네요 ㅋㅋㅋ
2022. 1. 18. 오후 9:44, Hardy : 재귀를 머릿속으로만 생각하면 진짜 머리가 쪼개지더라고요
2022. 1. 18. 오후 9:44, TriplexLab : 네ㅠ 처음 접하는 분들은 더더욱 그럴거에요ㅠ
2022. 1. 18. 오후 9:59, 프론트준비생 : 이모티콘 
2022. 1. 18. 오후 9:59, 프론트준비생 : 삭제된 메시지입니다. 
2022. 1. 18. 오후 10:45, 프론트 : https://news.xbox.com/en-us/2022/01/18/welcoming-activision-blizzard-to-microsoft-gaming/?ranMID=43674&ranEAID=VU5Hb5DwDXE&ranSiteID=VU5Hb5DwDXE-m_w7gYO3RXX1G1sRY2sbFg&epi=VU5Hb5DwDXE-m_w7gYO3RXX1G1sRY2sbFg&irgwc=1&OCID=AID2200057_aff_7795_1243925&tduid=%28ir__k6nxipeezgkf6x9p2gc2szotju2xob3lacdpoqxe00%29%287795%29%281243925%29%28VU5Hb5DwDXE-m_w7gYO3RXX1G1sRY2sbFg%29%28%29&irclickid=_k6nxipeezgkf6x9p2gc2szotju2xob3lacdpoqxe00
2022. 1. 18. 오후 10:46, 프론트 : 마소가 블리자드 인수했네여
2022. 1. 18. 오후 10:47, 프론트 : 개발이랑은 전혀 상관없는 얘기지만 ..ㅎㅎ
2022. 1. 18. 오후 10:48, Vintz : 헐..어떤 의도로 인수했을까요
2022. 1. 18. 오후 10:48, Vintz : 신기하네요
2022. 1. 18. 오후 10:58, 프론트 : 글세요…클라우드게임??
2022. 1. 18. 오후 10:58, 유용태 (teo.yu) : 메타버스??!
2022. 1. 18. 오후 10:58, 프론트 : 블리자드가 ip도 든든하고 ㅎㅎ인수액 82조 ㄷ ㄷ
2022. 1. 18. 오후 10:58, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 18. 오후 11:00, Vintz : 와..억소리가 아니라 조소리가 나네요
2022. 1. 18. 오후 11:01, Vintz : https://youtu.be/Eim11QYLfEY
2022. 1. 18. 오후 11:01, Vintz : 다들 이 영상 보셨나요? 테오 말대로 레이아웃에 플렉스박스가 거의 표준이 되어가는 것 같아요
2022. 1. 18. 오후 11:02, Vintz : 테일윈드 CSS도 만족하며 사용 중인데 영상에 나와서 괜히 뿌듯..
2022. 1. 18. 오후 11:02, 유용태 (teo.yu) : 유명해지고 싶네요 ㅋㅋ
2022. 1. 18. 오후 11:02, 유용태 (teo.yu) : AdorableCSS
2022. 1. 18. 오후 11:05, Vintz : ㅋㅋㅋㅋㅋㅋ 공식 문서 지켜보고 있습니다 👀
2022. 1. 18. 오후 11:06, 프론트 : 깃헙 리드미를 영어로 바꾸시면 스타수가 더 늘어날 것 같긴해요!!
2022. 1. 18. 오후 11:06, 유용태 (teo.yu) : 큼... 여러분 영어 공부 열심히하세요
2022. 1. 18. 오후 11:07, 프론트 : 외국인?의 관점에서 보면 리드미 파일 영어 아닌 다른 언어(중국어, 스페인어 등)로 되어있으면 난감할때가 있더라고요 ㅠㅠ
2022. 1. 18. 오후 11:08, Vintz : 어..맞아요 잘 안보게 되더라구요
2022. 1. 18. 오후 11:08, Vintz : 영어면 보려는 시도는 해보는데 다른 언어면 시도조차 할 생각이 안나죠 ㅠㅠ
2022. 1. 18. 오후 11:08, 유용태 (teo.yu) : 감사합니다:) readme는 일단 영어로 오늘 바꿔봐야겠네요
2022. 1. 18. 오후 11:09, 코린이 : 큭..영어
2022. 1. 18. 오후 11:10, 코린이 : 개발자 필수 과목이죠?
2022. 1. 18. 오후 11:10, 유용태 (teo.yu) : 가산점이라고 합시다!! ㅋ
2022. 1. 18. 오후 11:10, 코린이 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ그렇군욬ㅋㅋ
2022. 1. 18. 오후 11:11, 유용태 (teo.yu) : 문서를 읽는데는 지장이 없긴 한데 커뮤니티를 할 수 있는 능력은 갖고 싶긴합니다
2022. 1. 18. 오후 11:12, 코린이 : 커뮤니티...
2022. 1. 18. 오후 11:12, 코린이 : 일상생활에서 계속 영어를 써야 느는거 같은데 그게 쉽지않죠
2022. 1. 18. 오후 11:12, 유용태 (teo.yu) : 그러게요

2022년 1월 19일 수요일
2022. 1. 19. 오전 11:18: 강승진님이 들어왔습니다.
2022. 1. 19. 오전 11:18, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 19. 오전 11:20, 유용태 (teo.yu) : 안녕하세요 강승진님 반갑습니다 :)
2022. 1. 19. 오전 11:20, 강승진 : 안녕하세요~
2022. 1. 19. 오전 11:22, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 얘기를 하면서 노는 곳입니다. 궁금한 게 있거나 다른 개발자들은 뭐하면서 사는 지 궁금하실때 편하게 글 남겨 주세요.
2022. 1. 19. 오전 11:23, 유용태 (teo.yu) : 좋은 링크나 공유하고 싶은 자료가 있거나 본인이 공부하신 자료 올리셔도 좋아요~ 저희 링크에 있는 내용 한번 보시면 좋을 것 같아요
2022. 1. 19. 오전 11:33, 강승진 : 넵 아직 궁금한건 없지만 개인적으로 vite, vue3 (nuxt3) unocss 기반 프로젝트 구축에 관심이 있어요!
블로그 글 보다가 관심사가 많이 겹쳐서 여러 관점들을 보고자 입장했어요 👀
2022. 1. 19. 오전 11:34, 유용태 (teo.yu) : vue 에코 시스템에 살고 계시는 군요! 멋지네요 ㅎ
2022. 1. 19. 오전 11:47, 유용태 (teo.yu) : vue3는 이제 정식으로 오픈했던데 어떠신가요? 아직 vue3는 회사에서 쓰고 있는 팀이 없어서요
2022. 1. 19. 오전 11:49, 강승진 : 사실 사내에서는
2022. 1. 19. 오전 11:51, 강승진 : vue2 vue-server-renderer webpack 기반으로 사용중이라 아직 사용하고있진 않지만 다음 마이그레이션 작업에 사용하려고 여러모로 리서치중이예요
2022. 1. 19. 오전 11:51, 강승진 : vite 도 사용하려고 했던게 webpack 빌드만 1분30초가 걸리는 상황이 오다보니 기존 프로젝트에 일단 끼얹어보자! 하고 진행을 했지만
2022. 1. 19. 오전 11:51, 유용태 (teo.yu) : 그쵸 vite를 쓰면 돌아가기 싫죠 ㅋ
2022. 1. 19. 오전 11:52, 강승진 : csr 까지는 어찌저찌 잘 커버가 됐는데 (일부 패키지는 모듈 로드방식이 다르기때문에 patch-package 가 필요했지만요..)
2022. 1. 19. 오전 11:52, 강승진 : 저희가 ssr 을 nuxt 를 쓰는게 아니고 로우레벨이라 해야할지.. 공식에서 제공하는 서버 렌더러 기반으로 구성이 돼있어서
2022. 1. 19. 오전 11:52, 강승진 : vite 레퍼런스가 없기도 하고, vue2 는 지원을 크게 해주지 않는편이라 ssr 에서 막혀서 포기했어요
2022. 1. 19. 오전 11:52, 유용태 (teo.yu) : 아~ 아직 만들어지기 전 레벨이군요
2022. 1. 19. 오전 11:54, 유용태 (teo.yu) : 저도 처음에는 svelte로 ssr이 안되었는데 굳이 ssr을 할 필요가 없어서 다행히 SPA로 세팅했다가
2022. 1. 19. 오전 11:54, 유용태 (teo.yu) : 이제 sveltekit이 나와서 갈아타려고는 하는데 굳이 SSR이어야 하나 하는 생각은 있어요
2022. 1. 19. 오전 11:56, 강승진 : 네 ssr 이 발잡는게 참 많습니다.. ㅋㅋㅋ 하더라도 대형 jamstack 프레임웍을 사용했어야 했는데 당시엔 nuxt 가 베타딱지여서..
2022. 1. 19. 오전 11:56, 강승진 : 저는 참고로 막혔던게 
https://github.com/vitejs/vite/issues/5904#issuecomment-1004622000
요런 이슈입니다
2022. 1. 19. 오전 11:56, 유용태 (teo.yu) : 공감합니다 그래도 왠지 vite라면 nuxt 이번에는 엄청 쉽게 해주지 않을까요?
2022. 1. 19. 오전 11:56, 강승진 : 네 맞아요 nuxt3 가 기본으로 vite 기반이기도 하고
2022. 1. 19. 오전 11:57, 강승진 : 만약에 nuxt2 를 썼다면 공식 커뮤니티에서 vite 호환 가능한 플러그인을 제공하기 때문에 사용할 수 있었을텐데
2022. 1. 19. 오전 11:58, 강승진 : nuxt 자체가 ssr transform 자체를 꽤나 커스텀하게 많이하고있어서 
기본만 제공하는 vue server renderer 로는 nuxt 만큼 커스텀하기가 ㅋㅋ;
2022. 1. 19. 오전 11:58, 유용태 (teo.yu) : nuxt를 쓰게 되면 백엔드 분들은 어떻게 생각하세요?
2022. 1. 19. 오전 11:59, 유용태 (teo.yu) : 저는 JAVA서버를 쓰고 있다보니 SSR 서버를 하기 힘든 부분도 있었거든요
2022. 1. 19. 오후 12:00, 강승진 : 지금 프로젝트의 노드 서버가 bff 역할까지 수행하고있진 않고 단순히 ssr 렌더러 정도로만 운영중이여서 음 완전히 분리돼있어요
2022. 1. 19. 오후 12:01, 강승진 : 레거시웹은 장고에서 템플릿을 렌더하고 있었다가, 지금은 거의 모두 node ssr vue 쪽으로 ssr spa 로 마이그레이션을 해서 

아직 앞단은 장고를 거치긴 하지만 
일부 path 를 제외하고 리버스 프록싱 하는식으로 돼있습니다
2022. 1. 19. 오후 12:03, 강승진 : 백엔드분들은 따로 api gateway 로 api 만 작업해주는 역할이시고 
프론트엔드쪽 인프라는 프론트엔드 팀이나 플랫폼 팀에서 역할을 갖고 있는 구조예요~!
2022. 1. 19. 오후 12:09, 강승진 : tmi 로 동문서답 한 것 같은데 백엔드 분들은 오히려 백엔드 인프라의 레거시 웹과 분리돼서 좋아한다고 해야할까요.. 그런 느낌입니다 ! ㅋㅋㅋ;
2022. 1. 19. 오후 12:09, 유용태 (teo.yu) : 오오~~ BFF를 하시는군요
2022. 1. 19. 오후 12:16, 유용태 (teo.yu) : 저희는 인프라 승인 받는게 영 까다로와서 그냥 cdn에다가 정적파일로 몰아서 올리고 있는 데 오히려 더 좋은 것 같아
2022. 1. 19. 오후 12:16, 유용태 (teo.yu) : 요
2022. 1. 19. 오후 12:24, 유용태 (teo.yu) : 그래서 배포 스크립트를 작성해서 버전이랑 함께 cdn으로 배포하고 필요할때 롤백하는 시스템을 만들면 어떨까요? 해서 오~~ 했지만 아직도 안 만들고 있습니다 ㅋㅋ
2022. 1. 19. 오후 12:26, 유용태 (teo.yu) : unocss는 좀 어떤가요? 저 혼자만의 경쟁작 라이브러리입니다만 ㅋㅋ
2022. 1. 19. 오후 12:33, 강승진 : 사실 사용해보기 전이라 아직 인상은 없어요 ㅋㅋ; 아무래도 antfu 기여가 많은 nuxt, vite 기반에서 잘 돌아가도록 해놨다보니 눈여겨봤어요
2022. 1. 19. 오후 12:35, 유용태 (teo.yu) : 그러시군요~ 나중에 사용기 한번 부탁드립니다 tailwind와 같은 방식에 대해서는 효용체감은 확실히 있다고 생각해요 ㅎ
2022. 1. 19. 오후 1:04, 유용태 (teo.yu) : 사진
2022. 1. 19. 오후 1:05, 유용태 (teo.yu) : 오늘 구글 스프린트 2기 참가자들은 밤 11시 까지 만들고 싶은 아이디어를 가지고 https://gather.town/app/BF5knX8KBmXFn5CU/teo 로 모여주세요 :)
2022. 1. 19. 오후 1:06, 유용태 (teo.yu) : 톡게시판 '공지': 오늘 구글 스프린트 2기 참가자들은 밤 11시 까지 만들고 싶은 아이디어를 가지고 https://gather.town/app/BF5knX8KBmXFn5CU/teo 로 모여주세요 :)
2022. 1. 19. 오후 1:08, j : 다들 화이팅이에요!!
2022. 1. 19. 오후 1:13, Vintz : 추억의 장소네요..2기 여러분 홧팅입니다!!💪
2022. 1. 19. 오후 1:29, 썰~~ : 화이팅입니다 ㅎㅎ
2022. 1. 19. 오후 1:33, 프론트 : 궁금한게 하나 있는데요 ! 프론트 자체만으로도 비즈니스 로직을 느낄 수 있을만한 프로젝트가 어떤 것들이 있을까요???(캘린더 일정관리 같은?)
2022. 1. 19. 오후 1:34, 유용태 (teo.yu) : 구글 시트나 문서와 같은 문서 편집도구나
2022. 1. 19. 오후 1:34, 프론트 : 오 그러네요!
2022. 1. 19. 오후 1:34, 유용태 (teo.yu) : 캔버스와 같은 도구
2022. 1. 19. 오후 1:35, 유용태 (teo.yu) : 이상형 월드컵이나 YES / NO 선택을 통한 시나리오 분기 이벤트?
2022. 1. 19. 오후 1:35, 유용태 (teo.yu) : 이벤트성 미니 게임
2022. 1. 19. 오후 1:35, 유용태 (teo.yu) : 키오스크
2022. 1. 19. 오후 1:36, j : api 받아다가 데이터 보여주는 사이트
2022. 1. 19. 오후 1:36, j : 코로나때 마스크 현황 같은
2022. 1. 19. 오후 1:39, 프론트 : 다양한 방법들이 많군요 역시 ! 여기선 정말 다양한 의견들을 들을 수 있어서 참 좋은 것 같아요.
2022. 1. 19. 오후 1:39, 프론트 : 이모티콘 
2022. 1. 19. 오후 1:41, 공공 : 요것과 같은 맥락으로 figma나 protopie같은 디자인/프로토타이핑 서비스들이 구체적 예가 될 것 같아요! 🙂
2022. 1. 19. 오후 1:42, 유용태 (teo.yu) : TTS와 STT를 이용해서 영어 학습 서비스도 프론트만 가지고도 만들어봤어요
2022. 1. 19. 오후 1:47, 피카츄돈까스/React,RN : CURD만 구현해도 볼 수 있지 않나욤? 그래서 메모앱을 처음에 다들 만드는게 아닐까 합니답
2022. 1. 19. 오후 1:48, 피카츄돈까스/React,RN : 아 말투가 너무 이상하네요!!!
2022. 1. 19. 오후 1:49, 피카츄돈까스/React,RN : 죄송합니다!
2022. 1. 19. 오후 2:15, Hardy : 다들 프론트엔드 개발자가 네트워크 지식을 어느정도까지 알아야 한다고 생각하시나요?
2022. 1. 19. 오후 2:16, Hardy : 최소한 이정도는 알아야한다라는 생각을 가지신 분 계신가요?
2022. 1. 19. 오후 2:17, 유용태 (teo.yu) : 다다익선이긴 한데 내가 sass를 이용하건 뭘 이용하건간에 서비스를 릴리즈 할 수 있는 1가지의 방법은 알고 있어야 된다고 생각해요
2022. 1. 19. 오후 2:17, 유용태 (teo.yu) : (+DB 포함)
2022. 1. 19. 오후 2:18, Hardy : 오늘 면접에서 https가 암호화를 진행하는 과정을 설명해달라는 질문을 받아서 벙쪘습니다 ㅠ
2022. 1. 19. 오후 2:18, 유용태 (teo.yu) : 오!
2022. 1. 19. 오후 2:19, 유용태 (teo.yu) : 저도 그럴듯 합니다 ㅋ
2022. 1. 19. 오후 2:19, Hardy : 근데 계속 네트워크 질문만 하셔서 ㅠㅠㅠ 슬퍼요
2022. 1. 19. 오후 2:19, 유용태 (teo.yu) : 백엔드가 면접자이시고 그 회사는 그게 중요한가 보네요
2022. 1. 19. 오후 2:19, 개발닥 : 혹시 l모사이신가요
2022. 1. 19. 오후 2:19, Hardy : 아닌것같습니다 ㅎㅎ
2022. 1. 19. 오후 2:20, 개발닥 : 저도 집요하게 물어봐서
2022. 1. 19. 오후 2:21, 개발닥 : 저도 프론트인데 https부터 시작해서 암호화 알고리즘 찍고 nginx까지 물어보던데 범위가 없는것 같아요
2022. 1. 19. 오후 2:21, Hardy : 테오가 말한대로 회사마다 원하는 방향이 있는 것 같아요
2022. 1. 19. 오후 2:24, 유용태 (teo.yu) : 전에 글에도 썼지만 화면을 만드는 것 보다 백엔드를 잘 이해해서 데이터를 잘 받아오는 것을 잘하기를 워하는 곳이 훨~씬 더 많아요
2022. 1. 19. 오후 2:24, 유용태 (teo.yu) : *원
2022. 1. 19. 오후 2:25, Hardy : 면접 자리에 백엔드 분이 함께 하는 경우도 많더라고요
2022. 1. 19. 오후 2:25, 유용태 (teo.yu) : 그렇죠 상대적으로 면접에 오시는 백엔드 시니어가 훨씬 더 많겠죠. 프론트엔드는 태생이 얼마 안되었으니
2022. 1. 19. 오후 2:43, 리린이 : 안녕하세요. json타입으로 서버에 request할 때 key를 아예 보내지 않으려면 어떤 방법으로 개발들을 하시나요?
2022. 1. 19. 오후 2:44, 유용태 (teo.yu) : key를 안보낸다는게 어떤 의미인가요?
2022. 1. 19. 오후 2:44, 리린이 : 예를들어.. 회원정보를 얻고싶을 때 name, age가 필요한데,
{
name: 'mike'
age: ''
}
식으로 보내지않고 ,
{
name: 'mike'
}
방식으로만 보내고싶습니다.
2022. 1. 19. 오후 2:44, 리린이 : const [values, setValues] = useState({
	name: '',
	age: '',
});
로 초기화되어있습니다.
2022. 1. 19. 오후 2:45, 유용태 (teo.yu) : undefined하면요?
2022. 1. 19. 오후 2:45, 유용태 (teo.yu) : 확실히 없애기 위해서는 delete params.age
2022. 1. 19. 오후 2:45, 리린이 : 넵
2022. 1. 19. 오후 2:45, 유용태 (teo.yu) : 이런식으로 하면 되긴 하는데
2022. 1. 19. 오후 2:45, 리린이 : 초기화를 undefined로 하면 리퀘스트할때 안보내지긴 하는데
이상한 것 같더라구요
2022. 1. 19. 오후 2:45, 파이버 : 저는 개인적으로 언디파인드를 값으로 쓰는 걸 별로 안 선호해서 이렇게 할 거 같아요

(조건) ? values : { name: values.name }
2022. 1. 19. 오후 2:47, 설아아빠 : 저도 그냥 {name:values.name}으로 새로 만들어서 보내여
2022. 1. 19. 오후 2:47, Hardy : 이스턴웨어 도메인이 특이하네요 ㅋㅋ
2022. 1. 19. 오후 2:47, 설아아빠 : 저두 눌러봄 ...
2022. 1. 19. 오후 2:47, 설아아빠 : ㅋㅋㅋ
2022. 1. 19. 오후 2:48, 리린이 : 만약에 검색 조건이 10개면
2022. 1. 19. 오후 2:48, 리린이 : {
	name: values?.name
age: values.age
…
>>>
}
이런식으로 새로 만들어서 쓰시는걸 선호하시나요!?
2022. 1. 19. 오후 2:49, 설아아빠 : 엄청 많으면 그냥 delete해서 보냈는데 궁금하네요 저두 ㅋㅋ
2022. 1. 19. 오후 2:49, 파이버 : 그떄그때 다르게 쓰는 거 같습니다!
2022. 1. 19. 오후 2:49, 리린이 : 확실하긴한데.. 뭔가 길어지는 것 같아서 초기화 단에서 끝낼수없나 궁금해서요. ㅋㅋㅋ
2022. 1. 19. 오후 2:50, 파이버 : { age, …data } 로 분해한 다음에 보내는 방법도 있고
2022. 1. 19. 오후 2:51, 리린이 : 아 뭔가.. 어렵네요 ㅋㅋ
2022. 1. 19. 오후 2:51, 파이버 : (({ name }) => ({ name }))(values) 이런 방법도..
2022. 1. 19. 오후 2:51, 파이버 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 19. 오후 2:52, 리린이 : 으악 ㅋㅋㅋ
2022. 1. 19. 오후 2:53, 리린이 : 아 선배님들 여긴 프론트엔드에 관한 내용이면 어떤것이든 얘기하는 자리라고 하시니 연봉협상에 관한 의견들이 좀 궁금한데요..
2022. 1. 19. 오후 2:54, 리린이 : 다음주에 연봉협상을 앞두고있는데 성과를 많이 냈고 인정받았는데,
2022. 1. 19. 오후 2:54, 프론트 : 연봉협상인가요 연봉통보?인가요
2022. 1. 19. 오후 2:54, 리린이 : 협상입니다. 정해진 테이블은 없어서요
2022. 1. 19. 오후 2:55, 리린이 : 근데 곧 결혼을 앞두고있으니 몇퍼센트 더 올랐으면 좋겠다고 얘기를 꺼내도 괜찮을까요? ex) 성과만 얘기했을때는 20퍼센트 요구 , 결혼얘기를 같이 꺼내며 23~25퍼센트 요구
2022. 1. 19. 오후 2:56, 리린이 : 스타트업입니다.. 시리즈A
2022. 1. 19. 오후 2:56, 리린이 : 사람이랑 얘기하는거니 어느정도는(?) 좀 먹히지 않을까 싶은데 공과사는 확실히 구분하는게 맞는것인지..ㅎㅎ
2022. 1. 19. 오후 2:57, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 19. 오후 2:57, Luke : 정답은 없죠. 저희가 리린이님 회사 연봉담당자 성향을 아는 것도 아니다보니 조언드리기는 좀 그렇긴 한데요, 저라면 부를 거 같아요. 불러서 안된다그러면 어쩔 수 없는데, 부르지도 않아보는 건 두고두고 후회할 거 같아서요
2022. 1. 19. 오후 2:57, 화가난다 화가나 그래서 난 화가임 : 책에서 읽을 때는 MSB가 가장 좌측 비트값, LSB가 가장 우측 비트값이라고 봤는데
2022. 1. 19. 오후 2:57, 화가난다 화가나 그래서 난 화가임 : 저런 내용 보니까, 그저 암기를 한 제가 후회스럽네용 ㅋㅋㅋ
2022. 1. 19. 오후 2:58, 개발닥 : undefined 빼는
2022. 1. 19. 오후 2:58, 리린이 : 네 정답은 없는 것 같네요. 하지만 얘기 안하면 나중에 후회할 것 같긴합니다.ㅎㅎ
2022. 1. 19. 오후 2:58, 개발닥 : 함수를 하나 만들어서 쓰시는게 좋을것 같아요
2022. 1. 19. 오후 2:58, 설아아빠 : 결혼얘기를 꺼내면서 25%요구하면 23%정도에 합의되지않을까요 ㅋㅋㅋ
2022. 1. 19. 오후 2:58, Luke : 일단 고민하지 말고 던져서 고민도 저쪽에서 하게하시죠
2022. 1. 19. 오후 2:58, 리린이 : 얘기 꺼내고싶긴한데 긁어부스럼? 되지 않을까 괜히 겁나서요
2022. 1. 19. 오후 2:59, 리린이 : 루크님 조언 감사드립니다. ㅎ
2022. 1. 19. 오후 2:59, Luke : 잘 되셨으면 좋겠습니다
2022. 1. 19. 오후 2:59, 설아아빠 : 뭐 있나요 ㅋㅋ 그냥 질러보는거죠 ㅋㅋ
2022. 1. 19. 오후 2:59, 리린이 : 테오님같은 시니어분들의 입장에서는 어떻게 받아들이실지 좀 궁금하네요 ㅎ
2022. 1. 19. 오후 3:00, 리린이 : 아 그런식으로 하는게 확실하긴 하겠네요 ㅎㅎ
2022. 1. 19. 오후 3:04, 프론트 : 저라면 처음엔 성과만 얘기하며 25%를 요구하며 사측에서 합의 요구할 때 결혼이야를 하며 감정에 호소할 듯 해요 ㅋㅋ
2022. 1. 19. 오후 3:05, 개발닥 : lodash나 underscore 쓰시면
2022. 1. 19. 오후 3:05, 개발닥 : 관련 함수도 내장되어져있어요
2022. 1. 19. 오후 3:11, 퍼블퍼블 : 앗 결혼앞두고 있으면 왜 연봉이 더 높나용?
2022. 1. 19. 오후 3:18, 리린이 : 결혼 앞두고 연봉이 높기보다는 결혼할 때 들어가는 돈이 많으니 많이 올려주세요 라는 이야기였습니당.. ㅎㅎ
2022. 1. 19. 오후 3:25, j : 음 저라도 성과 + 앞으로 기여할 방양 해서 25% 부르고 안되겠다 하면 그때 결혼이야기 꺼낼거 같습니다
2022. 1. 19. 오후 4:26: 엉망장자님이 들어왔습니다.
2022. 1. 19. 오후 4:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 19. 오후 4:27, 유용태 (teo.yu) : 안녕하세요 엉망장자님~ 반갑습니다 :)
2022. 1. 19. 오후 4:27, 엉망장자 : 안녕하세요 ㅎㅎ. 벨로그 글 정주행하다 발견해서 들어왔어요
2022. 1. 19. 오후 4:27, 엉망장자 : 너무 잘 읽고 있어요 ㅜㅜ
2022. 1. 19. 오후 4:27, 유용태 (teo.yu) : 감사합니다~ 환영합니다.
2022. 1. 19. 오후 4:27, 유용태 (teo.yu) : ㅎ
2022. 1. 19. 오후 4:29, 유용태 (teo.yu) : 여기는 개발자들 끼리 개발 얘기하고 궁금한거 있을때 물어보고 다른 개발자들은 뭐하고 사는지 이런거 궁금할때 편하게 글 남겨주세요 :0
2022. 1. 19. 오후 4:30, 유용태 (teo.yu) : 좋은 자료나 글 보이면 링크 공유 해주시면 저희끼리 또 잘 보고 있습니다. 재미난 글 보고 싶으시면 저희 링크 자료 한번 읽어보세요 ㅎ
2022. 1. 19. 오후 4:31, 엉망장자 : 앗 ㅎㅎ 네네 감사합니다
2022. 1. 19. 오후 4:32, 유용태 (teo.yu) : 어떤 글을 재밌게 보셨나요? +_+
2022. 1. 19. 오후 4:33, 엉망장자 : 역사 시리즈는 다 재미있었고 특별히 구글스프린트 소개글이 재밌었어요! ㅋㅋ
2022. 1. 19. 오후 4:34, 유용태 (teo.yu) : 오! 감사합니다. 참고하겠습니다. :)
2022. 1. 19. 오후 4:34, 엉망장자 : 이모티콘 
2022. 1. 19. 오후 4:41, 리린이 : 안녕하세요 태오님 위에 제가 다른 분들이랑 대화했던 토픽이 하나 있는데 혹시 태오님은 어떻게 생각하시는지 간단하게 답변해주시면.. 정말 감사드리겠습니다.. ㅎㅎ
2022. 1. 19. 오후 4:44, 유용태 (teo.yu) : 읽어 보고 왔습니다. 돈은 좀 조심스러운 부분이라서 확답을 드리기가 어렵네요
2022. 1. 19. 오후 4:45, 유용태 (teo.yu) : 스타트업은 잘 모르겠지만 제가 본 통계(?)에 의하면 평균적인 인상율은 2~3% ? 4~5%? 정도의 수준이고 많이 올리는게 10%~15% 였습니다.
2022. 1. 19. 오후 4:46, 유용태 (teo.yu) : 평균적인 부분이니 편차에 대해서는 확실하게 말씀드리기가 어렵네요
2022. 1. 19. 오후 4:46, 리린이 : 아 제가 무리한 답변을 요구했네요 ㅠ죄송합니다. 그래도 정보 감사드립니다. ㅎㅎ
2022. 1. 19. 오후 4:46, 유용태 (teo.yu) : 어차피 지르실꺼라면 확실히 높게 말씀을 드리는 것은 좋겠으나
2022. 1. 19. 오후 4:46, 유용태 (teo.yu) : 그 %에 대한 근거가 성과만으로 얘기한다면 좀 평행선을 갈 공산이 있습니다.
2022. 1. 19. 오후 4:47, 파이버 : 살짝 참고차 첨언하면 친구중에 1년차에서 2년차 갈 때 70% 오른 애가 있긴 합니다.. 요즘 개발자 연봉이 워낙 올라서 그런지
2022. 1. 19. 오후 4:47, 유용태 (teo.yu) : 회사의 방침이라던가 구두약속(?) 이라던가 이런게 없다면 형평성의 이유로 조정 당할수 있어서
2022. 1. 19. 오후 4:47, 유용태 (teo.yu) : 와...
2022. 1. 19. 오후 4:47, 리린이 : 그렇군요. ㅎ 답변 감사드립니다 ㅎㅎ
2022. 1. 19. 오후 4:47, Hardy : 그런 경우는 회사 상황도 잘 풀린 경우여야 하지 않나요 엄청나네요
2022. 1. 19. 오후 4:47, 파이버 : 한 세명 그렇더라고요 스타트업인데
2022. 1. 19. 오후 4:47, 유용태 (teo.yu) : 정말 세상이 다르네요
2022. 1. 19. 오후 4:47, 유용태 (teo.yu) : 아무래도 다른 회사의 평균 임금에 비해서 낮다면
2022. 1. 19. 오후 4:47, 파이버 : 요즘 스타트업들 장난아니더라고요
2022. 1. 19. 오후 4:47, 코린이 : 와 .. 그정도면 유니콘같은 풀스택 개발자들인가요
2022. 1. 19. 오후 4:48, 유용태 (teo.yu) : 맞추는 정도의 금액을 이유로 얘기를 해보시는 것은 좋을것 같습니다
2022. 1. 19. 오후 4:48, 리린이 : 미국으로 가셨나 ..
2022. 1. 19. 오후 4:48, 파이버 : 그래서 회사 상황이랑 주변 연봉 따라 다를 거 같아요 저도
2022. 1. 19. 오후 4:48, 파이버 : 코인파워..
2022. 1. 19. 오후 4:48, 리린이 : 네 감사합니다. ㅎ
2022. 1. 19. 오후 4:49, 리린이 : 협상자리에서 원티드에 나온 제 연차의 평균연봉과 대조하여 얘기하려합니다.
2022. 1. 19. 오후 4:49, 유용태 (teo.yu) : 상황을 몰라서 혹은 알아도 예단하기 어려운 부분이라 상담보다는 그냥 얘기만 들어 줄 수 있을 것 같에뇨
2022. 1. 19. 오후 4:49, 유용태 (teo.yu) : 네! 그게 좋을 방향이라고 생각합니다
2022. 1. 19. 오후 4:49, 리린이 : 예를들어.. 원티드에서 3년차가 2000만원이라면
2000만원에 제 성과 + 개인사유까지 추가하여
2100만원을 받고싶습니다. 라고요
2022. 1. 19. 오후 4:50, 유용태 (teo.yu) : 그리고 연봉 베이스 업이 아닌 다른 보상 수단에 대해서도 열어두세요~
2022. 1. 19. 오후 4:50, 리린이 : 네네 참고하도록 하겠습니다. 감사합니다
2022. 1. 19. 오후 4:50, 유용태 (teo.yu) : 좋은 결과 있어서 막 자랑글을 써주셨으면 좋겠네요! 응원합니다!
2022. 1. 19. 오후 4:50, 리린이 : 자랑할 수 있는 결과가 나왔으면 좋겠네요 ㅎㅎ
2022. 1. 19. 오후 5:34, 떨고있는 어피치 : 사진
2022. 1. 19. 오후 5:35, 떨고있는 어피치 : 제 점수가 너무 낮네요 ㅋㅋㅋ
2022. 1. 19. 오후 5:35, 유용태 (teo.yu) : ㅋㅋㅋ 이제 빨리 공부하시고 점수를 올리세요 ㅎ
2022. 1. 19. 오후 5:35, 떨고있는 어피치 : 진짜 못들어본게 생각보다 많구용....
2022. 1. 19. 오후 5:35, Hardy : 링크 다시 한번 부탁드려도 될까요?
2022. 1. 19. 오후 5:35, 떨고있는 어피치 : 제가 태그한 대화로 가보시면
2022. 1. 19. 오후 5:35, 유용태 (teo.yu) : https://stateofjs.com/
2022. 1. 19. 오후 5:35, Hardy : 오 감사합니다!
2022. 1. 19. 오후 5:36, 떨고있는 어피치 : ㅈㅐ밌긴하네요 ㅋㅋㅋ
한 번 스터디한다고 생각하고
질문에 나온 것들만 추려서 검색해보고 사용해봐야겠어요
2022. 1. 19. 오후 5:46, Hardy : 사진
2022. 1. 19. 오후 5:47, Hardy : 은근 들어본게 많나봅니다 ㅋㅋㅋ
2022. 1. 19. 오후 5:50, Hardy : https://nax.naver.com/index
2022. 1. 19. 오후 5:50, Hardy : 이런 체험도 있네요
2022. 1. 19. 오후 5:51, Hardy : 장애 별로 웹을 체험해볼 수 있어요
2022. 1. 19. 오후 5:52, 엉망장자 : 와 이건 좀 생각해본 적 없어서 신기하네요
2022. 1. 19. 오후 5:53, Hardy : 교육 과정은 많아졌는데 이런 부분은 전혀 언급조차 없더라고요
2022. 1. 19. 오후 6:09, 스타트업개발자 : monorepo 쪽을 공부중인데
yarn 1 + lerna / yarn2 로 나뉘는 느낌인데 혹시 사용하시는 분들 계실까요?
2022. 1. 19. 오후 6:41, 자율 : 저 궁금한게 있는데 현업에서는 함수형보다 class로 많이 사용하나요????
2022. 1. 19. 오후 6:43, 유용태 (teo.yu) : 자바스크립트가 클래스가 매력적으로 설계되어 있지 않아서 굳이 객체지향으로 작성하는 경우는 별로 없는 것 같아요 특히 주류인 React가 클래스를 지향하지 않다보니
2022. 1. 19. 오후 6:44, 유용태 (teo.yu) : 회사에서 쓰고 있던 프로젝트는 봤었구요 제가 Deep하게 관여하는 프로젝트가 아니라서요 어떤게 궁금하세요?
2022. 1. 19. 오후 6:45, 프린이 : 백엔드 라이브러리인 nest.js에선 class 잘 활용하는거 같았습니다!
2022. 1. 19. 오후 6:45, 프린이 : 프레임워크라고 해야하나..
2022. 1. 19. 오후 6:45, 유용태 (teo.yu) : 맞아요angaulr 계열은 class 좋아해요
2022. 1. 19. 오후 6:50, 개발닥 : 앵귤러는 클래스밖에 없지 않나요?
2022. 1. 19. 오후 6:51, 유용태 (teo.yu) : 그치만 상태관리는 rxjs를 쓰니까 함수형 끝판왕도 함께 쓰죠 ㅋㅋ
2022. 1. 19. 오후 6:52, 자율 : 우와 감사합니다 ! 책 보는데 class가 나와서 궁금했어요 !!
2022. 1. 19. 오후 6:53, 개발닥 : 혼종…
2022. 1. 19. 오후 6:53, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 19. 오후 6:54, 리린이 : 함수컴포넌트.. 편한듯 이거 쓰니까 extends 이제 못쓰겠어요 ..ㅋㅋㅋㅋ
2022. 1. 19. 오후 7:00, 개발닥 : 함수컴포넌트는 진짜 사기같아요
2022. 1. 19. 오후 7:00, 프린이 : 상태까지 ㄷㄷ
2022. 1. 19. 오후 7:05, 꼬북 : 사용해본적있는데 명칭을 몰랐던게 많네요 ㅋㅋ
2022. 1. 19. 오후 7:12, 꼬북 : 사진
2022. 1. 19. 오후 7:12, 꼬북 : 테오가 생각나는 문항...
2022. 1. 19. 오후 7:12, 엉망장자 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 19. 오후 7:14, 결과보단 과정을 / React,JS : recoil 사용하다가 궁금한점이 있는데요.  2개의 (A,B) text input 이 있고, 1개의 (C) select input이 있을 경우, A,B는 같은 text input용 custom hook을 사용하고, C는 select input 용 custom hook을 사용하는데, C가 바뀔때 A만 바뀌게 하고 싶은데, 이럴 경우, custom hook을 수정하지 않고 사용할 수 있는 방법이 있을까요?
2022. 1. 19. 오후 7:24, 책팔아요 : Next로 웹 모바일 전용 페이지를 만드려고 하는데요 혹시 다들 어떤 css프레임워크로 만드시나요..?? antd-mobile이라는 것도 있고 material로도 하는 것 같구요.. tailwind도 모바일 전용 웹페이지를 만드는데 사용성이 좋나요..??
2022. 1. 19. 오후 7:25, 개발닥 : 요구사항마다 다를것 같아요
2022. 1. 19. 오후 7:30, 책팔아요 : device-detect로 모바일 페이지랑 웹페이지를 각각 구현하려고 합니다
2022. 1. 19. 오후 8:31, 홀리몰리 : 공부가 목적이신가요??
2022. 1. 19. 오후 8:33, 프린이 : 전 스타일은 직접 하는 편입니다
2022. 1. 19. 오후 8:51, 썰~~ : 일단 기능적인 측면때문에
2022. 1. 19. 오후 8:51, 썰~~ : 저는 사용하긴하는데 스타일 커스텀은 직접 합니다
2022. 1. 19. 오후 8:53, 유용태 (teo.yu) : 코드가 없으면 질문을 이해하기 어려운것 같아요
2022. 1. 19. 오후 9:12, 공공 : js는 프로토타입 기반이니, 객체 지향도 프로토타입 언어의 특성을 살려서 설계하는 방향으로 적용해야 한다는 언급을 몇 번 본 것 같은데요, js 특성을 살리는 객체지향이라는 게 따로 있을까요..? 딱히 잘 떠오르진 않더라구요
2022. 1. 19. 오후 9:13, 결과보단 과정을 / React,JS : 제가 생각해도 코드 없으면 난해한 질문이긴 하네요. ㅎㅎ
2022. 1. 19. 오후 9:22, 유용태 (teo.yu) : 예전에는 프로토타입을 이용해서 만드는 플러그인 방식 - 대표적인게 jquery인데 - 객체를 만들곤 했지만 점점 함수형은 pipe로 함수를 조립하는 방향으로 객체는 class를 쓰는 방향으로 세분화 되고 있는 것 같아요
2022. 1. 19. 오후 9:27, 유용태 (teo.yu) : 프로토타입으로 객체를 만들면 interface나 class 없이도 객체를 만들 수 있다는게 장점이서 es4에서 class를 넣었다가 폐지되고 es5에서 함수형으로 만들어졌다가 결국 es6에서  class 문법이 다시 부활했지요
2022. 1. 19. 오후 9:27, 유용태 (teo.yu) : 자바스크립트 이권(?)을 두고 객체지향파랑 함수지향파가 엄청 논의를 한걸로 알고 있어요 ㅎㅎ
2022. 1. 19. 오후 9:35, 공공 : 아아ㅋㅋ class 문법이 정식으로 들어온 뒤에는 아무래도 class를 쓴다면 결국 객체지향이 되는 게 아닐까 싶어서 한번 얘기해봤어요! 종종 자료들이 es6 이전을 기준으로 한다거나 하는 게 섞여있으면 좀 더 헷갈리기도 하고 그렇더라구요
2022. 1. 19. 오후 9:38, 유용태 (teo.yu) : 그렇죠 엔진은 프로토타입인데 결국 문법은 class를 쓰고 있고 class는 사실상 syntax sugar이다 보니 충분히 그렇다고 생각합니다~ 어쩌겠어요 웹이라는 생태계가 그렇게 누더기를 기워서 기워서 만들어가고 있는거라 ㅋㅋㅋ
2022. 1. 19. 오후 9:40, 유용태 (teo.yu) : 그런데 제일 많이 쓰고 있는 언어이기도 하고 영향력도 엄청 크다고 생각하고 다른 정통 객체지향에 비해서 확장성이나 자유도 면에서도 넘사라 완전 객체지향으로 가지는 못할거 같긴합니다
2022. 1. 19. 오후 9:41, 유용태 (teo.yu) : 음.... private가 표준 스펙이 되는 걸 보면 또 모르긴하겠네요
2022. 1. 19. 오후 9:51, 공공 : private도 표준으로 들어오고, TS가 점점 많이 쓰이는 것도 저는 왠지 비슷한 맥락에서 또 모를 일 같아서ㅋㅋ 매번 헷갈리는 지점이네요
2022. 1. 19. 오후 9:53, 유용태 (teo.yu) : ts는 이제 거의 표준이라고 봐도 무방하죠~ 결국 마소가 이겼습니다 ㅋㅋ
2022. 1. 19. 오후 9:55, 유용태 (teo.yu) : 혹시 다른 분들로 ts를 안쓰고 계신다면 ts를 몰라도 그냥 쓰시길 바래요 esbuild의 등장 이후로 ts와 js는 트레이드 오프가 있는 선택지가 아니라 좀 많이 기울어버렸습니다
2022. 1. 19. 오후 9:56, 프린이 : esbuild가 어떻게 ts를 수면위로 더 끌어올렸나요?
2022. 1. 19. 오후 9:57, 유용태 (teo.yu) : tsc의 가장 큰 약점이 타입체크와 느린 빌드 속도였는데 esbuild는 그걸 무색하게 만들어 버렸어요 느림을 감수하더라도 타입체크의 이득을 위해서 엔터프라이즈급에서 썼던 거였는데
2022. 1. 19. 오후 9:58, 유용태 (teo.yu) : tsc 타입 체크는 그냥 IDE툴에서 백그라운드에서 해주고 빌드 속도는 go나 rust와 같은 네이티브 빌드 도구로 속도를 챙겨버리니
2022. 1. 19. 오후 9:58, 유용태 (teo.yu) : js의 단점인 모듈과 번들 타입체킹을 가진 상위호환 언어가 되어버렸어요
2022. 1. 19. 오후 9:59, 공공 : 그렇더라도 처음 배우는 입장이라면 바닐라js는 한번 학습한 뒤에 ts를 더해서 학습해야 헷갈리는 부분이 덜하지 않을까 싶은데, 다른분들 의견은 어떠신지 궁금하네요 🙂
2022. 1. 19. 오후 10:00, 파이버 : js n개월 이상 해봤으면 바로 ts로 넘어가도 된다고 생각합니다!
2022. 1. 19. 오후 10:00, 파이버 : 오히려 타입 덕분에 공부가 더 잘 되는 경우도 있어서
2022. 1. 19. 오후 10:01, 파이버 : 막 초보때

const res = fetch('fake.json);
res.json()

이런 실수 하고 못 찾기 쉬운데 ts는 그거 타입 Promise라고 알려주니까
2022. 1. 19. 오후 10:01, 프린이 : 전 그냥 typescript로 시작해도 괜찮지 않나 싶은데 ㅋㅋ
2022. 1. 19. 오후 10:02, 프린이 : js 파일 보면 어 이거 왜 안되지 싶긴 하겠네요
2022. 1. 19. 오후 10:02, 프린이 : 저도요 ㅋㅋ 타스가 짱..
2022. 1. 19. 오후 10:03, 프린이 : 적절한 비교는 아닐 수 있겠습니다만 c 건너뛰고 c++ 배워도 괜찮다고 생각해서..
2022. 1. 19. 오후 10:04, 프린이 : 굳이 수학1 배우고 수학2 배우듯이 안해도 된다고 생각합니다 ㅋㅋ
2022. 1. 19. 오후 10:05, 유용태 (teo.yu) : 제가 옆에서 알려주는 상황이면 strict:false랑 build에 tsc만 지워주고 해보라고 할듯요
2022. 1. 19. 오후 10:05: 비오는 날 오리와 개구리님이 나갔습니다.
2022. 1. 19. 오후 10:05, 유용태 (teo.yu) : 빨리 넘어갈수는 있다고 생각해요 ts 에러 검출능력이랑 IDE가 워낙 좋아서
2022. 1. 19. 오후 10:09, 프론트 : 근데 프론트와 백엔드 같이 진행할 때 규모가 작은 프로젝트의 경우에는 오히려 프론트에서 타입체크하는게 번거롭더라구요 전 ㅠㅠ 귀찮다고 안하면 나쁜 습관이 들겠죠?
2022. 1. 19. 오후 10:10, 유용태 (teo.yu) : 타입만들어두면 더 해피하실겁니다
2022. 1. 19. 오후 10:10, 유용태 (teo.yu) : ts-node도 좋아요
2022. 1. 19. 오후 10:10, 프론트 : 귀찮다고 다 any로 때려박으시는 분도 있고 …ㅋㅋㅋ
2022. 1. 19. 오후 10:10, 공공 : 저도 꼭 한참 뒤에 배울 필요는 없는 거 같아요ㅋㅋ 그래도 아주 작은 연습용 앱 정도는 바닐라로 만들어보고 넘어가야 ts 적용하고 문제를 만나면 어떤 영역에서 문제가 생기는 건지를 구분하기 좀 더 좋지 않을까 싶더라구요
2022. 1. 19. 오후 10:11, 유용태 (teo.yu) : 안됩니다ㅋ 저는 일단 네트워크 response 결과를 그냥 때려넣고 시작해요 ㅋ
2022. 1. 19. 오후 10:11, 프론트 : 년차 차이 많이 나는 분들은 설득하기도 힘들고 ㅠㅠ any로 덕지덕지 붙은거 보면 왜 타입스크립트 적용했나 하는 회의감 들때도 있더라구요 ㅋㅋㅋ
2022. 1. 19. 오후 10:12, 유용태 (teo.yu) : 그리고 타입스크립트를 잘하는 것은 최대한 타입을 안쓰는 거라고 생각합니다
2022. 1. 19. 오후 10:12, 유용태 (teo.yu) : 최대한 자동추론안에서 놀수 있도록 설계를 해야 한다고 생각해요
2022. 1. 19. 오후 10:15, 프론트 : @type/지원 안하는 외부 라이브러리들은 직접 커스텀해서 정의 하시나요???
2022. 1. 19. 오후 10:18, 프린이 : 웬만해서는 지원 잘 하지 않나요?
2022. 1. 19. 오후 10:19, j : lerna 요
2022. 1. 19. 오후 10:20, 프론트 : 네 ㅋㅋㅋ지원 안하는걸 본적이 없긴 한데 혹시 그런 케이스도 있을까 해서요!
2022. 1. 19. 오후 10:21, 프린이 : 아마 사용법 익히기 전에 누가 타입 정의해둘걸요? ㅋㅋ
2022. 1. 19. 오후 10:22, 프린이 : (넝담입니다)

2022년 1월 20일 목요일
2022. 1. 20. 오전 8:18, 프론트준비생 : 저이번에 프론트엔드국비신청하려는데요 자기소개서제출해야하는데 거기내용중에 이교육과정을듣고 프론투엔드개발자가됐다고했을때 어떤개발자가 되고싶은지 쓰는 란이있습니다 흠..  솔직히 저같은경우는 엄청미래까지는생각하지않는타입인데 뭐라고적어야할지 모르겠더라구요. .혹시 여기계신분들은 3-4년후에 어떤개발자가되고싶은지 목표로설정하고 그러시나요?
2022. 1. 20. 오전 8:20, 유용태 (teo.yu) : 어떤 개발자가 되고 싶냐는 질문의 의미는 내가 이 분야에 대해서 관심을 가지고 전문성을 키우고 싶고 어떠한 서비스를 생각하는지 내가 어떤 커리어를 만들고 싶은지 어떤 사람이 좋은 개발자인지를 생각해보라는 겁니다
2022. 1. 20. 오전 8:22, 프론트준비생 : 아하..  내용중에서도 어떤서비스를 만들고싶은지 나와있었습니다 혹시 용태님같은경우는 어떤서비스를 만들고싶으셨던건가요?
2022. 1. 20. 오전 8:22, 유용태 (teo.yu) : 보통 잘 모를수록 막연할 수 밖에 없으니까 억지로라도 생각을 해보시면 좋을 것 같아요. 아니면 내가 아는 개발자들 중에서 롤모델을 벤치마킹하고 거꾸로 내려와보셔도 좋아요
2022. 1. 20. 오전 8:24, 유용태 (teo.yu) : 저는 비개발자를 위한 개발도구를 만들고 싶었어요~ 개발자가 되면 주위에 참 좋은 아이디어들을 들을 기회가 많은데 그 사람들은 만들 줄을 모르니까요
2022. 1. 20. 오전 8:24, 프론트준비생 : 오... 그방법좋은거같습니다
2022. 1. 20. 오전 8:26, 유용태 (teo.yu) : 완전 노코딩은 힘들다는 것을 좀 느끼고는 아이디어를 코드까지 구체화 하는 과정을 서포트 해주는 도구에 관심이 많아졌구요
2022. 1. 20. 오전 8:26, 유용태 (teo.yu) : 지금은 피그마나 게더 같이 함께 무언가를 만들 수 있는 공간이자 도구라는 컨셉이 제일 끌리고 있긴 하고
2022. 1. 20. 오전 8:28, 유용태 (teo.yu) : 개발보다 어려운게 협업이라 결국은 협업도구이긴한데 협업도구라고만 하면 의미전달이 잘 안되더라구요~ 아직도 고민중입니다 ㅎ
2022. 1. 20. 오전 8:28, 프론트준비생 : 흠.,
2022. 1. 20. 오전 8:28, 프론트준비생 : 고민좀많이해봐야겠네요
2022. 1. 20. 오전 8:29, 유용태 (teo.yu) : 구체적이진 않더라도 비전은 선명하신게
좋습니다~ 그래야 뭘 스스로 공부하고 뭘 스스로 찾아야할지 생기니까요
2022. 1. 20. 오전 8:31, 유용태 (teo.yu) : 면접에서도 항상 나오는 질문이라서 너무 구체적인 명사형의 무슨 무슨 개발자 이런게 아니라 가치관과 방향성 철학 이런것들은 차곡 차곡 쌓아서 생각해보시길 바래요
2022. 1. 20. 오전 8:32, 프론트준비생 : 조언감사합니다!
2022. 1. 20. 오전 8:32, 프론트맨 : 감사합니다 테오님
2022. 1. 20. 오전 8:44, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 20. 오전 8:44, 유용태 (teo.yu) : https://medium.com/xgeeks/clean-up-your-react-component-types-45acec85d4c3?source=email-e012841b24ec-1642612895955-digest.reader-a814a5f664d9-45acec85d4c3----1-58------------------5d3ba0be_847d_43ca_a3da_dabfee743d76-1-704a9479_2282_4dba_8e6e_3d8994eb8054
2022. 1. 20. 오전 8:47, 유용태 (teo.yu) : https://javascript.plainenglish.io/front-end-web-developer-roadmap-97ee759c5a9d?source=email-e012841b24ec-1642612895955-digest.reader-4b3a1ed4f11c-97ee759c5a9d----2-71------------------5d3ba0be_847d_43ca_a3da_dabfee743d76-27-70c0a84b_44a4_4977_a1b6_e3d481702450
2022. 1. 20. 오전 8:55, 프론트준비생 : 저용태님혹시 저 자기소개서다쓰면한번 피드백받아볼수있을까요?
2022. 1. 20. 오전 8:57, 유용태 (teo.yu) : 네~ 얼마든지요 대신 전문가(?)의 피드백 이런 느낌으로는 안 들으셨으면 해요 ㅋ 저도 자소서 7군데 넘게 서류 탈락한 사람이라 ㅋ
2022. 1. 20. 오전 9:03, 프론트준비생 : 헉 감사합니다ㅋㅋ
2022. 1. 20. 오전 9:08, j : 용태님이 너무 상담을 잘해주셨네요!
2022. 1. 20. 오전 9:34: 숨님이 들어왔습니다.
2022. 1. 20. 오전 9:34, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 20. 오전 9:34, 프론트준비생 : 안녕하세요
2022. 1. 20. 오전 9:36, 숨 : 안녕하세요. uxui 디자이너에서 프론트엔드 개발자로 경력 전환 취준하고 있습니다. 여기 계신 모든 분들 반가워요..!
2022. 1. 20. 오전 9:36, 쑥스럽게 인사하는 프로도 : 화이팅입니다 안녕하세요
2022. 1. 20. 오전 9:38, 유용태 (teo.yu) : 안녕하세요~ 반갑습니다 숨님! 어서오세요 :)
2022. 1. 20. 오전 9:38, 유용태 (teo.yu) : 디자인도 가능한 개발자가 되시겠네요! 멋있습니다 ~
2022. 1. 20. 오전 9:40, 숨 : 이모티콘 좋은 말씀 감사합니다!🙈
2022. 1. 20. 오전 9:41, 유용태 (teo.yu) : 여기는 궁금한게 있을 언제든 기꺼이 물어보고 답해주고 남들은 어떻게 하고 있는지 물어보고 알려주고 하는 공간입니다 ;) 언제든 편하게 말 남겨주세요~
2022. 1. 20. 오전 9:42, 유용태 (teo.yu) : 혼자서 하기 힘든게 있거나 같이 해보고 싶은 좋은 아이디어가 있어도 의견 주세요~ 소소한 이벤트 형식으로 활동등도 함께 하고 있습니다
2022. 1. 20. 오전 9:43, 숨 : 네! 받아가는 것 뿐만 아니라 나누는 것도 많았으면 좋겠네요 :) 잘부탁드려요~
2022. 1. 20. 오전 9:43, 유용태 (teo.yu) : 네~!
2022. 1. 20. 오전 9:43, 숨 : 제가 나눌 수 있는것도요..!
2022. 1. 20. 오전 9:56, 프론트 : https://link.medium.com/2V26PUVtXmb
2022. 1. 20. 오전 9:57, 프론트 : 웹팩과 비트 차이점과 설명글 잘 정리되어 있는 것 같아서 공유드립니다 ㅎㅎ
2022. 1. 20. 오전 9:57, 프론트 : 영어긴 하지만 저희에겐 파파고가 있으니까요
2022. 1. 20. 오전 9:57, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 20. 오전 9:57, 유용태 (teo.yu) : 감사합니다 :)
2022. 1. 20. 오전 10:01, 엉망장자 : vite는 vue에서만 사용 가능한건가요??
2022. 1. 20. 오전 10:02, 유용태 (teo.yu) : 아뇨 번들툴입니다. react, vue, svelte, lit, preact 등 대부분의 프레임워크를 지원합니다
2022. 1. 20. 오전 10:03: 디디님이 들어왔습니다.
2022. 1. 20. 오전 10:03, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 20. 오전 10:03, 유용태 (teo.yu) : 안녕하세요 .님~ 반갑습니다 :)
2022. 1. 20. 오전 10:03, 엉망장자 : 오.. 그렇군요 한번 알아봐야겠어요 ㅎㅎ
2022. 1. 20. 오전 10:03, 디디 : 안녕하세요!
2022. 1. 20. 오전 10:03, 유용태 (teo.yu) : 지금 터미널을 열고 npm init vite 한번만 해보세요 ㅋ
2022. 1. 20. 오전 10:04, 엉망장자 : ㅋㅋㅋㅋㅋㅋㅋㅋ넵
2022. 1. 20. 오전 10:27, 스타트업개발자 : 삭제된 메시지입니다. 
2022. 1. 20. 오전 10:28, 스타트업개발자 : get / post 차이점
브라우저 저장소 차이점
스코프란?
일반 함수와 화살표 함수의 가장 큰 차이점.
React Hook
state와 props의 차이는 무엇인가요?
state를 직접 변경하지 않고 setState를 이용하나요?
CORS란?

현재 저희 회사 주니어분들 면접 기술질문 내용인데 너무 쉬운가요,,,? 좀더 보강하고 싶은데 어떤 질문이 또 있을까요?
2022. 1. 20. 오전 10:29, 썰~~ : 저는 실행컨텍스트 물어봤는데
2022. 1. 20. 오전 10:29, 썰~~ : 아무도 대답을 못했
2022. 1. 20. 오전 10:29, 썰~~ : 어요..
2022. 1. 20. 오전 10:30, Hardy : 요즘 면접 많이 다니고 있는 신입으로서 기술 질문도 좋지만 같이 의논할 수 있는 질문도 좋은거 같아요
2022. 1. 20. 오전 10:31, Hardy : 포폴 보시면서 이 부분 어떻게 개선할 수 있을지 같이 고민해주시던 면접관님이 계셨는데 좋았습니다 ㅋㅋ
2022. 1. 20. 오전 10:32, Vintz : 오..그럼 너무 감사할 것 같아요 면접 경험도 좋구
2022. 1. 20. 오전 10:33, Vintz : 그러고보니 저도 한 곳 있었는데 떨어진 후에도 미련이 남더라구요
2022. 1. 20. 오전 10:33, 파이버 : 저 면접때 포이치가 뭐 리턴하냐고 물어보셨는데 진짜 뇌정지 쎄게왔었어요
2022. 1. 20. 오전 10:33, Hardy : 저도 미련 남는 곳이 있죠...
2022. 1. 20. 오전 10:34, 파이버 : 한번도 생각 안해봐서..
2022. 1. 20. 오전 10:34, 프린이 : 포이치 리턴없지않나요?
2022. 1. 20. 오전 10:35, 유용태 (teo.yu) : 없죠 ㅋ
2022. 1. 20. 오전 10:35, 스타트업개발자 : 없어요
2022. 1. 20. 오전 10:36, 프론트맨 : undefined 라고 보면되는건가요?
2022. 1. 20. 오전 10:37, 엉망장자 : 리턴하는 구문이 없는데 굳이 리턴값을 보려고 하면 JS에서 undefined를 할당한다 라고 생각하고 있었는데 아닌가요
2022. 1. 20. 오전 10:49, 파이버 : 앗 저는 없으면 언디파인드를 리턴한다고 알고있었는데
2022. 1. 20. 오전 10:49, 파이버 : 할당이 안돼서 언디파인드가 들어가는 거려나요
2022. 1. 20. 오전 10:52, 유용태 (teo.yu) : 엄밀히 말하면 void이고 값은 undefined가 맞아요
2022. 1. 20. 오전 10:56, 개발닥 : 너무 리액트에 치중한 느낌이 들어욤
2022. 1. 20. 오전 10:57, 개발닥 : 제너럴한 질문도 넣어주시면 리액트 잘 모르는 저같은 사람은 정말 감사할것 같습니다 헤헤
2022. 1. 20. 오전 10:58, 유용태 (teo.yu) : https://taegon.kim/archives/4810
2022. 1. 20. 오전 10:59, 엉망장자 : 그럼 애초에 undefined 리턴인게 맞네요 제가 잘못알았어요 ㅎㅎ..
2022. 1. 20. 오전 11:01, 유용태 (teo.yu) : 제가 첫 면접관이 되고 뭘 질문해야할까 싶어서 참고 했던 글입니다. 그리고 지금은 질문지가 버전업(?)이 되었기에 유출은 아닐꺼라고 생각해서 맨 처음 작성해본 인터뷰 면접 질문 공유합니다.

(주의! 팁 아닙니다. 실제로 이렇게 물어보시는 분 거의 없어요...)
2022. 1. 20. 오전 11:01, 유용태 (teo.yu) : 인터뷰 질문 - 프론트엔드 개발자가 실제로 하는 일을 바탕으로

최우선 역량: 우리 팀이랑 잘 어울릴 것인가?!! 나는 이 친구와 함께 일을 하고 싶은가?


1. 디자이너와 엔지니어 간의 시각적 언어 확립
=> 전업에서 누구와 협업을 가장 긴밀하게 했나요? (디자이너와 백엔드와 기획자와 같은 프론트 동료와) 협업을 하는 방식이나 추구하는 가치 본인의 생각등을 말해보세요.

1. 시각 디자인으로부터 콘텐츠, 브랜드, 기능 등을 표현할 컴포넌트 세트 정의
=> 컴포넌트를 나누는 본인만의 기준이 있다면? 명명 규칙?

1. 컨벤션, 프레임워크, 요구 사항, 시각적 언어, 스펙 면에서 웹 애플리케이션의 기준 확립
=> 가장 최근에 했던 프로젝트의 기술 스택 및 세팅과 컨벤션에 대해 말해보세요.

1. 웹 애플리케이션의 범위를 기기, 브라우저, 화면, 애니메이션의 측면에서 정의
=> PC외에 다른 플랫폼에서의 개발의 애로사항을 말해주세요.

1. 브랜드 충성도, 코드 품질, 관계자의 상품 리뷰를 위한 품질 보증 가이드라인 개발
=> QA를 해본 경험은 있나요? 어떤 식으로 제품의 품질을 올리기 위해 노력했나요?

1. 적절한 간격, 타이포그래피, 헤딩, 글꼴, 아이콘, 여백, 그리드 등을 사용해 웹 애플리케이션 꾸미기
=> 본인은 디자인은 소질이 있다고 생각하세요? 본인의 디자인 철학은?

1. 디자인 가이드라인을 따르며 다양한 해상도에 대응하는 이미지, 디바이스별 목업 등을 사용해 웹 애플리케이션 꾸미기
=> 해상도별 반응형 디자인을 할때의 경험담을 하나 이야기해주세요.

1. 시맨틱, 접근성, 검색엔진 최적화, 스키마, 마이크로포맷 등을 고려하여 웹 애플리케이션 마크업하기
=> 접근성이나 SEO등의 최적화 작업을 해본 경험은 있나요? 어떠한 방식으로 진행했나요? 툴이라던가...

1. API에 접근하여 사용하기 편하고 배터리 소모가 없는 디바이스 및 클라이언트가 인지하는 방식으로 정보를 가져오기
=> WEB RTC에 대해 본인이 자신있게 알고 있는 분야에 대해 한번 설명해 보세요. 

1. 부드러운 애니메이션, 트랜지션, 게으른 로딩(lazy loading), 인터랙션, 애플리케이션 워크플로우를 수행하는 클라이언트 사이드 코드 개발. 대부분 점진적 기능 향상 및 하위 표준 호환성까지 고려
=> IE대응이나 사파리 대응을 해보신 적 있으신가요? 경험담을 이야기 해주세요.

1. CORS(Cross Origin Resource Sharing)을 고려하는 한편 XSS(Cross Site Scripting)와 CSRF(Cross Site Request Forgery) 공격을 막아낼 수 있도록 백엔드 접속에 대한 안전성 확보
=> CORS는 무엇인가요? CORS 문제를 겪었던 상황이랑 본인이 해결한 조치에 대해 말해보세요. (CORS를 모른다면 XSS, CSRF) 

1. 엄격한 데드라인, 관계자들의 요구, 기기별 제한에도 불구하고 항상 사용자가 최우선이라는 점을 잊지 않는 것
=> 마감기한은 얼마 남지 않았는데 사내 테스트 제품 퀄리티에 대한 반응이 좋지 않습니다. 제품마감과 퀄리티의 밸런스 문제에서 대한 본인의 철학은 무엇인가요?



숙련된 프론트엔드 엔지니어가 알아야 하거나 작업시 해야할 일

(힌트: 바로 여러분이 고용하고 싶은 사람이다)
1. DNS Resolution, CDN(Content Delivery Networks) 사용, 여러 호스트 이름을 통한 리소스 요청 성능 향상
=> CDN을 이용해 본 경험이 있나요? 실제 경험을 알려주세요. 어떤 이유로 사용했나요?

1. HTTP 헤더 (Expires, Cache-Control, If-Modified-Since)
=> JWT 토큰을 사용해본 경험이 있나요? javascript에서 서버와의 통신을 하기 위해 어떻게 작업을 했나요? 헤더 값을 변경해야 했던 경험이 있나요? 서버 캐시를 적용해본 사례가 있나요? 

1. 스티브 사우더스의 규칙 전부 (고성능 웹사이트)
2. PageSpeed, YSlow, 크롬 개발자 도구 Audit, 크롬 개발자 도구 Timeline에서 보여주는 문제를 해결하는 법
=> 최적화 작업을 해본적이 있나요? 어떤 문제가 있었고 무엇을 수정해서 얼마나 개선이 되었나요?

1. 작업을 서버에서 해야할 때와 클라이언트에서 해야할 때 구분
=> 기획의 요구사항이 백엔드에서 할지 프론트에서 해야 할지 혹은 누가해도 가능한 상황이라면 어떠한 방식으로 업부 분배를 하시겠습니까? 혹은 주장하시겠습니까?

1. 캐시, 프리 페칭(pre-fetching) 및 지연 로드 기법
=> 캐싱, 프리 페칭, lazy-loading중 하나를 사용해 본 경험과 적용을 했던 이유에 대해서 경험에 비추어 한번 설명해보세요.

1. 네이티브 자바스크립트. 직접 바닥부터 코드를 작성해야 할 때 혹은 다른 사람의 코드를 가져다 써야 할 때를 아는 것. 그리고 두 작업의 장점과 단점을 평가할 수 있는 능력
=> 1) 아직 시작하지 않은 프로젝트에서 React가 성능상의 이유로 다른 것을 검토해보자는 의견이 왔을때 어떻게 대처하시겠습니까?
=> 2) 외부 라이브러를 사용하는 것과 본인이 그 코드를 작성하는 것의 장단점에 대해서 한번 말해보세요. 본인은 어떠한 철학으로 이 밸런스를 잡을건가요?

1. 최신 MVC 자바스크립트 라이브러리(예. AngularJS, EmberJS, ReactJS), 그래픽 라이브러리(예. D3, SnapSVG), DOM 관련 라이브러리(예. jQuery, Zepto), 게으른 로딩 또는 패키지 관리 라이브러리(예. RequireJS, CommonJS), 태스크 관리자(예. Grunt, Gulp), 패키지 관리자(예. Bower, Componentjs), 테스팅(예. Protractor, Selenium)에 대한 지식과 사용
=> 본인이 최근에 관심이 있는 생태계나 기술에 대해 알려주세요.

1. 이미지 포맷과 장점. 언제 무엇을 어떻게 써야 하는가에 대한 지식. 이미지 최적화 기법과 사용 계획 (스프라이트, 게으른 로딩 기법, 캐시 비움, 인터레이스드 PNG)
=> webp에 대해서 알고 있나요? 이미지가 느릴 경우 어떻게 대처할 수 있을까요?

1. CSS 표준, 최신 컨벤션과 기법(예. BEM, SMACSS, OOCSS)에 대한 지식과 사용
=> CSS는 어떠한 방식으로 개발을 하나요? 왜 해당 방식을 택하게 되었나요? 본인에게 선택권이 있다면 어떤 기술 스택을 사용하고 싶나요? 왜 그런가요?

1. 자바스크립트의 컴퓨터 과학(메모리 관리, 싱글 스레드 특성, 가비지 컬렉터 알고리듬, 타임아웃, 스코핑, 호이스팅, 패턴)
=> 자바스크립트외에 다른 언어를 다뤄본 경험이 있나요? 자바스크립트가 해당 언어(혹은 Python, JAVA나 C++)와는 차별화되는 자바스크립트만의 특성에 대해서 아는대로 한번 말해보세요.
2022. 1. 20. 오전 11:08, Vintz : 감사합니다!!
2022. 1. 20. 오전 11:09, 유용태 (teo.yu) : 요새 주니어들 면접 다니시는 분들 중에서 기억에 남는 질문 있으면 하나씩만 공유해주세요 :) 저도 좀 참고해보겠습니다 ㅋㅋ
2022. 1. 20. 오전 11:10, 유용태 (teo.yu) : 아.. 꼭 주니어일 필요는 없겠네요
2022. 1. 20. 오전 11:11, 콘솔 : 회사에 들어와서 레거시 기술스택을 꼭 사용해야 한다면 어떻게 할것 같냐 .. 엿어요 예를 들어 React 버전 14-15를 사용 한다던가 vue1..을 사용한다던가..?!
2022. 1. 20. 오전 11:12, 유용태 (teo.yu) : 오~ 저도 물어봅니다~ 꼰대같지만 필요한 질문이라고 생각해요 ㅠ
2022. 1. 20. 오전 11:13, 유용태 (teo.yu) : 실제로 대부분의 회사업무는 새롭게 하는 거 보다 일단은 레거시를 고치는 일이 더 많이 해야하니까요
2022. 1. 20. 오전 11:13, 떨고있는 어피치 : ㅋㅋㅋㅋㅋ마치 제 사례네요…..
넥스트 쓰는데 넥스트에서 Minimum react version 정해둔게 있는데
2022. 1. 20. 오전 11:14, Hardy : 저는 특이하게도 면접에서 밸런스 게임 했었어요 일 잘하는데 인성 안좋은 개발자 vs 일을 너무 못하는데 너무 착한 개발자 둘 중 하나와 일한다면 누굴 고를거냐
2022. 1. 20. 오전 11:14, 떨고있는 어피치 : 지금 그것보다 낮은 환경에서 react 쓰고 있어서 제가 react version 올리고싶다고 했더니…..팀장님께서 너무 겁난다고 하셔서...
2022. 1. 20. 오전 11:15, 멋쟁이 프로도 : 백엔드에서 주는 API 리스폰스의 뎁스가 깊고 해당 API를 여러 다른 컴포넌트에서 입맛에 맞는 데이터를 뽑아내서 사용해야 한다면 프론트단에서 어떻게 구조적인 개선할 수 있을까 라는 질문을 받았는데 한달이 지난 아직까지도 어떤 답변을 했어야 됐는지 감이 안오네요.. 
api를 분리하는게 맞지 않나 싶은데 그건 프론트 단의 개선은 아닌듯 싶어서요
2022. 1. 20. 오전 11:15, 유용태 (teo.yu) : 읔.. 저도 자주 합니다 밸런스 게임 ㅠㅠ
2022. 1. 20. 오전 11:15, Hardy : 그 면접 재미있었어요 ㅋㅋ
2022. 1. 20. 오전 11:15, 썰~~ : 저는 인성안좋은개발자..
2022. 1. 20. 오전 11:16, 썰~~ : 그냥 자기 할일만 하면되거든요
2022. 1. 20. 오전 11:16, 유용태 (teo.yu) : 저는 실력보다는 인성파입니다 ㅎ
2022. 1. 20. 오전 11:16, 썰~~ : 근데 너무 못하거나 너무 인성이 안좋으면 보통 입사전에 걸러질거라서
2022. 1. 20. 오전 11:16, 썰~~ : 그정도로 모난사람만 아니면 될거같긴해요 둘다
2022. 1. 20. 오전 11:17, 유용태 (teo.yu) : ㅋㅋ 그렇긴 하겠네요
2022. 1. 20. 오전 11:17, 엉망장자 : 실력은 minimum 이 있을 것 같은데 인성은 바닥인줄 알았는데 지하인 사람들도 있어서...
2022. 1. 20. 오전 11:17, Hardy : 어제 면접중에 xss가 뭔지 물어보셨는데
2022. 1. 20. 오전 11:17, Hardy : 이것도 벙쪘습니다 ㅋㅋ
2022. 1. 20. 오전 11:18, 썰~~ : 삽입술이었나
2022. 1. 20. 오전 11:18, 썰~~ : ㅋㅋㅋㅋ 태그에 자바스크립트 집어넣어서
2022. 1. 20. 오전 11:18, 썰~~ : 그거 시도해서 성공하는걸 진짜 눈으로 봤는데 좀 무서워요
2022. 1. 20. 오전 11:20, j : 바벨과 폴리필 차이..
2022. 1. 20. 오전 11:23, j : 일단 전 플젝하면서 어려운일 없었는가 ->개발자로 성장하다 보면 분명 한계점이 올 것이다 그럴떄 본인이라면 어떻게 극복할 것이냐 -> 번아웃 왔을떄 어떻게 극복하시냐 물어봤어요
2022. 1. 20. 오전 11:23, 개발닥 : https://m.moneys.mt.co.kr/article.html?no=2022012011038058372
2022. 1. 20. 오전 11:23, 프론트준비생 : https://twitter.com/John_Grib/status/1483812633245790209?t=Iaz8PZw0YUBA-qg09XLmCw&s=09
2022. 1. 20. 오전 11:23, 개발닥 : 허거걱
2022. 1. 20. 오전 11:23, 프린이 : 게임즈 그분아닌가요?
2022. 1. 20. 오전 11:23, 프론트준비생 : 좋은글같아서 공유합니다
2022. 1. 20. 오전 11:23, j : 스트레스 관리도 은근히 팀에 영향이 크니까..
2022. 1. 20. 오전 11:23, 개발닥 : 게임즈 ceo에요
2022. 1. 20. 오전 11:23, 썰~~ : 여기도 계셨나요
2022. 1. 20. 오전 11:23, 썰~~ : ㅋㅋㅋㅋㅋ
2022. 1. 20. 오전 11:24, 유용태 (teo.yu) : 오오~ 좋네요~ 주석 달아주는거 정말 중요하다고 생각합니다
2022. 1. 20. 오전 11:25, 유용태 (teo.yu) : 요새 포폴도 그렇고 코테도 그렇고 클린코드의 영향이랄까 주석을 다는것에 점점 인색한데 좋은 주석을 잘 다는 것 엄청 중요하다고 생각해요
2022. 1. 20. 오전 11:25, j : 코드에 주석달아두면 편해요 ㅋㅋㅋㅋ
2022. 1. 20. 오전 11:26, j : 나중에 제가 다시 봤을떄도 편하고
2022. 1. 20. 오전 11:26, j : 설명하기도 좋고
2022. 1. 20. 오전 11:26, 유용태 (teo.yu) : 맞아요
2022. 1. 20. 오전 11:26, 유용태 (teo.yu) : 사진
2022. 1. 20. 오전 11:26, j : 저 함수 짜다가 회사 깃에 저렇게 올렸는데 이건 왜 이렇게 나오지? 더 나은 계산식이 없을까?
2022. 1. 20. 오전 11:26, j : 이러니까 백앤드 개발자분이 보시고 이거 이렇게 저렇게 해보는것도 좋을거 같앙
2022. 1. 20. 오전 11:27, j : 이런 좋은 선기능 많더라구요
2022. 1. 20. 오전 11:27, 유용태 (teo.yu) : 맞아요. 사실 읽기 좋은 코드라는거 특히 우리사람에게는 없는거 같아요. 영어 네이티브가 아닌데
2022. 1. 20. 오전 11:27, 개발닥 : 근데 너무 달면
2022. 1. 20. 오전 11:28, 개발닥 : 또 그렇지 않나요?
2022. 1. 20. 오전 11:28, j : 적당히 잘 요약해서..
2022. 1. 20. 오전 11:28, 개발닥 : 저는 그래서 주석 안쓰고
2022. 1. 20. 오전 11:28, 개발닥 : 깃에 히스토리를 적어요..
2022. 1. 20. 오전 11:28, j : 이게 처음엔 막적더라도 커밋하기 전에 정리하고 이 코드는 이부분이다 정도?
2022. 1. 20. 오전 11:28, 개발닥 : 그러면 타임스탬프 찍혀서 수정사항마다 히스토리가 쌓이니 좋더라구요
2022. 1. 20. 오전 11:28, j : 어떤 방식이든 기록이 남으면 좋지요!
2022. 1. 20. 오전 11:29, 썰~~ : 저도 주석은 해야될일만 적는편이에요 나중에 까먹으면 안되는것?
대신에 커밋메시지에 적는편이에요
2022. 1. 20. 오전 11:29, j : 보면서 이떄 이 방법으로 생각했구나를 다시 회고 할 수 있다는게 좋은거죠
2022. 1. 20. 오전 11:30, j : 다른 분들 방식도 잘 담아뒀다가 반영해보겠습니다!
2022. 1. 20. 오전 11:30, 프린이 : 혹시 JSdoc 많이 사용하시나요?
2022. 1. 20. 오전 11:30, 개발닥 : 아녀 안써여
2022. 1. 20. 오전 11:30, 개발닥 : TS써서 거의안써요
2022. 1. 20. 오전 11:30, Hardy : https://blog.banksalad.com/tech/we-work-by-tech-spec/
2022. 1. 20. 오전 11:30, Hardy : 뱅크 샐러드에서는 아예 이런 문서 규칙이 있는거 같더라고요
2022. 1. 20. 오전 11:30, Hardy : 코드 치기 전에 작성해야하는?
2022. 1. 20. 오전 11:30, 프린이 : TS로 문서화되는 툴같은게 있나요?!
2022. 1. 20. 오전 11:31, 프린이 : 외부로 보여줘야하는 문서 작성중인데 JSdoc말고도 다른게 잇는지 궁금합니다
2022. 1. 20. 오전 11:31, 개발닥 : TS위에
2022. 1. 20. 오전 11:31, 개발닥 : 주석달면 외부로 보여요
2022. 1. 20. 오전 11:31, 프린이 : 와
2022. 1. 20. 오전 11:31, 개발닥 : JSdoc처럼
2022. 1. 20. 오전 11:31, 프린이 : TS로 얼른 전환해야겠네요..
2022. 1. 20. 오전 11:31, 프린이 : ㅋㅋㅋㅋ
2022. 1. 20. 오전 11:31, 개발닥 : @param 붙여보세요
2022. 1. 20. 오전 11:32, 프린이 : 아직 ts를 적용안해가지고 ㅠㅠ
2022. 1. 20. 오전 11:32, 프린이 : ts 갓이네요 정말
2022. 1. 20. 오전 11:32, 개발닥 : 그저 갓
2022. 1. 20. 오전 11:32, 개발닥 : 킹 갓 엠페러 제네럴 MS에서 만든 성배
2022. 1. 20. 오전 11:35, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 20. 오전 11:53, 엉망장자 : 사진
2022. 1. 20. 오전 11:54, 엉망장자 : 한분이 얘기한줄 알았네요
2022. 1. 20. 오전 11:56, 프린이 : 제얼굴이 저런지몰랐네[요... ㅋㅋㅋ
2022. 1. 20. 오전 11:56, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 20. 오전 11:59, Hardy : 저도 헷갈렸습니다 ㅋㅋㅋㅋ
2022. 1. 20. 오후 12:00, j : 저두욬ㅋㅋㅋㅋㅋㅋ
2022. 1. 20. 오후 12:01, 이엘로 : ㅋㅋㅋㅋㅋㅋㅋㅋ저도 당황했어요
2022. 1. 20. 오후 12:07, 개발닥 : ㅋㅋㅋ
2022. 1. 20. 오후 12:36, 유용태 (teo.yu) : https://velog.io/@teo/Javascript%EC%97%90%EC%84%9C%EB%8F%84-SOLID-%EC%9B%90%EC%B9%99%EC%9D%B4-%ED%86%B5%ED%95%A0%EA%B9%8C
2022. 1. 20. 오후 12:42, 프린이 : 오 감사합니다
2022. 1. 20. 오후 12:56, 콘솔 : 용태님글 너무 좋아서 ㅠㅠ 매일 아침마다 이메일로 뉴스레터처럼 받고싶어욯ㅎㅎ
2022. 1. 20. 오후 12:57, 유용태 (teo.yu) : 열심히 작성한 보람이 있네요 너무 감사합니다 :)
2022. 1. 20. 오후 12:58, 핸디 : 용태님 혹시 저정도 글을 쓰실때 얼마나 걸리시나요?
2022. 1. 20. 오후 1:01, 유용태 (teo.yu) : 평균 1주일 정도 걸리는 것 같아요~ 이때까지 블로그 연재(?) 주기를 보면 1주당 1-2건 정도 올린거 같네요
2022. 1. 20. 오후 1:02, 퍼블퍼블 : 우와 진짜 대단하셔요ㅠㅠ 저도 블로그 하긴 하는데  블로그 내용도 다시 한번 날잡고 공부할려구요 ....
2022. 1. 20. 오후 1:06, 꼬북 : 테오 진짜 대단하셔요...
2022. 1. 20. 오후 1:21, 쑥스럽게 인사하는 프로도 : 뒷북으로 면접보러 다닐 때 ts와 js의 차이점도 많이 물어들 보셨었는데 타입 선언할 수 있다는 것 밖에 말 못했었네요...ㅋㅋㅋㅋㅜㅜ
2022. 1. 20. 오후 1:21, 쑥스럽게 인사하는 프로도 : 항상 좋은 글 공유 감사드립니다
2022. 1. 20. 오후 1:49, 책팔아요 : 테일윈드 유아이의 경우에 유료던데 사람들이 테일윈드를 많이 쓰는 이유가 뭔가요..??
2022. 1. 20. 오후 1:58, 유용태 (teo.yu) : 컴포넌트 기반에서는 CSS가 별로기 때문이죠
2022. 1. 20. 오후 1:59, 유용태 (teo.yu) : 테일윈드 UI의 경쟁력은 잘 모르곘습니다 테일윈드를 많이 쓰는 것은
2022. 1. 20. 오후 1:59, 유용태 (teo.yu) : 지금 개발방식은 컴포넌트 프레임워크 기반으로 하는것이 당연해지게 되면서
2022. 1. 20. 오후 2:01, 유용태 (teo.yu) : 기존의 페이지를 만들 기 위해 좋았던 CSS의 장점들이 많이 무색해져버렸습니다. 그래서 예전에는 사파였던 Atomic한 CSS 개발방식이 오히려 현대의 개발 방식에서 더 적합해진거고
2022. 1. 20. 오후 2:01, 유용태 (teo.yu) : tailwindCSS는 이 분야에 대해서 패러다임의 선구자 역할을 했기 때문에 가장 많이 쓰고 있는거라고 보시면 됩니다. React가 프레임워크의 선두두자 같은것 처럼요
2022. 1. 20. 오후 2:13, 책팔아요 : 그렇군요..테오님 생각에는 앞으로 머터리얼이나 앤트디를 테일윈드가 누르게 될까요..??
2022. 1. 20. 오후 2:22, 프론트 : tailwind ui를 말하시는 것 같은데
2022. 1. 20. 오후 2:23, 프론트 : Css 템플릿은 취향차이죠 뭐 ㅎㅎ
2022. 1. 20. 오후 2:24, 프론트 : 카톡도 대화 편집기능 있으면 참 좋을 것 같네요 . 저같은 오타쟁이들한텐 ㅋㅋㅋ
2022. 1. 20. 오후 2:44, 유용태 (teo.yu) : 회의가 생겨서 중간에 답변이 끊겼네요. 아직까지는 결이 달라서 누른다 개념은 아닐거에요. 보통 저런 컴포넌트를 쓰는 쪽은 UI가 그렇게 중요하지 않은 백엔드 중심의 서비스일 확률이 높으니까요
2022. 1. 20. 오후 2:46, 유용태 (teo.yu) : 다만 MUI나 And의 경우에는 디자인을 커스텀을 하는게 쉬운 편이 아니에요.
2022. 1. 20. 오후 2:48, 유용태 (teo.yu) : 비단 커스텀 뿐만 아니라 회사에서 원하는 배치를 하는것 부분도 쉬운게 아니라서 컴포넌트를 만들어내는게 쉬운게 아니라서 유틸리기반의 tailwind가 좀 더 나을 수 있다고 생각을 합니다
2022. 1. 20. 오후 2:50, 유용태 (teo.yu) : MUI나 Antd는 컴포넌트 기반이라서 충분히 익숙한 그 사용법이고 TailwindUI는 디자인을 파는 거에요. 짧은 텍스트만으로 설명이 좀 아쉬운데
2022. 1. 20. 오후 2:50, 유용태 (teo.yu) : https://tailwindui.com/preview
2022. 1. 20. 오후 2:52, 유용태 (teo.yu) : 예제를 보시면 무슨 느낌인지 아실 수 있을거 같아요
2022. 1. 20. 오후 2:54, 유용태 (teo.yu) : tailwindUI는 tailwindCSS 도입이 제일 큰 진입장벽이 될거에요
2022. 1. 20. 오후 3:10, 화가난다 화가나 그래서 난 화가임 : 혹시 아스키코드 문자표에서, 문자 A는 16진수로 40이라고 적혀있다면, 코딩을 할 때 컴퓨터에 A라는 문자를 전달하면 컴퓨터는 A를 보고 40(16진수)이 왔다고 받아들이고, 유저 인터페이스에 40을 다시 'A'로 변환시켜주는 건가요?
2022. 1. 20. 오후 3:18, 책팔아요 : 찾아봤는데 부트스트랩이랑 비슷하더라구요 mui랑 antd랑은 완전 다르던데요
2022. 1. 20. 오후 3:39, 화가난다 화가나 그래서 난 화가임 : 혹시, CS 지식이 탄탄할 때 좋았던 점을 몸소 느껴보신 경험있으신가요?
2022. 1. 20. 오후 3:40, 썰~~ : 저는 네트워크쪽에서는 많이 느껴요
2022. 1. 20. 오후 3:40, 스타트업개발자 : 이번에 회사에서 웹뷰를 개발하는데 sass / styled-components, emotion 중에 고민 중인데,,, 어떤게 나을까요,,,!?
2022. 1. 20. 오후 3:43, 파이버 : 기초는 탄탄하면 탄탄할수록 무조건 좋다고 생각합니다
2022. 1. 20. 오후 3:43, j : 백엔드랑 협업할때..?
2022. 1. 20. 오후 3:47, 화가난다 화가나 그래서 난 화가임 : 흠.. cs 공부를 하는데 글이 워낙 많은데, 은근 몇 페이지 안 했는데
2022. 1. 20. 오후 3:47, 화가난다 화가나 그래서 난 화가임 : 시간 소비가 꽤나 커서 자극이라도 받고 싶어 물어봤습니다 ㅠㅠ
2022. 1. 20. 오후 4:31, 엉망장자 : 개발하면서 cs도 공부하셔요. 저도 cs만 하면 지루해서 하기 싫어지더라고요. 기분전환을 하고싶었던 개발로ㅎㅎ..
2022. 1. 20. 오후 4:45, 화가난다 화가나 그래서 난 화가임 : 그래야겠어용 밥먹을때 유튜브로라도 cs를 봐야겠어요
2022. 1. 20. 오후 4:46, Hardy : 그러다 체하십니다 ㅋㅋ
2022. 1. 20. 오후 5:21, 해달 : 혹시 원티드에서 6주짜리 코스 신청하신분 계실까요..?!
2022. 1. 20. 오후 5:35, 진현 : 저욥..!!
2022. 1. 20. 오후 5:44, 엉망장자 : 혹시 여러분들은 React Native 전역상태관리는 어떻게 하고 계시는지 궁금합니다. 
Recoil을 사용하려고 하니 아직 정식 지원이 되지 않는군요.. ㅜㅜ
2022. 1. 20. 오후 5:54, 썰~~ : 저 전회사가 rn했었는데 그래프큐엘 사용했어서 따로 상태관리가 필요 없었습니다
2022. 1. 20. 오후 6:00, 엉망장자 : 아하?? graphql 자세히 몰라서 그런데 api 호출 결과들이 자동으로 cache되어서 그런거였나요?
2022. 1. 20. 오후 6:01, j : apollo client에 있어요
2022. 1. 20. 오후 6:24, 생못미 : 그것도 그렇구 기본적으로 reactiveVar라는 전역 변수를 지원하더라고요
2022. 1. 20. 오후 6:42, 썰~~ : 넵 캐시에 저장되어서
2022. 1. 20. 오후 6:42, 썰~~ : 로컬데이터도 상태값처럼 캐시에 저장해서 사용했었어요
2022. 1. 20. 오후 6:55, 유용태 (teo.yu) : 제가 정확히는 앞뒤 사정을 몰라서 감히 말할수는 없는데 선택권에 있다면 조금더 최신 의 것을 하시되 모두가 다 새로 배워야 하는 것은 아닌것을 추천합니다
2022. 1. 20. 오후 6:55, 유용태 (teo.yu) : *선택권이
2022. 1. 20. 오후 7:06, 엉망장자 : ㅎㅎ 답 주셔서 감사합니다. 좀 더 알아봐야하겠네요 ㅜ 리덕스 싫어요ㅜㅜ
2022. 1. 20. 오후 7:57, 화가난다 화가나 그래서 난 화가임 : 혹시, UTF-8은 문자(예: A)를 표현하는 비트들(2진수 0000000001000001)로부터 나온 숫자들(0x0041)을 표현하는 숫자들(UTF-8로 인코딩한 값)을 표현하기 위해 숫자(실제 UTF-8로 인코딩한 0x41)들을 사용한다.
2022. 1. 20. 오후 7:57, 화가난다 화가나 그래서 난 화가임 : 라는 구절이 책에서 나오는데,
2022. 1. 20. 오후 7:58, 화가난다 화가나 그래서 난 화가임 : A: 사용자가 보낸 문자 >> 컴퓨터 전기 신호인 2진수 >>
2022. 1. 20. 오후 7:58, 화가난다 화가나 그래서 난 화가임 : 0x0041을 표현하는 숫자들 (UTF-8로 인코딩한 값)을 표현하기 위해 숫자(실제 UTF-8로 인코딩한 0x41)들을 사용한다.
지금 쓴 이 두 구절이 무슨 말인지 알 수 있을까요?
2022. 1. 20. 오후 8:22, 네불 : 같은 관심사로 묶이는데 fetch해서 가져오는 값이 있으면 같은 훅에 선언하시나용?
2022. 1. 20. 오후 8:22, 네불 : 어떤 케이스에서는 해당 값을 안쓸 수도 있어서 불필요한 api호출이 되기두합니다
2022. 1. 20. 오후 8:24, 네불 : api호출 코스트때문에 훅을 분리해야할지 고민이네용
2022. 1. 20. 오후 8:25, 시무룩한 튜브 : 아 혹시 한 권으로 읽는 컴퓨터 구조와 프로그래밍 책인가요
2022. 1. 20. 오후 8:25, 화가난다 화가나 그래서 난 화가임 : 헉.. 혹시 다 읽으셨나요?
2022. 1. 20. 오후 8:25, 시무룩한 튜브 : 맞다면.. 저도 얼마전에 이 부분 읽었는데 어려워서 그냥 그런가보다 하고 넘어갔어요 ㅎ ( 도움 안되는  그저 공감 멘트 )
2022. 1. 20. 오후 8:25, 화가난다 화가나 그래서 난 화가임 : 아 ㅋㅋㅋ
2022. 1. 20. 오후 8:25, 화가난다 화가나 그래서 난 화가임 : 저 부분 진짜 뭐지 싶어용.. ㅠ
2022. 1. 20. 오후 8:25, 화가난다 화가나 그래서 난 화가임 : 찾아보고 싶어요 주변내용이라도
2022. 1. 20. 오후 8:25, 시무룩한 튜브 : 😂
2022. 1. 20. 오후 8:25, 화가난다 화가나 그래서 난 화가임 : 알게되면 전달해드릴게욥
2022. 1. 20. 오후 8:26, 시무룩한 튜브 : 최고 ~!
2022. 1. 20. 오후 8:26, 시무룩한 튜브 : 지속성 높이려고 이해 안가는건 어느정도 스스로 타협하고 읽고 있었어요
2022. 1. 20. 오후 8:27, 시무룩한 튜브 : 저도 이해한가면 못넘어가서 책 못끝내는 경우가 많은데 그게 더 안좋다고 하더라고요 ㅎ
2022. 1. 20. 오후 8:27, 시무룩한 튜브 : 안가면*
2022. 1. 20. 오후 8:27, 유용태 (teo.yu) : 저는 중간에 상태관리 레이어를 둬서 바로 fetch한 값을 쓰는게 아니라 request 결과는 상태관리에 쌓고 데이터를 사용하고 없거나 시간이 지나면 호출하는 방식을 쓰고 있어요
2022. 1. 20. 오후 8:27, 시무룩한 튜브 : done is better than nothing ! 열공합시당
2022. 1. 20. 오후 8:32, 네불 : 아 조금 설명이 부족했네요 죄송합니다!ㅠ
한 개 훅에서 관심사가 같은 값들을 fetch해서 가져오려고하는데 (구독중인지 여부, 구독하기, 해지하기) 구독하기만 필요한경우 구독중인지 여부는 쓸모없이 api호출한게되는거라 고민이에요!
2022. 1. 20. 오후 8:32, 네불 : 쓰는쪽에서는 관심사가 모인 훅을 호출하니 깔끔한 코드가 되는데
2022. 1. 20. 오후 8:32, 네불 : 그렇네요!
2022. 1. 20. 오후 10:02, 강승진 : https://twitter.com/mdo/status/1483871584267866115
헉.. mdo 가 심장마비 입원이라니.. 역시 무엇보다 건강이 제일이네요
2022. 1. 20. 오후 10:47, 코린이 : 역시 .. 운동을 해줘야,

2022년 1월 21일 금요일
2022. 1. 21. 오전 12:04: 신지원님이 들어왔습니다.
2022. 1. 21. 오전 12:04, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 21. 오전 12:05, 유용태 (teo.yu) : 안녕하세요 신지원님 반갑습니다 :)
2022. 1. 21. 오전 12:06, 신지원 : 안녕하세요! 개발공부 시작한 지 3개월 된 대학생입니다! velog보다가 들어오게 되었습니다! 많이 배우겠습니다!!
2022. 1. 21. 오전 12:08, 유용태 (teo.yu) : 감사합니다. 어서오세요~ :) 여기는 개발 관련해서 궁금하거나 다른 개발자들은 어떻게 하는지 물어보고 또 아는 것은 기꺼이 답해주는 공간입니다. 답변을 해주는 것을 좋아하니 언제든 편하게 글 남겨 주세요~
2022. 1. 21. 오전 12:08, 유용태 (teo.yu) : 좋은 자료가 있거나 본인이 공부한 내용을 자랑하고 싶을때 링크 공유해주셔도 됩니다. ㅎ 한번 어떤 링크가 있는지 둘러보세요 :)
2022. 1. 21. 오전 12:23, 신지원 : 감사합니다!!
2022. 1. 21. 오전 12:25, 부끄러워하는 라이언 : 흠..늦은시간에 질문하나 드릴게요 !! 프론트엔드에 설계라고 하면 어떤 부분이 있을까요??
2022. 1. 21. 오전 12:26, 유용태 (teo.yu) : 추상화 레이어 인거 같아요. 근데 보통은 프론트에서 기술 스택을 결정을 하면 그에 맞는 설계가 따라오는 거 같아요
2022. 1. 21. 오전 12:28, 부끄러워하는 라이언 : 흠..그렇군요 ..!! 답변 감사합니다 !!
2022. 1. 21. 오전 12:42, 피카츄돈까스/React,RN : 저희도 레이어를 나눠 프레젠테이션 레이어/레포지토리 레이어 / 서비스레이어 이렇게 나눠서 프레젠테이션 레이어를 보호하고 무엇을 하나 변경됐을떄 그 영향을 최소화 하도록 설계 했습니답
2022. 1. 21. 오전 12:43, 부끄러워하는 라이언 : 오오…그럼 프레젠테이션이 데이터가 없는 완전한 뷰(?)역할을 한다고 볼 수 있을까요??
2022. 1. 21. 오전 12:49, 피카츄돈까스/React,RN : 음 완전한 뷰의 역할을 한다? 최대한 그렇게 한거같습니다
2022. 1. 21. 오전 1:36, 피카츄돈까스/React,RN : 일단 저희는 스크린이나 페이지 레벨에서 뷰랑 스토어를 연결해주고 로직을 작성해줍니답. 

그리고 음 각 컴포넌트들은 UI로직을 갖고 있고 거기서 필요한 상태를 갖고있긴한데 데이터는 전부 외부에서 주입받습니답.!
2022. 1. 21. 오전 1:37, Hardy : 외부에서 주입이란건 props로  전달 받는건가요?
2022. 1. 21. 오전 1:37, 피카츄돈까스/React,RN : 넵넵맞습니당!
2022. 1. 21. 오전 1:37, 피카츄돈까스/React,RN : 근데 저렇게 하면 또 쪼꼼 회의감이 드는 부분이 드릴링이 깊어지는 경우가 좀 있다..요것입니다
2022. 1. 21. 오전 1:38, Hardy : 맞아요 그게 맞는걸까 고민한적이 있었어요
2022. 1. 21. 오전 1:38, 피카츄돈까스/React,RN : 근데 음 스크린 -> 컴포넌트 -> 컴포넌트 요정도면 괜찮을거 같기도 하네여..
2022. 1. 21. 오전 1:39, Hardy : 그럼 데이터에 관한 로직은 다른 레이어에 있고 가장 큰 페이지 컴포넌트에서 그 레이어와 연결해서 props로 내려주는건가요?
2022. 1. 21. 오전 1:39, 피카츄돈까스/React,RN : 아하 옙 맞습니다. Store와 View 뷰 사이에 Proxy 레이어를 하나줘서
2022. 1. 21. 오전 3:28, 설아아빠 : React VAC Pattern - View 로직과 JSX의 의존성을 최소화 하자! 출처 : NAVER Engineering | 네이버TV
2022. 1. 21. 오전 3:35, 피카츄돈까스/React,RN : 와 감사합니다 오오 공부해봐야겠네요
2022. 1. 21. 오전 9:44, 알모 : 아마 위 영상이랑 같은 내용인 거 같아요
https://wit.nts-corp.com/2021/08/11/6461
2022. 1. 21. 오전 9:45, 알모 : 삭제된 메시지입니다. 
2022. 1. 21. 오전 9:45, 알모 : 제가 읽어본 바로는 퍼블리셔와의 협업을 위한 패턴으로 이해했습니다~
2022. 1. 21. 오전 9:47, 피카츄돈까스/React,RN : 아아 그렇군요 퍼블리셔와 협업
2022. 1. 21. 오전 9:49, 핸디 : https://velog.io/@kangkyeungseok/vac-pattern-which-separate-logic-and-style
2022. 1. 21. 오전 9:49, 핸디 : 짤막하게나마 부족한 제글도 함께 읽어주십사 부끄럽지만 올려봐요..
2022. 1. 21. 오전 10:24, j : VAC 패턴 아티클을 보다가 제가 짠 컴포넌트를 조금만 바꾸면 VAC로 변경할 수 있을거 같은데 제가 이해한게 맞는지 혹시 봐주실 수 있나요?
2022. 1. 21. 오전 10:29, 핸디 : 함께 고민해봐요!!
2022. 1. 21. 오전 10:29, 화가난다 화가나 그래서 난 화가임 : 혹시, node.js를 이미 설치했는데, 이후에 nvm을 깔아도 오류가 없을까요?
2022. 1. 21. 오전 10:29, 화가난다 화가나 그래서 난 화가임 : nvm 깔고 싶은데 오류가 발생할까봐 후들들 합니다
2022. 1. 21. 오전 10:34, j : 1. react jsx로 동작 컴포넌트를 제작
-> [componentName.js]
2. styled-component를 통해 wrapper를 만들거나, hoc 형태로 스타일을 입힘
-> [styles.js]

=> styles.js에 만들어둔 style을 import하여 component에 스타일 주입

위 과정으로 컴포넌트를 개발하고 있습니다.

VAC pattern이라면 아래처럼 변경해야 하는 건가요?
1. JSX에서 style을 분리
-> 완료
2. 변경 제어는 부모컴포넌트에서 처리 -> 처리값을 props로 전달
-> state나 event 등 로직 분리 필요
2022. 1. 21. 오전 10:36, j : 또한 저 pattern들은 design system 개발시에 많이 쓰일거 같은데..맞나요?
2022. 1. 21. 오전 10:46, 핸디 : 2번 같은 경우 제 view compononet에서는 별도로 로직계산없이 asset component에서 내려온 props만 가지고 모든 작업을 진행해야한다는 의미로 받아드렸습니다.
다만 design system이라는 개념이 아직 저에게 확실히 정립되어있지않아 저는 UI를 개발하는데 필요한 스타일, 컴포넌트의 모음을 디자인스시템이라고 생각하고 있습니다.
이런 관점에서 볼때에는 VAC 패턴은 더 큰 틀에서의 패턴이고 실제로 design system 안에있는 컴포넌트들을 가지고 VAC안의 View component를 조합한다고 생각합니다.
2022. 1. 21. 오전 10:46, 핸디 : 사진
2022. 1. 21. 오전 10:48, 핸디 : 이게 제가 실제 만들고 있는 페이지인데 VIew 단에만 사전에 만들어 놓은 컴포넌트와 Tailwind를 통해 스타일을 넣어주고 있습니다. 
로그인 정보와 같이 로직이 들어간 것은 위에서 선언해서 내려주고 있구요.
2022. 1. 21. 오전 10:52, j : 음 간단하게 정리하면 view compoent는 말 그대로 '보여지는 것'에 충실해지고, 그 보여진다는 것에서 협업의 편리성을 위해 style적 요소들을 분리시켜준다.
그 외의 렌더링이나 event 처리를 해주는 로직들은 상위 component에서 제어를 해주고, 해당 component는 pure compoent가 된다
2022. 1. 21. 오전 10:57, j : design system 같은 경우는 저도 핸디님과 같은 생각입니다. VAC 패턴이 프로그램 개발 디자인 패턴이기 떄문에 더 많은 부분에서 어떻게 적용하느냐에 따라 달라지겠지요.
2022. 1. 21. 오전 11:07, j : 핸디님 감사합니다!!덕분에 이해가 빨라졌어요!
2022. 1. 21. 오전 11:10, 프론트준비생 : 삭제된 메시지입니다. 
2022. 1. 21. 오전 11:18, 프론트준비생 : 저질문있습니다 지금 js공부중이고 제로초님 강의듣고있느상태입니다

강의는 먼저 특정게임을만드는식으로진행되고 강의 중간마다 필요한js개념을설명해주는식으르합니다

지금강의내용중에 dom내용이나왔는데요 강의에서필요한부분만배워서그런지사실 돔이라는큰틀도 잘모르겠고 강의내용외에서는 어떤식으로활용해야할지모르겠더라구요..  따로공부해보려고 mdn에서찾아봤는데 특정개념을알려면 다른개념을알아야하고 또그개념을알려면 다른개념을알아야하고..해서 어디까지 돔을공부해야할지 막막한데 혹시 dom은다들어떤식으로공부하셨나요?
2022. 1. 21. 오전 11:19, Luke : https://bitsofco.de/what-exactly-is-the-dom/ 이게 참고하기 좋을 거예요
2022. 1. 21. 오전 11:21, 프린이 : 저는 입문할때 노마드코더에서 바닐라 자바스크립트로 간단한거 만들어보면서 공부하기 시작했습니다!
결국은 공부하면 할수록 다알아야해서 
https://poiemaweb.com/js-dom
이런데 참고했었습니다!
2022. 1. 21. 오전 11:26, 엉망장자 : 질문에 대한 답은 아니지만,
저는 의문이 생겨서 공부가 시작된다면 딱 처음 시작했을 때 의문이 해결될 수준까지만 파고 넘어가요.
너무 깊게 계속 공부하다보면 처음 방향성을 잃고 내가 뭐하고 있는거지?.. 라는 생각이 들더라고요.

이런식으로 반복해서 생기는 의문들을 해결하다보면 점점 깊은 의문을 쉽게 팔 수 있게 되는 것 같아요.
2022. 1. 21. 오전 11:27, Luke : 약간 나무위키 타고 돌아다니는 느낌이군요 ㅋㅋㅋ 저도 동의합니다
2022. 1. 21. 오전 11:50, 프린이 : 돔이 뭔지 조작을 직접 해보시고 프레임워크로 넘어가시는게 좋습니다.  

 드롭다운 리스트와 같은 컴포넌트를 직접 만들어보시는게 어떨까요

책은
프레임워크없이 하는 개발 ,
돔을 깨우치다 추천드립니다
2022. 1. 21. 오전 11:57, 부끄러워하는 라이언 : 삭제된 메시지입니다. 
2022. 1. 21. 오전 11:59, 부끄러워하는 라이언 : 사진
2022. 1. 21. 오전 11:59, 부끄러워하는 라이언 : 안녕하세요 간단한 질문 하나 드리겠습니다. 위 사진에서 todoList라는 객체가 선언되기 전에 todoList의 메소드를 어떻게 사용할 수 있는걸까요..? 호이스팅때문에 그런건가요..? 잘 이해가 안가네요 ㅜ
2022. 1. 21. 오후 12:03, 강승진 : todoInput 2분째 파라미터로 전달되는게 콜백처럼 이용되는 함수이기 때문에, todoList 참조가 즉시 평가되지 않아요
2022. 1. 21. 오후 12:06, 프린이 : 그부분이 화살표 함수로 표현된 콜백함수 내부라서 
콜백 함수 실행 => scope를 따라가면서 todoList 찾으니 찾게되는거 같습니다!
2022. 1. 21. 오후 12:06, 프론트준비생 : 다들감사합니다
2022. 1. 21. 오후 12:14, Hardy : 승진님 말씀이 맞는 것 같아요 변수에 할당한 todoInput을 선언된 todoList 보다 위에서 사용하면 그 때 에러가 생기지 않을까요
2022. 1. 21. 오후 12:37, 프론트준비생 : http://mobile.kyobobook.co.kr/showcase/book/KOR/9791161754895
이책맞나요?
2022. 1. 21. 오후 12:50, 엉망장자 : 상태관리 관련해서 질문이 있습니다! 
완전히 실시간일 필요는 없는데 서버 상태가 바뀔때마다 화면에 반영은 해야되는 상황입니다.

(ex. 페이스북 피드를 내리며 보고 있는데 새로운 게시글이 올라오면 '새 게시물' 버튼이 상단에 나타남. 
이 경우에는 버튼이 실시간으로 나타날 필요는 없지만 새 게시물이 있다는 사실을 언젠가는 알려줘야 하는 것이죠.)

그런데 결국에는 Redux, Recoil 같은 툴들은 로컬 저장소 값을 읽어서 화면을 그려내는 것인데,
이런 기능을 구현하기 위해서는 주기적으로 action을 보내주는 코드를 써야할 것 같은데, 과연 이게 최선인가라는 의문이 듭니다... 혹시 다른 방법을 알고 계신 분이 있을까요?

*요약:
서버 변경내용을 적당히(?) 실시간으로 화면에 반영해주고 싶다면 어떻게 해야하나요?
2022. 1. 21. 오후 12:52, 프린이 : 1. 통신 프로토콜 websocket사용
2. 지속적인 폴링으로 데이터 싱크??
2022. 1. 21. 오후 12:53, 프린이 : 넵
2022. 1. 21. 오후 12:55, 프론트준비생 : 저여러분 혹시 블로그에 공부한내용정리하시는분 계씬가요?? 블로깅하라고는 많이 들었는데 어떤걸 정리들 하시나요?? 저는그냥 오늘배운것중 기억하고싶은거위주로 적긴한데.. 어떤식으로 블로그정리하시는지 궁금합니다
2022. 1. 21. 오후 12:57, 엉망장자 : 지속적인 데이터 풀링이라는게 제가 적은 3번째 문단이랑 같은 내용일까요?
2022. 1. 21. 오후 12:58, 썰~~ : 웹소켓이 제일 낫긴하죠
2022. 1. 21. 오후 12:59, 엉망장자 : 완전 실시간이 아니라서 안써도 되지 않을까 했는데 역시 그런가용..ㅎ
2022. 1. 21. 오후 12:59, 떨고있는 어피치 : [좋은글 공유]

FE개발자로서 못해준 이야기 1 - 프로젝트

https://partnerjun.tistory.com/82
2022. 1. 21. 오후 1:03, 설아아빠 : 웹소켓이 맞는거 같아요 두번째는 변경사항을 계속 fetch하려는거같은데 그건 좀 구식..
2022. 1. 21. 오후 1:08, 엉망장자 : 앗 그런가요? 제가 좀 더 공부해봐야겠네요. 왜 더 좋은가에 대해 확실하지가 않네요 감사합니다 ㅎㅎ
2022. 1. 21. 오후 1:15, 프린이 : 적당한 시점에 업데이트되어야 하는거면 주기적으로 api 콜 하면 될 것 같은데요
2022. 1. 21. 오후 1:15, 프린이 : 소켓 연결을 할 필요가 있을까 싶네요
2022. 1. 21. 오후 1:16, 떨고있는 어피치 : React-query는 어떨까요?
Websocket은 거의 채팅수준의 실시간일때만 쓰는게 좋을 것같아서용
2022. 1. 21. 오후 1:17, 프린이 : react-query로 주기적으로 요청하시면 될듯
2022. 1. 21. 오후 1:18, 엉망장자 : 제가 그래서 websocket을 생각하지 않았던거였는데요. react-query 안써봤는데 비슷한 기능이 있나보네요?! 한번 살펴보겠습니다 ㅎㅎ
2022. 1. 21. 오후 1:21, 꼬북 : 이글 너무 재밌네요 ㅋㅋ 필력이 거침없으신듯해요
2022. 1. 21. 오후 2:09, 결과보단 과정을 / React,JS : react query를 사용하기 전에는 useEffect안에다가 넣고 API 사용을 한번 하는데, react query를 사용하고 나서는 useEffect안에서 사용할 수가 없어서, component내에서 사용 했더니 API가 state가 바뀔때마다 사용됩니다. 어떻게 해야 API가 한번만 사용될 수 있을까요? 반드시 UI state와 server state를 구분해야 하나요? 

before  : 
useEffect(() => {
    let unmounted = false;
    if (!unmounted) {
      const getResult = async () => await getAPI();
      setData(getResult);
    }
    return () => {
      unmounted = true;
    };
  }, []);

current : 
  const { isLoading, isError, isSuccess, data } = useQuery(
    queryKey,
    async () => await getAPI()
  );
2022. 1. 21. 오후 2:19, 실무뿌론트 : react query안써봐서 그런데 알아서 캐시관리 따로해주지않나요?
2022. 1. 21. 오후 2:19, 실무뿌론트 : swr이랑 비슷한라이브러리로 알고있는데 네트워크 요청은 한번만 가는게 맞을거같아서요
2022. 1. 21. 오후 2:20, 어피치 : 네트워크 보시면 from cache 라고 써있을 거에요 아마도?
2022. 1. 21. 오후 2:21, 부탁하는 네오 : 리액트쿼리는 키값이 같으면 재조회 하지 않는걸로 알고 있어요
2022. 1. 21. 오후 2:21, 썰~~ : 맞아요 근데 브라우저가 포커스 아웃되면
2022. 1. 21. 오후 2:22, 생못미 : 쿼리 키값으로 의존성을 주시면 됩니다
ex. ['post', postId]
2022. 1. 21. 오후 2:22, 썰~~ : 다시 포커스 될때마다 디폴트로 다시가져오더라고요
2022. 1. 21. 오후 2:22, 생못미 : 그러면 postId가 업데이트 될 때마다 요청이 갈거에요
2022. 1. 21. 오후 2:22, 썰~~ : 설정 다해줘야됩니다
2022. 1. 21. 오후 2:22, 어피치 : refetchOnFocus 옵션을 false 로 설정해보세요~
2022. 1. 21. 오후 2:22, 썰~~ : 맞아요
2022. 1. 21. 오후 2:22, 썰~~ : 저 옵션타입 다 뒤져서
2022. 1. 21. 오후 2:22, 썰~~ : 겨우 찾아냈어요
2022. 1. 21. 오후 2:22, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋ 어제 노드모듈 다 까봄..
2022. 1. 21. 오후 2:23, 실무뿌론트 : 네넵..옵션값에 따라 달라지죠 동작
2022. 1. 21. 오후 2:23, j : 와..reactQuery 써봐야겠네요
2022. 1. 21. 오후 2:23, 결과보단 과정을 / React,JS : 흠… 쿼리 키도 넣고 있고, refetchOnFocus옵션도 넣어서 사용하고 있는데, 네트워크 상에 보면 제가 사용하는 API가 중복되서 찍혀서요 ;;
2022. 1. 21. 오후 2:23, j : 뭔말인지 한참 들여다봤습니다
2022. 1. 21. 오후 2:24, 실무뿌론트 : swr도 비슷해요 ㅎㅎ
2022. 1. 21. 오후 2:24, 결과보단 과정을 / React,JS : 제가 뭔가 잘못 짰나봅니다 ;;
2022. 1. 21. 오후 2:24, 부탁하는 네오 : 저는 Enabled  select refetchonfocus 이정도 옵션 많이 쓰게 됐던거 같아요
2022. 1. 21. 오후 2:24, 실무뿌론트 : https://youtu.be/b7Uqx7NZpHw
2022. 1. 21. 오후 2:24, 부탁하는 네오 : 그럼 키값이 계속 달라지고 계신거 일거 같아요
2022. 1. 21. 오후 2:24, 썰~~ : 사진
2022. 1. 21. 오후 2:25, 결과보단 과정을 / React,JS : 한번 확인해보겠습니다.
2022. 1. 21. 오후 2:25, 썰~~ : 다 false로 해놨어요 저는
2022. 1. 21. 오후 2:33, 결과보단 과정을 / React,JS : enabled를 false로 하니 문제가 사라지긴 했는데…
2022. 1. 21. 오후 2:33, 썰~~ : enabled는 초기에 가져오는걸 막는거에요
2022. 1. 21. 오후 2:33, 썰~~ : refetch해야만 가져오는
2022. 1. 21. 오후 2:34, 썰~~ : retry가 에러 생길때 3번까지 보내보고 그때 에러를 내는데
2022. 1. 21. 오후 2:34, 썰~~ : 그거 막는거고
2022. 1. 21. 오후 2:42, 호호 부는 튜브 : Sse는 별로일까요??
2022. 1. 21. 오후 2:43, 결과보단 과정을 / React,JS : 혹시 enabled default값이 false가 아니라 true인지 아시나요? 서버 부하 생각하면 여러번 API를 호출하는건 성능면에서 좋지 않을꺼 같은데 아직 배움이 부족해 이해가 잘 되지 않네요 ;;
2022. 1. 21. 오후 2:43, 결과보단 과정을 / React,JS : 문제는 해결이 되었습니다. 도움 주셔서 감사 드립니다 ㅎㅎ
2022. 1. 21. 오후 2:44, 썰~~ : 트루에요
2022. 1. 21. 오후 2:44, 결과보단 과정을 / React,JS : 네 트루인건 알고 있어요
2022. 1. 21. 오후 2:44, 썰~~ : 사진
2022. 1. 21. 오후 2:44, 결과보단 과정을 / React,JS : 왜 true인지가 납득이 안되서요 ;;
2022. 1. 21. 오후 2:44, 썰~~ : /**
     * Set this to `false` to disable automatic refetching when the query mounts or changes query keys.
     * To refetch the query, use the `refetch` method returned from the `useQuery` instance.
     * Defaults to `true`.
     */
2022. 1. 21. 오후 2:44, 썰~~ : 저렇게 적혀있습니다
2022. 1. 21. 오후 2:44, 결과보단 과정을 / React,JS : 그 설명을 봐도 이해가 잘 안되서요
2022. 1. 21. 오후 2:45, 썰~~ : 키가 바뀔때마다 자동으로 데이터 싱크를 맞춰주게 되어있는거에요
2022. 1. 21. 오후 2:46, 결과보단 과정을 / React,JS : 제 코드로는 키가 똑같아도 네트워크 상에 API가 발행이 되서요…
2022. 1. 21. 오후 2:46, 결과보단 과정을 / React,JS : 제 코드가 뭔가 문제가 있나보네요
2022. 1. 21. 오후 2:47, 생각하는오뎅 : 기본적으로는 다른탭 갔다가 다시 오거나, 아니면 포커스를 다시 하거나 등등의 행동이 있을 때마다

refetch를 하는거고, 

이를 끄기 위해서는 저 옵션을 false로 하되, 

실제로 refetch가 필요할 때는 refetch method를 강제로 불러주거나, query의 key를 다르게 해주어라~ 

이거 아닌가요?
2022. 1. 21. 오후 2:49, 결과보단 과정을 / React,JS : 네, 말씀하신 내용이 맞는데, 지금 코드에서는 저 enabled를 false로 두면 초기 렌더링시 API가 한번만 호출되고 enabled가 true인 경우에는 초기 렌더링시 API가 여러번 호출이 되고 있어서요.
2022. 1. 21. 오후 2:50, 결과보단 과정을 / React,JS : 다른 행동을 하지 않았는데도 여러번 호출이 되어서 질문 드리게 되었는데, react-query를 사용하는 방법의 문제가 아니라 제가 짠 코드 자체의 문제일 가능성이 큰것 같습니다.
2022. 1. 21. 오후 2:51, 결과보단 과정을 / React,JS : 도움주셔서 감사합니다 ㅎㅎ
2022. 1. 21. 오후 2:51, 생각하는오뎅 : 저거를 호출하는 부분에 콘솔 찍어보시면, 그 콘솔 자체가 여러번 찍히는듯 하네요 ㅋ
2022. 1. 21. 오후 2:59, 부탁하는 네오 : 키에 혹시 어떤값 넘기시는지 알 수 있을까요?
2022. 1. 21. 오후 3:04, 결과보단 과정을 / React,JS : "categoryMenu" 요런 식으로 string을 사용하는데
2022. 1. 21. 오후 3:04, 결과보단 과정을 / React,JS : 혹 이게 문제가 될까요 ;;
2022. 1. 21. 오후 3:09, 김동현 : graphQL 을 회사에서 사용하시는 분들 계신가요?
2022. 1. 21. 오후 3:10, 나이스하게개발하기 : 많이는 아니고 몇몇팀에서 사용한다고 전해들었어요 ~
2022. 1. 21. 오후 3:11, 김동현 : 우리 회사가 이번에 싹 다 바꿨는데
2022. 1. 21. 오후 3:11, 김동현 : 기존 firebase 에서 전부 graphQL + postgressDb 로 바꿨거든요
2022. 1. 21. 오후 3:12, 김동현 : 어떻게해야 프론트입장에서 graphQL 을 이용해서 기똥찬 query 와 mutation 을 작성할 수 있을지 고민이 되네요
2022. 1. 21. 오후 3:18, j : 음..무슨 의미인지 이해가 잘 안되서요 ㅠㅠ
2022. 1. 21. 오후 3:19, 김동현 : graphQL 을 모르시면
2022. 1. 21. 오후 3:19, 김동현 : 모를거에요..!
2022. 1. 21. 오후 3:19, j : 저 graphQL 사용하는데
2022. 1. 21. 오후 3:19, j : 질문이 너무 포괄적이라 여쭤본거에요
2022. 1. 21. 오후 3:19, j : 삭제된 메시지입니다. 
2022. 1. 21. 오후 3:22, j : 우선은 저는 백엔드랑 어느정도 타협을 봐서 특정한 목적이 존재하는 서비스 액션일 경우 나눌 수 있는건 나눠서 뮤테이션으로 작성 요청했구요.
query 같은 경우는 아직 적용은 안했고 생각중인 것은 fragment 사용해서 data.type이나 상태값들로 각 타입별, 상태별 fragment 조합을 통해 유연하게 쿼리 호출이 될 수 있도록 고민중입니다.
2022. 1. 21. 오후 3:28, j : 아 그리고 쿼리나 뮤테이션 작성보다 그 결과값을 어떻게 처리하느냐, 그 데이터를 어떻게 보여줄 것이냐가 질문자분이 말씀하신 프론트앤드 입장에서 더 나은 발전이 되지 않을까 생각합니다.
2022. 1. 21. 오후 5:01, 공공 : 프론트 테스트 코드 다들 작성하시나요? 🤔 스토리북은 꽤 많이 쓰이는 거 같은데, 그 외의 테스트들도 일반적으로 실무에서 쓰고 계신지 궁금하네요
2022. 1. 21. 오후 5:05, 알모 : 저희는 서비스레이어만 작성하고 있는데 앞으로 리액트컴포넌트 쪽도 중요도가 높은 건 작성하려고 하고 있어요!
2022. 1. 21. 오후 5:06, 공공 : 아하 서비스레이어라 하심은 혹시 예를 들면 어떤 케이스일까요!?
2022. 1. 21. 오후 5:07, 코린이 : Vscode 왜 갑자기 _rfce가 없어졌죠?.. 저만 그런가요?..
2022. 1. 21. 오후 5:07, 알모 : 비지니스로직이 있는 부분이요!!
2022. 1. 21. 오후 5:09, 공공 : 아 렌더링 이외 영역이겠군요! 리덕스같은 구조에서 하시는 걸까요?
2022. 1. 21. 오후 5:12, 알모 : 리덕스는 또 다른 레이어로 분리되어 있구요! 서비스레이어에서는 보통 데이터 가공을 하는 것 같아요 (서버에서 받은 데이터 가공)
2022. 1. 21. 오후 5:14, 프린이 : 스토리북은 잘 안써요
2022. 1. 21. 오후 5:15, 공공 : 오 그럼 아예 어떤 프레임워크나 라이브러리랑 무관하게 js/ts 로 짜여진 걸 테스트하시려나요!
2022. 1. 21. 오후 5:17, 알모 : 네네 맞습니다!!
2022. 1. 21. 오후 5:17, 공공 : 아하 그렇군요..!
2022. 1. 21. 오후 5:18, 알모 : 처음부터 저렇게 설명했으면 쉽게 이해하셨겠네요 ㅎㅎㅎㅎ
2022. 1. 21. 오후 5:20, 공공 : ㅋㅋㅋ아닙니다! 답변해주셔서 감사해요!
2022. 1. 21. 오후 8:52, 유용태 (teo.yu) : 좋은 질문 감사합니다 :) 해당 질문 내용에 대한 답변을 블로그로 작성해도 될까요? 대단한건 아니지만 긴 호흡으로 설명드리면 좋을 것 같아요
2022. 1. 21. 오후 8:54, 준영 : 저 혹시 질문 있는데 알고리즘 생각하고 문제풀이 하며 수학적 사고를 키우는게
2022. 1. 21. 오후 8:55, 준영 : 프론트 개발 하는데 있어서도 도움이 되는 부분일까요
2022. 1. 21. 오후 8:56, 유용태 (teo.yu) : 네 저는 도움이 된다고 생각합니다
2022. 1. 21. 오후 8:58, Hardy : 수학적인걸 실무에서 쓰이는지는 잘 모르겠지만 문제 해결 능력은 올라간다 생각합니다
2022. 1. 21. 오후 8:58, 유용태 (teo.yu) : 맞아요
2022. 1. 21. 오후 8:59, Hardy : 알고리즘 풀면서 재귀 함수 처음 접했는데 코드 칠 때 좀 애용하는 편입니다
2022. 1. 21. 오후 8:59, 피카츄돈까스/React,RN : 저 수학적 사고가 정말 많은 도움을 줍니다. 계속 하다보면 일상생활에도 계속 수학적 사고를 하게 돼서 넘좋더라구요
2022. 1. 21. 오후 9:00, Hardy : dom이 트리 구조다보니까 효율적으로 관리하려면 필요하다고 생각도 들어요
2022. 1. 21. 오후 9:05, 준영 : 오호 그렇군요!!
2022. 1. 21. 오후 9:05, 준영 : 요새 좀 제대로 공부하는 느낌인데
2022. 1. 21. 오후 9:06, 준영 : 제가 안일하게 생각했던건지 생각보다 더 높은 수학적 논리력이 필요하구나라는 걸 좀 느끼게 되더라고요
2022. 1. 21. 오후 9:06, 준영 : 그래서 조심스레 여쭤봤습니다!'
2022. 1. 21. 오후 9:06, 준영 : 뭣보다 소통하는데 있어 부족함을 느낄때 아차 싶더라고요 ㅎㅎㅎ 감사합니다
2022. 1. 21. 오후 9:19, 신나는 프로도 : 저도 js 공부중인 입장에서 너무 좋을듯 싶습니다..! 저도 여러번 목적을 잃고 헤매는 느낌과 어느정도까지 해야하는지 시간이 낭비되는 느낌을 많이 받았네요ㅠㅠ
2022. 1. 21. 오후 9:22, 피카츄돈까스/React,RN : 이모티콘 저는 트리까지만 공부하고 흥미가 떨어져서 더 공부안했는데 다까무겄네요...
2022. 1. 21. 오후 9:23, 유용태 (teo.yu) : 네 감사합니다
2022. 1. 21. 오후 9:24, Hardy : 저도 다 까먹었는데 써야하는 상황 되니까 어떻게든 되더라고요 ㅋㅋㅋ
2022. 1. 21. 오후 9:39, 피카츄돈까스/React,RN : ㅋㅋ오오..대충 아 이럴때 필요하구나만 알아도 구글 형이 잘 알려주시니..
2022. 1. 21. 오후 9:39, Hardy : 라이브 코테였습니다... 구글 형의 도움을 못...
2022. 1. 21. 오후 9:44, 피카츄돈까스/React,RN : ......라..라이브.....
2022. 1. 21. 오후 10:51, 유지남 : 수학을 직접한다기 보다 수학적 센스가 필요한 것 같습니다.

간단한 예시 문제로 흔히 보는 리뷰 별점 표시의 경우
1.2 = 1.2
1.3 = 1.3
1.0 = 1
소수점이 있는 경우는 그대로 표시
1.0과 같은 수는 정수로 표시 라는 요구 사항이 있는 경우가 비슷한 상황이지 않을까 합니다.
2022. 1. 21. 오후 11:02, 유지남 : 게임 개발시에는 삼각함수, 미분 등 많은 수학 공식들이 필요하지만, 웹파트 프론트 개발하면서는 1차방정식 말고는 거의 사용해 본적은 없는 것 같아요.
2022. 1. 21. 오후 11:08, 김동현 : 제 회사에선 stack을 이용한 하노이의 탑 로직 계산하고있습니다 최근에
2022. 1. 21. 오후 11:09, 유지남 : 하노이 탑도 이미 공식이 있지 않나요?
2022. 1. 21. 오후 11:20, 김동현 : n 개가 있는 탑에서 다른 탑으로 갈때
2022. 1. 21. 오후 11:20, 김동현 : 는 공식이있는데
2022. 1. 21. 오후 11:20, 김동현 : 1    
2     3
4     5
2022. 1. 21. 오후 11:20, 김동현 : 이렇게 있을때 3번째탑으로 가는 최소경우의수
2022. 1. 21. 오후 11:21, 김동현 : 이런거 계산하고있습니다
2022. 1. 21. 오후 11:34, 프론트준비생 : 아 이제봤네요 당연히 쓰셔도됩니다!!

2022년 1월 22일 토요일
2022. 1. 22. 오전 12:38, Hyo : 사진 2장
2022. 1. 22. 오전 12:39, Hyo : 실행 시점의 this면 func 의 this 아닌가요?
2022. 1. 22. 오전 1:12, 엄지척 제이지 : 네 func.call 실행 시점
2022. 1. 22. 오전 1:12, 엄지척 제이지 : 따라서 global
2022. 1. 22. 오전 1:30, Hyo : 감사합니다
2022. 1. 22. 오전 1:48, 욱신 / 리액트 : forEach에 전달된 콜백함수는 일반함수로 콜 되었기 때문에 global이 된거 아닌가요?
strict mode로 하면 forEach에 전달된 콜백함수에서 this는 undefined가 나오구영
2022. 1. 22. 오전 2:21, Hyo : 해당 설명으로 테스트 해봐야겠네요 감사합니다 ~
2022. 1. 22. 오전 4:50: 끼얏호우님이 들어왔습니다.
2022. 1. 22. 오전 4:50, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 22. 오전 10:23, 유용태 (teo.yu) : 끼얏호우님 반갑습니다 :) 새벽에 오셔서 인사를 못 드렸네요~~ 어서오세요!
2022. 1. 22. 오전 10:23, 프린이 : ㅋㅋㅋ 닉네임 신나네요!
2022. 1. 22. 오전 10:33, 콘솔 : 끼얏호우! ㅋㅋㅋ
2022. 1. 22. 오전 11:36, 시무룩한 튜브 : ㅋㅋㅋ
2022. 1. 22. 오후 12:00, 영보떼 : 여러분 자바스크립트 ㅠ너무 어려워서 인강 결제하려하는데
2022. 1. 22. 오후 12:01, 영보떼 : 패캠 올인원패키지 VS 인프런 자바스크립트강의만 
어떤 걸 더 추천하실까요?
다른 좋은 사이트 추천해주셔도 너무 감사드립니다 ,,
2022. 1. 22. 오후 12:02, Hardy : 개인적으로 입문은 드림코딩...
2022. 1. 22. 오후 12:02, Hardy : 딱딱하지 않은 강의에 비유도 잘하시고 이해하기 쉽게 알려주세요
2022. 1. 22. 오후 12:02, 영보떼 : 생코느낌인가요? 추천 감사합니다 !
2022. 1. 22. 오후 12:02, Vintz : 저도 드림코딩 추천드려요!
2022. 1. 22. 오후 12:03, 프론트준비생 : 혹시어떤거들으셨나요?
2022. 1. 22. 오후 12:04, Hardy : 저는 리액트 들었어요
2022. 1. 22. 오후 12:04, 썰~~ : 입문은 저는 생코 추천 저 진짜 에디터 켤줄도 몰랐을때
2022. 1. 22. 오후 12:04, 영보떼 : https://academy.dream-coding.com/pages/912e50
2022. 1. 22. 오후 12:04, 썰~~ : 진짜 도움 많이 되었습니다
2022. 1. 22. 오후 12:04, 영보떼 : 저 생코 거의 다 들어가요 !
2022. 1. 22. 오후 12:04, 썰~~ : 그럼 저는 퍼블리싱부터 들으셔서
2022. 1. 22. 오후 12:04, 썰~~ : 웹표준이랑 접근성 잡고가는거도 추천드립니다
2022. 1. 22. 오후 12:05, 영보떼 : 근데 제가 전형적인 주입식 교육 공부 스타일이라 ㅠㅠ 더더 어렵네요
2022. 1. 22. 오후 12:05, 영보떼 : 앗 감사합니다 !
2022. 1. 22. 오후 12:05, 썰~~ : 저는 그부분은 웹스토리보이님의 웹표준 유튜브 무료강의가 제일 좋았어요
2022. 1. 22. 오후 12:05, 썰~~ : 영보떼님이 좋아하는 css쪽 많이 나옵니다 ㅎㅎ
2022. 1. 22. 오후 12:06, 영보떼 : 완전 왕초보일때 정리해두신것도 벨로그나 블로그에 업로드 하셨나요 ? 아니면 그냥 혼자 보기 편하게 따루 정리만 하셨나용 ?
2022. 1. 22. 오후 12:06, 썰~~ : 저는 그러진 않았지만
2022. 1. 22. 오후 12:06, 썰~~ : 요새 이력서 볼때
2022. 1. 22. 오후 12:06, 썰~~ : 그부분을 좋게 보고있습니다
2022. 1. 22. 오후 12:06, 썰~~ : 얼마나 발전했는지 보여주는 지표라서
2022. 1. 22. 오후 12:06, 썰~~ : 계속 발전하는중이구나 이게 좋게 보이더라고요
2022. 1. 22. 오후 12:07, 영보떼 : 흠 저처럼 왕초보가 쓴 글은 틀린 부분도 많구 빼먹는 부분 등등의 허점이 많이 보일텐데 이 부분은 아직 초보니까 괜찮겠조 ..? 😢
2022. 1. 22. 오후 12:07, 영보떼 : 저 글 임시저장만 해놓구 있거등요,,
2022. 1. 22. 오후 12:08, 썰~~ : 괜찮습니다 ㅎㅎㅎ
2022. 1. 22. 오후 12:08, 썰~~ : 나중에 보이면 수정하시면 됩니다
2022. 1. 22. 오후 12:10, 영보떼 : 감사합니다앙
2022. 1. 22. 오후 12:10, 파이버 : 댄 아브라모브도 흑역사 블로그 있는데요 뭐 ㅎ 누구나 그런 글들 하나씩 있다고 봅니다

 일단 지르시고 나중에 다른 플랫폼으로 옮기거나 하시면 되죠
2022. 1. 22. 오후 1:07, j : 일단 공부하셨다는걸 좋게 보죠!!모르는걸 배우고 익히는 자세니까
2022. 1. 22. 오후 1:07, 영보떼 : 이모티콘 
2022. 1. 22. 오후 1:53, 영보떼 : 저 드코 엘리님 목소리 첨 들었는데 쏙쏙 박히는 목소리네요 ! 추천 넘 감사드립니다 !
2022. 1. 22. 오후 1:58, 생못미 : 혹시 스토리북 써보신 분 있으신가요? 회사에서 쓰고 계신 분이 있는지 궁금하네요
2022. 1. 22. 오후 1:58, 피카츄돈까스/React,RN : 저요!!
2022. 1. 22. 오후 1:58, 유용태 (teo.yu) : 저희 회사에는 마크업 팀에서 스토리북 사용하고 있어요
2022. 1. 22. 오후 1:58, 피카츄돈까스/React,RN : 와.....
2022. 1. 22. 오후 1:58, 생못미 : 이직처에서 쓰게될 수도 있을거 같아서 쉬는 동안 조금 봐두려고 하는데 처음 접할 때 허들이 어느 정도인지 궁금해서요
2022. 1. 22. 오후 1:58, 피카츄돈까스/React,RN : 마크업팀...
2022. 1. 22. 오후 1:58, 피카츄돈까스/React,RN : 생각보다 얼마 안걸리실거같아욤
2022. 1. 22. 오후 1:59, 유용태 (teo.yu) : 깊게 사용하실게 아니라면 러닝커브적인 허들은 별로 없어요
2022. 1. 22. 오후 1:59, 피카츄돈까스/React,RN : 엄청 어려운 툴은 아니라서
2022. 1. 22. 오후 1:59, 유용태 (teo.yu) : 좀 느린게 오히려 답답할 정도? ㅎ
2022. 1. 22. 오후 1:59, 생못미 : 아 성능 문제가 있나요??
2022. 1. 22. 오후 1:59, 유용태 (teo.yu) : 문제까지는 아니구요 ㅎ
2022. 1. 22. 오후 1:59, 영보떼 : 다들 매일 겅부하시네요,,,
2022. 1. 22. 오후 1:59, 피카츄돈까스/React,RN : 요번에 업데이트 되면서 기능 많이 생겼던데
2022. 1. 22. 오후 1:59, 영보떼 : 완전 자극 받구 갑니당 ,, 총총
2022. 1. 22. 오후 2:01, 유용태 (teo.yu) : 마크업팀이 쓰는 이유는 서비스와 별개로 디자인이나 기획이 만든 화면을 screen별로 서비스해서 보여주기 위한 용도가 제일 커서
2022. 1. 22. 오후 2:02, 유용태 (teo.yu) : 컴포넌트 문서화는 아직 정형화 되지는 않고 있는데 고민은 하고 있어요
2022. 1. 22. 오후 2:02, 유용태 (teo.yu) : 개발과 무관하게 디자인 진행여부를 보여주기에 좋아서
2022. 1. 22. 오후 2:02, 유용태 (teo.yu) : github으로 정적사이트 배포하는 방식으로 디자이너와 소통하는 용도로 쓰고 있습니다
2022. 1. 22. 오후 2:03, 생못미 : 오호 그렇군여 쉬는 동안 스토리북이랑 요즘 자꾸 이름 눈에 밟히는 스벨트 정도 조금 맛 봐두면 좋겠네여
2022. 1. 22. 오후 2:03, 생못미 : 감삼다!
2022. 1. 22. 오후 2:04, 생못미 : 스토리북으로 짜놓고 깃헙 액션 같은걸로 자동 배포도 가능하겠네요
2022. 1. 22. 오후 2:08, j : 저욥
2022. 1. 22. 오후 2:09, j : 스토리북은 보통 컴포넌트 디자인 미리 작성할때 써요
2022. 1. 22. 오후 2:09, j : 허들은 테오님이 말씀하신거처럼 높지 않습니다
2022. 1. 22. 오후 2:12, 생못미 : 오호 많이들 쓰시네여
2022. 1. 22. 오후 2:17, 홀리몰리 : 저희는 UI TDD 느낌으로 사용하고, 스토리북 컴포넌트를 import해서 쓰고 있습니다.
2022. 1. 22. 오후 2:17, 프론트준비생 : 혹시공부한거 블로그에정리하시는분들 어떤걸기준으로정리하시나요? 특정정보에대해서 다른사람글보고 그대로 블로그에복붙하는건의미없는거같고...그렇다고 블로그안하는건좀 그런거같기도하고...  고민이네요
2022. 1. 22. 오후 2:18, 영보떼 : 저두 완전 궁금한 부분,,
2022. 1. 22. 오후 2:19, 영보떼 : 벨로그 말고 블로그 하세요 ?
2022. 1. 22. 오후 2:22, 프론트준비생 : 저는티스토링ᆢ
2022. 1. 22. 오후 2:23, 유용태 (teo.yu) : 저라면 경험이나 본인 생각을 쓰는 것을 추천드립니다.
2022. 1. 22. 오후 2:26, 유용태 (teo.yu) : 음.. 하지만 저도 그렇게 안쓰니까 취소할게요
2022. 1. 22. 오후 2:29, 유용태 (teo.yu) : 하지만 확실히 면접관으로서 임팩트가 있었던 것은 본인이 경험한게 많이 적혀있던 것이 좋았어요. 포폴을 만드는 과정이 어려움을 겪었는데 해결했다거나 관련자료를 찾아본 링크라거나
2022. 1. 22. 오후 2:30, 프론트준비생 : ㅋㅋ
2022. 1. 22. 오후 2:31, j : 동의합니다!
2022. 1. 22. 오후 2:33, 유용태 (teo.yu) : 경험을 쓰기 힘든것은 아무래도 회사일은 보안상 ㅠㅠ 하지만 내가 만들고 있는 것에 대한 생각이나 삽질기 고민기 방황기 철학 이런 본인이 많이 표현된 블로그가 좋은 것 같아요. 정보 포스팅도 본인의 생각이나 견해가 뒷받침되는 게 좋은 것 같구요. 결국 나의 블로그는 '나' 라는 게 어떻게든 표현이 되어야 된다고 생각합니다
2022. 1. 22. 오후 2:44, 유지남 : 저도 티스토리를 하고는 있지만…
보통은 필요한 정보를 찾고(즐겨찾기 용도가 아닌) 테스트를 하면서 혹은 블로그에서 알려준 정보 이외의 경험들을 주로 씁니다. 

지금 준비하고 있는 소재는 시니어들의 코딩이라는 주제로 하나씩 적고 있어요.
2022. 1. 22. 오후 2:48, 유용태 (teo.yu) : 와! '시니어들의 코딩' 멋있네요. 연재 시작 하셨나요?
2022. 1. 22. 오후 2:48, 유용태 (teo.yu) : +_+
2022. 1. 22. 오후 2:54, 유지남 : 아뇨… 소재만 모아두고 있어요. 정리는 시간 날 때 조금씩 ㅎㅎ 저는 글 하나 쓰면 3개월은 걸리는 것 같아요.
2022. 1. 22. 오후 2:54, 유용태 (teo.yu) : 꼭 링크 여기에 홍보겸 공유 함께 부탁드려요 ㅎ
2022. 1. 22. 오후 2:55, 유지남 : ㅋㅋ 감사합니다.
2022. 1. 22. 오후 2:57, 생못미 : 저도 한표. 결국 회사 입장에서는 면접을 봐야하고 그 자리에서 이 사람이 어떤 개발을 하는지 혹은 어떤 사람인지에 대한 단서를 얻기가 굉장히 제한적이라서 그에 대한 풍부한 대답일 수 있다면 다 좋은거 같아요.
2022. 1. 22. 오후 2:59, 생못미 : 면접 질문 했는데 너무 잘 대답하면 면접관 입장에서 즐겁기 보다는 불안하더라고여... 내가 질문을 잘못하고 있는건가 ㅋㅋㅋㅋ
2022. 1. 22. 오후 2:59, 생못미 : 면접 이전부터 이 사람에 대한 충분한 정보가 주어진 면접은 그런 불안이 덜 했던거 같아요
2022. 1. 22. 오후 3:06, j : 면접보면서 늘 드는 생각은 지식들은 있고 그걸로 코드는 짰는데 왜 그렇게 사용했는지를 설명 못하는 경우가 있더라구요
2022. 1. 22. 오후 3:07, j : 잘 찾아서 왜 이렇게 썼는가를 중점으로 보면 더 많이 느실거에요
2022. 1. 22. 오후 3:25, 프론트준비생 : 오..감사합니다
2022. 1. 22. 오후 4:39, Leo : 질문있습니다~! 한 페이지 안에서 분리된 컴포넌트들의 Input에 순서대로 포커싱하려고 forwardRef랑 useImperativeHandle 건드리고 있는데 이 방향이 맞나요? 로직이 너무 흩어져서 복잡해지는 거 같아서요..ㅠ
2022. 1. 22. 오후 4:43, 김동현 : forwardRef랑 useImperativehandle을 사용해야하는건 맞는데
2022. 1. 22. 오후 4:43, 김동현 : input에 순서대로 포커싱
2022. 1. 22. 오후 4:43, 김동현 : 이라는 말을 구체화시켜주세요
2022. 1. 22. 오후 4:49, Leo : 한 페이지 내에 여러개의 컴포넌트가 Input을 1개씩 가지고 있습니다. 순서를 매겨서 예를 들자면 첫 번째 컴포넌트 내의 input 입력이 종료되면 두 번째 컴포넌트의 input에 focus되는 식으로 구현하고 싶은데 이런 focus 관련 로직을 어떻게 모아야하는지 모르겠습니다!! Ref를 전달하려니까 관련 코드가 흩어지는데 이게 일반적인지도 궁금합니다!!
2022. 1. 22. 오후 5:49: Hola님이 들어왔습니다.
2022. 1. 22. 오후 5:49, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 22. 오후 5:54, 유용태 (teo.yu) : 안녕하세요 Hola님 반갑습니다 :)
2022. 1. 22. 오후 5:56, 유용태 (teo.yu) : tab-index로는 해결이 안될까요?
2022. 1. 22. 오후 6:02, Leo : tab-index 처음 들어보는데 한번 찾아보겠습니다~! 답변 감사합니다
2022. 1. 22. 오후 6:09, 유용태 (teo.yu) : https://stackoverflow.com/questions/7208161/focus-next-element-in-tab-index
2022. 1. 22. 오후 6:11, 유용태 (teo.yu) : https://stackoverflow.com/questions/24209588/how-to-move-focus-on-next-field-when-enter-is-pressed
2022. 1. 22. 오후 6:14, 유용태 (teo.yu) : tab-index는 질문을 잘 못이해해다른 링크 보내드려봅다
2022. 1. 22. 오후 6:15, 유용태 (teo.yu) : https://stackoverflow.com/questions/58869515/how-to-focus-next-input-on-pressing-enter-in-functional-components-tab-behavi
2022. 1. 22. 오후 6:25, Hola : 안녕하세요! 반갑습니다 teo님 :) velog 글 잘 보며 배우고 있습니다🙏
2022. 1. 22. 오후 6:29, 유용태 (teo.yu) : 네~ 감사합니다! 여기는 개발 얘기 하고 싶거나 궁금한거 있을때 다른 개발자들은 어떻게 하는지 궁금할때 편하게 물어보는 공간입니다. ~ 좋은 자료 링크가 본인이 공부한 내용이나 관심사를 올려주셔도 좋아요ㅋ 언제든 편하게 글 남겨주세요
2022. 1. 22. 오후 6:31, 유용태 (teo.yu) : 모바일이시면 우상단 메뉴 > 링크를 눌러보시면 읽어볼만한 글들도 많으실거에요 :)
2022. 1. 22. 오후 6:33, Hola : 네 좋네요 :) 알겠습니다 !
2022. 1. 22. 오후 6:33: 순무김치님이 들어왔습니다.
2022. 1. 22. 오후 6:33, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 22. 오후 6:33, 유용태 (teo.yu) : 안녕하세요~ 아이디어 프로도님! 반갑습니다 :)
2022. 1. 22. 오후 6:39, 순무김치 : 안녕하세요 ~!
2022. 1. 22. 오후 6:39, 프론트맨 : 삭제된 메시지입니다. 
2022. 1. 22. 오후 6:41, 유용태 (teo.yu) : 네~ 어서오세요 :) 여기는 궁금한게 있거나 개발 얘기가 고플때 다른 개발자들과 함께 얘기 나누는 공간입니다 :) 언제든 편하게 글 남겨 주세요
2022. 1. 22. 오후 6:42, 유용태 (teo.yu) : 좋은 자료 링크나 본인이 작성한 글 공유 해주셔도 좋아요! 저희 메뉴에 링크를 보시면 읽을만한 글들이 좀 있습니다 :)
2022. 1. 22. 오후 6:43, 유용태 (teo.yu) : 간혹 구글 스프린트나 스터디 토론과 같은 소소한 이벤트 같은 것들도 시도해보려고 하고 있어요~ 언제든 아이디어 주시는 것도 환영합니다~
2022. 1. 22. 오후 9:18: 훌온텐드님이 들어왔습니다.
2022. 1. 22. 오후 9:18, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 22. 오후 9:22, 유용태 (teo.yu) : 안녕하세요 훌온텐드님~~ 반갑습니다 :)
2022. 1. 22. 오후 9:23, 훌온텐드 : 안냥하세요^^
2022. 1. 22. 오후 9:29, 유용태 (teo.yu) : 네~ 어서오세요 :) 여기는 개발을 하다가 궁금한게 생겼을때 서로 물어보고 알려주고 하는 곳이에요 언제든 편하게 물어보세요~
2022. 1. 22. 오후 9:30, 훌온텐드 : 네 감사합니다 ㅎㅎ
2022. 1. 22. 오후 10:32: 0_0님이 들어왔습니다.
2022. 1. 22. 오후 10:32, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 22. 오후 10:32, 유용태 (teo.yu) : 안녕하세요 O_O 님 반갑습니다 :)
2022. 1. 22. 오후 10:33, 0_0 : 안녕하세요:)
2022. 1. 22. 오후 10:34, 유용태 (teo.yu) : 어서오세요~ 여기는 개발자들끼리 궁금한걸 공유 하고 관심사나 좋은 링크들을 공유 하는 공간입니다 :)
2022. 1. 22. 오후 10:35, 유용태 (teo.yu) : 언제든 편하게 글 남겨주세요~
2022. 1. 22. 오후 10:36, 0_0 : 넵! 잘 부탁드립니다
2022. 1. 22. 오후 11:01, 개발닥 : 사이드 플젝 할려고 마음 다 잡았는데요
2022. 1. 22. 오후 11:01, 개발닥 : 오늘 웹팩 설정하다 집어 던지고 겜 했습니다.. 너무 귀찮네요
2022. 1. 22. 오후 11:01, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 22. 오후 11:05, Leo : 감사합니다!!
2022. 1. 22. 오후 11:28, Hola : ㅋㅋㅋ원래 초기 세팅이 젤 귀찮쥬..ㅠㅠ

2022년 1월 23일 일요일
2022. 1. 23. 오전 12:01, 유용태 (teo.yu) : vite로 넘어오세요 +_+
2022. 1. 23. 오전 7:55: 여의도개발님이 들어왔습니다.
2022. 1. 23. 오전 7:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 23. 오전 7:56, 여의도개발 : 안녕하세요
프론트엔드
개발자입니다 반갑습니다
2022. 1. 23. 오전 8:30, 이엘로 : 안녕하세요!
2022. 1. 23. 오전 9:19, 유용태 (teo.yu) : 안녕하세요 여의도개발님! 반갑습니다 :)
2022. 1. 23. 오전 9:46, 유용태 (teo.yu) : https://medium.com/geekculture/web-application-architecture-800d3ecd8019?source=email-e012841b24ec-1642872105330-digest.reader-9758482ba857-800d3ecd8019----3-101------------------a09c6053_1a29_477c_81f9_31612327a956-1-eedaf4a3_d861_425c_bbdf_dcb676c9db23
2022. 1. 23. 오전 10:14: 신난 어피치님이 들어왔습니다.
2022. 1. 23. 오전 10:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 23. 오전 10:14, 유용태 (teo.yu) : 안녕하세요 신난 어피치님! 반갑습니다~
2022. 1. 23. 오전 10:15, 신난 어피치 : 안녕하세요 ㅎㅎ  velog 읽다가 들어왔습니다
2022. 1. 23. 오전 10:15, 유용태 (teo.yu) : 감사합니다 환영합니다 ㅎㅎ
2022. 1. 23. 오전 10:16, 유용태 (teo.yu) : 여기는 개발을 하다가 궁금한게 생겼을때 아니면 문득 다른 개발자들은 어떻게 개발하고 있을지 물어보고 싶을때 아니면 같은 취준생, 주니어, 시니어간의 고민상담등을 함께 하고자 하는 공간입니다
2022. 1. 23. 오전 10:18, 유용태 (teo.yu) : 간단한 질문들은 거의 대대분 답변을 달고 있구요~ 좋은 질문들은 제가 얼른 캡쳐해서 블로그 소재를 삼고 있습니다 ㅋㅋ 편하게 뭐든 글 남겨주세요 :)
2022. 1. 23. 오전 10:18, 신난 어피치 : 감사합니다 :)!
2022. 1. 23. 오전 10:19, 유용태 (teo.yu) : 보다가 좋은 글이 있다면 링크도 공유해주시면 좋아요 모바일이시라면 우상단 > 메뉴 에서 링크를 눌러보시면 또 좋은 글들을 보실 수 있습니다. 본인이 공부한 블로그 글 특히 환영합니다 ㅎ
2022. 1. 23. 오전 10:37, 여의도개발 : 너무 좋네요!!
2022. 1. 23. 오전 11:09, 프론트준비생 : 다들주로어디서공부하시나여?
2022. 1. 23. 오전 11:15, 꼬북 : 카페요 ㅋㅋ
2022. 1. 23. 오전 11:15, 여의도개발 : 집이요
2022. 1. 23. 오전 11:15, 꼬북 : 집에서 못하는 스타일입니다
2022. 1. 23. 오전 11:15, 꼬북 : ㅠ
2022. 1. 23. 오전 11:15, 여의도개발 : 전 집에서안대면 스터디카페에서 ㅎㅎ
2022. 1. 23. 오전 11:20, 프론트준비생 : https://www.facebook.com/218158748272233/posts/870060699748698/
2022. 1. 23. 오전 11:20, 프론트준비생 : 좋은글같아 공유합니다..
2022. 1. 23. 오전 11:35: 마이크를 든 라이언님이 들어왔습니다.
2022. 1. 23. 오전 11:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

프론트엔드나 현업 관련 질문이나 취업이나 최근 관심사가 있으면 언제든지 글 남겨주세요. 즐거운 마음으로 정성껏 답변 드리겠습니다. 

종종 프론트엔드 소식이나 공유하고픈 내용 있으면 올리고 있습니다.
2022. 1. 23. 오전 11:43, 유용태 (teo.yu) : 안녕하세요 마이크를 든 라이언님~ 반갑습니다 :)
2022. 1. 23. 오전 11:44, 마이크를 든 라이언 : 이모티콘 안녕하세요 블로그를 통해 많이 배우고 있습니다
2022. 1. 23. 오전 11:45, 유용태 (teo.yu) : 감사합니다~ 고맙습니다 ;)
2022. 1. 23. 오전 11:46, 유용태 (teo.yu) : 여기는 개발하다가 궁금한 것 서로 공유 하며 물어보는 공간입니다. 저는 거의 상주하고 있고요ㅋ 궁금한 부분 올려주시면 최대합 답변 드리고 있어요 ㅋ 개중에 좋은 질문들은 허락을 구하고 블로그로 답을 드리고 있어요 :)
2022. 1. 23. 오전 11:47, 유용태 (teo.yu) : 그게 아니더라도 다른 개발자들은 요새 뭘 하고 있을지 고민상담이나 좋은 글 혹은 관심사가 겹칠 경우 함께 얘기 해보는 곳이었으면 좋겠어요~ 편하게 언제든 글 남겨 주세요 :)
2022. 1. 23. 오전 11:48, 유용태 (teo.yu) : 출퇴근 시간이요
2022. 1. 23. 오전 11:48, 유용태 (teo.yu) : 지하철
2022. 1. 23. 오후 12:13, 꼬북 : 이게 진짜네요...
2022. 1. 23. 오후 12:14, 꼬북 : 나도 자투리시간 활용해야지...
2022. 1. 23. 오후 12:19, 신난 어피치 : 보통 기술관련해서 보시는 커뮤니티가 있으신가요들?
2022. 1. 23. 오후 12:19, 유용태 (teo.yu) : https://news.hada.io/
2022. 1. 23. 오후 12:20, 유용태 (teo.yu) : 그리고 medium news letter도 보고 있고
2022. 1. 23. 오후 12:23, 유용태 (teo.yu) : https://bestofjs.org/
2022. 1. 23. 오후 12:29, 신난 어피치 : 오 감솸다 ㅎㅎ
2022. 1. 23. 오후 1:06, 유용태 (teo.yu) : 다른 분들도 전에 언급을 하셨더라도 다들 알만한 것들도 좋으니 자주 보는 사이트가 있다면 한번씩 링크 공유 해봐주세요 :)
2022. 1. 23. 오후 1:14, 신난 어피치 : 링크가 저 들어온 이후부터만 볼 수 있더라구요 ㅎㅎ..
2022. 1. 23. 오후 1:14, 유용태 (teo.yu) : 아! ;;; 카톡은 그게 안 좋네요
2022. 1. 23. 오후 1:17, 유용태 (teo.yu) : 다들 그러면 여기 오시난 이전 링크는 안 보이시는 건가요?
2022. 1. 23. 오후 1:17, 유용태 (teo.yu) : *오기전
2022. 1. 23. 오후 1:18, Hola : 네네 이후의 링크들만 아카이빙 되는것 같아요ㅎㅎ
2022. 1. 23. 오후 1:20, 신난 어피치 : 네 방금 올려주신 세개만 보여요 ㅎㅎ
2022. 1. 23. 오후 1:25, 피카츄돈까스/React,RN : 그래서 태오님이 공지로 올려놓으신 링크들은 그전 것들도 잘 보여요!
2022. 1. 23. 오후 1:27, 유용태 (teo.yu) : 괜찮다 싶은 링크는 다시 공지로 걸어야 겠네요 감사합니다. 지난 링크는 좀 보여주면 좋았을텐데 아쉽네요. 저희 링크들 퀄리터 좋은 컨텐츠들 많은데 ㅠ
2022. 1. 23. 오후 1:27, 유용태 (teo.yu) : 제가 링크만 꺼낼 수 있는 지 좀 알아보고 구글 시트든 어디든 한번 공유해보도록 하겠습니다.
2022. 1. 23. 오후 1:40, 신난 어피치 : 좋습니다 ㅎㅎ 감사합니다!
2022. 1. 23. 오후 1:46, 피카츄돈까스/React,RN : 저도 이게 너무너무 좋았어요!!
2022. 1. 23. 오후 1:56, 유용태 (teo.yu) : 파일: Talk_2022.1.23 13:27-2.txt
2022. 1. 23. 오후 1:56, 유용태 (teo.yu) : 파일: Talk_2022.1.23 13:27-1.txt
2022. 1. 23. 오후 2:14, 유용태 (teo.yu) : 일단은 지난 대화 백업을 한번 공유 드려 봅니다. 해당 파일을 적절히 분석해서 조금더 읽기 편한 포맷으로 만들어 보는 것 진행되면 한번더 공유를 드려볼게요
2022. 1. 23. 오후 2:28, Hardy : 노션에 정리된다면 보기는 편하겠네요 수동으로 해야하는게 단점이지만요 ㅠ
2022. 1. 23. 오후 2:28, Hola : 링크를 쉽기 아카이빙하는 쿠키파킹이라는 서비스도 있더라구요!
2022. 1. 23. 오후 2:28, Hola : *쉽게
2022. 1. 23. 오후 2:32, 유용태 (teo.yu) : https://www.cookieparking.com/landing
2022. 1. 23. 오후 2:33, 시무룩한 튜브 : 귀엽네용
2022. 1. 23. 오후 2:35, 유용태 (teo.yu) : 그러게요~ 여기서 공유해주시는 내용들은 좋은 것들이 많아서 아카이빙과 공유가 되면 좋겠네요 :) 방법을 한번 찾아보겠습니다
2022. 1. 23. 오후 2:36, 유용태 (teo.yu) : 톡게시판 '공지': 그러게요~ 여기서 공유해주시는 내용들은 좋은 것들이 많아서 아카이빙과 공유가 되면 좋겠네요 :) 방법을 한번 찾아보겠습니다
2022. 1. 23. 오후 2:47, 부끄러운 어피치 : 이 서비스 어떤가영?? 전 raindrop.io 유료 결제해서 쓰는데 갠춘한거같아요
2022. 1. 23. 오후 2:54, 유용태 (teo.yu) : https://raindrop.io/
2022. 1. 23. 오후 2:55, 유용태 (teo.yu) : 감사합니다! 한번 검토해보겠습니다
2022. 1. 23. 오후 3:42, Matthew : 오 딱 이런 서비스 찾고있었는데 감사합니다
2022. 1. 23. 오후 3:43, Hola : ㅎㅎㅎ넵 저두 유용하게 쓰고있어요 :)
2022. 1. 23. 오후 5:14: 좌절하는 라이언님이 들어왔습니다.
2022. 1. 23. 오후 5:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 공유 하는 공간입니다.

무엇이 궁금한가요? +_+
2022. 1. 23. 오후 5:19, 유용태 (teo.yu) : 안녕하세요 좌절하는 라이언님~~ 반갑습니다!
2022. 1. 23. 오후 5:24, 좌절하는 라이언 : 안녕하세요! 벨로그 글 항상 잘 읽고 있습니다😁
잘 부탁 드립니다 ㅎㅎㅎ
2022. 1. 23. 오후 5:26, 유용태 (teo.yu) : 감사합니다 :) 여기서는 자유롭게 저를 포함해서 다른 개발자들과 함께 궁금한것들을 물어보고 답하고 하고 있습니다. 언제든 편하게 글 남겨주세요 ㅎ

2022년 1월 24일 월요일
2022. 1. 24. 오전 12:38, 화가난다 화가나 그래서 난 화가임 : 저 민망한 얘기인데, 비동기적 처리를 해결하기 위해서 콜백함수를 쓴다는 말이 있잖아용
2022. 1. 24. 오전 12:38, 화가난다 화가나 그래서 난 화가임 : 콜백함수로 결국에 동기식 처리로 만든다는 소리랑 똑같이 봐도 되는 거죵?
2022. 1. 24. 오전 12:39, 유용태 (teo.yu) : 아니요~ ㅋㅋ
2022. 1. 24. 오전 12:39, 화가난다 화가나 그래서 난 화가임 : 아니에용?
2022. 1. 24. 오전 12:39, 유용태 (teo.yu) : 동기식 코드처럼 보이게끔 만들어준다라는 표현이 더 맞을 것 같아요
2022. 1. 24. 오전 12:39, 화가난다 화가나 그래서 난 화가임 : 어쨌든, 비동기 결과값이 나온 후에 그 값이 콜백함수에 대입돼서 호출되는 거니까
2022. 1. 24. 오전 12:39, 화가난다 화가나 그래서 난 화가임 : 그렇게 보이게끔 만들어준다라는 게
2022. 1. 24. 오전 12:39, 화가난다 화가나 그래서 난 화가임 : 맞겠구나
2022. 1. 24. 오전 12:40, 화가난다 화가나 그래서 난 화가임 : 신기한게
2022. 1. 24. 오전 12:40, 화가난다 화가나 그래서 난 화가임 : 콜백함수랑 비동기식 처리 내용을
2022. 1. 24. 오전 12:40, 화가난다 화가나 그래서 난 화가임 : 옛날에 보고 이해가 정말 안갔는데, 지금 보니까
2022. 1. 24. 오전 12:41, 화가난다 화가나 그래서 난 화가임 : 의미가 보이네용
2022. 1. 24. 오전 12:41, 유용태 (teo.yu) : 성장 축하드립니다!!
2022. 1. 24. 오전 12:41, 화가난다 화가나 그래서 난 화가임 : 흠.. 아직 약점이 너무 많아서
2022. 1. 24. 오전 12:41, 화가난다 화가나 그래서 난 화가임 : 차근차근 해야겠어요 후우..
2022. 1. 24. 오전 12:43, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 24. 오전 12:43, 화가난다 화가나 그래서 난 화가임 : 캡틴판교님 글인데요
2022. 1. 24. 오전 12:44, 화가난다 화가나 그래서 난 화가임 : 저 글이 맞는 비유일까요?
2022. 1. 24. 오전 12:44, 화가난다 화가나 그래서 난 화가임 : 결국엔 response를 받아와야 callbackFunc(response)가
2022. 1. 24. 오전 12:44, 화가난다 화가나 그래서 난 화가임 : 호출 되는 거 아닌가요?
2022. 1. 24. 오전 12:45, 화가난다 화가나 그래서 난 화가임 : 결국은 식당에서 기다리는 거 아니에용?
2022. 1. 24. 오전 12:46, 유용태 (teo.yu) : 비유에서 보면 전화를 주는것으로 되어 있잖아요. callback를 호출해주면 그제서야 실행이 되는거니까 식당에서 기다리고 있는 것은 아니죠
2022. 1. 24. 오전 12:47, 유용태 (teo.yu) : 전화가 올때까지는 식당이든 아니든 **다른짓을 하면서 기다릴 수 있다**가 비동기의 핵심이지죠
2022. 1. 24. 오전 12:52, 화가난다 화가나 그래서 난 화가임 : 아 그렇다면, function(response){
               console.log('전화오기 전이니까 노라!');
               console.log('쇼핑도 가자!')
               callbackFunc(response)
}
2022. 1. 24. 오전 12:52, 화가난다 화가나 그래서 난 화가임 : 이런게 전화가 오기전가지는 무엇이든 할 수 있다는 느낌인건가요?
2022. 1. 24. 오전 12:58, 유용태 (teo.yu) : 아뇨 $.get 다음에 작성해야 쇼핑을 갈수 있어요 지금 작성한 곳은 전화를 받은 직후 구요
2022. 1. 24. 오전 1:02, 유용태 (teo.yu) : // 다되면 전화주세요 , 
$.get(... , function(call) { 
  // 전화 받고 할 일
  식당가서 밥먹()
})

쇼핑하기()
놀러가기()
2022. 1. 24. 오전 1:06, Hardy : 슬프네요... 채용 과제하는데 과제 api 서버가 터졌나봐요 뭐 이런...
2022. 1. 24. 오전 1:07, 유용태 (teo.yu) : 스샷 떠놔요~
2022. 1. 24. 오전 1:07, Hardy : 메일 보내고 있습니다 ㅠㅠ
2022. 1. 24. 오전 1:07, Hardy : 일단 api docs보고 진행해야죠 ㅠ
2022. 1. 24. 오전 1:07, 유용태 (teo.yu) : 언제까지에요?
2022. 1. 24. 오전 1:08, Hardy : 0시 시작했고 24시간 과제에요 ㅠ
2022. 1. 24. 오전 1:08, 유용태 (teo.yu) : msw 이용해서 mock 서버 만들고 가산점을 챙겨보심이...
2022. 1. 24. 오전 1:08, 유용태 (teo.yu) : 근데 좀 너무 하네요 ㅠㅠ
2022. 1. 24. 오전 1:09, Hardy : 이정도야 뭐 괜찮습니다 ㅋㅋ
2022. 1. 24. 오전 1:09, 신난 어피치 : 오… 신입이신거에요?
2022. 1. 24. 오전 1:09, Hardy : 어떤 곳은 스웨거 페이지가 보안에 걸려서 접근도 못하는 경우도 있었어요
2022. 1. 24. 오전 1:09, Hardy : 네 신입입니다
2022. 1. 24. 오전 1:11, 화가난다 화가나 그래서 난 화가임 : 아.. 이해갔습니다 감사합니다!
2022. 1. 24. 오전 1:12, 화가난다 화가나 그래서 난 화가임 : 이렇게 되면 1. 쇼핑하기 2. 놀러가기 3. 전화가 오면 식당가서 밥먹기
2022. 1. 24. 오전 1:12, 화가난다 화가나 그래서 난 화가임 : 이렇게 되는 거죠?
2022. 1. 24. 오전 1:12, 유용태 (teo.yu) : 맞아요!!
2022. 1. 24. 오전 1:12, 화가난다 화가나 그래서 난 화가임 : 제가 왜 이해를 못했냐면, 이제껏
2022. 1. 24. 오전 1:12, 화가난다 화가나 그래서 난 화가임 : $.get(... , function(call) { 
  // 전화 받고 할 일
  식당가서 밥먹()
})
2022. 1. 24. 오전 1:13, 화가난다 화가나 그래서 난 화가임 : 딱 여기까지만 사용해봤지 그 밑에 라인에 로직을 짠 기억이 없어서 ㅋㅋㅋㅋ
2022. 1. 24. 오전 1:13, 화가난다 화가나 그래서 난 화가임 : get에서 정보를 받아올 때까지
2022. 1. 24. 오전 1:13, 화가난다 화가나 그래서 난 화가임 : 계속 기다리는 줄 알았어용
2022. 1. 24. 오전 1:13, 유용태 (teo.yu) : 보통은 말씀하신대로 코드를 짜고 싶어 하니까
2022. 1. 24. 오전 1:13, 신난 어피치 : 저도 개념모르고 삽질한땐 멍때리다가 왜이러나 했습니더 ㅋㅋㅋㅋㅋ꙼̈
2022. 1. 24. 오전 1:14, 유용태 (teo.yu) : aync await으로 강제로 동기식의 코드를 만드려고 하는 것 같아요 덜 헷갈리게
2022. 1. 24. 오전 1:14, 신난 어피치 : 대신 그거 기다리는 동안은 정지잖아요
2022. 1. 24. 오전 1:14, 신난 어피치 : 전화올때까지 암것도 못함
2022. 1. 24. 오전 1:14, 부탁하는 네오 : 정말 친절하시네요!! 
나중에 이벤트루프도 한번 보시면 더 이해에 도움이 되실것 같아요!
2022. 1. 24. 오전 1:15, 유용태 (teo.yu) : 그쵸
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : 와 이해갔다..
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : 진짜 갔다 이해
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : ㅋㅋㅋㅋ
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : 이 말까지 보니까
2022. 1. 24. 오전 1:15, 부탁하는 네오 : 훈훈
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : 확 가요 연타로
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : ㅋㅋㅋ
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : 근데, 평소에
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : $.get(... , function(call) { 
  // 전화 받고 할 일
  식당가서 밥먹()
})

쇼핑하기()
놀러가기()
2022. 1. 24. 오전 1:15, 화가난다 화가나 그래서 난 화가임 : 이렇게 짤 일이 많이 있나용?
2022. 1. 24. 오전 1:15, 신난 어피치 : ㅋㅋㅋㅋㅋ꙼̈ 장단점이 잇어서
2022. 1. 24. 오전 1:16, 화가난다 화가나 그래서 난 화가임 : 주로, 서버에서 정보를 받아올 때까지 기다리고, 받아오면 프론트에 뿌리지 않나요?
2022. 1. 24. 오전 1:16, 신난 어피치 : 대이터가 받는데 오래걸리면 저거 해놓구 딴일 하는거죠
2022. 1. 24. 오전 1:16, 신난 어피치 : 여러곳에서 다양하게 받는다면?
2022. 1. 24. 오전 1:16, 화가난다 화가나 그래서 난 화가임 : 그리드 식 상품 리스트 페이지를 만든다면,
2022. 1. 24. 오전 1:16, 화가난다 화가나 그래서 난 화가임 : 서버에서 사진 및 상품 내용을 받아올 때까지 기다린 후에
2022. 1. 24. 오전 1:16, 화가난다 화가나 그래서 난 화가임 : 뿌리지 않나요?
2022. 1. 24. 오전 1:17, 부탁하는 네오 : 기다린다는게 비동기로 처리하지 않으면
2022. 1. 24. 오전 1:17, 부탁하는 네오 : 화면이 멈춰서 호버같은 효과를 못본다고 생각하시면
2022. 1. 24. 오전 1:17, 유용태 (teo.yu) : 서버에 콜을 여러개 날려야 될때면 동시에 요청하고 각각 기다리면 되는데
2022. 1. 24. 오전 1:17, 유용태 (teo.yu) : 동기로 묶어버리면 하나 요청하면 전화받고 나서야 다음 전화 걸로 기다리는 상황이 되어서
2022. 1. 24. 오전 1:18, 유용태 (teo.yu) : 장단점이란게 가독성만 좋자고 await을 쓰면 병렬성을 잃게 되요
2022. 1. 24. 오전 1:18, 유용태 (teo.yu) : 반대로 일부러 await으로 확인하고 처리해 하는 것도 있어서 상황에 맞게 적절히
2022. 1. 24. 오전 1:19, 화가난다 화가나 그래서 난 화가임 : 그렇다면, 때에 따라서 async await로 동기식을 쓸 때가 있고, 때에 따라서 병렬적으로 비동기식으로 호출해야 할 때가 있다는 거군요?
2022. 1. 24. 오전 1:19, 유용태 (teo.yu) : 병렬처리냐? 순차처리냐?
2022. 1. 24. 오전 1:19, 유용태 (teo.yu) : 굳굳 맞아요!
2022. 1. 24. 오전 1:19, 화가난다 화가나 그래서 난 화가임 : 와.. 경험부족인 건가. 병렬처리를 한 기억이
2022. 1. 24. 오전 1:19, 화가난다 화가나 그래서 난 화가임 : 없네요
2022. 1. 24. 오전 1:19, 화가난다 화가나 그래서 난 화가임 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 24. 오전 1:19, Hardy : 병렬처리는 promise.all 사용하는게 맞죠?
2022. 1. 24. 오전 1:19, 유용태 (teo.yu) : 네 일반적으로는 그렇습니다
2022. 1. 24. 오전 1:20, 화가난다 화가나 그래서 난 화가임 : 이제까지, 했던 과제가 서버에서 데이터 받아와서 순차적으로 받아오면 정보 따오고, 화면에 뿌려주는 거다 보니까
2022. 1. 24. 오전 1:20, 화가난다 화가나 그래서 난 화가임 : 병렬처리를 한 경험이 ㅋㅋㅋ
2022. 1. 24. 오전 1:20, Hardy : 이해하고 있는게 맞군요 후후
2022. 1. 24. 오전 1:20, 화가난다 화가나 그래서 난 화가임 : 없다..
2022. 1. 24. 오전 1:21, 화가난다 화가나 그래서 난 화가임 : 예상하는 건데, 약간 복잡한 화면 구성에 병렬 처리 할 일이 많겠네용. 네이버처럼, 한 페이지에 다양한 콘텐츠(뉴스, 쇼핑 목록, 웹툰)이 한 곳에 다 담긴 곳이요
2022. 1. 24. 오전 1:21, 유용태 (teo.yu) : 맞아요 대부분 메인 정보가 하나인 페이지들이에요
2022. 1. 24. 오전 1:22, 유용태 (teo.yu) : 조금 복잡한 예시로는 댓글이나 유저 프로필 처럼 컨텐츠 내에 id로 전달되는 경우
2022. 1. 24. 오전 1:22, 신난 어피치 : 저는 유지보수하다가 ㅋㅋㅋㅋㅋ꙼̈ 경험했었씁니다
2022. 1. 24. 오전 1:22, 유용태 (teo.yu) : 컨텐츠를 받아서 확인 후 프로필이나 댓글들은 병렬로 물어서 다시 요천후 merge 이런거
2022. 1. 24. 오전 1:22, 신난 어피치 : async: false, 한줄만 적어주면 되는거였는데
2022. 1. 24. 오전 1:22, 신난 어피치 : 얼마나 삽질을햇는지 ㅋㅋㅋㅋㅋ꙼̈
2022. 1. 24. 오전 1:23, 화가난다 화가나 그래서 난 화가임 : 제가 잘 이해했다면
병렬 처리를 할 때는, 이런 느낌으로
$.get(... , function(call) { 
  // 전화 받고 할 일
  식당가서 밥먹()
})

쇼핑하기()
놀러가기()

직렬 처리를 할 때는,
$.get(... , function async(call) { 
  // 전화 받고 할 일
  await 식당가서 밥먹();
  쇼핑하기()
  놀러가기()
})
2022. 1. 24. 오전 1:23, 화가난다 화가나 그래서 난 화가임 : 이거 맞는 거 같아요! 맞죠?
2022. 1. 24. 오전 1:24, 부탁하는 네오 : 저는 위에는 병렬이라기 보다는 그냥 비동기적으로 처리했다 인거 같아요
2022. 1. 24. 오전 1:24, 화가난다 화가나 그래서 난 화가임 : promise.all이
2022. 1. 24. 오전 1:24, 화가난다 화가나 그래서 난 화가임 : 아니라서용?
2022. 1. 24. 오전 1:24, 유용태 (teo.yu) : await은 프로미스에만 쓰이는 거라 식당가서 밥먹기가 비동기였다면 맞는 말이긴 한데 좋은 예시는 아닌 느낌이네요 ㅋ
2022. 1. 24. 오전 1:25, 유용태 (teo.yu) : $.get이 지금 promise가 아니라서 일단 이번 예시와 이해에서는 await까지는 연결하지 말아요
2022. 1. 24. 오전 1:25, 유용태 (teo.yu) : 일단 비동기 callback를 이해한걸로 자축하고
2022. 1. 24. 오전 1:26, 유용태 (teo.yu) : promise를 배울때 지금 말해준 것들을 한번 같이 떠올릴수 있길 바래요 ㅎ
2022. 1. 24. 오전 1:26, 화가난다 화가나 그래서 난 화가임 : 아 잘못썼어요. 식당가서 밥먹이 비동기 맞아요!
2022. 1. 24. 오전 1:26, 부탁하는 네오 : 이 부분은 정확하진 않지만 혹시 ajax에서 사용하신건거면 이벤트루프 멈추는 케이스일수도 있을것 같아요
2022. 1. 24. 오전 1:26, 화가난다 화가나 그래서 난 화가임 : 와 그래도 이해한 거 같아요
2022. 1. 24. 오전 1:26, 유용태 (teo.yu) : 그럼 맞아요 ㅋ
2022. 1. 24. 오전 1:26, 화가난다 화가나 그래서 난 화가임 : axios(주소하고), await
2022. 1. 24. 오전 1:27, 화가난다 화가나 그래서 난 화가임 : 병렬 처리, 직렬 처리, 비동기, 동기
2022. 1. 24. 오전 1:27, 화가난다 화가나 그래서 난 화가임 : 덕분에
2022. 1. 24. 오전 1:27, 화가난다 화가나 그래서 난 화가임 : 완벽하진 않지만 조금은 가까운진듯합니다 ㅠㅠ
2022. 1. 24. 오전 1:27, 화가난다 화가나 그래서 난 화가임 : 감사합니다 다들요!
2022. 1. 24. 오전 1:27, 신난 어피치 : Ajax 엿어요 ㅎㅎ 하나받고 진행해야하는데 그냥 각삭 진행시키다 보니 에러가 나더라구요
2022. 1. 24. 오전 1:27, 부탁하는 네오 : 두번쨰 보면 확실히 이해가 잘되는거 같아요
2022. 1. 24. 오전 1:28, 부탁하는 네오 : 프로미스의 await는 해당 블록만 동기적인것처럼 호출되지만 ajax는 예전에 전체 코드가 멈춘다고 봤던것 같아요
2022. 1. 24. 오전 1:29, 화가난다 화가나 그래서 난 화가임 : 아.. 그런 내용이 있었군요
2022. 1. 24. 오전 1:30, 해달 : 오 ㅠㅠ 좋은 질문과 좋은답변덕에 저도 다시한번 더 공부했네요
2022. 1. 24. 오전 1:31, 화가난다 화가나 그래서 난 화가임 : 대화 인원이 늘어날 수록, 다양한 지식이 섞여서 풍부해지네용 대화가
2022. 1. 24. 오전 1:31, 화가난다 화가나 그래서 난 화가임 : 영양가가
2022. 1. 24. 오전 1:33, Kyle : vite 사용중인데 vite 사용시에는 babel이 필요없는 걸까요? 빌드시 es6로 자동변환되는 것 같은데 ie11을 지원하지 않는다면 vite에서 기본으로 제공하는 옵션을 사용하면 될까요?
2022. 1. 24. 오전 1:34, 유용태 (teo.yu) : 네 필요없어요
2022. 1. 24. 오전 1:35, Kyle : 테오님의 vite 영업이 저에게는 성공했습니다 감사합니다
2022. 1. 24. 오전 1:35, 유용태 (teo.yu) : babel 대신 typescript를 쓰세요
2022. 1. 24. 오전 1:35, 유용태 (teo.yu) : 감사합니다 vite 좋아요 ㅋ
2022. 1. 24. 오전 1:36, 유용태 (teo.yu) : babel 없이 IE도 필요하면 할수 있어요
2022. 1. 24. 오전 1:36, Kyle : 네 너무빠르고 좋은것같아요
2022. 1. 24. 오전 1:36, 신난 어피치 : IE너무 싫…
2022. 1. 24. 오전 1:36, 신난 어피치 : 사라져서 너무 감사해요
2022. 1. 24. 오전 1:36, Kyle : 이건 어떻게 하는걸까요? 검색 키워드라도 알 수 있을까요?
2022. 1. 24. 오전 1:37, 유용태 (teo.yu) : https://velog.io/@ajy720/React-Typescript-IE11%EC%97%90%EC%84%9C-%EC%A7%80%EC%9B%90%ED%95%98%EA%B8%B0
2022. 1. 24. 오전 1:37, 유용태 (teo.yu) : typescript에서 es5변환 지원합니다
2022. 1. 24. 오전 1:37, Kyle : 아하 ts로 트랜스파일링하면 되는군요
2022. 1. 24. 오전 1:38, Kyle : js로 과제중인데 ie 지원하려면 babel 셋팅하는 것보다 ts 사용하는게 더 편하겠네요
2022. 1. 24. 오전 1:38, 신난 어피치 : 공기업은 spring + javascript + java ㅎㅎ…
2022. 1. 24. 오전 1:38, 유용태 (teo.yu) : ts 대신 babel을 쓰는 이유가 빌드 속도 때문인데
2022. 1. 24. 오전 1:39, 유용태 (teo.yu) : esbuild 베이스라서 속도가 더 이상 리스크가 아니라서 바벨을 써야할 이유가 없어요
2022. 1. 24. 오전 1:39, 유용태 (teo.yu) : typescript가 babel 상위호환입니다
2022. 1. 24. 오전 1:40, 유용태 (teo.yu) : babel만의 사용법이 있긴 하지만 대부분은 es5 트랜스파일이 목적이실테라
2022. 1. 24. 오전 1:41, Kyle : 늦은 시간인데도 친절한 답변 너무 감사합니다 (__)
2022. 1. 24. 오전 1:51, 화가난다 화가나 그래서 난 화가임 : 비동기적 느낌
2022. 1. 24. 오전 1:51, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 24. 오전 1:51, 화가난다 화가나 그래서 난 화가임 : 동기적 느낌
2022. 1. 24. 오전 1:51, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 24. 오전 1:52, 화가난다 화가나 그래서 난 화가임 : 이해한 바로 혼자 연습해봤어요!
2022. 1. 24. 오전 1:52, 화가난다 화가나 그래서 난 화가임 : 좋은 밤 되세욥 다들
2022. 1. 24. 오전 1:53, Hardy : https://www.youtube.com/watch?v=8aGhZQkoFbQ
2022. 1. 24. 오전 1:53, Hardy : 저렇게 동작하는 이유가 담긴 영상입니다
2022. 1. 24. 오전 1:53, 화가난다 화가나 그래서 난 화가임 : 이벤트루프 영상이군요
2022. 1. 24. 오전 1:54, 화가난다 화가나 그래서 난 화가임 : 한국어 있다.. 감격..
2022. 1. 24. 오전 1:54, Hardy : ㅋㅋ 워낙 유명한 영상이라
2022. 1. 24. 오전 1:55, 화가난다 화가나 그래서 난 화가임 : 그렇군용
2022. 1. 24. 오전 1:59, 화가난다 화가나 그래서 난 화가임 : 감사합니다! 터득한 거 같아요! 동기식 콜백함수와 비동기식 콜백함수! 그리고, 동기식 콜백함수를 계속 쓰면 콜백함수 지옥에 빠질 수도 있다는 것!
2022. 1. 24. 오전 2:00, 코린이 : 덕분에 저도 ..같이 공부가 되네요 ㅋㅋ
2022. 1. 24. 오전 8:11, 유용태 (teo.yu) : 톡게시판 '공지': https://www.youtube.com/watch?v=8aGhZQkoFbQ
2022. 1. 24. 오전 8:33, 프론트 : 출근길에 되게 유익하게 봤네요 ㅎㅎ 감사합니다
2022. 1. 24. 오전 8:50, 결과보단 과정을 / React,JS : 감사합니다. 너무 유익한 영상이네요
2022. 1. 24. 오전 8:58, 유용태 (teo.yu) : https://velog.io/@teo/dom
2022. 1. 24. 오전 9:01, 프론트준비생 : 오 좋네요
2022. 1. 24. 오전 9:02: 비옷입은 튜브님이 들어왔습니다.
2022. 1. 24. 오전 9:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다
ฅ^•ﻌ•^ฅ ♥
2022. 1. 24. 오전 9:02, 유용태 (teo.yu) : 안녕하세요~ 비옷입은 튜브님 반갑습니다 :)
2022. 1. 24. 오전 11:41: 손을 번쩍 든 무지님이 들어왔습니다.
2022. 1. 24. 오전 11:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 24. 오전 11:41, 유용태 (teo.yu) : 안녕하세요 손을 번쩍 든 무지님 반갑습니다 :)
2022. 1. 24. 오전 11:42, 손을 번쩍 든 무지 : 안녕하세요 :) velog글 보고 들어왔습니다~~
2022. 1. 24. 오전 11:43, 유용태 (teo.yu) : 감사합니다. 환영합니다.
2022. 1. 24. 오전 11:43, 유용태 (teo.yu) : 어떤 글이 여기로 인도(?) 하셨나요? ㅋㅋ
2022. 1. 24. 오전 11:43, 유용태 (teo.yu) : 톡게시판 '공지': https://velog.io/@teo/dom
2022. 1. 24. 오전 11:46, 손을 번쩍 든 무지 : javascript solid 글읽고 잘작성하셔서 다른 포스트 올리신거 보다가 구글스프린트체험글보고 왔어욬ㅋㅋ
2022. 1. 24. 오전 11:47, 손을 번쩍 든 무지 : 이모티콘 
2022. 1. 24. 오전 11:47, 유용태 (teo.yu) : 좋네요ㅎ 현재 2기도 진행을 하고 있고 오늘로서 끝이 납니다~ 구글 스프린트 2기 내용도 곧 정리되어 글로 발행이 될 예정이에요 ㅎ
2022. 1. 24. 오전 11:54, 꼬북 : https://brunch.co.kr/@swimjiy/39
글이 너무 좋고 그림도 귀여워서 공유합니다 :)
2022. 1. 24. 오전 11:54, 유용태 (teo.yu) : 톡게시판 '공지': https://brunch.co.kr/@swimjiy/39
글이 너무 좋고 그림도 귀여워서 공유합니다 :)
2022. 1. 24. 오후 12:10, 프론트준비생 : 저 여기계신분들께 질문있습니다 블로그로 공부할거 정리할때 이미지많이 이용하시는걸로알고있는데 다들 정리하고싶은 내용의 이미지는 어떻게 그리시는건가요?? 다들블로그같은곳에서 가져오고 출처남기는식으로하시는건가요?
2022. 1. 24. 오후 12:11, Vintz : 저는 처음에 미리 캔버스나 캔바로 다 만들다가 요즘엔 적당히 혼합해서 사용하고 있어요. 이미지를 가져올땐 출처를 남기구요. 짤 같은걸 사용하고 싶은데 출처 남기기가 애매해서 계속 미루고 있네요..ㅎㅎ
2022. 1. 24. 오후 12:15, 유용태 (teo.yu) : 저도 그냥 구글 이미지나 핀터레스트에서 찾고 출처를 남기는 식으로 합니다. 그림을 잘 그릴 줄 알면 참 좋을 것 같다는 생각을 요새 많이 합니다. 길게 글 쓰는 것 보다 찰떡같은 그림 1장이 훨씬 더 가치있더라구요
2022. 1. 24. 오후 12:22, Vintz : 공감합니다..적절한 이미지는 집중을 확 하게 만들더라구요
2022. 1. 24. 오후 1:10, 손을 번쩍 든 무지 : https://draw.io/ 간단하게 그릴땐 이거 자주 애용해요
2022. 1. 24. 오후 1:10, 유용태 (teo.yu) : 톡게시판 '공지': https://draw.io/ 간단하게 그릴땐 이거 자주 애용해요
2022. 1. 24. 오후 1:56: Jason님이 들어왔습니다.
2022. 1. 24. 오후 1:56, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 24. 오후 2:28, 핸디 : 용태님 혹시 제가 지인들과 골프관련된 사이드프로젝트를 만들었는데 여기에 올리고 디자인, 서비스적 피드백을 좀 받아도 될까요? 제 프론트 첫 프로젝트라 평가를 한번 받아보고 싶어서요
2022. 1. 24. 오후 2:30, 유용태 (teo.yu) : 네 너무 좋습니다!
2022. 1. 24. 오후 2:31, 유용태 (teo.yu) : 안녕하세요 Jason님 반갑습니다 어서오세요 :)
2022. 1. 24. 오후 2:31, 핸디 : 그럼 부끄럽지만 싸늘한 피드백을 기대하며
https://www.roundin.kr/
2022. 1. 24. 오후 2:31, 핸디 : next.js와 tailwind, mui로 개발을 진행했고
2022. 1. 24. 오후 2:32, 핸디 : 추후에 앱내에서 웹뷰로 서비스를 진행하려고 하는 프로젝트입니다. 사용해보시고 싸늘한 피드백 부탁드리겠습니다.
2022. 1. 24. 오후 2:32, 썰~~ : 로그인페이지로 이동시킬때 push로 이동시킨거 같은데 replace로해주세요
2022. 1. 24. 오후 2:33, 썰~~ : 뒤로가기 두번해야되는 문제가 있어요 ㅠㅠ
2022. 1. 24. 오후 2:33, j : 22222…
2022. 1. 24. 오후 2:33, 핸디 : 바로 수정하겠습니다. 2배로 감사드립니다.
2022. 1. 24. 오후 2:34, 썰~~ : 사진
2022. 1. 24. 오후 2:34, 썰~~ : 버튼안에 div..
2022. 1. 24. 오후 2:34, j : 후기나 소개 샘플 빈 곳은
아직 작성된 후기가 없습니다 라는 메세지가 있으면 좋을거 같아요. 그냥 빈 섹션으로 차지하고 있으니까 데이터 로딩인지 애러인지 빈건지 알 수 없네요
2022. 1. 24. 오후 2:35, 썰~~ : 아 mui인가요 저 버튼은?
2022. 1. 24. 오후 2:35, 핸디 : 아직은 후기가 없어서 아무것도 랜더링이 안되고 있었는데 그부분도 신경써야겠네요 감사합니다.
2022. 1. 24. 오후 2:35, j : 방금 사용한 유저들의 후기에는 이시훈 프로님 리뷰가 뜨는데 정작 이시훈 프로님 상세 페이지에는 없네요 ㅠㅠ
2022. 1. 24. 오후 2:35, 핸디 : 네 mui 버튼을 가져와서 커스텀해서 쓴 부분이네요. 혹시 버튼안에 div가 있는게 문제가 될까요?
2022. 1. 24. 오후 2:36, j : 위와 같은 상황이라면 우선은 패스!
2022. 1. 24. 오후 2:36, 핸디 : 이 부분은 아직 db 연결이 안되서 추후에 수정되면 정상적으로 동작할 예정입니다. 그래도 다시 한번 확인하겠습니다.
2022. 1. 24. 오후 2:37, j : 아 그리고 핸디님 질문있습니다!
2022. 1. 24. 오후 2:37, j : 방금 사용한 유저들의 후기에서 후기 클릭하면 그 다음 이벤트는 어떤 건가요?
2022. 1. 24. 오후 2:37, j : 클릭 이벤트가 뭔지 궁금해요
2022. 1. 24. 오후 2:37, 개발닥 : 동영상
2022. 1. 24. 오후 2:38, 핸디 : 현재는 개발중에 있긴 한데 해당 리뷰가 연계된 프로필 페이지로 라우팅할 계획입니다.
2022. 1. 24. 오후 2:38, 개발닥 : 동선 버그있어요
2022. 1. 24. 오후 2:38, 개발닥 : 재현 경로

1. 홈
2. 프로필
2022. 1. 24. 오후 2:38, 썰~~ : 문제라기보단 span으로 해주는게 좋을거같아요
2022. 1. 24. 오후 2:38, 썰~~ : 웹표준에 어긋나서요..
2022. 1. 24. 오후 2:39, 개발닥 : 3. 로그인 되지 않음 ( 확인 버튼 클릭시 반응이 늦게옴 )
4. 휴대폰 인증 페이지로 이동 ( 회원가입 페이지인가여 ? )
2022. 1. 24. 오후 2:39, 핸디 : 다시 확인해보겠습니다 ^^
2022. 1. 24. 오후 2:40, 핸디 : 영상으로 보아 로그인중에 프로필로 가면 그 이후에 동작하지 않는다는 말씀이신가요?
2022. 1. 24. 오후 2:41, 핸디 : 3번은 확인해보겠습니다.
4번같은 경우 카카오로그인 + 핸드폰인증만 진행하고 있습니다. 위에 2가지를 합쳐서 회원가입이라고 생각하고 있구요.
2022. 1. 24. 오후 2:42, 썰~~ : 사진
2022. 1. 24. 오후 2:42, j : 음..로그인 하라고 안내가 뜨고 바로 카카오 로그인으로 바로 뜨는데 로그인 페이지로 라우팅 되어 있는건지 아니면 바로 카카오 로그인 페이지로 가는게 맞는건가요?
2022. 1. 24. 오후 2:42, 썰~~ : 로딩바가 가운데가 아니네요
2022. 1. 24. 오후 2:43, j : 후자의 경우는 처음 사용하는 사용자 입장에서는 서비스 이탈로 받아들여 질 수 있을거 같아서요. 왜 갑자기 카카오 로그인이지? 하고 놀랐거든요..
2022. 1. 24. 오후 2:44, 썰~~ : 사진
2022. 1. 24. 오후 2:44, 썰~~ : 에러처리 안되어있는듯합니다 ㅎㅎ
2022. 1. 24. 오후 2:44, 썰~~ : 에러이후에 무한로딩이네요
2022. 1. 24. 오후 2:45, 신난 어피치 : 오 로그인 기능도 구현이 된건가요
2022. 1. 24. 오후 2:45, 핸디 : 넵 구현은 했는데 보시다시피 에러가 엄청 많이 나와서 반성중입니다...
2022. 1. 24. 오후 2:46, 프론트준비생 : 오..혼자개발하신건가요?
2022. 1. 24. 오후 2:46, 핸디 : 카카오톡으로 로그안한다라는 걸 알려주는 방식으로 개선해보겠습니디.
2022. 1. 24. 오후 2:46, 신난 어피치 : 저정도는 해야 포토폴리오군요
2022. 1. 24. 오후 2:47, 개발닥 : 핸드폰인증도
2022. 1. 24. 오후 2:47, 개발닥 : 에러처리 안되어있어요
2022. 1. 24. 오후 2:47, 프론트준비생 : 어느정도공부해야 저정도 포트폴리오만들수있나요?
2022. 1. 24. 오후 2:47, j : 그러게요..
2022. 1. 24. 오후 2:47, j : 페이지 그래도 되게 깔끔하네요
2022. 1. 24. 오후 2:47, 핸디 : 현재 잘못된 인증번호일경우 에러치리와 3분타임아웃을 만들고있는데 그거 외에 로직 자체가 안되는 에러가 있나요?
2022. 1. 24. 오후 2:48, 핸디 : 요 부분도 중앙으로 쓩 보내겠습니다
2022. 1. 24. 오후 2:49, 핸디 : 디자이너분이 짱짱맨이시라 전달해드리겠습니다 ㅎㅎ
2022. 1. 24. 오후 2:49, 개발닥 : 닉네임 입력했는데
2022. 1. 24. 오후 2:49, 개발닥 : 로그인했을때는 반영이 안되고 제 카카오 실명이 화면에 노출되네염
2022. 1. 24. 오후 2:49, 썰~~ : 그거때문인지 무한로딩이에요 ㅋㅋ
2022. 1. 24. 오후 2:50, 개발닥 : 삭제된 메시지입니다. 
2022. 1. 24. 오후 2:50, 개발닥 : 닉네임 입력할때 이모지도 허용되고있어여!
2022. 1. 24. 오후 2:51, 개발닥 : 사진
2022. 1. 24. 오후 2:51, 개발닥 : 리프레시 토큰이 세션에 노출되고있어여
2022. 1. 24. 오후 2:51, 신난 어피치 : 오… 프론트에서 저런부분까지도 신경써야하나요?
2022. 1. 24. 오후 2:52, 썰~~ : 리프레시 토큰은 쿠키에 박는게 더 나을까요
2022. 1. 24. 오후 2:52, 핸디 : 텍스트만 입력받도록 개선해보겠습니다.
2022. 1. 24. 오후 2:53, 핸디 : 이거에 대한 고견을 들을 수 있을까요?
2022. 1. 24. 오후 2:53, 개발닥 : 사진
2022. 1. 24. 오후 2:53, 개발닥 : 헤더가 2개에여
2022. 1. 24. 오후 2:53, 개발닥 : 하나로 뭉치면 더 이쁠것 같습니다
2022. 1. 24. 오후 2:54, 핸디 : 개발의 편의성으로 눈감고 있었는데 역시 다 눈에 보이시는군요 ㅜㅜ
2022. 1. 24. 오후 2:54, 개발닥 : 리프레시는 서버에 숨기는게 좋습니다
2022. 1. 24. 오후 2:55, 핸디 : 요 부분인 제가 해당 로그인 로직을 잘못이해하고 있었네요 조금더 공부한후에 개선해보겠습니다.
2022. 1. 24. 오후 2:55, 개발닥 : 엑세스 리프레시 모두
2022. 1. 24. 오후 2:56, 개발닥 : 담고있는 값이 같아요
2022. 1. 24. 오후 2:56, 개발닥 : 또 세션에 저장해둔 값도 같은 값으로 보여요
2022. 1. 24. 오후 2:56, 개발닥 : 불필요한 부분은 덜어내면 더 깔끔할것 같습니다
2022. 1. 24. 오후 3:00, 핸디 : 프론트는 저랑 다른 한분이 페이지별로 나눠서 작업했구요. 서버는 다른분들이 계십니다
2022. 1. 24. 오후 3:02, 엉망장자 : 궁금한게 엑세스 토큰이 만료되었을 때 새로 엑세스 토큰을 발급받기 위해 리프레시 토큰을 클라이언트 측에서 서버에 전달해주어야 하는 것 아닌가요? 숨긴다는 의미가 잘 이해가 안되네요ㅠ
2022. 1. 24. 오후 3:02, 개발닥 : 액세스 리프레시 쓰는 이유가
2022. 1. 24. 오후 3:02, 개발닥 : 액세스 토큰이 털리면 안되기 때문에 액세스 토큰 텀을 짧게 주고 리프래시 토큰으로 액세스 토큰 연장시키는 거잖아요?
2022. 1. 24. 오후 3:03, 엉망장자 : 넵넵
2022. 1. 24. 오후 3:03, 개발닥 : 근데 리프레시 토큰이 클라에 노출되고, 얘도 털리면 액세스 리프레시 쪼개놓은 이유가 없어지잖아요 그래서 숨겨두는거에요
2022. 1. 24. 오후 3:03, 개발닥 : 클라에 노출됨 = 해커가 다 훔쳐볼 수 있음
2022. 1. 24. 오후 3:05, 핸디 : 사진
2022. 1. 24. 오후 3:06, 핸디 : 모두모두 피드백 감사드립니다. 역시나 제가 보지못한 많은 부분을 피드백 해주셔서 감사합니다
2022. 1. 24. 오후 3:07, 엉망장자 : 아하... 그러네요?ㅋㅋㅋ 제가 좀 더 공부해봐야겠네요 감사합니다
2022. 1. 24. 오후 3:09, 핸디 : 저도 공부하러 다시 떠나보겠습니다. ㅎㅎ
2022. 1. 24. 오후 3:14, 엉망장자 : 덕분에 저도 공부하네요 감사합니다 ㅎㅎ
2022. 1. 24. 오후 3:15, 신난 어피치 : 이런거 많이 앗음 좋겟네요 ㅋㅋㅋㅋㅋ꙼̈ 넘 좋네요
2022. 1. 24. 오후 3:20, 엉망장자 : https://www.codenary.co.kr/company/list?page=2
2022. 1. 24. 오후 3:21, 엉망장자 : 기업별로 기술 스택 뭐 쓰는지 나와있는 사이트입니다
2022. 1. 24. 오후 3:23, 스타트업개발자 : 이번에 회사에서 웹뷰 페이지를 만들고 도입하는데
monorepo + webpack5 module federation 을 도입하는데

yarn2 workspaces를 기준으로 monorepo를 도입하고 안에 cra 로 각 폴더를 만들고 진행하려고 하는데 webpack 을 잘 모르다보니    cra 로 진행하고 react-app-rewired,  customize-cra 을 사용해서 webpack 을 커스텀하려는데 계쏙 MODULE_NOT_FOUND 에러가 뜨고있습니다. 혹시 이걸 해결하신 분이 계시는지,,, 아니면 알고계신게 있으신 분이 계신지 궁금합니다 ㅠㅠ
2022. 1. 24. 오후 3:25, 유용태 (teo.yu) : 톡게시판 '공지': https://www.codenary.co.kr/company/list?page=2
2022. 1. 24. 오후 3:26, 유용태 (teo.yu) : 톡게시판 '공지': 그럼 부끄럽지만 싸늘한 피드백을 기대하며
https://www.roundin.kr/
2022. 1. 24. 오후 3:46: 우보틀님이 들어왔습니다.
2022. 1. 24. 오후 3:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 24. 오후 3:46, 유용태 (teo.yu) : 안녕하세요 우보틀님 반갑습니다 :)
2022. 1. 24. 오후 3:46, 우보틀 : 안녕하세요 프론트엔드 개발 전향희망자 입니다!
2022. 1. 24. 오후 3:47, 유용태 (teo.yu) : 오~ 어디에서 전향을 하시는건가요?
2022. 1. 24. 오후 3:48, 우보틀 : 풀스택에서 프론트만 하고싶어서 현재 준비중입니다!
2022. 1. 24. 오후 3:48, 우보틀 : 프론트 개발하다 모르는거 있을때 물어보려 왔습니다!
2022. 1. 24. 오후 3:48, 유용태 (teo.yu) : 환영합니다 언제든지 궁금한거 있으시면 편하게 물어보세요 :)
2022. 1. 24. 오후 3:49, 우보틀 : 감사합니다!
2022. 1. 24. 오후 4:02, 유용태 (teo.yu) : 1. 하단 NAV가 로그인을 하거나 동작을 할때에는 눌러지지 않거나 보이지 않아야 할 것 같아요. 인증을 하다가 NAV가 눌러져서 빠져나가는 경험은 좋지 않은 것 같아요. 

2. 설문조사를 할때 버튼이 하단에 위치하는데 NAV 뒤로 가려져서 매번 스크롤을 해야 하는 불편함이 있어요. 

3. 설문 조사를 하다가 URL 그대로 다른데서 접속해도 설문조사는 계속 되는데 로그인이 풀려있어서 완료가 안되요

4. 메인에서 후기는 버튼 혹은 카드 느낌이라서 누르고 싶게(?) 생겼어요. 근데 안되네요. 조금 더 플랫하게 가져가셔도 좋을 듯 합니다. 

5. 🔥 화면 이동시 로그인 필요 화면이 번쩍거립니다. 화면 이동 할때마다 그렸다가 확인하고 바뀌는거 같은데 이부분은 꼭 수정이 되어야 할 것 같아요.

6. 웹 앱으로 들어가실거라면 버튼에 :active 속성을 넣어서 최소한의 눌러지는 느낌은 주는게 좋을 것 같아요.
2022. 1. 24. 오후 4:03, 유용태 (teo.yu) : 사진
2022. 1. 24. 오후 4:05, 유용태 (teo.yu) : 웹앱으로 넣으신다면 이렇게 안될수있게 user-select 한번 확인해보세요
2022. 1. 24. 오후 4:22, 핸디 : 1,2번 관련되어 NAV에 대해 좀더 고민을 해봐야겠습니다.
3번은 로그인로직과 함께 확인해볼게요.
4번은 해당부분이 로직이 미구현되어있는 부분이라 느끼신대로 클릭이 가능한 버튼형 카드입니다.
6번도 확인해보겠습니다.

----------
5번의 경우 잘 이해가 되질 않습니다만,
각 페이지에서 다이얼로그를 필요한 상황에 맞게 새롭게 만들어서 랜더링하고 있는데,
페이지에 넘어가기 전에 상태를 확인하고 현재 페이지에서 다이얼로그로 경로를 안내해주라는 말씀이실까요?
2022. 1. 24. 오후 4:22, 해달 : 저 스타일드컴포넌트 애니메이션에서 궁금한부분이 생겼는데 구글링해도 답이안나와서 질문하나 올려보겠습니다ㅜㅜ 혹시 아시는분 있으시면 답변부탁드립니다
2022. 1. 24. 오후 4:23, 생못미 : 넵
2022. 1. 24. 오후 4:23, 유용태 (teo.yu) : 로그인이 된 상태에서 하단 NAV로 페이지 이동을 하면 로그인 필요 화면 dimmed modal이 찰나에 보였다가 사라지는게 눈에 보여요
2022. 1. 24. 오후 4:23, 해달 : 정말 간단한거일수도 있지만. .
2022. 1. 24. 오후 4:23, 해달 : 사진
2022. 1. 24. 오후 4:24, 해달 : 얘는 안되는데
2022. 1. 24. 오후 4:24, 해달 : 사진
2022. 1. 24. 오후 4:24, 해달 : 이거는 왜 되는건가요..!?
2022. 1. 24. 오후 4:24, 생못미 : 음
2022. 1. 24. 오후 4:24, 해달 : 키프레임만들어주는데 적용되는 속성? 의 순서가있는건지 해서
2022. 1. 24. 오후 4:24, 생못미 : 세미콜론을 빼먹으신거 같아요
2022. 1. 24. 오후 4:24, 해달 : 세미콜론이있어도
2022. 1. 24. 오후 4:24, 해달 : 안되더라고요 ㅠㅠ
2022. 1. 24. 오후 4:24, 해달 : 혹시모르니 다시해보겠슴니다
2022. 1. 24. 오후 4:24, 생못미 : 그리고 vscode 쓰신다면 스타일드 컴포넌트 신택스 하이라이팅 해주는 익스텐션 있는데
2022. 1. 24. 오후 4:25, 핸디 : 확인해보겠습니다 감사합니다.
2022. 1. 24. 오후 4:25, 생못미 : 그거 쓰시면 문법 에러 어느 정도 방지할 수 있을거 같아요!
2022. 1. 24. 오후 4:26, 썰~~ : 세미콜론때문에..
2022. 1. 24. 오후 4:26, 해달 : 엥
2022. 1. 24. 오후 4:26, 썰~~ : 마지막꺼는 세미콜론 없어도 마지막으로 인식됩니다..
2022. 1. 24. 오후 4:26, 썰~~ : 중간에 없으면 에러
2022. 1. 24. 오후 4:26, 프린이 : 중간에없으면 줄이 안끝났다고 인식하는거같아요!
2022. 1. 24. 오후 4:26, 해달 : 어 저정말…이거 분명히 했었는데… 세미콜론하니까 돼서 너무 당황스럽...
2022. 1. 24. 오후 4:26, 생못미 : ㅋㅋㅋㅋㅋ 됐다니 다행이네요
2022. 1. 24. 오후 4:27, 해달 : 저정말 검색이랑 테스트안해보고 질문한거아닌데… 갑자기되니까 당황스럽… 이런 ….. 기초적인걸...
2022. 1. 24. 오후 4:27, 해달 : 죄송합니다 ……………
2022. 1. 24. 오후 4:27, 생못미 : ㅋㅋㅋㅋㅋㅋ 아뇨 저거 저도 많이 실수하는거라 바로 보인거 같아요
2022. 1. 24. 오후 4:27, 결과보단 과정을 / React,JS : 개발하면서 이런 경우 많지 않나요 ㅎㅎㅎ
2022. 1. 24. 오후 4:27, 생못미 : 네네 그쵸
2022. 1. 24. 오후 4:27, 생못미 : 죄송하실 것 까지야…
2022. 1. 24. 오후 4:29, 프린이 : 엄청만항요 ㅎㅎ
2022. 1. 24. 오후 4:30, 프린이 : 오타하나로 몇시간헤매기도 하고
2022. 1. 24. 오후 4:30, 해달 : 빠른해결 감사합니다 ㅎㅎㅎㅎㅠㅠㅠ 이럴수가... …
2022. 1. 24. 오후 4:31, 생못미 : 그래도 최대한 단순 실수는 자동으로 찾아내면 좋으니까
2022. 1. 24. 오후 4:31, 생못미 : Name: vscode-styled-components
Id: styled-components.vscode-styled-components
Description: Syntax highlighting for styled-components
Version: 1.7.2
Publisher: Styled Components
VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=styled-components.vscode-styled-components
2022. 1. 24. 오후 4:31, 생못미 : 이거 깔아보세요
2022. 1. 24. 오후 4:31, 유용태 (teo.yu) : 톡게시판 '공지': Name: vscode-styled-components
Id: styled-components.vscode-styled-components
Description: Syntax highlighting for styled-components
Version: 1.7.2
Publisher: Styled Components
VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=styled-components.vscode-styled-components
2022. 1. 24. 오후 4:33, 해달 : 감사합니다~!
2022. 1. 24. 오후 4:38, 떨고있는 어피치 : 저도 질문이 있습니당 ㅎㅎ

parent 페이지 (data fetching)
V
children item 컴포넌트 (아이템 삭제 버튼 보유)
V
모달 컴포넌트 

—
삭제 요청 버튼 클릭시 모달이 올라오고 '정말 삭제하시겠습니까?' 클릭 시, 서버에 삭제 요청합니다.
UI가 이런식으로 설계되어있습니다.

—

모달에서 해당 아이템 삭제 확인 버튼 클릭시, 서버에 delete 요청 보냄.

모달이 꺼진 후, 부모에서 다시 data를 refresh 해서 fetching을 해야한다면 어떻게 해야할까요…? 글로벌 스테이트로 해야할까요?
2022. 1. 24. 오후 4:42, 결과보단 과정을 / React,JS : 단순 state 변경 감지라면 context로 하는게…
2022. 1. 24. 오후 4:43, 김동현 : 모달 컴포넌트는 해당 페이지에서만 유일하게 사용되고 있나요 아니면 전역으로 사용되고 있나요?
2022. 1. 24. 오후 4:44, 떨고있는 어피치 : 유일하게 사용중이긴합니당….
2022. 1. 24. 오후 4:45, 떨고있는 어피치 : 그게 나을까요…? 흠.....
2022. 1. 24. 오후 4:45, 김동현 : 앞으로 전역에서 사용될 일이 없나요?
2022. 1. 24. 오후 4:45, 떨고있는 어피치 : 네 이 컴포넌트는 여기서만 쓰도록 만들어두긴 했습니당 !
(햄버거에 있는 바같은게 아닌, 단순히 item을 삭제하시겠습니까? 했을 때 재확인용 입니당)
2022. 1. 24. 오후 4:46, 생못미 : 모달은 전역에 두시고 다른 내용이 갈아끼워지도록 구현하는게 좋지 않을까요? 모달 의미상 각 아이템의 자식 요소로 들어가는 건 어색해보여서요
2022. 1. 24. 오후 4:47, 김동현 : 생못미님의 의견에 동의하지만, 일단 회사나 개인 프로젝트 사정은 모르니깐 정말로 해당 스크린에서만 동작한다면
2022. 1. 24. 오후 4:47, 떨고있는 어피치 : 모달을 Wrapping을 한 것은 어디서든 쓸 수 있게 해두긴 했는데, 안에 내용은 계속 달라져야해서 그럴 때만 파일로 빼서 쓰는 중입니당.
2022. 1. 24. 오후 4:48, 김동현 : 음
2022. 1. 24. 오후 4:48, 떨고있는 어피치 : 흠…ㅋㅋㅋ저도 설명이 어렵네용.....
2022. 1. 24. 오후 4:48, 떨고있는 어피치 : context나 mobx로 그냥 빼는 것으로 하는게 더 나을 수 있겠군요…. ㅜㅜㅋㅋㅋ
2022. 1. 24. 오후 4:49, 결과보단 과정을 / React,JS : 혹시 swr이나 react-query는 사용 안하시나요?
2022. 1. 24. 오후 4:49, 피카츄돈까스/React,RN : 저는 요새 찔끔찔끔 사용해보고있습니댜
2022. 1. 24. 오후 4:50, 결과보단 과정을 / React,JS : 저는 이런 경우가 잦아서 react-query를 사용해보고 싶던데
2022. 1. 24. 오후 4:50, 떨고있는 어피치 : 그게 나을까요…? ㅎㅎ
진짜 작은 부분이라서 최대한 없이 하려고 했는데 도저히 그냥 그걸 도입하는쪽으로 생각해봐야겠어요…..
2022. 1. 24. 오후 4:50, 떨고있는 어피치 : 답변주신분들 감사합니당!
2022. 1. 24. 오후 4:54, 피카츄돈까스/React,RN : 아???
2022. 1. 24. 오후 4:55, 피카츄돈까스/React,RN : 아아 모달요?
2022. 1. 24. 오후 5:04, 결과보단 과정을 / React,JS : 모달은 아니구요 ;; post나 put, delete후에 상태 update해야하는 경우가 잦다는 뜻이었습니다 ;;
2022. 1. 24. 오후 5:08, 엉망장자 : 많이 필요 없으면 삭제 요청 성공적으로 끝나면 리패치 하도록 쓰면 되지 않을까요?
2022. 1. 24. 오후 5:09, 떨고있는 어피치 : 네 ㅎㅎ이게 의도인데 두 컴포넌트 (데이터 페칭을 요청하는 곳과 모달 컴포넌트) 사이의 거리가 멀어서 ㅎㅎ 

아이템이 삭제되었으니, 상태가 변경되었다고 trigger를 줄만한 것이 없어서 고민이었습니당
2022. 1. 24. 오후 5:12, 피카츄돈까스/React,RN : 아하 클로저같은걸로 한번 처리해보고싶네요 저도 저런 부분이 필요한데 아직 제대로 시도를 안해봤습니당
2022. 1. 24. 오후 5:12, j : 혹시 css 속성 선택자 써보신 분 계실까요?ㅠㅠ css 선택자를 보고 있는데 element에 속성으로 입력해준 값이 tag에 공식적으로 설정된 속성이 아니라 제가 임의로 설정한 속성으로도 사용이 가능한건지..
2022. 1. 24. 오후 5:14, Luke : data attribute를 사용하신다면 가능할 것 같습니다
2022. 1. 24. 오후 5:15, 결과보단 과정을 / React,JS : 저도 한가지 질문이 있어요 ㅎㅎ.

지금 하고 있는 project에 API 관련 중복되는 code가 너무 많고, refetching해야 하는 경우가 많아서,  react-query를 도입하려고 했는데 현재 code 구조상  custom hook의 top level rule에 위반되서 구조를 아예 바꿔야만 사용이 가능할꺼 같은데… 

남은 개발 기간은 약 한달정도이고, 현재 사용하는 API가 대략 120개라면  여러분이라면 어떻게 하실껀가요?  

지금이라도 바꾸고 가는게  좋을지? 아니면 개발 완료 후 진행하는게 맞을지?

요 몇일 react-query를 써보니 참 편해서 꼭 도입해보고 싶은데…
2022. 1. 24. 오후 5:16, 엉망장자 : 잘은 모르겠지만 패칭된 데이터를 상태로 받아서 없애주면 안되는건가요? (서버 데이터를 한 번 더 받는건 아니지만 받은 것 처럼 표시...)
2022. 1. 24. 오후 5:16, Luke : div[data-blahblah='true'] 같은 식으로 사용할 수 있거든요
2022. 1. 24. 오후 5:17, 유용태 (teo.yu) : 다 갈아엎지는 말고 1~2개 정도만 적용해보시는 건 어때요?
2022. 1. 24. 오후 5:18, 결과보단 과정을 / React,JS : 1~2개는 이미 적용해봤는데… 생각보다 너무 편해서
2022. 1. 24. 오후 5:18, 결과보단 과정을 / React,JS : 다른것도 다 적용해보고 싶어졌어요… 그래서 몇일동안 계속 고민을 하고 있는데
2022. 1. 24. 오후 5:18, 유용태 (teo.yu) : customHook으로 뽑을 수 있다면
2022. 1. 24. 오후 5:18, j : 감사합니다!
2022. 1. 24. 오후 5:18, 유용태 (teo.yu) : 인터페이스를 좀 유지하는 방향으로 중간 레이어에서 야금야금 추가해보세요
2022. 1. 24. 오후 5:23, 결과보단 과정을 / React,JS : 전체 코드가 중구난방이 되어버리진 않을까 고민되서 일괄 변경하고 싶었는데… 보통 이런 경우 조언 해주신것처럼 수정을 하셨나요?
2022. 1. 24. 오후 5:27, 피카츄돈까스/React,RN : 아마 문제가 생겨 되돌아 가야 하는 경우거나 다른 방법을 사용 해야 할 경우에 레이어를 두고 하나씩 만들어 나가는 방법이 추후 코드의 변화량을 확실히 줄여줄 수 있기 때문에 그렇지 않을까 싶습니다.
2022. 1. 24. 오후 5:29, 유용태 (teo.yu) : 맞아요 원칙이란게 있으니까요... 일단 기존 코드를 건들지 않고서 수정이 가능하도록 일단 해본 다음에 돌아가는 것을 확인하면 리팩토링은 나중에 하면 되니까요
2022. 1. 24. 오후 5:29, 피카츄돈까스/React,RN : 인터페이스를 유지하고 레이어를 하나 더 만들어서 진행하는게 작업량도 줄긴 하겠네요 사이드이팩트도 최소한으로 할 수 있을거같..
2022. 1. 24. 오후 5:31, 결과보단 과정을 / React,JS : 아… 확실히 머리속으로 혼자 고민하는거랑, 물어보고 의견을 듣는게 차원이 다르네요…ㅎㅎ
2022. 1. 24. 오후 5:31, 결과보단 과정을 / React,JS : 감사합니다 ㅎㅎ
2022. 1. 24. 오후 5:32, 이엘로 : 질문 있습니다 🙌
창 크기를 조절하면 웹페이지 크기가 같이 변하게 하려고 합니다
창 크기를 키우면 같이 커지는데 줄이면 바로 스크롤이 생기길래 이것저것 해보다가 min-width: 0;을 주니까 크기가 변하더라고요
해결 되긴 한 건데 min-width랑 width 다 설정 안해놨었는데 좀 이상하네요… 왜 이렇게 되는지랑 다른 방법으로 해결할 수 있을지 궁금합니다
2022. 1. 24. 오후 5:34, 유용태 (teo.yu) : https://dfmcphee.com/flex-items-and-min-width-0/
2022. 1. 24. 오후 5:35, 유용태 (teo.yu) : 사진
2022. 1. 24. 오후 5:35, 이엘로 : 헐..감사합니다
2022. 1. 24. 오후 5:35, 이엘로 : 이런건 어떻게 찾으신건가요 어떤 키워드로 검색해도 못찾았는데..
2022. 1. 24. 오후 5:37, 프론트준비생 : 테오님 돔에대해서 올리신글 너무잘읽었습니다 공부할떄 테오님처럼 제대로(?) 이걸왜쓰는지 써서좋은점이뭔지 이런식으로 사용방법부터 원리까지 파악하면서 공부하고싶은데 인강이나 공식문서의경우 대게 어떤식으로사용하는지 까지만 나오는경우가 많습니다.. 테오님글을보니 어떻게 이런식으로 원리까지 잘 설명할정도의 내공을 가지셨는지 합니다..  테오님의 경우 새로운개념이나 언어같은거배울떄 어떤식으로 배우시나요??
2022. 1. 24. 오후 5:41, 신난 어피치 : 시니어의 데이터베이스… ㄷ
2022. 1. 24. 오후 5:56, 유용태 (teo.yu) : min-width 0 이라고 검색하니까 2번째에 맨처음에 뜨던데요
2022. 1. 24. 오후 5:57, 이엘로 : 아아ㅏ.. 감사합니다
2022. 1. 24. 오후 5:57, 유용태 (teo.yu) : 음... 최대한 대충(?) 이해하려고 합니다. 이미지만 보고 나름대로 예측하면서 뭐 이런거겠지? 하면서
2022. 1. 24. 오후 5:59, 유용태 (teo.yu) : 그래서 어느정도 이런거겠지...? 하면서 좀 살펴보면서 내 예측이랑 비슷한거랑 다른거랑 비교해 가면서 예측이랑 많이 빗나간거는 좀 놀래면서 기억하고 맞다 싶은 것은 굳이 deep dive하지는 않는 편입니다. 알고만 있으면 그때 찾아서 쓰면 그만이니까
2022. 1. 24. 오후 5:59, 생못미 : 와 ㅋㅋㅋ
2022. 1. 24. 오후 6:01, 유용태 (teo.yu) : 그리고 나서 말로 누구한테(이때는 좀 구체적인 사람을 떠올립니다. 주니어 개발자나 아니면 동료개발자나) 설명을 해봅니다. 실제 동료개발자에게 설명을 해주는게 더 좋은 것 같아요. 하다 보면 갑자기 어? 하고 막히는 부분이 있는데 그건 모른다는 뜻이니까 좀 찾아보고 그러는 편이고
2022. 1. 24. 오후 6:01, 유용태 (teo.yu) : 그리고 실제로는 그냥 코딩하면서 대부분 이해하는 편이라서 결론은 대충 뭐가 있는지만 알고 바로 코딩한다 입니다. 코딩을 못할 것 같으면 말로 떠들고
2022. 1. 24. 오후 6:03, 신나는 프로도 : 저 혹시 mac  vscode 사용중인데 'go to definition' 작동 안될때 해결법 아시는분 계신가요…?
2022. 1. 24. 오후 6:05, 유용태 (teo.yu) : 아~ 녹음해보고 다시 들어보는거 추천드립니다.
2022. 1. 24. 오후 6:06, Hardy : 개발자 인생 첫 오퍼 받았어요 ㅎㅎ 기분이 좋네요
2022. 1. 24. 오후 6:06, 유용태 (teo.yu) : 와! 축하드려요! 최종합격하셨나보네요~
2022. 1. 24. 오후 6:06, Hardy : 넵 ㅎㅎㅎㅎ 감사합니다
2022. 1. 24. 오후 6:07, 유용태 (teo.yu) : 저는 VSCODE를 안써서... https://stackoverflow.com/questions/37341849/vscode-go-to-definition-not-working 이게 도움이 될까요?
2022. 1. 24. 오후 6:08, 프론트준비생 : 답변 감사합니다!
2022. 1. 24. 오후 6:08, 생각하는오뎅 : 이럴 떄 그냥 reload window 하면 어지간하면 되긴 하던데!
2022. 1. 24. 오후 6:08, 생각하는오뎅 : 사진
2022. 1. 24. 오후 6:08, 유용태 (teo.yu) : 톡게시판 '공지': 개발자 인생 첫 오퍼 받았어요 ㅎㅎ 기분이 좋네요
2022. 1. 24. 오후 6:09, 결과보단 과정을 / React,JS : 축하드립니다. ㅎㅎ
2022. 1. 24. 오후 6:12, 진현 : 축하드려용~!!!!
2022. 1. 24. 오후 6:12, 프린이 : 축하드려요!!
2022. 1. 24. 오후 6:12, 책팔아요 : 이모티콘 
2022. 1. 24. 오후 6:13, 책팔아요 : 축하드립니다 ㅎㅎㅎ
2022. 1. 24. 오후 6:13, 부탁하는 네오 : 이모티콘 
2022. 1. 24. 오후 6:13, Hardy : 다들 감사합니다
2022. 1. 24. 오후 6:13, 프론트 : 와 축하드립니다!!
2022. 1. 24. 오후 6:15, 핸디 : 진짜 멋지십니다~~
2022. 1. 24. 오후 6:15, 신나는 프로도 : 와우~축하드립니다 :)
2022. 1. 24. 오후 6:15, 핸디 : 저는 handy인데 꼭 비슷한 사람이 되도록 해보겠습미다
2022. 1. 24. 오후 6:16, 신나는 프로도 : 확인해보겠습니다!! 감사합니다 ~~
2022. 1. 24. 오후 6:19, 프론트준비생 : 이모티콘 축하드립니다!!
2022. 1. 24. 오후 6:24, Vintz : 오~하디 역시! ㅎㅎ 축하드려요~🚀
2022. 1. 24. 오후 6:26, 이엘로 : 오오 축하드려요! 👏
2022. 1. 24. 오후 6:27, 개발닥 : 축하드려요 하디
2022. 1. 24. 오후 6:27, 피카츄돈까스/React,RN : 와!! 축하드려요!
2022. 1. 24. 오후 6:32, Hardy : 다들 감사합니다~~!
2022. 1. 24. 오후 7:38, 순무김치 : 장문의 질문 죄송합니다.

React 컴포넌트는 어떻게 설계하시나요 ?
라는 면접 질문을 받은적이 있는데요.

어떤게 명쾌한 답일까? 라는 궁금증을 얻게 되었습니다.

저의 경우엔 라우터에 맞게 컨테이너 역할을 하는 컴포넌트를 만들고
해당하는 페이지의 요소들을 가능한한 작게 잘라내어 컴포넌트를 만듭니다. 혹시 여러 곳에서 사용 되는 것이라면 공통 컴포넌트화 시키고요.

정도의 대답을 드렸는데요. 면접은 피드백을 받기가 힘들어서 면접관분 생각 따라 다르겠지만 혹시 더 나은 대답에 대해 아시는분 계신가요?

예를 들어 아토믹 디자인 패턴을 사용합니다. 이런식의 명확한 패턴에 대한 대답이 이어졌어야 했을지... 관련된 내용을 좀 더 학습하고 싶은데 키워드를 모르겠네요.
2022. 1. 24. 오후 7:46, 개발닥 : 답이 ㅇ벗는 질문같아요
2022. 1. 24. 오후 7:46, 개발닥 : 저는 저만의 개똥철학을 읊었어요
2022. 1. 24. 오후 7:48, 순무김치 : 그렇군요 아닙니다 감사합니다 ㅜㅜ
2022. 1. 24. 오후 7:48, 유용태 (teo.yu) : 근데 본인만의 개똥철학(?)을 물어보는 질문은 맞아요 ㅋ
2022. 1. 24. 오후 7:49, 순무김치 : 아하... 그렇군요 감사합니다 ㅎㅎ
2022. 1. 24. 오후 7:50, 유용태 (teo.yu) : 면접용에 대한 대답이라면 말씀하신 대답을 하시면서 실제 본인이 하셨던 최근 프로젝트에서 썼던 것을 예시로 들면서 좋았던 점 아쉬웠던 점 겪었던 점 정도만 말했으면 충분히 잘했을거라고 생각해요
2022. 1. 24. 오후 8:50: 웹린이님이 들어왔습니다.
2022. 1. 24. 오후 8:50, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 24. 오후 8:53, 웹린이 : 안녕하세요! 프론트엔드 개발자가 되기위해 공부 중인 예비 개발자입니다! 잘 부탁드립니다!
2022. 1. 24. 오후 9:10: 이우성님이 들어왔습니다.
2022. 1. 24. 오후 9:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 24. 오후 9:38, 유용태 (teo.yu) : 안녕하세요 웹린이님 이우성님~~ 반갑습니다 :)
2022. 1. 24. 오후 9:41, 유용태 (teo.yu) : 반갑습니다~ 여기는 개발을 하다가 궁금한게 생기거나 공유하고 싶은 내용이 있다면 함께 공유 하는 공간입니다~ 여기는 웹린이님처럼 예비 개발자부터 주니어 시니어까지 함께 있으니 현업이든 취준이든 궁금한거 있으면 언제든 편하게 글 남겨 주세요 :)
2022. 1. 24. 오후 10:00, 웹린이 : 이모티콘 네! 감사합니다ㅎㅎ
2022. 1. 24. 오후 10:06, 이우성 : 안녕하세요 테오님!! 반갑습니다 :) 
블로그 글 쭉 읽다가 여기 까지 왔습니다.

좋은 글 많이 써주셔서 감사합니다!
2022. 1. 24. 오후 10:07, 유용태 (teo.yu) : 감사합니다~ 어서오세요 :) 환영합니다
2022. 1. 24. 오후 10:51, 호잇 : 디자인 시스템을 개발 컴포넌트까지 정리해서> 최종적으로 자체 브랜드 시스템 툴로 만들거나 웹상에 정리된 상태로 만들려면 무엇을 얼마나 공부해야할까요?
2022. 1. 24. 오후 10:52, 호잇 : 코린이 혼자서 가능한 플젝일까요?
2022. 1. 24. 오후 10:52, 유용태 (teo.yu) : 못하지는 않을거에요~ 요새는 디자인 시스템은 워낙 레퍼런스가 많을테니까
2022. 1. 24. 오후 10:53, 유용태 (teo.yu) : 보통은 회사에서 대규모로 그 회사에 맞게 운용을 하려다 보니 조율하는 과정에서 힘이 드는 거니까요
2022. 1. 24. 오후 10:53, 유용태 (teo.yu) : 소소하게 이미 잘 만들어진 디자인 시스템을 바탕으로 나만의 컴포넌트 셋을 한번 갖춰보고 그걸로 페이지를 만들어 보는 것을 해보면 되긴 하는데
2022. 1. 24. 오후 10:54, 유용태 (teo.yu) : 여간해서는 굉장히 귀찮고 번거로운 작업이라 ㅠㅠ
2022. 1. 24. 오후 10:54, j : 움...저도 이제 삽질을 시작한 정도여서 이것저것 알아보고 있는중이라 멀 어떻게 해야한다 확실하게 말씀드리기 어렵네요ㅠㅠ
2022. 1. 24. 오후 10:55, j : 저는 antd 참고해서 element 속성값을 어떻게 처리할건지랑 속성별로 어떻게 처리할건지 생각정리 하는 중이에요ㅠㅠ
2022. 1. 24. 오후 10:56, 유용태 (teo.yu) : 맞아요 처음에는 그냥 좋은 레퍼런스를 가지고 시작하는게 맞죠
2022. 1. 24. 오후 10:56, j : css 처리가 문제인지라 결국..
2022. 1. 24. 오후 10:56, 유용태 (teo.yu) : Atom 단위인 버튼, Input, Form Control, UI Control 까지는 좀 할만한데
2022. 1. 24. 오후 10:56, 유용태 (teo.yu) : 애매한 중간라인 부터 좀 골치아파져요
2022. 1. 24. 오후 10:57, j : 컴포넌트에서 어떻게 속성을 구분해서 css에 넣어줄건가..이게 가장 큰 난황인거같아요..
2022. 1. 24. 오후 10:57, j : 맞습니다...
2022. 1. 24. 오후 10:57, 유용태 (teo.yu) : 그러니까요ㅋ 한 중간 라인의 컴포넌트 예를 들어 그리드 목록의 썸네일 카드의 경우
2022. 1. 24. 오후 10:57, j : 버튼 하나도 디자이너랑 이건가 저건가 한달동안 고민했네요
2022. 1. 24. 오후 10:57, 유용태 (teo.yu) : 보통 도메인에 특화되어 있는 형태로 디자인이 되기 때문에
2022. 1. 24. 오후 10:58, 유용태 (teo.yu) : 이걸 공통으로 쓸 수 있는 무난한 서식 기반으로 풀어내기가 엄청 힘들어요
2022. 1. 24. 오후 10:58, j : 전 인풋도..골머리..폼 컨트롤은 어디까지 자세히 해주어야 하는가..
2022. 1. 24. 오후 10:59, j : 저흰 그래서 일단 서비스별로 나눠보자 하는중이에요
2022. 1. 24. 오후 10:59, 유용태 (teo.yu) : (일단 대충하고 CS처리하다보면 완성이 된다는... ㅋ)
2022. 1. 24. 오후 10:59, j : 엌ㅋㅋㅋㅋㅋ
2022. 1. 24. 오후 10:59, j : 그 경지는 언제..될라나요..
2022. 1. 24. 오후 10:59, 유용태 (teo.yu) : 모르겠네요. 디자인 시스템이란게 뭔가 세월(?)이 좀 녹아 들어가는 거라서
2022. 1. 24. 오후 10:59, j : antd custom해서 쓰다가 화나서 만들어보자 했는데
2022. 1. 24. 오후 11:00, j : 범접할 수 없네요ㅠㅠ
2022. 1. 24. 오후 11:00, 유용태 (teo.yu) : 저희 회사도 사실은 몇번이나 해보겠다고 하다가 부러진게 많아서
2022. 1. 24. 오후 11:00, 유용태 (teo.yu) : 진짜 누가 총대메고 좀 힘주고 작정해서 하지 않으면 힘들긴 하더라구요
2022. 1. 24. 오후 11:02, j : 맞아요..ㅋㅋㅋㅋ
2022. 1. 24. 오후 11:02, j : 사이드가 되다보니까..
2022. 1. 24. 오후 11:03, 유용태 (teo.yu) : 결국 전사용도 아니고 팀용도 아니고 애매한 프로젝트단위로 남아버린 유해들을 보고 있습니다. 올해도 시도는 해보지 않을까 싶네요 ㅎ
2022. 1. 24. 오후 11:03, j : 사진
2022. 1. 24. 오후 11:03, j : 아직 이러고 정리해놓고 코드로 옮기지 못하는 중입니다
2022. 1. 24. 오후 11:03, 유용태 (teo.yu) : https://blog.banksalad.com/tech/banksalad-product-language-ios/
2022. 1. 24. 오후 11:04, j : css 선택자 공부 다시하는중이고..
2022. 1. 24. 오후 11:04, 유용태 (teo.yu) : https://blog.banksalad.com/tech/banksalad-product-language-design/
2022. 1. 24. 오후 11:04, 유용태 (teo.yu) : TOSS도 읽을게 많은데 디자인 시스템 관련해서 잘 정리된 글이라 생각해서 공유 해봅니다
2022. 1. 24. 오후 11:04, j : 오..강사합니다ㅠㅠ
2022. 1. 24. 오후 11:04, 유용태 (teo.yu) : 톡게시판 '공지': https://blog.banksalad.com/tech/banksalad-product-language-ios/
2022. 1. 24. 오후 11:04, j : 저는 쏘카 팀 보는데
2022. 1. 24. 오후 11:05, j : 거기도 간단하게 볼거면 괜찮은거 같더라구요
2022. 1. 24. 오후 11:05, 유용태 (teo.yu) : https://tech.socarcorp.kr/design/2020/06/23/socar-design-system-01.html
2022. 1. 24. 오후 11:05, 유용태 (teo.yu) : https://tech.socarcorp.kr/design/2020/07/31/component-01.html
2022. 1. 24. 오후 11:05, j : 저 이거 봤어요 ㅋㅋㅋㅋ
2022. 1. 24. 오후 11:06, 유용태 (teo.yu) : 네~ 소카 디자인 시스템 알려주셔서 한번 찾아봤어요~
2022. 1. 24. 오후 11:07, j : 저분들 방식도 신기하더라구요
2022. 1. 24. 오후 11:07, 유용태 (teo.yu) : 나중에 풀로 한번 땡겨서 읽어 봐야겠네요 ㅎ
2022. 1. 24. 오후 11:08, 유용태 (teo.yu) : 언젠가는 저도 디자인 시스템에 대해서 포스팅을 할텐데 쉽지 않은 것 같아요 일단 완성을 해보고 써야 할 것 같아서. ㅋ
2022. 1. 24. 오후 11:09, j : 기대하고 있겠습니다 테오님!!
2022. 1. 24. 오후 11:09, 호잇 : 헉...
2022. 1. 24. 오후 11:09, 유용태 (teo.yu) : 저도요! 우리 회사도 올해는 좀 갖춰지면 좋겠네요 :)
2022. 1. 24. 오후 11:10, 호잇 : 매년해도 안되던걸 제가 ㅋㅋ한달안에 뽀갠단건..대박무리수겠네요
2022. 1. 24. 오후 11:10, 호잇 : 일단 오늘은 피그마로 디자인시스템 어떻게 정리하는지 찾아보았고 내일은 컴포넌트들 다 모아서 정리를 피그마내에서 해볼생각입니다..
2022. 1. 24. 오후 11:11, 호잇 : 그리고 노션으로 문서적으로 정리할것들하고요
2022. 1. 24. 오후 11:13, 호잇 : 그게 style guide단계인데 그걸 개발단으로 넘겨서 시스템화 시키는게 ㅎㅎ 큰회사들것 보긴했지만 어디부터 얼마나 공부해야할지  노아이디어였습니다.  예전에 개인이 한 사례를 보긴한것같아서 뭔가 기업처럼 깔끔하진않아도 속공으로하는 방법이있을것같아, 여기계신 고수분들게 여쭤봤네요
2022. 1. 24. 오후 11:13, 호잇 : 올려주신자료들 정리하고 같이 참고해보겠습니다~
2022. 1. 24. 오후 11:15, 호잇 : 그런데, 중간라인은 어떤걸 부르는 말인가요?

2022년 1월 25일 화요일
2022. 1. 25. 오전 1:02, 유용태 (teo.yu) : 레이아웃이랑 데이터가 연동되기 시작하는 파트요 카드나 목록 같은
2022. 1. 25. 오전 1:03, 유용태 (teo.yu) : 디자인 시스템은 만드는 것 보다 합의하는 과정이 힘든거라서 일단 잘 만들고 전파 하는 방법도 좋을 것 같네요 ㅋ
2022. 1. 25. 오전 6:40: 다니님이 들어왔습니다.
2022. 1. 25. 오전 6:40, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 25. 오전 7:19: 부탁하는 무지님이 들어왔습니다.
2022. 1. 25. 오전 7:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 25. 오전 7:51, 호잇 : 대략 이해가 갑니다 ㅎㅎ
2022. 1. 25. 오전 7:52, 호잇 : 감사합니다  테오님 네오님
2022. 1. 25. 오전 8:18, 유용태 (teo.yu) : 안녕하세요 다니님! 부탁하는 무지님! 반갑습니다 :)
2022. 1. 25. 오전 8:18, 다니 : 반갑습니다~~!
2022. 1. 25. 오전 8:19, 부탁하는 무지 : 안녕하세요!!
2022. 1. 25. 오전 8:21, 유용태 (teo.yu) : 어서오세요~ 여기는 개발하면서 궁금한게 생겼을때 서로 물어보고 대답해주는 공간입니다 :) 언제든 편하게 글 남겨주세요~ 좋은 자료나 링크 있으면 공유 하고 있어요
2022. 1. 25. 오전 8:22, 다니 : 네 감사합니다~!!
2022. 1. 25. 오전 8:32, 여의도개발 : 궁금한게 있는데요.. css 단위에서 rem쓰시나요? px 쓰시나요?
2022. 1. 25. 오전 8:40, 유지남 : 반응형인 경우는 rem,
단일 사이트(pc, mobile)인 경우는 px,
웹뷰인 경우는 기능에따라 em또는 px 응 사용합니다.
2022. 1. 25. 오전 8:45, 여의도개발 : rem 쓰실때 
모든 단위를 rem을 쓰시진 않을거같은데. 

쓰시는 기준이 있으신가요?
2022. 1. 25. 오전 8:47: 네린이님이 들어왔습니다.
2022. 1. 25. 오전 8:47, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 25. 오전 8:59, 유용태 (teo.yu) : 안녕하세요 네린이님~ 반갑습니다 :)
2022. 1. 25. 오전 9:02, 유용태 (teo.yu) : rem을 쓰는 목적은 html의 폰트 크기만 변경하는 걸로 일괄 크기 변경이 목적이라서 rem을 쓰겠다고 하면 다 rem으로 변경해서 써야 해요
2022. 1. 25. 오전 9:04, 여의도개발 : 오홋! margin, border 등.. 까지도 해야하나 싶었는데
rem으로 통일하는게 폰트사이즈가 바껴도 자연스럽게 사이즈가 바뀌긴하겠네욥!
2022. 1. 25. 오전 9:06, 여의도개발 : 혹시 루트폰트를 1px로 하시는분도 계신가요?
16px로하면 계산하기가 어렵고 소수점이 생기게되서 16px로 기준을 삼기가 살짝 껄끄러워서요.
2022. 1. 25. 오전 9:06, 유용태 (teo.yu) : 1px border은 경우에 따라서 이상하게 보일 수도 있지만 margin padding은 같이 rem으로 가는게 맞다고 생각합니다.
2022. 1. 25. 오전 9:07, 유용태 (teo.yu) : 루트폰트 1px은 버그가 있어서 ㅠㅠ 보통 10px을 추천합니다
2022. 1. 25. 오전 9:07, 여의도개발 : 감사합니다. 잘 참고하겠숩니다!
2022. 1. 25. 오전 9:07, 여의도개발 : 1px에 버그가 있었군요 큰일날뻔했네요 ㅎㅎㅎ;;;
2022. 1. 25. 오전 9:08, 유용태 (teo.yu) : https://brunch.co.kr/@clay1987/170
2022. 1. 25. 오전 9:08, 여의도개발 : 그리고 벨로그글 너무나 인상적이고 잘보고 있습니다!!!!
2022. 1. 25. 오전 9:08, 유용태 (teo.yu) : 감사합니다
2022. 1. 25. 오전 9:08, 여의도개발 : https://www.npmjs.com/package/adorable-css
이걸 직접 만드신건가요??
2022. 1. 25. 오전 9:09, 유용태 (teo.yu) : 저기 링크 내용이 좋아서 공유 드리는거지망 px을 안써야 된다는 좀 어그로라고 생각해요
2022. 1. 25. 오전 9:09, 유용태 (teo.yu) : 네!
2022. 1. 25. 오전 9:12, 유지남 : 저도 저 글을 보긴 했는데, px를 안쓰는건  아니라고 봐요~
2022. 1. 25. 오전 9:13, 여의도개발 : 피그마 플러그인도 자체적으로 만드신거에요?
2022. 1. 25. 오전 9:13, 유용태 (teo.yu) : 네~ 맞아요 저게 맞다면 대부분의 홈페이지가 rem으로 만들어야겠지만 px로 만든게 훨씬 많거든요
2022. 1. 25. 오전 9:13, 유용태 (teo.yu) : 네!!
2022. 1. 25. 오전 9:13, 여의도개발 : 와… 정말 멋지십니다
2022. 1. 25. 오전 9:14, 여의도개발 : 생산성이 어마어마하게 높아졌을거같군요
2022. 1. 25. 오전 9:14, 유용태 (teo.yu) : 적어도 저는 그랬습니다~
2022. 1. 25. 오전 9:14, 유지남 : margin 의 경우는 typography 때문이라 가급적 써야 하지만, border의 경우는 케바케 인것 같아요.
2022. 1. 25. 오전 9:15, 유용태 (teo.yu) : 피그마 플러그인은 아직 많이 미숙해서 예시는 베스트를 보여줬을 뿐 디자이너가 가이드를 통해서 하면 안되는 것들을 다 알아야 할 수 있어서
2022. 1. 25. 오전 9:16, 유용태 (teo.yu) : 일단 마크업을 하시는 분들은 AdorableCSS를 긍정적으로 보고 한 두분 씩은 써주시고 계세요
2022. 1. 25. 오전 9:57, 엉망장자 : 질문이 있습니다! 새로운 기술을 써보고자 할 때 여러분은 어떻게 시작하시나요?.. 일단 필요한 걸 써보고 추가적으로 공부할까 싶기도 하고, 그 기술의 개요는 알고 써야되지 않나 해서 공식문서정도는 읽어야 하나 싶기도 하고.. 어떤게 효율적일지 여쭤보고 싶습니다.
2022. 1. 25. 오전 9:58, j : 저는 일단 필요한 부분부터 찾아보고 그 다음에 개요를 찾아보는 편이에요!
2022. 1. 25. 오전 9:59, j : 그러고 부족한거 같으면 하나씩 더 찾아보면서 익히고있어요
2022. 1. 25. 오전 10:00, 여의도개발 : 시작은 공식홈페이지부터 한번 훑고 블로그 한번 보고
구현해야할 서비스 특징을 비교해본다음 사용가능할지 판단..

기술 습득은 hello 정도 간단히 찍어보는편입니다.
2022. 1. 25. 오전 10:03, 엉망장자 : 답변 감사합니다! ㅎㅎ 일단 해보는 쪽으로~
2022. 1. 25. 오전 10:23, 프린이 : https://yozm.wishket.com/magazine/detail/1289/
웹 프론트 역사?를 정리해놓은 글인데 개인적으로 재밌게 읽어서 공유드립니다~
2022. 1. 25. 오전 10:23, 프린이 : 테오님 글이셨네요...
2022. 1. 25. 오전 10:23, 프린이 : 이제보니
2022. 1. 25. 오전 10:24, 엉망장자 : 오.. ㅋㅋㅋㅋ
2022. 1. 25. 오전 10:24, 프린이 : 소름돋았네요 ㅋㅋㅋ
2022. 1. 25. 오전 10:26, j : 앜ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 10:27, Vintz : 헐ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 10:30, 유용태 (teo.yu) : ㅋㅋㅋㅋ 퍼가주시더라구요 ㅎ
2022. 1. 25. 오전 10:39, 여의도개발 : 궁금한게 있는데요. 
functional or atomic css에서 여러군데에서 쓰이는 클래스명에 스타일 변경이 일어날경우 모두 변경해야할텐데..  문제없나요?
2022. 1. 25. 오전 10:39, 유용태 (teo.yu) : 한번 만든 클래스의 스타일은 변하지 않습니다. 그래서 쪼갤수 없고 변하지 않는다라는 의미로 atomic이라는 워딩을 쓰고 있어요
2022. 1. 25. 오전 10:46, 여의도개발 : <div class="w(200) h(200)"></div> 와같은 박스가 여러군데에서 쓰이고 있고.

이 박스에 radius가 모두 들어가야한다면..
w(200) h(200) 을 쓴 박스들을 모두 찾아서 r(8)을 넣어야하는거 아닌가요?
<div class="w(200) h(200) r(8)"></div>
2022. 1. 25. 오전 10:48, 유용태 (teo.yu) : 그렇죠 요새는 다 그런걸 다 컴포넌트로 쓰고 있으니
2022. 1. 25. 오전 10:48, 유용태 (teo.yu) : 반복에 대한 문제는 컴포넌트로 풀면 되죠
2022. 1. 25. 오전 10:51, 피카츄돈까스/React,RN : https://news.hada.io/topic?id=5512 요런글도 있네요!
2022. 1. 25. 오전 10:52, Vintz : 오..
2022. 1. 25. 오전 10:53, Vintz : 글 공유 감사합니다 :)
2022. 1. 25. 오전 11:26, 콘솔 : 우와.. 감사합니다 꿀팁다 모아놨네여
2022. 1. 25. 오전 11:26, 피카츄돈까스/React,RN : ㅋㅋㅋ긱뉴스 보세요!
2022. 1. 25. 오전 11:26, 피카츄돈까스/React,RN : 저 있는 방에 올라온 @뿌린이/React  님이 알려주신 레이아웃 제네레이터
https://layout.bradwoods.io/
2022. 1. 25. 오전 11:27, 피카츄돈까스/React,RN : 요런것도 있네여 ㅋㅋㅋ 신기방기 ...레이아웃제네레이터라니..
2022. 1. 25. 오전 11:27, 콘솔 : 왛… ㅋㅋㅋㅋㅋ이런게 있었다니..ㅋㅋㅋㅋ
2022. 1. 25. 오전 11:27, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 11:28, 피카츄돈까스/React,RN : 저도 해보고 어!? …오…어? 와..
2022. 1. 25. 오전 11:28, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 11:30, 유용태 (teo.yu) : 톡게시판 '공지': https://news.hada.io/topic?id=5512 요런글도 있네요!
2022. 1. 25. 오전 11:30, 유용태 (teo.yu) : 톡게시판 '공지': 저 있는 방에 올라온 @뿌린이/React  님이 알려주신 레이아웃 제네레이터
https://layout.bradwoods.io/
2022. 1. 25. 오전 11:32, 호잇 : https://velog.io/@dwa_all/DEVIEW-2021-%ED%94%BC%EA%B7%B8%EB%A7%88-API-%EC%A0%95%EB%A6%AC
2022. 1. 25. 오전 11:33, 유용태 (teo.yu) : 톡게시판 '공지': https://velog.io/@dwa_all/DEVIEW-2021-%ED%94%BC%EA%B7%B8%EB%A7%88-API-%EC%A0%95%EB%A6%AC
2022. 1. 25. 오전 11:33, 호잇 : 이미 다들아시는 부분일수있지만 ㅎㅎ피그마 연계 디자인시스템 만들때 보면 좋을거같아서..
2022. 1. 25. 오전 11:33, 호잇 : 보내봅니다
2022. 1. 25. 오전 11:34, 피카츄돈까스/React,RN : 오..감사합니다!
2022. 1. 25. 오전 11:36, 피카츄돈까스/React,RN : 긱뉴스에 테오님 글도 올라와있더라구요 신기방기 ㅋㅋ
2022. 1. 25. 오전 11:37, 유용태 (teo.yu) : 오! 저 긱뉴스 거의 확인하는데 몰랐어요! 감사합니다. ㅎㅎ 찾아봐야지 ㅋㅋ
2022. 1. 25. 오전 11:41, 피카츄돈까스/React,RN : https://news.hada.io/topic?id=5810
2022. 1. 25. 오전 11:42, 유용태 (teo.yu) : 이건 제가 아닌 듯 한데요 ㅋㅋ
2022. 1. 25. 오전 11:46, 피카츄돈까스/React,RN : https://news.hada.io/topic?id=5819
2022. 1. 25. 오전 11:46, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 11:46, 피카츄돈까스/React,RN : 저왜이러죠 ㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 11:47, 피카츄돈까스/React,RN : 죄송해여 ㅋㅋㅋ 이겈ㅋㅋㅋㅋ
2022. 1. 25. 오전 11:47, 피카츄돈까스/React,RN : 민망하네여 바로 아래글을 클릭해섴ㅋㅋ
2022. 1. 25. 오전 11:47, 유용태 (teo.yu) : 아닙니다. 페이스북을 퇴사한 개발자가 되어서 좋았어요. ㅋ
2022. 1. 25. 오전 11:47, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 11:47, 엉망장자 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오전 11:48, 프린이 : ㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오후 2:28, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 25. 오후 2:29, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 25. 오후 2:59, 0_0 : cra + eslint + prettier + typescript 조합으로 개발하실 때 eslint 설정 다들 뭐뭐 하시나요?..
2022. 1. 25. 오후 3:00, 김동현 : naver 와 import 관련 설정 합니다
2022. 1. 25. 오후 3:00, 유용태 (teo.yu) : https://standardjs.com/readme-kokr.html
2022. 1. 25. 오후 3:01, 파이버 : react recommended
eslint recommended
typescript recommended
import recommended
2022. 1. 25. 오후 3:01, 파이버 : 이정도 쓰는거같아요
2022. 1. 25. 오후 3:01, 파이버 : airbnb 좋다길래 찍먹 한번 해봤다가 씨게 데이고 도망쳤던 기억이..
2022. 1. 25. 오후 3:01, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 25. 오후 3:02, 여의도개발 : hook recommend도 좋아요
2022. 1. 25. 오후 3:03, 여의도개발 : 특히 useEffect나 useCallback 쓰실때..
2022. 1. 25. 오후 3:03, 김동현 : dependency array 관련 설정만 뺀다면..?
2022. 1. 25. 오후 3:04, 김동현 : naver 에 익숙해져있어서 (airbnb 의 강화버젼) 저는 괜찮은것같아요!
2022. 1. 25. 오후 3:04, 파이버 : 와 에어비엔비보다 더빡센가요?
2022. 1. 25. 오후 3:05, 여의도개발 : 네이버 린트도 있어요?ㅎㅎ
2022. 1. 25. 오후 3:05, 0_0 : 이건 react-app 있으면 같이 설정되는거맞죠?ㅠㅠ? 린트경고 뜨던데
2022. 1. 25. 오후 3:06, 여의도개발 : cra는 린트가 같이 설치되어있어서..훅까지 되어있는진 가물가물하네요
2022. 1. 25. 오후 3:06, 여의도개발 : https://reactjs.org/docs/hooks-rules.html#eslint-plugin
2022. 1. 25. 오후 3:06, 김동현 : https://github.com/naver/eslint-config-naver
2022. 1. 25. 오후 3:06, 김동현 : 더 빡셉니다 ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오후 3:26, 여의도개발 : 마크업 연습해볼만한 디자인 에셋 어디 없을까요?
2022. 1. 25. 오후 3:26, 유용태 (teo.yu) : https://www.figma.com/community/mobile_design
2022. 1. 25. 오후 3:26, 유용태 (teo.yu) : https://www.figma.com/community/web_design
2022. 1. 25. 오후 3:27, 여의도개발 : 헛… 감사합니다 꾸벅(_ _)
2022. 1. 25. 오후 3:27, 여의도개발 : 피그마가… 좋긴좋은거같네요
2022. 1. 25. 오후 3:27, 유용태 (teo.yu) : 그쵸 성장하는 법을 너무 잘 알아요
2022. 1. 25. 오후 3:28, 여의도개발 : 오호! 포트폴리오 이참에 한번 만들어봐야겠네요!
2022. 1. 25. 오후 3:30, 여의도개발 : 궁금한게 있는데요..teo님은 유명IT회사에 계신건가요? 어나더 레벨이신거같은데 어떤회사여야 테오님같은 시니어분이 계실지 궁금해서요
2022. 1. 25. 오후 3:31, 웹린이 : cra 린트에 훅규칙 들어가 있습니다!
2022. 1. 25. 오후 3:31, 썰~~ : 카카오..
2022. 1. 25. 오후 3:31, 여의도개발 : 그렇군요… 역시 카카오군요..
2022. 1. 25. 오후 3:35, 여의도개발 : 저도 테오님같은 시니어가 되기위해 노오력해야겠다는 자극을 받네요 ㅎㅎ
2022. 1. 25. 오후 3:36, 생못미 : 블로그 테마를 옮기면서 예전에 개인 노션에 써두었던 react-query에 대한 포스팅을 옮겨봤습니다 ㅋㅋㅋ 구경와주세요~ https://saengmotmi.netlify.app/react-query/
2022. 1. 25. 오후 3:36, 생못미 : 아직 세팅을 다 안해뒀더니 썸네일이...
2022. 1. 25. 오후 3:36, 생못미 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오후 3:36, 여의도개발 : 오 저도 리액트쿼리 쓰고있는데 .. 포스트 감사합니다~
2022. 1. 25. 오후 3:37, 여의도개발 : 자두가 아주 탐스럽군요
2022. 1. 25. 오후 3:38, 여의도개발 : 사진
2022. 1. 25. 오후 3:38, 여의도개발 : 아주 아름답네요
2022. 1. 25. 오후 3:38, 꼬북 : 글 깔끔하게 잘쓰시네요
2022. 1. 25. 오후 3:39, 여의도개발 : 글들을 잘쓰시네욤
2022. 1. 25. 오후 3:40, 유용태 (teo.yu) : 톡게시판 '공지': 블로그 테마를 옮기면서 예전에 개인 노션에 써두었던 react-query에 대한 포스팅을 옮겨봤습니다 ㅋㅋㅋ 구경와주세요~ https://saengmotmi.netlify.app/react-query/
2022. 1. 25. 오후 3:46, 유용태 (teo.yu) : 정확히는 카카오엔터프라이즈에 다니고 있습니다. 실제로 입사한지는 1년 반 정도 이구요. 그전에는 친구와 함께 개인 사업을 했었습니다. 카카오가 절 시니어로 만들어준 건 아니지만 ㅋㅋ 제 인지도를 만들어준건 카카오의 힘이라 역시 좋은데를 가야 하는 구나 하는 생각은 들어요 :)
2022. 1. 25. 오후 3:49, 유용태 (teo.yu) : 회사가 망하고 이후 카카오 입사 전까지는 서류통과도 힘들어서 중소 포함 7번 정도 떨어지고 면접 보는 것 조차도 어려웠어요~ 최근 면접을 많이 보고 있는데 실력을 갈고 닦는 것도 중요하지만 실력을 증명하는 것도 참 중요한 능력이다 싶어요
2022. 1. 25. 오후 3:50, j : 혹시 type script 처음 접하신 분들 뭘로 공부하셨는지..알 수 있나요?ㅠㅠ
2022. 1. 25. 오후 3:50, 유용태 (teo.yu) : 저는 그냥 했어요~ strict: false 떼고
2022. 1. 25. 오후 3:50, 유용태 (teo.yu) : *아니 strict: false해서
2022. 1. 25. 오후 3:51, j : 핸디북 보면서 첨엔 그냥 해도 되겠죠,,?
2022. 1. 25. 오후 3:51, 생못미 : 조금 알게 되면 당장 쓰는 건 아주 어렵지는 않은데 공식문서만 보고 따라하기는 쉽지는 않았던거 같아요 저는 당장 빨리 썼어야 해서 간단한 강의 2배속으로 한번 쓱 훑고
2022. 1. 25. 오후 3:51, 생못미 : 그 이후에 조금씩 써보면서 체득한거 같아요
2022. 1. 25. 오후 3:51, 유용태 (teo.yu) : 네 처음에는 그냥 타입을 넣어두면 JS보다 좀 편한 힌트 도구다 생각하고
2022. 1. 25. 오후 3:51, 여의도개발 : 첨에 any 마려울수도 있을텐데 그 고비만 넘기면 익숙해지더라고요
2022. 1. 25. 오후 3:51, 유용태 (teo.yu) : 맞아요 any 검지 검지!!
2022. 1. 25. 오후 3:52, 생못미 : 고급 타입 쓰는 방법은 여러가지 아티클이나 이펙티브 타입스크립트나 https://github.com/type-challenges/type-challenges 이런거 풀어보면서 연습했어요
2022. 1. 25. 오후 3:52, 유용태 (teo.yu) : 오히려 ts를 빡빡하게 쓰지 않고 서포트해주는 도구라고 생각하면 좋아요
2022. 1. 25. 오후 3:53, j : 감사합니다!!ㅠㅠ
2022. 1. 25. 오후 3:53, 유용태 (teo.yu) : 톡게시판 '공지': 고급 타입 쓰는 방법은 여러가지 아티클이나 이펙티브 타입스크립트나 https://github.com/type-challenges/type-challenges 이런거 풀어보면서 연습했어요
2022. 1. 25. 오후 3:53, j : 우선은 handybook 보고 한번 후딱 맛보고..
2022. 1. 25. 오후 3:53, j : 레퍼런스 찾아봐야겠네요
2022. 1. 25. 오후 3:53, 유용태 (teo.yu) : 그래서 순서는 일단 타입을 붙여가며 편함을 느끼고
2022. 1. 25. 오후 3:54, 유용태 (teo.yu) : 서버쪽 정의나 객체들 정의 하면서 한번 귀찮으면 계속 편하다는 것 좀 느끼고
2022. 1. 25. 오후 3:54, 유용태 (teo.yu) : 콜백 타입 정의 하는 거에서 좀 힘들 수 있는데 잘 넘어가보시고
2022. 1. 25. 오후 3:54, j : 우선 타입정의의 편안함을 느껴봐야겠어요..
2022. 1. 25. 오후 3:54, j : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 25. 오후 3:55, j : 감사합니다 다들!!ㅠㅠ
2022. 1. 25. 오후 3:55, j : 타입을 넣어두면 JS보다 좀 편한 힌트 도구다 생각하고, ts를 빡빡하게 쓰지 않고 서포트해주는 도구라고 생각하면 좋아요 -테오-
2022. 1. 25. 오후 3:55, 유용태 (teo.yu) : 그러다 보면 자동 추론에 맛들리는데 정상입니다 최대한 타입을 붙이는 걸 최소화하고 가급적 자동 추론으로 만들도록 하시고
2022. 1. 25. 오후 3:55, j : 노션 젤 위에 적어놨어요 ㅋㅋㅋㅋ
2022. 1. 25. 오후 3:55, 유용태 (teo.yu) : 유틸 타입이랑 타입
가드 제네릴 이런식으로 넘어오시면 됩니다
2022. 1. 25. 오후 3:55, 유용태 (teo.yu) : *제네릭
2022. 1. 25. 오후 3:56, j : 넵 알겠습니다!
2022. 1. 25. 오후 4:02, 엄지척 제이지 : @유용태 (teo.yu)  혹시 ts 에서 오브젝트 리터럴 핸들링할 때는 어떻게 하시나요? 이를테면 아래와 같은 경우

const obj = { a: 1, b: 1 };
const f = (key: string) => obj[key]; // error
2022. 1. 25. 오후 4:04, 엄지척 제이지 : 전 결국 인덱스 시그니처 넣어서 타입 넣어서 해결하게 되더라구요
2022. 1. 25. 오후 4:05, 생못미 : type Obj = { [key: string]: number }
const obj: Obj = { a: 1, b: 1 };
const f = (key: string) => obj[key];
2022. 1. 25. 오후 4:05, 생못미 : 이런거 말씀하시는건가요?
2022. 1. 25. 오후 4:05, 유용태 (teo.yu) : 저는 레코드 써요
2022. 1. 25. 오후 4:06, 유용태 (teo.yu) : Record<string, int>
2022. 1. 25. 오후 4:07, 생못미 : const obj: Record<string, number> = { a: 1, b: 1 };
const f = (key: string) => obj[key];
2022. 1. 25. 오후 4:10, 파이버 : 저는 

const obj = { a: 1, b: 1 };
const f = (key: keyof typeof obj) => obj[key];

이런 식으로 해요
2022. 1. 25. 오후 4:15, j : TypeScript에서, 내부 구조가 호환되는 두 타입은 서로 호환 됩니다. 그래서 명시적인 implements 절 없이, 인터페이스가 요구하는 형태를 사용하는 것만으로도 인터페이스를 구현할 수 있습니다.

라고 나와있는데 내부 구조가 호환된다는 의미가..어떤 의미 인가요..ㅠㅠ
scope로 접근 가능하다는 의미인가요..ㅠ?
2022. 1. 25. 오후 4:15, 유용태 (teo.yu) : duck typing을 말하는 건데
2022. 1. 25. 오후 4:16, 유용태 (teo.yu) : const x = { method: () => {} }
2022. 1. 25. 오후 4:16, 신난 어피치 : 헉 진짜 오리같네요
2022. 1. 25. 오후 4:16, 유용태 (teo.yu) : 그냥 같은 변수 같은 메소드가 있으면
2022. 1. 25. 오후 4:16, 신난 어피치 : :()
2022. 1. 25. 오후 4:16, 유용태 (teo.yu) : ㅋㅋㅋ
2022. 1. 25. 오후 4:17, 유용태 (teo.yu) : 같은 인터페이스로 봐주는 거에요
2022. 1. 25. 오후 4:19, 유용태 (teo.yu) : const a = {
  x: 100,
  y: 200,
  sum:() => {...}
}

const b = {
  a: 100,
  b: 200,
  sum:() => {...}
}

a와 b는 구조는 다르지만 같은 sum 필드가 있으므로 

a.sum() (O)
b.sum() (O)

[a,b].foreach(foo => foo.sum()) (O) foo는 a,b가 둘다 올 수 있지만 sum 호출은 문제 없다
2022. 1. 25. 오후 4:19, j : interface test {
	message: string
}

const testMessage = {message: 'Hello'}

그럼 위 코드에서 testMessage도 test 와 같은 interface로 본다
2022. 1. 25. 오후 4:20, 유용태 (teo.yu) : 원래 JS는 interface라는 개념이 없이 이름만 같으면 쓸 수 있는데
2022. 1. 25. 오후 4:21, 유용태 (teo.yu) : 구 타입 & 객체지향 언어에서는 interface가 명시적으로 정의 되어야만 같은 인터페이스로 인정을 해주는데 TS는 JS 기반 위에 만들어진 언어다 보니
2022. 1. 25. 오후 4:22, 여의도개발 : 혹시.. css 하실때 이 형태로  예쁘게 정렬하고 계신분 계신가요?
2022. 1. 25. 오후 4:22, 여의도개발 : 사진
2022. 1. 25. 오후 4:22, 유용태 (teo.yu) : 말은 어렵긴 한데 TS는 결국 JS에다가 언어적 껍데기만 씌운 개념이라서 JS에서 이름을 둘다 가지고 있으면 그냥 호환된다는 말을 개발적인 표현으로 적어둔거에요
2022. 1. 25. 오후 4:22, 여의도개발 : 찾아보면 분명이 있을거같은데 헤매고있네욤ㅎㅎㅎ
2022. 1. 25. 오후 4:23, 유용태 (teo.yu) : 저기 주석까지 포함해주는 정렬도구 같은건가요? 호오
2022. 1. 25. 오후 4:23, 유용태 (teo.yu) : 필드 순서까지 맞춰서?
2022. 1. 25. 오후 4:23, 여의도개발 : onSave 하는순간 정렬해주는 툴이 어디 없나 싶어요
2022. 1. 25. 오후 4:24, 유용태 (teo.yu) : https://velog.io/@oneook/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%9D%BC%EB%A9%B4-%EB%B0%98%EB%93%9C%EC%8B%9C-%EC%95%8C%EC%95%84%EB%91%90%EC%96%B4%EC%95%BC-%ED%95%A0-32%EA%B0%80%EC%A7%80%EC%9D%98-UI-%EC%9A%94%EC%86%8C-%EB%B2%88%EC%97%AD
2022. 1. 25. 오후 4:25, j : OOP에서는 interface 정의를 해서 구조까지 아야 같은 인터페이스로 봤지만, TS는 JS에 OOP의 껍데기를 씌웠다.
-> 같은 이름으로 정의가 되면 같은 interface 로 보고 호환할 수 있게 한다.
2022. 1. 25. 오후 4:26, 유용태 (teo.yu) : 호오! 네!
2022. 1. 25. 오후 4:26, 유용태 (teo.yu) : 정리가 좋네요 ^^;;
2022. 1. 25. 오후 4:27, 프론트준비생 : 이상한질문인데 여기계신분들은 왜 프론트개발자로 진로잡으셨나요?
2022. 1. 25. 오후 4:28, 생못미 : 오 저는 그냥 덕타이핑이 왜 있는거지 싶었는데 언어적인 특성까지 고려해서 생각하니 이해가 되네요 감삼당
2022. 1. 25. 오후 4:28, j : interface Person {
    firstName: string;
    lastName: string;
}

function greeter(person: Person) {
    return "Hello, " + person.firstName + " " + person.lastName;
}

let user = { firstName: "Jane", lastName: "User" };

document.body.textContent = greeter(user);

그럼 위 예제에서는 Person 이라는 interface를 OOP에서 정의하듯 명시적으로 정의해서 사용한 것으로 이해하고,  
만약 interface를 명시적 정의를 하지 않더라도 같은 이름의 구조를 가지고 있으면 서로 같은 interface로 호환이 된다.
2022. 1. 25. 오후 4:28, j : 맞나요..?ㅠ
2022. 1. 25. 오후 4:28, j : 테오님이 설명을 잘해주셔서 저는 잘 요약했을 뿐입니다..
2022. 1. 25. 오후 4:28, 생못미 : 그냥 단순히 웹 개발 하면 당연히 브라우저 뜨는거 만드는거 아닌가… 하다가요 ㅋㅋㅋㅋ;;
2022. 1. 25. 오후 4:29, 유용태 (teo.yu) : 맞아요. 근데 TS에서는 명시적 정의 안하면 strict에서 에러를 뱉는 건 똑같아서 ㅋㅋ 그냥 개념만 이해하시고 넘어가셔도 되요 ㅋ
2022. 1. 25. 오후 4:29, j : 데이터쪽에 관심 가지다가 데이터 분석의 넘사를 겪고 그럼 내가 할 수 있는게 뭐가 있을까 고민하다 내린 결론이 '그럼 난 잘 보여주는 사람이 되자!'여서요..
2022. 1. 25. 오후 4:29, 유용태 (teo.yu) : 말이 멋있어요 +_+
2022. 1. 25. 오후 4:30, j : 아하 그냥 경고 수준의 에러를 던져주긴하니까 조심하자 정도로 이해하고 넘어가야겠네요
2022. 1. 25. 오후 4:31, j : 근데 면접 들어가면..다들 비슷한 말 하더라구요 ㅋㅋㅋㅋ
2022. 1. 25. 오후 4:32, j : 신입 면접에 병풍으로 들어가면 대체로 노력의 결과물이 바로바로 피드백 받을 수 있어서 하게 되었다.
2022. 1. 25. 오후 4:32, j : 그래서 이제 좀 차별점을 두고 생각해보려 다시 자아 탐색중입니다..
2022. 1. 25. 오후 4:33, Hardy : 저는 이전 이력과 연결지어서 설명해요 ㅋㅋ
2022. 1. 25. 오후 4:33, 유용태 (teo.yu) : ㅋㅋㅋ 면접관의 입장이 되면 당연한걸 말하면 좀 받아주기가 힘들때가 있죠 ㅋ
2022. 1. 25. 오후 4:33, 생못미 : ㅋㅋㅋㅋ
2022. 1. 25. 오후 4:33, 생못미 : 면접용이라면 이야기가 달라지긴 하죠
2022. 1. 25. 오후 4:34, j : 제 현재 이력이..component 개발쪽에 치중되어 있어서..
2022. 1. 25. 오후 4:34, 유용태 (teo.yu) : 아까 같은 말을 하셔도 데이터 분석 얘기를 하신 다음에 하셨기 때문에 오오 했던거라서 ㅎ
2022. 1. 25. 오후 4:34, j : 앜ㅋㅋㅋㅋㅋ..
2022. 1. 25. 오후 4:34, 유용태 (teo.yu) : 뭐든 (+자기경험) 이것만 들어가도 면접에서는 좋은 인상을 줄 수 있어요
2022. 1. 25. 오후 4:34, 생못미 : 공부 했던 분야가 신문방송학인데 거기서 매체랑 커뮤니케이션 키워드 뽑고 뉴미디어 스타트업 관심 있어서 공부했던거랑 버무려서 대답했어요
2022. 1. 25. 오후 4:34, j : 직접 겪어보고 데이터 분석은..아 진짜 난 활용 능력이 떨어지는구나..를 절실히 깨달아가지고..
2022. 1. 25. 오후 4:35, 유용태 (teo.yu) : 아주 좋은 답변이네요
2022. 1. 25. 오후 4:35, j : 대답 잘하셨는데요!
2022. 1. 25. 오후 4:35, 생못미 : 프로덕트가 사용자를 만나는 가장 첫번째 접점이 브라우저, 프론트엔드 영역 아닌가하는 관점으로요
2022. 1. 25. 오후 4:35, j : 오..좋다..멋있습니다!!
2022. 1. 25. 오후 4:35, j : 1따봉!
2022. 1. 25. 오후 4:35, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 25. 오후 4:35, 생못미 : ㅋㅋㅋ 저 답변도 바로 생각난게 아니라
2022. 1. 25. 오후 4:36, 생못미 : 면접 열번 정도 보러 다니면서 조금씩 레퍼토리가 생겼어요 ㅋㅋㅋ
2022. 1. 25. 오후 4:36, j : 원래 면접은..내면 성찰부터 시작해야 되더라구요..
2022. 1. 25. 오후 4:36, 생못미 : 맞아요 기술질문은 그냥 공부하면 답변할 수 있는데
2022. 1. 25. 오후 4:36, j : 저 열마전에 경력 면접 처음보고 멘탈 털려서..
2022. 1. 25. 오후 4:36, 프론트준비생 : 저는단순히 백엔드해보니까 진인상벽이 상대적으로 프론트가더낫아서 시작했는데요 이런계기로시작하는건좀 아닐까요?
2022. 1. 25. 오후 4:36, 생못미 : 가치관이나 성장 하고 싶은 방향 이런거 물어보면 대답하기 어려운...
2022. 1. 25. 오후 4:36, 엉망장자 : 전 결국에는 창업하고 싶은데 어느 산업군이더라도 가장 범용성 좋은 기술자가 개발자고 기술에 묻히지 않고 고객입장에서 항상 생각해야 하는 분야가 프론트엔드같아서 시작했어요 ㅋㅋ 
면접용 답으론 별론가요?.. 이게 리얼이긴 한데
2022. 1. 25. 오후 4:36, j : 계기는 다 다르니까 괜찮아요, 다만 왜 웹개발의 분야로 들어왔는가를 적절히 잘 녹이면 되니까요!
2022. 1. 25. 오후 4:36, 생못미 : 그렇게 시작하셨어도 이유를 잘 만들어두셔야돼요
2022. 1. 25. 오후 4:37, 엄지척 제이지 : 신입때 팀의 모든 사람이 프론트를 하기 싫어했습니다 ㅎㅎ
2022. 1. 25. 오후 4:37, 유용태 (teo.yu) : 그래도 "프론트가 만만하세요? ^^?" 라는 인상을 주는건 좋지 않은것 같아요 ㅋ
2022. 1. 25. 오후 4:37, 생못미 : 리액트 왜 쓰셨나요? -> 다들 써서요
2022. 1. 25. 오후 4:37, 프론트준비생 : 맞습니다...
2022. 1. 25. 오후 4:37, 프론트준비생 : 이모티콘 솔직히 프론트도해보니까 진입장벽따지고 그럴처지가아닌거같습니다
2022. 1. 25. 오후 4:37, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 25. 오후 4:37, 생못미 : ㅋㅋㅋㅋㅋㄹㅇㅋㅋ 입니다
2022. 1. 25. 오후 4:38, j : 왜 웹개발의 길로 들어왔는지 말하면서, 결국 발전해서 나는 백엔드 개발도 잘 할 수 있는 개발자가 될것이다! 이런식으로..
2022. 1. 25. 오후 4:38, j : 인정..
2022. 1. 25. 오후 4:38, 유용태 (teo.yu) : 다들 최종적으로 만들어 보고 싶은 프론트엔드 프로젝트는 어떤거에요?
2022. 1. 25. 오후 4:38, 프론트준비생 : Html,css 꿀이네 -> 좀더 깊이공부함 -> ?????
2022. 1. 25. 오후 4:39, 생못미 : 그냥 너무 진지하지 않게 약간 유쾌한 답변도 좋은거 같아요 ㅋㅋㅋㅋ
2022. 1. 25. 오후 4:39, 프론트준비생 : 저는 부동산관련에서 한번해보고십어요
2022. 1. 25. 오후 4:39, j : 저는 그럼 기획이나 UX쪽으로 생각하게 될거 같아요..ㅠ
2022. 1. 25. 오후 4:39, 유용태 (teo.yu) : 오!? 왜요?
2022. 1. 25. 오후 4:39, 유용태 (teo.yu) : 참신
2022. 1. 25. 오후 4:39, 생못미 : 프롭테크라고 하나요?
2022. 1. 25. 오후 4:39, 프론트준비생 : 음..  엄청깊게생각한건아니고 요새 부동산공부하고있는데
2022. 1. 25. 오후 4:39, j : 오 부동산..
2022. 1. 25. 오후 4:39, j : 친하게 지내여..
2022. 1. 25. 오후 4:40, 생못미 : https://www.mk.co.kr/news/business/view/2021/08/747555/
2022. 1. 25. 오후 4:40, 프론트준비생 : 그냥 지금공부하는거랑 엮어서 해보면재밌을거같아서 말씀드렸습니다ㅋㅋ
2022. 1. 25. 오후 4:40, j : 전 의료나 건설쪽
2022. 1. 25. 오후 4:40, 프론트준비생 : 공부만하는중입니다ㅋㅋㅜㅜ
2022. 1. 25. 오후 4:40, 유용태 (teo.yu) : 어느 부분을 엮을 수 있을 것 같아요? 뭐가 재밌는 데요?
2022. 1. 25. 오후 4:40, j : 나중에 성공하셔도 이방 잊지 않기로 해여..
2022. 1. 25. 오후 4:40, 생못미 : 직방에서 메타버스 사무실 냈더라고요
2022. 1. 25. 오후 4:40, 생못미 : 메타폴리스라고
2022. 1. 25. 오후 4:40, 유용태 (teo.yu) : 봤어요 ㅋ
2022. 1. 25. 오후 4:41, 유용태 (teo.yu) : 3d + 게더타운인데 아직은 UI는 좀 부실해보이던데
2022. 1. 25. 오후 4:41, 생각하는오뎅 : 요거 해주는게 stylelint입니다!   eslint는 js, ts고, css나 styled-components안에 있는 스타일 자동 정렬 해주는거요!
2022. 1. 25. 오후 4:41, 유용태 (teo.yu) : https://stylelint.io/
2022. 1. 25. 오후 4:41, 유용태 (teo.yu) : 톡게시판 '공지': https://stylelint.io/
2022. 1. 25. 오후 4:42, 유용태 (teo.yu) : 게임쪽에서 각잡고 만들면 진짜 메타버스에 출근할만 나겠다 싶더라구요
2022. 1. 25. 오후 4:42, 생못미 : 게더타운이 백그라운드에서도 풀로드 도는데 반해서 메타폴리스는 다른 작업하는 동안에는 cpu 점유율이 뚝 떨어지는 식으로 부담을 줄였나보더라고요
2022. 1. 25. 오후 4:42, 유용태 (teo.yu) : 요새 게더랑 피그마로 회사 일도 그렇고 지금 스프린트도 그렇고
2022. 1. 25. 오후 4:42, 생각하는오뎅 : 방장님 회사에서 게더 사용하고 계신가요?
2022. 1. 25. 오후 4:43, 프론트준비생 : 아사실 부동산매물 이런걸알려주는포폴은 아니고 저도이제막 부동산쪽관심가져서 책읽는상태인데요 부동산쪽ㅈ공부할수록 경제공부가필수로되야 왜 지금부동산시장이이런지 알겠더라구요 근데막상 경제공부도해보려니까 어디까지공부해야할지 모르겠고 그래서 기본적인 부동산공부하려면 필요한 경제지식을알려주는 웹사이트? 이런거해보면 괜찮을거같아서 말씀드렸습니다ㅋㅋ
2022. 1. 25. 오후 4:43, 유용태 (teo.yu) : 네 저희도 메타버스로 협업 도구를 만들어 보려고 하는 것도 있어서 경쟁상대 분석 겸 실제 유용함 체크겸 겸사 겸사 써보고 있어요
2022. 1. 25. 오후 4:43, 유용태 (teo.yu) : 상당히 긍정적입니다
2022. 1. 25. 오후 4:43, 생못미 : 오호
2022. 1. 25. 오후 4:43, 생각하는오뎅 : 아하
2022. 1. 25. 오후 4:43, 유용태 (teo.yu) : 그냥 구글 meet이나 zoom  하고는 완전 사용자 경험이 달라요
2022. 1. 25. 오후 4:44, 프론트준비생 : 오..
2022. 1. 25. 오후 4:44, 생각하는오뎅 : 저희도 꽤 초창기부터 썼었는데,  최근에는 너무 심하게 느려져서 못쓰고 있거든요 ㅜ
2022. 1. 25. 오후 4:44, 생각하는오뎅 : 팀 데일리, 각종 회의 다 게더에서 했었는데
2022. 1. 25. 오후 4:44, j : 전 우선 게더 초반에 너무 경험이 안좋아서..
2022. 1. 25. 오후 4:44, 생못미 : 배터리 광탈...
2022. 1. 25. 오후 4:44, 생각하는오뎅 : 두달 전? 정도 부터는 탈게더 하고 있음 ㅜ
2022. 1. 25. 오후 4:44, j : 단쓰게 되더라구요
2022. 1. 25. 오후 4:44, j : *안
2022. 1. 25. 오후 4:44, 유용태 (teo.yu) : https://zep.us/
2022. 1. 25. 오후 4:44, 생각하는오뎅 : 배터리야 어차피 충전ㅌ하면서 하면 되니까 상관이 없는데, 끊김이 너무 심해져서 ㅜㅠ
2022. 1. 25. 오후 4:44, j : 서디페도 이번에 그랬던걸로 기억하고..
2022. 1. 25. 오후 4:44, 생각하는오뎅 : 이건 네이버 계열에서 만든거죠?
2022. 1. 25. 오후 4:45, j : 서디페 맞나..
2022. 1. 25. 오후 4:45, 유용태 (teo.yu) : 국내에서 네이버랑 바람의 나라 만든 팀이랑 조인해서
2022. 1. 25. 오후 4:45, 유용태 (teo.yu) : 만들고 있더라구요
2022. 1. 25. 오후 4:45, 생못미 : ㅋㅋㅋ 와 바람의 나라 ㅋㅋㅋㅋ
2022. 1. 25. 오후 4:45, 생각하는오뎅 : 그동안 팀원들이 게더에서 만들어놨던 에셋들이나 방꾸며놓은거 그대로 옮겨지면 좋을텐데, 옮길 땐 저런 것도 억울하겠네요 ㅜ
2022. 1. 25. 오후 4:45, j : 이거 아직..끊김이 은근 있더라구요
2022. 1. 25. 오후 4:45, 유용태 (teo.yu) : ㅋㅋㅋㅋ 그게 락인이자 머물게 만드는 요소지요 ㅋ
2022. 1. 25. 오후 4:46, 생각하는오뎅 : ㅋㅋㅋ
2022. 1. 25. 오후 4:46, j : 아 질문하다가 너무 딴데로 샜네요..
2022. 1. 25. 오후 4:46, 유용태 (teo.yu) : 제패토도 에셋을 팔아서 돈 버는 사람도 심심찮게 나오고
2022. 1. 25. 오후 4:46, j : 그럼 다들 업무 화이팅!!
2022. 1. 25. 오후 4:47, 유용태 (teo.yu) : 좋네요~ 나중에 진짜 해당 분야랑 본인이 지금 배우고 있는 기술 이야기를 접목시켜서 해보고 싶은거 얘기하면 면접때 훨씬 더 좋은 인상을 주실 수 있을 거에요. !!
2022. 1. 25. 오후 4:47, 여의도개발 : 참고해보겠습니다!!
2022. 1. 25. 오후 4:47, 생못미 : 끙 ㅋㅋㅋ 이전 회사 깃헙에서 탈퇴됐네요 ㅋㅋㅋ 내 잔디 ㅠㅠㅠ
2022. 1. 25. 오후 4:47, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 25. 오후 4:49, 프론트준비생 : 좋은말씀 감사합니다! 한번나중에 기획이랑 어떤식으로 만들지 구체적으로 설계해보고 말씀드리겠습니다ㅋㅋ
2022. 1. 25. 오후 4:49, 프론트 : 저는 원래 백엔드 프론트 둘다 어중이 떠중이로 하다가 실무에서 다양한 파트의 사람들과 소통하는 프론트 업무가 좋아서 이쪽으로 완전히 진로를 정했어요! 기획자, 디자이너, 백엔드 와 소통하며 조율하는게 중간다리?역할을 하는거 같아서 좋더라구요
2022. 1. 25. 오후 4:49, 프론트 : 어케보면 만인의 을이긴 하지만 ㅠ ㅠ
2022. 1. 25. 오후 4:50, 유용태 (teo.yu) : ㅋㅋㅋ 그래도 잘하면 슈퍼을이 될 수 있다구요! ㅎ
2022. 1. 25. 오후 4:52, 신난 어피치 : 오 백엔드도 프론트랑 서버랑 중간에서 치이지 않나요 ㅋㅋㅋㅋㅋ꙼̈
2022. 1. 25. 오후 4:54, 여의도개발 : 제가 원하던 룰셋이 스타일린트의 어떤 rule set인지 알 수 있을까요?
찾아봐도 안보여서요..ㅠㅠ
2022. 1. 25. 오후 4:57, 생각하는오뎅 : 그건 저도 정확히는 모르겠네요 ㅜ  
옆팀에서 쓰는거보고 우리도 나중에 도입하자 까지만 했던거여서; ㅋ
2022. 1. 25. 오후 4:57, 여의도개발 : 넵 룰셋있겠죠!ㅎㅎ 좀 살펴봐야겠네욤ㅎㅎ
2022. 1. 25. 오후 5:15, 0_0 : 깃헙에 짧은 코드모음? 같은거 공유할 때 쓰는게 뭐였죠 ? 갑자기 단어가 기억이 안나네요 ㅠㅠ
gitOOO 이었던 것 같은데..
2022. 1. 25. 오후 5:15, 생못미 : gist
2022. 1. 25. 오후 5:15, 0_0 : 아하! 감사합니다 ㅠㅠ
2022. 1. 25. 오후 9:52, 유용태 (teo.yu) : https://velog.io/@byungop/log-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EA%B5%AC%EC%9D%B8%EA%B3%B5%EA%B3%A0%EB%A5%BC-%EC%95%84%EC%B9%B4%EC%9D%B4%EB%B9%99-%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80-%EC%A2%8B%EC%9D%80%EC%A0%90
2022. 1. 25. 오후 11:20, 신난 어피치 : 오와… 이런것도 다 데이터가 될 수 있군요
정리하신 분도 대단
2022. 1. 25. 오후 11:58, Hola : https://www.patterns.dev/
2022. 1. 25. 오후 11:58, Hola : 다양한 디자인 패턴 소개가 잘되어 있는것 같아 링크 남겨봅니다ㅎㅎ
2022. 1. 25. 오후 11:58: 기타치는 튜브님이 들어왔습니다.
2022. 1. 25. 오후 11:58, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 25. 오후 11:58, 유용태 (teo.yu) : 톡게시판 '공지': https://www.patterns.dev/
2022. 1. 25. 오후 11:59, 유용태 (teo.yu) : 안녕하세요 기타치는 튜브님 반갑습니다 :)

2022년 1월 26일 수요일
2022. 1. 26. 오전 12:04, 생각하는오뎅 : 오. 저 링크 좋네요. 전자책도 무료료 되어 있네요.
2022. 1. 26. 오전 12:04, 생못미 : 와우 진짜 깔끔하네요
2022. 1. 26. 오전 12:05, 기타치는 튜브 : asp의 태오님과는 다른분이신거죠?
2022. 1. 26. 오전 12:05, 유용태 (teo.yu) : 네 ^^;;
2022. 1. 26. 오전 12:08, Hola : 네! 좋은 내용들 많은것 같아요ㅎㅎㅎ
2022. 1. 26. 오전 12:11, 음악듣는 어피치 : 퇴근을 이제해서 너무 뒷북이긴한데 저는 프론트가 너무 좋아요. 가끔 힘들긴 하지만 그 힘듦마저 해결했을때 희열감이 느껴지는.. 눈에 보이는게 좋아서 시작했지만 이제는 안보이는 것들도 찾아서 뭔가 빌드업 해나갈 수 있게 만드는 그런 느낌을 받고 있어서 너무 좋아요 프론트
전 뼈론트에여 ㅋㅋㅋㅋ 오늘도 다들 고생 많으셨어요 넘 좋은 얘기들 많이 오간도 같아서 정독하고 자야겠네요 😇🙇🏻‍♀️🙏🏻
2022. 1. 26. 오전 4:30, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 1. 26. 오전 5:07, 화가난다 화가나 그래서 난 화가임 : webGl 공부를 해서 취업이 빠르다 vs webRTC 공부를 해서 취업이 빠르다.
2022. 1. 26. 오전 5:07, 화가난다 화가나 그래서 난 화가임 : 하나만 선택해주세욥!
2022. 1. 26. 오전 6:59, 결과보단 과정을 / React,JS : 취업은 잘 모르지만 저는 주로 three.js를 사용하는데 재미는 있어요 ㅎㅎ 메타버스가 핫하기도 하고
2022. 1. 26. 오전 8:49, 유용태 (teo.yu) : https://mastery.games/post/the-difference-between-width-and-flex-basis/
2022. 1. 26. 오전 8:54, 유용태 (teo.yu) : 미친 사이트 하나 발견했습니다. ㅋㅋ
2022. 1. 26. 오전 8:54, 유용태 (teo.yu) : https://mastery.games/
2022. 1. 26. 오전 8:55, 콘솔 : 게임으로 배우는 css 인가욥ㅋㅋㅋ
2022. 1. 26. 오전 8:56, 유용태 (teo.yu) : 네 flexbox 좀비 해보세요 지금 무료로 풀렸습니다. ㅋ
2022. 1. 26. 오전 8:56, 콘솔 : 오! ㅋㅋㅋ
2022. 1. 26. 오전 8:56, 유용태 (teo.yu) : https://flexboxzombies.com/p/flexbox-zombies
2022. 1. 26. 오전 8:58, 콘솔 : 옼ㅋㅋㅋㅋ 퀄리티 대박이네요 ㅋㅋ
2022. 1. 26. 오전 8:58, 콘솔 : row-reverse 처음써봣네여겜하면섴ㅋㅋㅋㅋ
2022. 1. 26. 오전 8:58, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 26. 오전 9:07, 여의도개발 : ㅎㅎㅎㅎㅎ
2022. 1. 26. 오전 9:11, 화가난다 화가나 그래서 난 화가임 : 신기하군
2022. 1. 26. 오전 9:12, 유용태 (teo.yu) : 지금 이벤트 기간일까요 대부분이 무료네요
2022. 1. 26. 오전 9:12, 유용태 (teo.yu) : 일단 학습효과도 있는데 타이핑을 해서 배우는 것 보다도 그냥 컨셉을 통해서 개념이 매칭되는게 너무 좋네요 ㅋ
2022. 1. 26. 오전 9:12, 화가난다 화가나 그래서 난 화가임 : 그리드는
2022. 1. 26. 오전 9:13, 화가난다 화가나 그래서 난 화가임 : 무료가 아니네용
2022. 1. 26. 오전 9:14, 피카츄돈까스/React,RN : 오 이거 저도 어제 얘기들었는데 ㅋㅋ
2022. 1. 26. 오전 9:14, 피카츄돈까스/React,RN : 아 그리고 테오님 SOLID글 쓰신거 봐써요!!
2022. 1. 26. 오전 9:15, 유용태 (teo.yu) : 감사합니다 :)
2022. 1. 26. 오전 9:15, 신난 어피치 : 오오
2022. 1. 26. 오전 9:15, 신난 어피치 : https://flukeout.github.io
2022. 1. 26. 오전 9:16, 신난 어피치 : 저는 이거 잼께 햇엇슴다
2022. 1. 26. 오전 9:17, 화가난다 화가나 그래서 난 화가임 : flogbox인가? 그것만 알았었는데 되게 많았군요 ㅋㅋ
2022. 1. 26. 오전 9:18, 유용태 (teo.yu) : 톡게시판 '공지': https://flukeout.github.io
2022. 1. 26. 오전 9:18, 화가난다 화가나 그래서 난 화가임 : 이거 좋은 거 같아용
2022. 1. 26. 오전 9:19, 화가난다 화가나 그래서 난 화가임 : 흠.. 너무 고민되네용
2022. 1. 26. 오전 9:19, 화가난다 화가나 그래서 난 화가임 : 당분간, 일정한 시간을 조금 만들어서 webGL 또는 webRTC 둘중에 하나를 공부하고 싶은데용
2022. 1. 26. 오전 9:19, 화가난다 화가나 그래서 난 화가임 : 개인적으로 공부하고 싶은 부분인데, 동시에 취업도 하고 싶은 상황인데
2022. 1. 26. 오전 9:20, 화가난다 화가나 그래서 난 화가임 : 혹시, 어느 쪽을 선택했을 때 취업에 도움이 되는 부분이 더 있을까? 이런 고민이 드네용
2022. 1. 26. 오전 9:23, 훌온텐드 : webgl이 더 좋을것 같아요.  webrtc는 사실 백엔드쪽 공부가 더 많이 필요하다고 생각됩니다. webRtc 사용하는 기업에 들어가는것을 목표로 하는거 아니시라면 webgl 한표요
2022. 1. 26. 오전 9:26, 유용태 (teo.yu) : 두 결이 완전 다른 거라서 ㅋㅋ 가고 싶은 회사나 만들고 싶은 걸로 골라가세요
2022. 1. 26. 오전 9:26, 썰~~ : 회사를 먼저 선택하시는걸 추천드립니다
2022. 1. 26. 오전 9:27, 썰~~ : 원하시는 회사의 서비스에 맞춰서하는게 좋은거같아요
2022. 1. 26. 오전 9:28, 화가난다 화가나 그래서 난 화가임 : 사실 원하는 건 두 개 다 원하는 분야라서 말했어용. 3d쪽 시각이미지를 다뤄보고 싶어서 webgl을 하고 싶었고, 동시에 미디어플랫폼도 해보고 싶어서 webRTC도 하고 싶다는 생각이 들었는뎅
2022. 1. 26. 오전 9:28, 화가난다 화가나 그래서 난 화가임 : 동시에, 취업을 준비하는 여건이기도 하니까, 이 부분도 고려해서 따로 시간을 마련했죠
2022. 1. 26. 오전 9:29, 화가난다 화가나 그래서 난 화가임 : 근데, webRTC는 취준동안 보이는 성과를 낼 수 있는 분야일까? 의아해서 너무 고민이 돼서 물어봤어용 ㅠ
2022. 1. 26. 오전 9:29, 유용태 (teo.yu) : ㅋㅋ 그럼 둘 다 하세요 어차피 회사에서도 깊게 팠을거란 기대안하니
2022. 1. 26. 오전 9:29, 유용태 (teo.yu) : 해봤다는거에 의미를 두되
2022. 1. 26. 오전 9:29, 유용태 (teo.yu) : 검증이 가능한 포폴 하나 정도는 있으면 좋아요
2022. 1. 26. 오전 9:30, 유용태 (teo.yu) : 그냥 해봤다는 사람은 많아서요
2022. 1. 26. 오전 9:30, 유용태 (teo.yu) : webRTC는 개념만 이해하고 외부 라이브러리를 통해서 화상회의 같은 서비스 구축 정도면 충분해요
2022. 1. 26. 오전 9:30, 화가난다 화가나 그래서 난 화가임 : 둘 다용??
2022. 1. 26. 오전 9:31, 유용태 (teo.yu) : 사실 deep하게 하기에는 백엔드 전문가와 함께 해야 하는데 그걸 기대하기는 어렵고
2022. 1. 26. 오전 9:32, 화가난다 화가나 그래서 난 화가임 : webGL 능력을
2022. 1. 26. 오전 9:32, 화가난다 화가나 그래서 난 화가임 : 혹시 현업자입장에서
2022. 1. 26. 오전 9:32, 화가난다 화가나 그래서 난 화가임 : 높게 사는 분야인가요?
2022. 1. 26. 오전 9:33, 유용태 (teo.yu) : 안 해본거 보다 해본거는 당연히 좋죠. 근데 회사에서 webgl이 주력이 아니라면 적당히 튜토리얼 정도 해본 실력만으로는 평가해주기 어려우니까
2022. 1. 26. 오전 9:33, 유용태 (teo.yu) : 회사가 webgl이 주력이냐 아니냐는 좀 중요해요
2022. 1. 26. 오전 9:34, 유용태 (teo.yu) : 제가 글에도 언급했지만 지금 시장에서 제일 많이 필요로 하는 프론트엔드는 백엔드 API연동해서 그릴줄 아는 사람이라
2022. 1. 26. 오전 9:34, 유용태 (teo.yu) : webgl이나 webRTC와 같은 분야를 다루는 회사를 찾기는 굉장히 어려울 겁니다
2022. 1. 26. 오전 9:34, 화가난다 화가나 그래서 난 화가임 : API 연동해서 그릴줄 아는 사람이, 데이터를 웹페이지에 흩뿌린는 역할 맞을까요?
2022. 1. 26. 오전 9:34, 화가난다 화가나 그래서 난 화가임 : 흩뿌리는
2022. 1. 26. 오전 9:35, 유용태 (teo.yu) : 대신 내가 특정 회사가 좋아서 정말 그 회사를 가고 싶은 거라면 그 회사를 타겟으로 한다면 훨씬 진정성이 있어서 그 회사의 확률은 올라가겠죠
2022. 1. 26. 오전 9:36, 유용태 (teo.yu) : 네네 맞아요 그냥 시장 자체가 그쪽 수요가 제일 많아요 제가 좋아하는 바는 아닙니다만...
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 근데
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 프론트엔드를 한다고 하면
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 그 부분은
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 약간 기초소양 같은 거 아닌가요?
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 저는 뭔가
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 그 역할이 프론트엔드의 기본의 역할이라 생각을 하고
2022. 1. 26. 오전 9:36, 화가난다 화가나 그래서 난 화가임 : 여기서 뭔가 덧붙이고 싶다는 생각이 들어서, webGl과 webRTC 중에 하나를
2022. 1. 26. 오전 9:36, 유용태 (teo.yu) : 배우는 입장에서는 그럴 수 있는데 엔터프라이즈 레벨로 가면 그 기초들이 엄~~~~~~~청 많아서
2022. 1. 26. 오전 9:37, 화가난다 화가나 그래서 난 화가임 : 팔까 고민이 돼서용
2022. 1. 26. 오전 9:37, 유용태 (teo.yu) : 덩치 때문에 어려워지는 거거든요
2022. 1. 26. 오전 9:37, 화가난다 화가나 그래서 난 화가임 : 아...
2022. 1. 26. 오전 9:37, 화가난다 화가나 그래서 난 화가임 : 속도
2022. 1. 26. 오전 9:37, 화가난다 화가나 그래서 난 화가임 : 뭔말인지 알겠네용 ㅠ
2022. 1. 26. 오전 9:37, 유용태 (teo.yu) : 그 쉬운 것들이 얽키고 얽키면 기술 부채가 쌓이고 관리하기 어렵고 그렇죠
2022. 1. 26. 오전 9:38, 유용태 (teo.yu) : 프론트엔드가 뭔가 허들이 높은 대단한 기술력을 요한다기 보다 운영이 어려운거에요
2022. 1. 26. 오전 9:38, 화가난다 화가나 그래서 난 화가임 : 아키텍쳐 공부도 많이
2022. 1. 26. 오전 9:38, 화가난다 화가나 그래서 난 화가임 : 해야겠군요
2022. 1. 26. 오전 9:38, 유용태 (teo.yu) : 롤도 따지고 보면 마우스랑 qwer만 하면 되는데 같은 캐릭으로 티어가 다르듯이요
2022. 1. 26. 오전 9:39, 화가난다 화가나 그래서 난 화가임 : 찰떡 비유
2022. 1. 26. 오전 9:39, 화가난다 화가나 그래서 난 화가임 : ㅋㅋ
2022. 1. 26. 오전 9:39, 화가난다 화가나 그래서 난 화가임 : '그 쉬운 것들이 얽키고 얽키면 기술 부채가 쌓이고 관리하기' 이 부분은 꾸준히 많은 시간 들여 공부하고, 시간을 짬내서 'webgl'을 공부해야겠네용.
2022. 1. 26. 오전 9:40, 화가난다 화가나 그래서 난 화가임 : webRTC는 제가 지속적으로 하기 힘들 거 같은 느낌이 나네용
2022. 1. 26. 오전 9:40, 유용태 (teo.yu) : deepdive를 하려면 서버 개발자가 있어야 해서
2022. 1. 26. 오전 9:41, 유용태 (teo.yu) : 보통은 외부에 있는 서비스를 엮어서 화상회의 같은 것을 만들어보는 식으로 까지는 해볼만 하죠
2022. 1. 26. 오전 9:44, 유용태 (teo.yu) : 근데 그 기본의 운영마스터 보다는 확실히 스페셜리스트가 되는게 업무는 더 재밌을거에요 ㅠㅠ TO가 별로 없어서 그렇지 화이팅입니다!!
2022. 1. 26. 오전 9:45, 유용태 (teo.yu) : 저희 회사도 webRTC하지만 webRTC SDK를 만드는 자리는 단 2명이랍니다 ㅋ
2022. 1. 26. 오전 9:48, 화가난다 화가나 그래서 난 화가임 : 하아...
2022. 1. 26. 오전 9:48, 화가난다 화가나 그래서 난 화가임 : 사실 webRTC에 관한 글은 구글링해서 읽었는데요. 제대로 하려면 5~10년이라는 글을 쫌 봐서 덜컥 겁이 났긴 했어용
2022. 1. 26. 오전 9:48, 화가난다 화가나 그래서 난 화가임 : webGL로 가렵니다. 이 분야도 하고싶은 거기 때문엥
2022. 1. 26. 오전 9:49, 화가난다 화가나 그래서 난 화가임 : 취업에 도움도 됐으면 좋겠다는 건 약간의 바람입니다.
2022. 1. 26. 오전 9:49, 유용태 (teo.yu) : 좋아서 해봤다라는 것 만큼 먹히는것도 없어요
2022. 1. 26. 오전 9:49, Hola : 혹시 프레이머로 프론트엔드 & 디자이너 협업 진행하시는분 계실까요?
2022. 1. 26. 오전 9:49, 유용태 (teo.yu) : 응원합니다!!
2022. 1. 26. 오전 9:49, 화가난다 화가나 그래서 난 화가임 : 넹!
2022. 1. 26. 오전 9:51, 유용태 (teo.yu) : 저희는 도입 논의는 있었는데 부결됬습니다
2022. 1. 26. 오전 9:51, Hola : 그렇군요ㅠㅠ 저희도 프레이머의 코드 컴포넌트를 활용하면 interaction까지 시안에 다 담을 수 있다. 라는 이유와, 디자이너 & 개발자 사이의 커뮤니케이션 비용 감소 두가지 측면에서 검토해보기로 했는데요.
2022. 1. 26. 오전 9:52, Hola : 간단하게 poc 해보려하는데 혹시 쓰시는 분들 있으면 조언좀 구할 수 있을까 하여..ㅎㅎ
2022. 1. 26. 오전 10:01, 썰~~ : 홀라님 여기도 계셨네요 ㅋㅋ
2022. 1. 26. 오전 10:01, 썰~~ : 올라!
2022. 1. 26. 오전 10:02, Hola : 엌ㅋㅋ 썰님 안녕하세용ㅎㅎ
2022. 1. 26. 오전 10:02, 썰~~ : 신입 채용이면 그런 특수기술보다는 기본에 더 충실하신분들을 더 좋아할거같긴해요
2022. 1. 26. 오전 10:02, 썰~~ : 신입들은 들어가면 바로 그런 기술로 들어가는 경우는 드물거같아요
2022. 1. 26. 오전 10:03, 화가난다 화가나 그래서 난 화가임 : 아! '기본에 더 충실하신분들을 더 좋아할거같긴해요' 이 부분은 꾸준히하고용!
2022. 1. 26. 오전 10:03, 썰~~ : ㅋㅋㅋㅋ 페이지 꾸준히 홍보중입니다
2022. 1. 26. 오전 10:03, 썰~~ : 주변에 생각보다 프로젝트 하고싶어하는분들이 많더라고요
2022. 1. 26. 오전 10:03, 썰~~ : 그때마다 이런사이트도 있어요 이러면서 ㅋㅋ
2022. 1. 26. 오전 10:03, 화가난다 화가나 그래서 난 화가임 : 시간을 조금 쪼개서 일정하게 할거라고 말한겁니다!!
2022. 1. 26. 오전 10:03, 썰~~ : 넵넵!! ㅎㅎ 관심이 있고 보고있다 정도면 아마 어느 쪽이든 좋게 볼거같긴합니다 ㅎㅎ
2022. 1. 26. 오전 10:04, Hola : 아ㅎㅎㅎ 감사합니다.. 덕분에 트래픽이 꾸준히 늘고 있는것 같아요 ㅎㅅㅎ
2022. 1. 26. 오전 10:04, 화가난다 화가나 그래서 난 화가임 : 넹!!
2022. 1. 26. 오전 10:04, 썰~~ : 화가임님
2022. 1. 26. 오전 10:04, 썰~~ : holaworld.io
2022. 1. 26. 오전 10:04, 꼬북 : 홀라 화이팅!!!
2022. 1. 26. 오전 10:04, 썰~~ : 에서
2022. 1. 26. 오전 10:04, 썰~~ : 사이드 프로젝트 구해보세요 ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 26. 오전 10:04, 웹린이 : 와
2022. 1. 26. 오전 10:04, 썰~~ : 이렇게 홍보해야죠
2022. 1. 26. 오전 10:05, 웹린이 : 기억해뒀다가 사이드 프로젝트 구할때 요긴하게 써보겠습니다 감사해요!
2022. 1. 26. 오전 10:05, 썰~~ : 올라님께서 잘만들어주셔서
2022. 1. 26. 오전 10:05, 썰~~ : 좋은 서비스인거같아서 ㅎㅎ 꾸준히 홍보중입니다
2022. 1. 26. 오전 10:07, Hola : 히히 감삼다 썰님
2022. 1. 26. 오전 10:07, 썰~~ : 저런 서비스 만들어주신 올라님께 감사하죠 ㅎㅎ
2022. 1. 26. 오전 10:16, 신난 어피치 : 와 좋다 저런거
2022. 1. 26. 오전 10:18, 리린이 : 봤는데 너무 잘만드신거같아요 ㅎㅎ
2022. 1. 26. 오전 10:19, 여의도개발 : 좋네요
2022. 1. 26. 오전 10:19, 여의도개발 : css까지 있었음 더 좋을거같아요 ㅎㅎ
2022. 1. 26. 오전 10:20, 유용태 (teo.yu) : ... svelte도 좀 넣어주세요 ㅋ
2022. 1. 26. 오전 10:20, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 26. 오전 10:20, 썰~~ : 스벨트..
2022. 1. 26. 오전 10:21, 유용태 (teo.yu) : 이번 구글 스프린트때도 느꼈지만 이런 사이드를 하게 되면 항상 디자이너도 같이 있었으면 좋겠다 싶더라구요
2022. 1. 26. 오전 10:22, 썰~~ : 아 이번 스프린트 어떻게 되었나요
2022. 1. 26. 오전 10:23, 유용태 (teo.yu) : https://velog.io/@teo/google-sprint-2
2022. 1. 26. 오전 10:23, 썰~~ : 오 기획의정석 책 박선영님꺼 아닌가요
2022. 1. 26. 오전 10:24, 유용태 (teo.yu) : 재밌게 잘 끝났습니다. 회고 글 공유 합니다
2022. 1. 26. 오전 10:24, 유용태 (teo.yu) : 오 맞아요!
2022. 1. 26. 오전 10:24, 썰~~ : 저도 진짜 예전에 봤던거 같은데
2022. 1. 26. 오전 10:24, 썰~~ : 그분 좋아했어서
2022. 1. 26. 오전 10:24, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 26. 오전 10:24, 유용태 (teo.yu) : 내용이 좋더라구요~
2022. 1. 26. 오전 10:24, 썰~~ : 괜히 공모전 그렇게 수상하신게 아닌듯했어요 ㅋㅋ
2022. 1. 26. 오전 10:24, Hola : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ빠르게 넣겠습니다
2022. 1. 26. 오전 10:25, 유용태 (teo.yu) : 감사합니다. 추가했는데 아무도 안하면 저라도 스터디를 한번 개설해보겠습니다. ㅋ
2022. 1. 26. 오전 10:26, 썰~~ : 아직은 패스파인더 링크는 없는건가요
2022. 1. 26. 오전 10:27, 유용태 (teo.yu) : https://teo-sprint2nd-kxb1rduq9-dante01yoon.vercel.app/
2022. 1. 26. 오전 10:27, 프린이 : 와우 이번 스프린트 결과물인가요?
2022. 1. 26. 오전 10:27, 유용태 (teo.yu) : 네~
2022. 1. 26. 오전 10:28, 썰~~ : 와 너무 잘만들어졌네요
2022. 1. 26. 오전 10:28, 썰~~ : 궁금한게 있습니다 그 정보들은 어디서 가져온건지 여쭈어 봐도 될까요
2022. 1. 26. 오전 10:28, 썰~~ : 사진
2022. 1. 26. 오전 10:28, 썰~~ : 이런 정보요
2022. 1. 26. 오전 10:31, 썰~~ : 사진
2022. 1. 26. 오전 10:31, 썰~~ : preact가 스벨트랑 비슷하네요...
2022. 1. 26. 오전 10:32, 유용태 (teo.yu) : 스프린트 담당하셨던 분이 얘기해주시면 좋을텐데 정보는 프로토타입이라서 그럴싸하게만 보이면 좋겠다고 해서 확실한 정보는 아닐거에요
2022. 1. 26. 오전 10:32, 유용태 (teo.yu) : 하지만 출처가 있을지도 모르니 확답 형식으로는 말 못드리겠네요
2022. 1. 26. 오전 10:32, 썰~~ : 아  그런가요 ㅎㅎ
2022. 1. 26. 오전 10:32, 썰~~ : 테오님도 참여하신줄알았어요
2022. 1. 26. 오전 10:32, 썰~~ : 다들 너무 실력자셨네요 ㅠㅠ
2022. 1. 26. 오전 10:32, 유용태 (teo.yu) : 저는 퍼실레이터만 했습니다. ㅎ
2022. 1. 26. 오전 10:33, 여의도개발 : 오오
2022. 1. 26. 오전 10:33, 여의도개발 : 이거 뭐죠 ㅎㅎㅎ
2022. 1. 26. 오전 10:36, Hola : 우왕
2022. 1. 26. 오전 10:36, Hola : 멋져요
2022. 1. 26. 오전 10:37, 여의도개발 : 아 우리회사 없네요 흑흑
2022. 1. 26. 오전 10:37, Hola : 디자이너분도 한분 참여하면 정말 더 좋은 결과물이 나올것 같네요ㅎㅎ
2022. 1. 26. 오전 10:39, 결과보단 과정을 / React,JS : 응원 합니다 ㅎㅎ
2022. 1. 26. 오전 10:39, 진현 : 우와..너무 멋지네요!!!!!
2022. 1. 26. 오전 10:47, 개발닥 : 멋져요
2022. 1. 26. 오전 10:55, 화가난다 화가나 그래서 난 화가임 : 와우..
2022. 1. 26. 오전 10:56, 화가난다 화가나 그래서 난 화가임 : 며칠 걸리신거에용?
2022. 1. 26. 오전 10:58, 썰~~ : 스프린트라서 설계3일 코딩 2일 해서 5일일거같아요
2022. 1. 26. 오전 11:00, 신난 어피치 : 와우
2022. 1. 26. 오전 11:00, 신난 어피치 : ㄹㅇ 스프린트내요
2022. 1. 26. 오전 11:17, 프론트준비생 : 이모티콘 대단
2022. 1. 26. 오전 11:20, 화가난다 화가나 그래서 난 화가임 : 설계는
2022. 1. 26. 오전 11:20, 화가난다 화가나 그래서 난 화가임 : 와이어프레임과 메소드 문서를 작성하는 건가요?
2022. 1. 26. 오전 11:28, 유용태 (teo.yu) : 톡게시판 '공지': https://velog.io/@teo/google-sprint-2
2022. 1. 26. 오전 11:29, 유용태 (teo.yu) : 그정도 까지는 아니었고 요구사항과 기획 그리고 화면을 그리는 정도 선까지 진행을 했었어요
2022. 1. 26. 오후 12:05, 이엘로 : 네 이번에 짧은 기간동안 하는 프로젝트인 만큼 더미데이터를 만들어서 사용했습니다! 
실제 데이터와 차이가 있으니 그냥 이런 거 있으면 어떨까 하시면서 봐주세요
2022. 1. 26. 오후 12:15, Hola : 멋져요! 고생하셨습니다 :)
2022. 1. 26. 오후 12:17, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 26. 오후 12:19, 화가난다 화가나 그래서 난 화가임 : circle-yellow 엘레멘트는 inline-block이고 부모 노드는 li 마크업인데용! width에 %를 하면 부모의 width를 기준으로 설정되는 거로 알고 있습니다! li는 박스모델이니까 가로 길이가 전체 화면이라고 생각을 해서, yellow에 width: 100%를 줬는데 도형이 안나타났습니다. 반면에 100px로 하면 나타나는데요!
2022. 1. 26. 오후 12:19, 화가난다 화가나 그래서 난 화가임 : 혹시, 왜 width: 100%를 하면 안 나타는 지 알 수 있을까용?
2022. 1. 26. 오후 12:21, 피카츄돈까스/React,RN : https://github.com/n-riesco/ijavascript
짜즈안!!! 
quokka는 돈내거 써야 하는데! 쥬피터노트북에서 자스를!!
2022. 1. 26. 오후 12:22, 프린이 : inline-block은 컨텐츠 너비만큼의 영역이 잡혀 고정 width가 먹지 않습니다
2022. 1. 26. 오후 12:23, 유용태 (teo.yu) : 톡게시판 '공지': https://github.com/n-riesco/ijavascript
짜즈안!!! 
quokka는 돈내거 써야 하는데! 쥬피터노트북에서 자스를!!
2022. 1. 26. 오후 12:27, 화가난다 화가나 그래서 난 화가임 : 아.. 탄식했네용 순간 ㅋㅋㅋ. 알려주셔서 감사합니다! 이참에 유튜브로 max-width나 봐야겠네용 밥먹는겸
2022. 1. 26. 오후 12:27, 화가난다 화가나 그래서 난 화가임 : 감사해욥~
2022. 1. 26. 오후 12:55, j : 다들 점심 맛나게 드셨나요?!
2022. 1. 26. 오후 12:56, j : duck typing 보다가 혹시 제가 이해한게 맞나 해서 여쭤보려는데
2022. 1. 26. 오후 12:56, j : 변수의 형태를 기준으로 타입을 판단
→ 비교하는 변수나 타입의 하위의 구조에 같은 내용에 교집합이 있을 경우 같은 타입으로 판단
2022. 1. 26. 오후 12:56, j : 현재는 이렇게 이해하고 나중에 다시 보려고 합니다. 제가 이해한 것이 맞나 해서요
2022. 1. 26. 오후 12:57, 유용태 (teo.yu) : 네 맞아요
2022. 1. 26. 오후 12:57, j : 오..어제 테오님이 설명 잘해주셔서 그래도 이렇게 이해하고 넘어가네요ㅠㅠ
2022. 1. 26. 오후 1:05, j : 음..요새 공부하는걸 필기로 하다가 이제 노션이나 블로그로 정리하려는데
2022. 1. 26. 오후 1:05, j : 노션에 정리하다가 나중에 블로그로 가도 되겠죠..?
2022. 1. 26. 오후 1:06, 유용태 (teo.yu) : 음... 저는 바로 블로그로 올리시길 추천합니다.
2022. 1. 26. 오후 1:06, 유용태 (teo.yu) : 누구에게 보여주겠다고 하면 글의 퀄리티가 좀 달라져요
2022. 1. 26. 오후 1:07, 유용태 (teo.yu) : ... 저도 예전에는 안 했다가 지금 와서 재미붙이고 있는건데 글 쓰는걸 좀 미리 해둘걸 하는 후회가 있어서
2022. 1. 26. 오후 1:08, j : 흠..
2022. 1. 26. 오후 1:08, 유용태 (teo.yu) : 아무튼 누구에게 설명을 하듯이 글을 써보고 보여주는 것은 좋다고 생각해요
2022. 1. 26. 오후 1:08, Hola : 저도 블로그에 올리시는거를 추천해요!
2022. 1. 26. 오후 1:08, j : velog를 다시 부활시킬 때가 왔군요..
2022. 1. 26. 오후 1:09, j : 기본적인 내용은 혼자 정리하고, 그 뒤에 한번 정리 다시 하면서 복습겸 써볼까 했거든요..
2022. 1. 26. 오후 1:09, Hola : 다른 분들이 보실 수도 있다고 생각하면 조금 더 매끄럽게 정리하게 되기도 하고, 잘 몰랐던 부분은 찾아보고 적게 되어서 좋더라구요
2022. 1. 26. 오후 1:09, j : 오 감사합니다!!
2022. 1. 26. 오후 1:09, 유용태 (teo.yu) : 클로바노트 추천합니다. ㅎ 먼저 말로 녹음 해보시고 글로 옮겨보시면 좋아요
2022. 1. 26. 오후 1:10, 유용태 (teo.yu) : https://clovanote.naver.com/
2022. 1. 26. 오후 1:10, j : 아 네이버에서 개발한거!
2022. 1. 26. 오후 1:10, j : 회의하면서 쓰기 좋다고들 하던데
2022. 1. 26. 오후 1:11, j : 감사합니다 테오님!!
2022. 1. 26. 오후 1:11, j : 저걸로 면접 연습해도 좋겠네요!
2022. 1. 26. 오후 1:12, 유용태 (teo.yu) : 맞아요 본인이 하는말 많이 들어보면 많이 성장(?) 하는 것 같아요. ㅋ
2022. 1. 26. 오후 1:12, 유용태 (teo.yu) : 가끔 못 들어줄때가 있어서^^;;
2022. 1. 26. 오후 1:12, j : 얼마전 면접보고
2022. 1. 26. 오후 1:12, j : 그 생각 했스비다
2022. 1. 26. 오후 1:12, j : ...
2022. 1. 26. 오후 1:17, Vintz : 오..점심 먹구 커피 사왔는데 스프린트 2기 글이 뙇! 잘 보겠습니다 ㅎㅎㅎ
2022. 1. 26. 오후 1:17, 유용태 (teo.yu) : 벨로그가 이미지 확대 기능이 없어서 아쉬운데
2022. 1. 26. 오후 1:18, 유용태 (teo.yu) : 자체 확대해서 깨알같은 내부 포스트 잇을 하나씩 읽어보시면 더 재밌을거에요!
2022. 1. 26. 오후 1:18, j : 감사합니다 다들~~
2022. 1. 26. 오후 1:18, j : 면접 질문 정리하면서 하나씩 다시 정리해야겠네요
2022. 1. 26. 오후 1:19, Vintz : 알겠습니다 ㅎㅎㅎ 감사합니다 :)
2022. 1. 26. 오후 1:23, Vintz : '모르면 모른다고 해라 아는 사람은 모르는 사람이 있으면 더 행복해한다' 이거 완전 좋네여 ㅎㅎㅎ
2022. 1. 26. 오후 1:24, Vintz : 저도 제가 아는 내용인데 모른다고 하면 신나서 대답하는데 ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 26. 오후 1:25, j : 앜ㅋㅋㅋ저 여기 질문 많이 할게요..
2022. 1. 26. 오후 1:25, j : 다들 신나게 알려주세요!
2022. 1. 26. 오후 1:25, 유용태 (teo.yu) : 톡게시판 '공지': '모르면 모른다고 해라 아는 사람은 모르는 사람이 있으면 더 행복해한다' 이거 완전 좋네여 ㅎㅎㅎ
2022. 1. 26. 오후 1:27, j : 아 근데 진짜 ..뭔가 이것저것 얕게라도 공부했던게 지금 도움은 되는거 같긴하네요.. 타입 보는데 아 이거 여기서 이렇게 썼었지 생각하면서 후루룩 넘거가게 되고
2022. 1. 26. 오후 1:40, 어피치 : 이직 하게 되었는데 오퍼 협상 메일을 보내는 방법을 모르겠어서 너무 어렵네요..
2022. 1. 26. 오후 1:41, Vintz : 맞아요 ㅎㅎ 자바 공부했던 게 TS 공부에 도움이 될 줄이야..둘을 비교해보면서 공부하니까 더 재밌기도 했구요.
2022. 1. 26. 오후 1:42, Vintz : 글 잘봤습니다!! ㅎㅎ 이번에는 회고글이 없을까요?? 회고글 보는 재미도 쏠쏠했는데
2022. 1. 26. 오후 1:45, 유용태 (teo.yu) : 📢 스프린트 참가자분들 회고글 써주시면 읽으러 갈게요! 수고하셨습니다! ㅎ
2022. 1. 26. 오후 1:45, 유용태 (teo.yu) : 강요 아닙니다 ㅋ
2022. 1. 26. 오후 1:46, 이엘로 : 네네 ㅋㅋㅋㅋㅋ
2022. 1. 26. 오후 1:47, 웹린이 : 혹시 프론트엔드 쪽 기술에 대한 질문이 아니라 면접, 취준에 대한 질문 좀 여쭤봐도 될까요??? ㅠㅠ
2022. 1. 26. 오후 1:48, 유용태 (teo.yu) : 그럼요!
2022. 1. 26. 오후 1:48, 유용태 (teo.yu) : 톡게시판 '공지': 혹시 프론트엔드 쪽 기술에 대한 질문이 아니라 면접, 취준에 대한 질문 좀 여쭤봐도 될까요??? ㅠㅠ
2022. 1. 26. 오후 1:48, 웹린이 : 면접을 보고나서 현재 다른곳 진행중인데 있냐고 물어보시는 경우들이 종종 있었는데
2022. 1. 26. 오후 1:49, 웹린이 : 여태 솔직하게 기업이름, 진행사항 다 말씀드렸었는데 문제있을까요?
2022. 1. 26. 오후 1:49, 웹린이 : ㅠㅠ
2022. 1. 26. 오후 1:49, 유용태 (teo.yu) : 전혀요 ㅋ
2022. 1. 26. 오후 1:49, Hardy : 저도 말씀 드리고
2022. 1. 26. 오후 1:49, Hardy : 오퍼도 공개합니다 ㅋㅋ
2022. 1. 26. 오후 1:49, 유용태 (teo.yu) : 대부분은 정말 호기심(?)으로 물어보는 겁니다
2022. 1. 26. 오후 1:50, 웹린이 : 아하 감사합니다 ㅎㅎ
2022. 1. 26. 오후 1:51, 웹린이 : 괜히 불안에 떨었네요😅
2022. 1. 26. 오후 1:52, 유용태 (teo.yu) : 그리고 다른 회사에 넣었다고 하면 우리도 불안합니다.. '아... 안 오면 어떡하지??'
2022. 1. 26. 오후 1:52, 개발닥 : 좋은 시그널입니다
2022. 1. 26. 오후 1:52, j : 그거 물어보는건
2022. 1. 26. 오후 1:53, j : 우리 너 뽑고 싶은데
2022. 1. 26. 오후 1:53, j : 너 한테 언제까지 연락줘야 너가 결정을 내릴 수 있니??
2022. 1. 26. 오후 1:53, j : 이런 느낌이니까 너무 걱정마세요
2022. 1. 26. 오후 1:53, 개발닥 : 저도요 경험상 그랬어요
2022. 1. 26. 오후 1:53, j : 기업 이름까진 아니더라도 지금 몇군데서 연락 왔고
2022. 1. 26. 오후 1:53, j : 이런 상태다 이떄까지 확답 주시면 될 거 같습니다
2022. 1. 26. 오후 1:53, j : 하면 서로 깔끔합니다~
2022. 1. 26. 오후 1:54, 웹린이 : 아하.. 다들 답변 너무 감사드립니다!!
2022. 1. 26. 오후 1:54, Hardy : 그걸 이상하게 생각한다면 오히려 지원자가 피해야할 것 같습니다 ㅋㅋㅋ
2022. 1. 26. 오후 1:55, j : 네네 맞아요!
2022. 1. 26. 오후 1:55, 개발닥 : 제 경험이지만 전 마무리가 저렇게 끝난 면접은 대부분 최종합이였어요
2022. 1. 26. 오후 1:57, 웹린이 : 아하..!
2022. 1. 26. 오후 1:58, 웹린이 : 그럼 맘편히 기다려보겠습니다ㅎㅎ
2022. 1. 26. 오후 1:59, 웹린이 : 감사합니다🙇‍♂️
2022. 1. 26. 오후 2:01, Hardy : 언제까지 연락 주신댔는대 그 날짜가 지나서도 연락이 안오면 탈락으로 간주해도 될까요?
2022. 1. 26. 오후 2:01, 유용태 (teo.yu) : 꼭 그렇지는 않습니다. 면접 담당자랑 인사 담당자가 다른 경우가 많아서
2022. 1. 26. 오후 2:01, 유용태 (teo.yu) : 모종의 지연은 얼마든지 있을 수 있어요
2022. 1. 26. 오후 2:02, 유용태 (teo.yu) : 버뜨.. 마음의 평화를 위해서 미련은 버리시는것은 추천합니다
2022. 1. 26. 오후 2:02, Hardy : 되게 잘 봤다고 생각한 면접이였는데 연락이 안와서 시무룩하고 있었습니다 ㅋㅋ
2022. 1. 26. 오후 2:02, Hardy : 연봉을 너무 높게 불렀나...
2022. 1. 26. 오후 2:07: 김록원님이 들어왔습니다.
2022. 1. 26. 오후 2:07, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 26. 오후 2:07, 유용태 (teo.yu) : 안녕하세요 김록원님 반갑습니다 :)
2022. 1. 26. 오후 2:07, 김록원 : 안녕하세요 김록원입니다 :D
2022. 1. 26. 오후 2:08, 유용태 (teo.yu) : 어서오세요 :) 여기는 개발 얘기, 궁금한 얘기, 좋은 정보, 자랑글 등을 공유해보는 공간입니다. ㅎ
2022. 1. 26. 오후 2:08, 유용태 (teo.yu) : 편하게 지켜보시고 궁금한게 있을때 글 남겨주시면 언제든 답변 드리고 있어요.  :)
2022. 1. 26. 오후 2:11, 프론트준비생 : ㅣ요새허리가 아파서그런데 혹시다들 의자어떤거쓰세요?
2022. 1. 26. 오후 2:11, Hardy : 저는 시디즈 사용해요
2022. 1. 26. 오후 2:11, 꼬북 : 허먼밀러쓰고싶습니다
2022. 1. 26. 오후 2:11, Hardy : 허먼밀러 좋나요?
2022. 1. 26. 오후 2:12, Hardy : 시디즈는 불편한 감이 좀 있긴한데
2022. 1. 26. 오후 2:12, 꼬북 : 당근마켓에서 듀오백사용중입니다
2022. 1. 26. 오후 2:12, 꼬북 : 당근마켓에서 구매해서
2022. 1. 26. 오후 2:12, 쑥스럽게 인사하는 프로도 : 비싼게 좋긴 좋더라구요..
2022. 1. 26. 오후 2:12, Vintz : 에어론 제 꿈의 의자입니다 ㅠ
2022. 1. 26. 오후 2:13, 꼬북 : 저도요 ㅋㅋㅋㅋㅋㅋ
2022. 1. 26. 오후 2:13, Vintz : 결국엔 에어론으로 간다고해서 모아서 한번에 사려고합니다..ㅎㅎ
2022. 1. 26. 오후 2:13, 꼬북 : 그 앉자마자 허르가즘 느낀다고...
2022. 1. 26. 오후 2:14, Vintz : ㅋㅋㅋㅋㅋ 저도 빠른 시일내에 구매해서 느껴보고싶네요 ㅠㅠ
2022. 1. 26. 오후 2:15, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 26. 오후 2:15, 생각하는오뎅 : 허먼밀러 몸과 의자가 일체가 되는 느낌입니다!
2022. 1. 26. 오후 2:15, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 26. 오후 2:15, 유용태 (teo.yu) : 톡게시판 '공지': https://docs.google.com/forms/d/e/1FAIpQLSdOHV4aO4AO6AwYYKQZ6KogwDxADC1lYN2Rsu__IbgCV3gJsQ/viewform
2022. 1. 26. 오후 2:15, 리린이 : 장인은 도구를 탓하지 않는다고 하지만 전 장인이 아니니까 허먼밀러 쓸래요.. 라고 와이프한테 얘기하고싶다
2022. 1. 26. 오후 2:15, 알파카 : ㄴㅇㅂ 입사하면 주지않나요
2022. 1. 26. 오후 2:16, 알파카 : 허먼밀러
2022. 1. 26. 오후 2:16, 유용태 (teo.yu) : 저희 스프린트 2기 팀에서 보내준 설문조사입니다.  다들 한번씩만 참여해주세요 :) 감사합니다!

https://docs.google.com/forms/d/e/1FAIpQLSdOHV4aO4AO6AwYYKQZ6KogwDxADC1lYN2Rsu__IbgCV3gJsQ/viewform
2022. 1. 26. 오후 2:44, 여의도개발 : 설문 완료우
2022. 1. 26. 오후 4:35, 부탁하는 무지 : 사진
2022. 1. 26. 오후 4:35, 부탁하는 무지 : 안녕하세요. 
혹시 setState로 저장하기전에 값은 이렇게 잘 뜨는데, setState로 저장한 state값을 console에 찍어보면
2022. 1. 26. 오후 4:36, 부탁하는 무지 : 사진
2022. 1. 26. 오후 4:36, 부탁하는 무지 : 24가 아닌 0이 저장되는데 혹시 이유를 알 수 있을까요?ㅠㅠㅠ
2022. 1. 26. 오후 4:43, 엉망장자 : 코드가 같이 있으면 좋을것 같아요
2022. 1. 26. 오후 4:43, 부탁하는 네오 : 계속해서 0이 저장되는건가요? 
아니면 해당 함수 블록에서 0이 찍히고 
컴포넌트가 state 변경으로 리렌더 됐을떄 다시 찍히는건지 알면 좋을것 같아요
2022. 1. 26. 오후 4:48, 부탁하는 네오 : state는 컴포넌트가 호출될 당시의 값을 계속 유지하는걸로 알고 있습니다. 
리렌더 되서 다시 변경된 스테이트로 컴포넌트가 호출되기 전까지 
 + 여기서는 상관없는 내용이지만 setState는 비동기로 동작하는걸로 알고 있어요
2022. 1. 26. 오후 4:49, j : 이 말이 맞습니다.
2022. 1. 26. 오후 4:50, j : setState는 비동기로 동작하기 때문에 해당 값이 변경이 되었다고 하더라도 바로 적용이 되지 않아요. 리렌더를 통해 변경된 값을 출력해주어야 합니다.
2022. 1. 26. 오후 4:52, 부탁하는 무지 : 아 넵 감사합니다.
setState 비동기에 관련한건 이해하고 있습니다!
제 질문을 코드랑 같이 올리겠습니다!
2022. 1. 26. 오후 4:52, 부탁하는 무지 : 사진
2022. 1. 26. 오후 4:53, 부탁하는 무지 : 위에 코드는
2022. 1. 26. 오후 4:53, 부탁하는 무지 : 사진
2022. 1. 26. 오후 4:54, 부탁하는 무지 : 이렇게 출력이 되고요!
2022. 1. 26. 오후 4:54, 부탁하는 무지 : 아래 코드는
2022. 1. 26. 오후 4:54, 부탁하는 무지 : 사진
2022. 1. 26. 오후 4:54, 부탁하는 무지 : 이렇게 제가 의도한대로 잘 출력이 됩니다.. 혹시 이유를 알 수 있을까요..? 잘 모르겠네요…
2022. 1. 26. 오후 5:00, 결과보단 과정을 / React,JS : 아래 코드에서 console.log 위치는 위에 코드랑 동일한가요?
2022. 1. 26. 오후 5:02, 결과보단 과정을 / React,JS : 혹시 if(getItem !== null)을 삭제하고 해도 동일한가요?
2022. 1. 26. 오후 5:04, 부탁하는 무지 : 넵 console.log 스코프 밖에서 찍었습니다!
2022. 1. 26. 오후 5:04, 부탁하는 무지 : 잠시만요!
2022. 1. 26. 오후 5:07, 부탁하는 무지 : 네 getItem !== null을 삭제해도 따로 let data라는 변수를 안만들면 똑같이 발생하네요…ㅠㅠ
2022. 1. 26. 오후 5:10, 결과보단 과정을 / React,JS : 오.. 신기하네요.. 이런 경우는 저는 처음 봅니다 ;;
2022. 1. 26. 오후 5:10, 결과보단 과정을 / React,JS : 고수님들이 도와주셔야 할꺼 같은데요
2022. 1. 26. 오후 5:13, 훌온텐드 : prev => {
	retrun ~~
}

요안에 넣는건 실행시점이 달라요 바깥 스코프랑 그래서 달라질수 있어요.
2022. 1. 26. 오후 5:13, 훌온텐드 : date 생성 시점이 달라요
2022. 1. 26. 오후 5:15, 훌온텐드 : setState의 인자로 실행되는 함수의 실행시점이 setState가 불려지는 시점과는 다릅니다.
2022. 1. 26. 오후 5:21, 유용태 (teo.yu) : 훌온텐드님 말이 맞습니다. 일단 

1) setText가 비동기임은 아시고 계시니까 1번 코드에서는 setText가 비록 while 안에 있더라도 동기 코드인 while문의 평가가 끝나고서야 setText의 함수가 실행이 됩니다. 그러니 이미 startOfMonth값이 0이 된 상태에서 만드는 거라 0이 찍히는 거구요
2022. 1. 26. 오후 5:21, 결과보단 과정을 / React,JS : 아하
2022. 1. 26. 오후 5:21, 결과보단 과정을 / React,JS : 이해가 되네요
2022. 1. 26. 오후 5:22, 부탁하는 무지 : 헐…
2022. 1. 26. 오후 5:22, 유용태 (teo.yu) : 2번째 코드는 let data가 startOfMonth가 0이 아닐때 생성을 하게 되므로 메모리에 보관이 되게 되어 있습니다. while 문 블록안에 let이 선언되어 있으므로 data는 항상 새로운 값을 만들고 있게 되요. 그래서 setText가 비동기로 나중에 호출이 되었지만 그전에 만들어둔 클로저를 통해서 그때 생성된 값이 전달이 되게 됩니다.
2022. 1. 26. 오후 5:22, Luke : 코드를 직접 보여드리려고 짜는 동안에 답변이 달렸네요
2022. 1. 26. 오후 5:22, Luke : 사진
2022. 1. 26. 오후 5:23, Luke : 이렇습니다
2022. 1. 26. 오후 5:23, 부탁하는 무지 : 정말 감사드립니다. 계속해서 이유를 못찾고 있었는데 속이 뻥 뚫리네요
2022. 1. 26. 오후 5:23, Hardy : useState 비동기에 관한 아티클 찾고 있었는데 답변이 달렸군요 ㅎㅎ
2022. 1. 26. 오후 5:23, 유용태 (teo.yu) : 오 실행 순서를 확실하게 보실 수 있네요!
2022. 1. 26. 오후 5:23, 유용태 (teo.yu) : 훈훈...
2022. 1. 26. 오후 5:24, 부탁하는 무지 : 집가는중인데 도착하자마자 복습해야겠어요..정말 상세하게 답변 주셔서 정말 감사드립니다.
2022. 1. 26. 오후 5:24, Hardy : 이럴 때 마다 링크 수집 해둬야겠단 생각이 드는데 막상 안하네요 ㅋㅋㅋ
2022. 1. 26. 오후 5:24, 파이버 : 보다가 생각난건데 리액트할 때 let 많이 사용하시나요?
2022. 1. 26. 오후 5:25, 유용태 (teo.yu) : 질문 언제든 환영합니다. 보이시죠? 질문을 대답해주고 싶은 사람들이 많아요. ㅋㅋ
2022. 1. 26. 오후 5:25, 부탁하는 무지 : 아뇨! const 사용하려고 노력하지만 달마다 일수가 달라서 let을 사용했습니다!
2022. 1. 26. 오후 5:27, 부탁하는 무지 : 넵 감사합니다. 방장님ㅎㅎㅎ
2022. 1. 26. 오후 5:27, 파이버 : 아아 개인적으로 저런 사례 때문에 저도 let을 절대 안 쓰려고 하는데, 찾아보면 의외로 let 쓰지 말라는 글이나 의견이 딱히 없더라고요.. 그래서 저만의 생각인가 싶어서 여쭤봤습니다 :)
2022. 1. 26. 오후 5:28: 옥수수 수염차님이 들어왔습니다.
2022. 1. 26. 오후 5:28, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 26. 오후 5:28, 유용태 (teo.yu) : Redux가 유형하면서 순수함수와 불변성 아젠다가 유행이 되면서 const를 좀 강제하는 문화가 생겼습니다. let이 나쁘다기보다는 let을 안쓰면 불변셩을 챙기기 좋거든요
2022. 1. 26. 오후 5:29, 유용태 (teo.yu) : 안녕하세요 옥수수 수염차님 반갑습니다 :) 어서오세요~ ㅎ
2022. 1. 26. 오후 5:29, 옥수수 수염차 : 안녕하세요 👋
2022. 1. 26. 오후 5:30, 유용태 (teo.yu) : 반갑습니다. 여기는 개발 얘기 하면서 궁금한 것들 서로 묻고 답하고 좋은 거 공유하는 그런 곳입니다. 뭐든 편하게 질문해주세요 :)
2022. 1. 26. 오후 5:31, 옥수수 수염차 : 넵, 👍
2022. 1. 26. 오후 5:35: 춘식이님이 들어왔습니다.
2022. 1. 26. 오후 5:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 26. 오후 5:35, 유용태 (teo.yu) : 안녕하세요 춘식이님 반갑습니다 :)
2022. 1. 26. 오후 5:36, 춘식이 : 이모티콘 안녕하세요!
2022. 1. 26. 오후 5:36: 베르캄프님이 들어왔습니다.
2022. 1. 26. 오후 5:36, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 26. 오후 5:36, 베르캄프 : 안녕하세요 :)
반갑습니당
2022. 1. 26. 오후 5:36, 유용태 (teo.yu) : 안녕하세요 베르캄프님~ 반갑습니다
2022. 1. 26. 오후 5:36, 유용태 (teo.yu) : 다들 와주셔서 감사합니다
2022. 1. 26. 오후 5:37, Hardy : 곧 200명 되겠네요
2022. 1. 26. 오후 5:37, 유용태 (teo.yu) : 여기는 개발 얘기나 업무 얘기 취업 얘기 등 편하게 궁금한거 물어보고 서로 답해주고 그런 공간입니다. 편하게 말씀 남겨주세요~
2022. 1. 26. 오후 5:40, 신나는 프로도 : JS 학습중에 질문 있습니다! 이론에 대한 개념 학습하고 실제로 코드로 구현하거나 이론을 적용하려는데 어려움이 있네요…! 개인적인 생각으로 문제, 예제들을 많이 풀어보면 될것같은데 

혹시 JS 관련 예제 참고할만한 사이트 있을까요??
2022. 1. 26. 오후 5:43, 부탁하는 무지 : https://ko.javascript.info/
2022. 1. 26. 오후 5:43, 부탁하는 무지 : 여기 모든 섹션 맨 밑에 각 예제들이나 과제가 있습니다.
2022. 1. 26. 오후 5:44, 유용태 (teo.yu) : 톡게시판 '공지': https://ko.javascript.info/
2022. 1. 26. 오후 5:44, 비옷입은 튜브 : 오 ㅎㅎ 저도 이 예제로 공부했었오요
2022. 1. 26. 오후 5:44, 부탁하는 무지 : 이미 아신다면…어쩔 수 없겠지만 모르시면 섹션 정독 추천 드려요!
2022. 1. 26. 오후 5:46, 프론트준비생 : 모든자바스크립트 개념 관련자료중 제일좋은거같습니다..
2022. 1. 26. 오후 5:58, 신나는 프로도 : 감사드립니다~~~ : )
2022. 1. 26. 오후 6:23, Luke : useCallback의 사용과 관련해서 궁금한 점이 있습니다. 일단 코드는 리플잇으로 첨부해두었습니다. 첨부한 코드를 실행해보면 soccer, basketball이 출력되는 Input 두개가 보일겁니다. 여기서 soccer를 다른 값으로 변경한 뒤 basketball을 변경하면 첫번째 input이 다시 soccer로 출력됩니다. 하지만 basketball을 바꾼 뒤 soccer를 출력하면 basketball은 그대로 남아있습니다. 

여기서 궁금한 점은 아래와 같습니다. useCallback hook이 메모이제이션된 함수를 리턴한다는 것은 이해했는데요, 그건 스코프 내부에 있는 값들도 모두 유지된다는 의미일 거구요… 그런데 favorite값이 변경될 때 재생성되게 되니까 dep arr에 favorite만 넘겨줘도 잘 동작해야 할 것 같은데 아니더라구요. (물론 favorites 배열 자체를 넘겨주거나 함수 전체를 dep arr에 넣어주면 잘 동작합니다)

함수 전체가 메모이제이션되어있기 때문에 위와 같은 현상이 벌어지는 거라면, 어째서 첫번째 input은 값이 되돌아가는데 두번째 Input은 잘 변경된 채로 있는 걸까요? 

긴 질문 죄송합니다 ㅠㅠ 

https://replit.com/@LuKeLOok/InbornGigaMolecule#src/App.tsx
2022. 1. 26. 오후 6:29, 유용태 (teo.yu) : 오오~ 찬찬히 좀 보고 답변 드릴게요 ㅎ
2022. 1. 26. 오후 6:55, 결과보단 과정을 / React,JS : debounce의 경우 useCallback을 사용할 경우,
React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.(react-hooks/exhausted-deps) 이러한 에러가 생긴다고 합니다. 
공유해주신 예제 코드를 직접 테스트 해봤는데 soccer input도, basketball이 수정 될때, soccer로 변경되지 않는 경우가 발생합니다.
useCallback 대신 useMemo를 사용하라는 안내가 있습니다.

https://dmitripavlutin.com/react-throttle-debounce/
2022. 1. 26. 오후 7:01, Luke : useCallback 쪽의 문제라기보단 debounce와의 조합에서 생긴 문제로군요..!! 어제 하루종일 고민하다가 물어봤는데 의문이 해결됐습니다! 🥺 정말 감사합니다
2022. 1. 26. 오후 7:04, 결과보단 과정을 / React,JS : 네. 그런듯 보입니다. 해결되서 다행입니다. 저도 또 하나 배워가네요. 저 역시 감사드립니다. ㅎㅎ
2022. 1. 26. 오후 7:04, Luke : @결과보단 과정을 / React,JS 혹시 첨부해주신 링크와 제 궁금증을 포함해서 블로그에 포스팅해도 괜찮을까요??
2022. 1. 26. 오후 7:05, 결과보단 과정을 / React,JS : 그럼요. 얼마든지 하셔도 되죠 ;;
2022. 1. 26. 오후 7:14, 0_0 : 음..근데 이 경우엔 deps도 잘못되지 않았나요?
2022. 1. 26. 오후 7:15, 생각하는오뎅 : debounce 보다는 useCallback 문제가 맞을 것 같아요. debounce 빼고, 해도 문제는 똑같이 발생하고
useCallback만 뺴시면 문제는 발생하지 않습니다.
2022. 1. 26. 오후 7:15, 생각하는오뎅 : 저도 시간날 떄 다시 봐야겠네요 ㅜ
2022. 1. 26. 오후 7:17, 0_0 : const handleUpdateFavorite = useMemo(
    () =>
      _.debounce((value) => {
        handleEditFavorite(idx, value);
      }, 500),
    [idx, handleEditFavorite]
  );
이게 원하시는 동작 아닌가용?
2022. 1. 26. 오후 7:20, 결과보단 과정을 / React,JS : 오뎅님 말씀이 맞아요. debounce와 useCallback을 같이 사용 했을 경우, useCallback이 문제가 발생하니, useMemo를 사용하라는 내용이예요.
2022. 1. 26. 오후 7:27, 웹린이 : 삭제된 메시지입니다. 
2022. 1. 26. 오후 7:28, 웹린이 : 삭제된 메시지입니다. 
2022. 1. 26. 오후 7:28, 웹린이 : Favorite컴포넌트의 handleUpdateFavorite에서 handleEditFavorite를 사용하고 있는데 deps에 빠져있어서 변경된 favorite를 받는 Favorite 컴포넌트가 아닌 다른 Favorite 컴포넌트는 메모이제이션된 handleUpdateFavorite를 그대로 사용할텐데 그럼 handleEditFavorite의 const updatedFavorites = [...person.favorites]; 부분에서 이전 person 상태를 참조하고 있어서 그런 것 같아요!
2022. 1. 26. 오후 7:30, 웹린이 : deps에 handleEditFavorite을 넣어주거나
 const updatedFavorites = [...person.favorites];
    updatedFavorites.splice(idx, 1, value);
    setPerson({ ...person, favorites: updatedFavorites });

이 부분을 

setPerson((person) => {
 const updatedFavorites = [...person.favorites];
    updatedFavorites.splice(idx, 1, value);
   return ({ ...person, favorites: updatedFavorites });
});
2022. 1. 26. 오후 7:30, 웹린이 : 요런식으로 바꾸면 잘 돌아갈 것 같습니다..?
2022. 1. 26. 오후 7:30: 영보떼님이 나갔습니다.
2022. 1. 26. 오후 7:32, 웹린이 : 수정해서 확인했는데 debounce 써도 잘 되네요!
2022. 1. 26. 오후 7:36, 웹린이 : 헐 답장을 원질문자분이 아니라
2022. 1. 26. 오후 7:36, 웹린이 : 다른분께 했네요 죄송합니다 ㅠㅠ
2022. 1. 26. 오후 7:37, 웹린이 : Luke님께 걸었어야했는데 결과보단 과정을님 죄송합니다 ㅠㅠ
2022. 1. 26. 오후 7:40, 결과보단 과정을 / React,JS : 아닙니다… ㅎㅎㅎ
2022. 1. 26. 오후 7:42: 영보떼님이 들어왔습니다.
2022. 1. 26. 오후 7:42, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 26. 오후 7:42, 영보떼 : 안농하세요
2022. 1. 26. 오후 7:42, 영보떼 : 카톡 다시 만드러서 다시 들어왔어용
2022. 1. 26. 오후 7:43, 유용태 (teo.yu) : +_+bb 환영합니다~
2022. 1. 26. 오후 7:45, Luke : 그렇네요..! 변경되지 않은 Favorite 컴포넌트 내부의 useCallback함수 내부 스코프가 이전 person 값을 참조하게 되는 것도 문제가 됐겠습니다. 여러모로 문제가 발생할 소지가 많은 위험한 구조였네요…ㅋㅋㅋㅋ
2022. 1. 26. 오후 7:46, 유용태 (teo.yu) : 저도 이부분에 +1 드립닏
2022. 1. 26. 오후 7:46, 유용태 (teo.yu) : 드립니다
2022. 1. 26. 오후 7:47, 웹린이 : 👍👍👍👍👍
2022. 1. 26. 오후 7:48, Luke : 말씀해주신 부분들 모두모두 감사합니다! 예쁘게 정리해서 올리고 공유할게요 +_+
2022. 1. 26. 오후 7:50, 결과보단 과정을 / React,JS : 요즘 이 톡방에서 알아가는게 참 많습니다 ㅎㅎ 조금씩이지만 지식이 늘어나는거 같아서 너무 행복하고 즐겁네요 ㅎㅎ
2022. 1. 26. 오후 7:50, 웹린이 : 저도요a
2022. 1. 26. 오후 7:51, 웹린이 : 진작 들어오지 못해서 아쉽네요 ㅋㅋㅋ
2022. 1. 26. 오후 7:51, 웹린이 : 1:1 오픈톡인줄 알구...
2022. 1. 26. 오후 7:51, 웹린이 : 😅
2022. 1. 26. 오후 8:30, 프론트준비생 : 저궁금한게있는데요 공부하보니 dom의 역활을 요새는 리액트같은 프레임워크가 대신해주는걸로 알고있습니다.. 만약에 리액트같은 프레임워크가 dom의 역활을 해주는게 맞다면 바닐라자바스크립트로 Dom을 다루는방법을 아는건 왜중요한가요?
2022. 1. 26. 오후 8:33, 썰~~ : 기본이니까요
2022. 1. 26. 오후 8:33, 엉망장자 : 결국에는 그게 근본이기 때문일까요?,, 
프레임워크라는것 자체도 언제 대체될지 모르잖아요
2022. 1. 26. 오후 8:33, 썰~~ : 결국에 리액트도 자바스크립트라서요
2022. 1. 26. 오후 8:34, 엉망장자 : 기본을 알고있는 사람이 새로운 학습도 쉬울거라 생각합니다
2022. 1. 26. 오후 8:53, 유용태 (teo.yu) : React가 DOM 의 모든 것을 해주지는 않으니까 언젠가는 바닐라로 DOM을 다뤄야 할때가 와요 ㅎ
2022. 1. 26. 오후 8:53, 프론트준비생 : 아 그러네요
2022. 1. 26. 오후 8:56, 이엘로 : https://velog.io/@hielo/6%EC%9D%BC%EA%B0%84%EC%9D%98-%EC%97%AC%EC%A0%95-%EB%8F%8C%EC%95%84%EB%B3%B4%EA%B8%B0-%EA%B5%AC%EA%B8%80-%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8

구글 스프린트 2기 회고 작성했습니다!
2022. 1. 26. 오후 8:56, 유용태 (teo.yu) : 톡게시판 '공지': https://velog.io/@hielo/6%EC%9D%BC%EA%B0%84%EC%9D%98-%EC%97%AC%EC%A0%95-%EB%8F%8C%EC%95%84%EB%B3%B4%EA%B8%B0-%EA%B5%AC%EA%B8%80-%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8

구글 스프린트 2기 회고 작성했습니다!
2022. 1. 26. 오후 9:04, 프린이 : 글 너무 좋네요!
2022. 1. 26. 오후 9:08, Vintz : 헐 엘로님이 그 분이셨구나..!!! 개발 입문기 쓰신분!!
2022. 1. 26. 오후 9:08, 이엘로 : 네..!! 어떻게 아시죠 감사합니다..
2022. 1. 26. 오후 9:09, Vintz : ㅋㅋㅋㅋㅋㅋㅋ 글 봤었어요 신기하네요~!!
2022. 1. 26. 오후 9:09, Hardy : 저도 보고 놀란 글인데 주인공이셨다니 ㅋㅋㅋ 신기하네요
2022. 1. 26. 오후 9:11, 웹린이 : 와 글 엄청 잘 쓰셨네요
2022. 1. 26. 오후 9:11, 웹린이 : 재미있게 읽었습니다!
2022. 1. 26. 오후 9:11, 이엘로 : 모두들 감사합니다…💖💖
2022. 1. 26. 오후 9:11, 해달 : 와! 저도 그 글 정독하고 너무 대단하다생각하고 바로 하트눌렀었는데 당사자분이셨군요..!
2022. 1. 26. 오후 9:13, 웹린이 : 1기 회고 읽고도 기회가 있다면 참여해보고 싶다는 생각이 들었었는데...
2022. 1. 26. 오후 9:13, 웹린이 : 2기 회고를 읽으니 더 해보고 싶어지네요 ㅋㅋㅋ
2022. 1. 26. 오후 9:13, 웹린이 : 너무 재미있을 것 같아요!
2022. 1. 26. 오후 9:13, 웹린이 : 이모티콘 
2022. 1. 26. 오후 9:18, 유용태 (teo.yu) : 아직 기약은 없지만 당장은 설 연휴라 힘들것 같고 설 이후 적당한 시기에 한번 공지 해보겠습니다 :)
2022. 1. 26. 오후 9:43, 리끼룽 : 방장님 좋은 회사 다니셨군요ㄷㄷ
역시 좋은 회사 좋은 개발자
2022. 1. 26. 오후 9:56, 프론트준비생 : 이모티콘 본좌십니다. .
2022. 1. 26. 오후 9:59, 유용태 (teo.yu) : 환상금지 올려치기 금지입니다ㅠㅠ 블로그에 정제된 글만 보고 판단하지 말아주세요~ 개발자는 다 똑같이 마감에 코드 막 짜고 기술 부채있고 이슈 밀려있고 그렇습니다 ㅋㅋ
2022. 1. 26. 오후 11:43, 유지남 : 인간미도 있으시네요. 진정한 본좌십니다.
2022. 1. 26. 오후 11:55, 유지남 : 간만에 들어와서 내용을 하나씩 훓고 있었는데, 보다보니 아이디어 하나가 있어서 태오님께 제안 드려봐요~

위에 코드들이 포함되어 있는 질문들이 있는데, codesandbox, codepen 과 같은 공간 하나를 만들어서 질문과 해결을 모아보면 어떨까요?

요약: 웹에서 코드를 실행 할 수 있는 공간을 만들어 공유하자~

2022년 1월 27일 목요일
2022. 1. 27. 오전 6:27: 준영님이 나갔습니다.
2022. 1. 27. 오전 8:27, 유용태 (teo.yu) : https://brunch.co.kr/@codestates/4
2022. 1. 27. 오전 8:34, 비옷입은 튜브 : 항상 좋은 글 공유해주셔서 감사합니다 ㅎㅎ
2022. 1. 27. 오전 9:29, 여의도개발 : scroll, client, scroll 삼형제 width, height들이 햇갈렸는데 요기 정리 잘되어있네욤
https://ko.javascript.info/size-and-scroll#ref-789
2022. 1. 27. 오전 9:29, 유용태 (teo.yu) : 톡게시판 '공지': scroll, client, scroll 삼형제 width, height들이 햇갈렸는데 요기 정리 잘되어있네욤
https://ko.javascript.info/size-and-scroll#ref-789
2022. 1. 27. 오전 9:32, 여의도개발 : scroll, client, scroll 삼형제 -> offset, client, scroll 삼형제 입니닷
2022. 1. 27. 오전 9:34, 시무룩한 튜브 : 아 이거 항상 헷갈리는데 감사합니다
2022. 1. 27. 오전 9:36, 떨고있는 어피치 : 감사합니당ㅎㅎㅎ
어제 오늘 제가 딱 하고있는 부분입니다 !
2022. 1. 27. 오전 9:36, 시무룩한 튜브 : 저도 ㅎㅎ
2022. 1. 27. 오전 10:04, 유용태 (teo.yu) : 제안을 주신거 확인해봤는데 상용은 생각보다 비싸군요 ㅠㅠ 취지는 공감했기에 뭔가 저렴한(?) 현실적인 좋은 방법을 한번 고민해볼게요 제안 감사드립니다!
2022. 1. 27. 오전 10:10, 피카츄돈까스/React,RN : 방 프로젝트로 오픈소스로 만들어보는! ㅋㅋㅋㅋㅋ하지만 클라우드 서버는 써야겠군요 ..흡..
2022. 1. 27. 오후 1:25, j : 경력직은..자기소개 어떻게 해야하나요,,?
2022. 1. 27. 오후 1:37, 썰~~ : 앞구르기 두번하시고
2022. 1. 27. 오후 1:37, 썰~~ : 만세 삼창한다음에
2022. 1. 27. 오후 1:38, 썰~~ : 나는 프론트엔드다!
2022. 1. 27. 오후 1:38, 프론트준비생 : 다들맛점하세요
2022. 1. 27. 오후 1:38, j : 오...
2022. 1. 27. 오후 1:38, j : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 1:38, 리린이 : …ㅋㅋㅋ
2022. 1. 27. 오후 1:39, 옥수수 수염차 : 합격
2022. 1. 27. 오후 1:39, 리린이 : 다음 면접 때 참고하겠습니다
2022. 1. 27. 오후 1:39, j : 저도 참고하겠습니다..
2022. 1. 27. 오후 1:39, j : 뭔가 신입떄 처럼 자기소개를 하자니 경력이니까 뭘 더 강조해야하나 해서요
2022. 1. 27. 오후 1:39, 리린이 : 그대로 뒤구르기 해서 나가시면 될듯
2022. 1. 27. 오후 1:39, j : 신입떄는 내 가치관과 포부에 집중했다면
2022. 1. 27. 오후 1:40, 썰~~ : 내가 한것과 내가 할수있는거
2022. 1. 27. 오후 1:40, 썰~~ : 에 집중하시면됩니다
2022. 1. 27. 오후 1:40, j : 경력일 땐 내가 이러한 기술이 있다에 초점을 맞추는게 낫겠지 싶어서요
2022. 1. 27. 오후 1:40, j : ㅠㅠ
2022. 1. 27. 오후 1:40, 썰~~ : 수치적으로 보여주면 더 좋고
2022. 1. 27. 오후 1:40, j : 내가 한 것과 내가 할 수 있는거..
2022. 1. 27. 오후 1:40, j : 음..수치로는 못보여주고..
2022. 1. 27. 오후 1:40, j : 사이트로 보세여..
2022. 1. 27. 오후 1:40, j : 할라구요
2022. 1. 27. 오후 1:53, 스타트업개발자 : 회사에서 했떤 프로젝트 위주로 어떤 기술을 사용했고,,, 회사 경력 위주로 자기 소개하시면 됩니다
2022. 1. 27. 오후 2:21, 쑥스럽게 인사하는 프로도 : 안녕하세요 이번에 정보처리기사 시험을 보려고 하는데 책 추천을 받고 싶어 여쭤봅니다... 시나공/수제비/이기적 이렇게 세개가 유명한 것 같은데 정처기 시험보신 선생님들 계시다면 어떤 책으로 공부하셨는지 궁금합니다!
2022. 1. 27. 오후 2:22, 개발닥 : 시나공이여
2022. 1. 27. 오후 2:22, 썰~~ : 삭제된 메시지입니다. 
2022. 1. 27. 오후 2:24, 썰~~ : 여기가 아니었네
2022. 1. 27. 오후 2:24, 썰~~ : 죄송합니다
2022. 1. 27. 오후 2:24, 쑥스럽게 인사하는 프로도 : 앗 덕분에 바꿨습니다 ㅎㅎ; 감사합니다
2022. 1. 27. 오후 2:24, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 2:24, 유용태 (teo.yu) : 어떻게 배신을 당했나요? ㅋ
2022. 1. 27. 오후 2:26, j : 와..TS에서 this 보다가 멘탈 바스락바스락 거리네여..
2022. 1. 27. 오후 2:26, 쑥스럽게 인사하는 프로도 : 구글이 만들었고 밀어주니 앵귤러가 잘 나갈줄 알고... 무작정 앵귤러부터 공부했었습니다...ㅎㅎ 이직시장에서 앵귤러는 인기가 정말 없더라구요.....
2022. 1. 27. 오후 2:26, 쑥스럽게 인사하는 프로도 : 감사합니당
2022. 1. 27. 오후 2:26, 개발닥 : 저도 업무상 앵귤러 쓰는데
2022. 1. 27. 오후 2:26, 썰~~ : this 저 거의 안씁니다..
2022. 1. 27. 오후 2:27, 개발닥 : 이직 힘드나여..?
2022. 1. 27. 오후 2:27, 썰~~ : 아니에요.. 여기가 아니라서 ㅠㅠ 제가 다른곳에서 써야될걸..
2022. 1. 27. 오후 2:27, Hardy : 2년차까지 공고 보는데 앵귤러는 확실히 손에 꼽아요
2022. 1. 27. 오후 2:27, Hardy : 별로 없더라고요
2022. 1. 27. 오후 2:28, 쑥스럽게 인사하는 프로도 : 아무래도 리액트가 대세다보니 잘 안뽑더라구요...ㅎㅎ 면접만 갔다 하면 엥(또는 와) 앵귤러 쓰셨어요???? 하시고...
2022. 1. 27. 오후 2:28, 썰~~ : 앵귤러 다운순는 뷰만하긴 한거같아요
2022. 1. 27. 오후 2:28, 썰~~ : 사진
2022. 1. 27. 오후 2:28, 유용태 (teo.yu) : ㅋㅋㅋㅋ 엥(또는 와)
2022. 1. 27. 오후 2:28, Hardy : ㅋㅋㅋㅋ
2022. 1. 27. 오후 2:29, 썰~~ : 일단 저건 우리나라 기준이 아니라서 좀 우리나라실정이랑 오차가있겠지만
2022. 1. 27. 오후 2:29, 썰~~ : npm trends 기준으로는
2022. 1. 27. 오후 2:29, 개발닥 : 저거보다 더 높을거에요
2022. 1. 27. 오후 2:29, 썰~~ : ㅠㅠ
2022. 1. 27. 오후 2:29, 개발닥 : 앵귤러는 보통 엔터프라이즈에서 쓰고.. 엔터프라이즈는 private npm 써서 안잡히는곳이 많아요
2022. 1. 27. 오후 2:30, 쑥스럽게 인사하는 프로도 : 사진
2022. 1. 27. 오후 2:30, 썰~~ : 관심도 일거에요 ㅎㅎ
2022. 1. 27. 오후 2:30, 썰~~ : 스벨트 관심도는 많이 높아졌어요
2022. 1. 27. 오후 2:30, 개발닥 : 앵귤러 8위 ㅋㅋ
2022. 1. 27. 오후 2:30, 쑥스럽게 인사하는 프로도 : 앗 관심도네요 다시 가져오겠습니다 ㅎㅎㅎ
2022. 1. 27. 오후 2:30, 개발닥 : Ember 바로 위 ㅋㅋ..
2022. 1. 27. 오후 2:30, 유용태 (teo.yu) : ㅋㅋㅋ 근데 러닝커브는 높은데 높은 이점이 별로 없으니
2022. 1. 27. 오후 2:30, 유용태 (teo.yu) : 설계가 잘못되었다고 봐요
2022. 1. 27. 오후 2:31, 유용태 (teo.yu) : 게다가 클래스 기반이 자바스크립트와 잘 어울리는 것도 아니고
2022. 1. 27. 오후 2:31, 개발닥 : 설계..
2022. 1. 27. 오후 2:31, 유용태 (teo.yu) : React가 class기반에서 함수형으로 넘어간것은 진짜 잘한거라고 봐요
2022. 1. 27. 오후 2:31, 개발닥 : 철학 자체는 진짜 마음에 들어요
2022. 1. 27. 오후 2:31, 개발닥 : DI랑 Directive가 엄청 좋은데 모듈 시스템이 좀..
2022. 1. 27. 오후 2:31, 쑥스럽게 인사하는 프로도 : 사진
2022. 1. 27. 오후 2:32, 진현 : 혹시 여러분들은  this 많이 쓰시나요??? 꼭 써야할때가 있다고 하는데 깊이 알아둬야 할까요???..!
2022. 1. 27. 오후 2:32, 개발닥 : 엄청많이쓰죠~
2022. 1. 27. 오후 2:32, 개발닥 : (앵귤러쓰면 ㅋ)
2022. 1. 27. 오후 2:32, 엉망장자 : 아 ㅋㅋㅋㅋ
2022. 1. 27. 오후 2:32, 유용태 (teo.yu) : class 기반으로 개발하면 this를 안 쓸 수가 없구요
2022. 1. 27. 오후 2:32, 유용태 (teo.yu) : 함수형 위주로 하신다면 this는 쓰지 말아야 합니다
2022. 1. 27. 오후 2:33, j : 전 아직 class 에서 벗어나질 못해서..
2022. 1. 27. 오후 2:33, j : this에서 못벗어나는중입니다..
2022. 1. 27. 오후 2:33, 진현 : 헉 그렇군요!!!
2022. 1. 27. 오후 2:33, j : 아..js 보다가 간만에 oop 보니까 개념 충돌 어마무시하네요
2022. 1. 27. 오후 2:33, 유용태 (teo.yu) : 좋다 나쁘다의 문제는 아니라고 봐요. 애초에 자바스크립트가 둘 다 쓸 수 있게 만들어진 언어라서
2022. 1. 27. 오후 2:34, j : 이게 this 개념도 중요한데 () => {} 익명함수도 생각해서 왜 걔네들이 이렇게 동작하는가..그건 알고 있어햐 하더라구요..
2022. 1. 27. 오후 2:34, j : 모르면 코드짜고나서 이거 왜 동작 이렇게 하지 하는 경우 많이봐서..
2022. 1. 27. 오후 2:36, 엉망장자 : custom hook 기본적인 질문이라 부끄러운데 한번 해보겠습니다...

일단 컴포넌트를 작성할 때 필요한 데이터를 따로 custom hook으로 작성하여 분리한 상황이라고 생각해주세요.

만약 컴포넌트가 마운트됨과 동시에 바로 데이터를 받아와야 되는 곳에서는 가장 상단에 훅을 불러오면 된다는 것은 이해가 됩니다.
(ex. 네이버 홈페이지)

반면에 같은 데이터를 불러오는 것이지만
1. 버튼만 로딩
2. 버튼클릭
3. 데이터 불러오기
4. 3번 데이터들 렌더링

과 같은 컴포넌트를 만든다면 onClick과 같은 prop에 들어가야 해서 hook 규칙이 깨지게 될텐데 이런 경우에는 작성했던 hook이 아니라 다른 함수를 만들어야 하는건가요?
2022. 1. 27. 오후 2:40, 유용태 (teo.yu) : const [data, fetch] = usehook(props)

const 불러오기 = () => fetch(params)

return <>
  ...
  <MyButton onClick={불러오기}>Fetch</MyButton>
</>
2022. 1. 27. 오후 2:40, 유용태 (teo.yu) : 저라면 이렇게 하지 않을까 싶네요
2022. 1. 27. 오후 2:43, 썰~~ : 오 저는 저기에 isLoading도 추가할거같습니다
2022. 1. 27. 오후 2:44, 엉망장자 : 아하!... 
fetch 함수를 hook에서 가져와서 쓰되 상태는 첫번째 경우와 똑같이 hook의 data로 관리되는거군요
2022. 1. 27. 오후 2:45, 파이버 : 이제 거기다가 isFetching isError error isRefetching 이런거 추가하다 보면
2022. 1. 27. 오후 2:45, 파이버 : 자연스럽게 react-query 로..
2022. 1. 27. 오후 2:45, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 27. 오후 2:45, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 2:45, 썰~~ : 비밀인데요
2022. 1. 27. 오후 2:45, 엉망장자 : ㅋㅋㅋㅋㅋㅋㅋ아
2022. 1. 27. 오후 2:45, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 2:45, 썰~~ : 영입하기위한 비밀이었는데
2022. 1. 27. 오후 2:46, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 2:46, 파이버 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 2:46, 유용태 (teo.yu) : 그래서 많이들 넘어가시는거 같아요 react-query로
2022. 1. 27. 오후 2:46, 엉망장자 : 자연스럽게 영업되버렸네요
2022. 1. 27. 오후 2:46, 엉망장자 : 그래서 쓰는구나
2022. 1. 27. 오후 2:46, 유용태 (teo.yu) : 하다보니 이거 필요하지 않아? 이런식으로..
2022. 1. 27. 오후 2:46, 썰~~ : 안전하게도 잘되어있어!
2022. 1. 27. 오후 2:46, 유용태 (teo.yu) : 캐시도 되네?
2022. 1. 27. 오후 2:46, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 2:46, 유용태 (teo.yu) : window onFocus 이후 auto fetch도 되잖아! 세상에
2022. 1. 27. 오후 2:47, 썰~~ : 이게 디폴트값이라 좀 애먹긴했는데
2022. 1. 27. 오후 2:47, 썰~~ : 지금은 잘쓰고 있습니다 ㅋㅋ
2022. 1. 27. 오후 2:47, 유용태 (teo.yu) : 아 저장하고 나서 목록 새로고침 돌리는거 까먹어서 짜증났었는데... 오!
2022. 1. 27. 오후 2:47, 유용태 (teo.yu) : 라던가.. ㅋ
2022. 1. 27. 오후 2:48, 엉망장자 : 확실히 유행하는 것들이 다 이유가 있네요. 감사합니다 다들 ㅎㅎ
2022. 1. 27. 오후 3:04, 피카츄돈까스/React,RN : 와 저도 이거좀 퍼가도 되나여 ㅋㅋ
2022. 1. 27. 오후 3:04, 피카츄돈까스/React,RN : 아? 요거 따로 만드신건가요!?
2022. 1. 27. 오후 3:05, 쑥스럽게 인사하는 프로도 : 네넵!! 출처는 여기이고 https://2020.stateofjs.com/en-US/
지금 2021년 트렌드 서베이도 진행중이여서 트렌드 같은 것도 파악하기 좋아요 저는 모르는게 태반이지만요...ㅎㅎ >>  https://stateofjs.com/
2022. 1. 27. 오후 3:19, 엉망장자 : 혹시 이런 상태를 쉽게 쓰기 위해서 usehook 내부에서 react-query를 사용한다고 이해하면 될까요?
2022. 1. 27. 오후 3:19, 피카츄돈까스/React,RN : 캄사합니다
2022. 1. 27. 오후 3:33, 썰~~ : react query에서 애초에 그런 훅을 제공해줍니다 ㅎㅎ
2022. 1. 27. 오후 3:36, 엉망장자 : 아하 제가 공부해봐야겠네요 감사합니다 ㅜㅜ
2022. 1. 27. 오후 3:47, 스타트업개발자 : 사진
2022. 1. 27. 오후 3:47, 스타트업개발자 : react scss 를 사용해서 개발중인데 궁금한게 각 변수의 값에 따라서 className 을 추가하는 경우에는 이렇게 하는 방법 말고는 없을까요?
2022. 1. 27. 오후 3:52, 파이버 : 근데 useHook 내부에서 react-query 를 사용하는 것도 권장되는 거 같아요 최근에 알았는데
2022. 1. 27. 오후 3:53, 파이버 : tkdodo 라고 react-query 컨트리뷰터고 공식문서에서 인정한 사람 있는데 useQuery 는 커스텀 훅 안에서 부르라고 글 쓰셨더라고요 태서린슬리가 fantastic 이라고 댓글 달았고

https://tkdodo.eu/blog/practical-react-query#create-custom-hooks
2022. 1. 27. 오후 3:55: 양손 엄지척 무지님이 들어왔습니다.
2022. 1. 27. 오후 3:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 27. 오후 3:55, 웹린이 : useUserdata = () => useQuert('userdata', fetcher) 이런식으로 한번 감싸서 쓰면
2022. 1. 27. 오후 3:55, 유용태 (teo.yu) : 안녕하세요 양손 엄지척 무지님~ 반갑습니다 :)
2022. 1. 27. 오후 3:55, 웹린이 : 고칠일 있을 때 편하더라구요!
2022. 1. 27. 오후 3:55, 유용태 (teo.yu) : 맞아요 그게 권장하는 방법이에요
2022. 1. 27. 오후 3:55, 유용태 (teo.yu) : 외부에서는 그냥 데이터만 가져오는 식으로 만들고
2022. 1. 27. 오후 3:56, 유용태 (teo.yu) : 그래야 나중에 react-query가 아니라 mock으로 연결해서 확인하기도 편하고 그렇죠
2022. 1. 27. 오후 3:57, 생못미 : 맞아요 이 블로그 시리즈 정리 너무 잘 되어 있어요 👍
2022. 1. 27. 오후 3:58, 생못미 : ㅋㅋㅋ 댓글에 한국 개발자 분들도 많이 계시더라고요
2022. 1. 27. 오후 3:58, 엉망장자 : 오.. 한번 정독해보겠습니다.
2022. 1. 27. 오후 4:05, 유용태 (teo.yu) : 톡게시판 '공지': tkdodo 라고 react-query 컨트리뷰터고 공식문서에서 인정한 사람 있는데 useQuery 는 커스텀 훅 안에서 부르라고 글 쓰셨더라고요 태서린슬리가 fantastic 이라고 댓글 달았고

https://tkdodo.eu/blog/practical-react-query#create-custom-hooks
2022. 1. 27. 오후 4:05, 웹린이 : 와 저는 유지보수 편한거나 가독성, 일관성있게 쓸 수 있는 것 정도만 생각났는데 테스트시에도 이점이 있군요😳
테스트랑 안친해서 상상도 못한 ㅠㅠ
2022. 1. 27. 오후 4:06, 웹린이 : 감사합니다!
2022. 1. 27. 오후 4:07, 양손 엄지척 무지 : 안녕하세요 테오님 !

벨로그 글 유익하게 잘 보고 있습니다 😊
좋은 글 올려주셔서 감사합니다 ~!!
2022. 1. 27. 오후 4:08, 유용태 (teo.yu) : 감사합니다 :) 혹시 특별히 좋아하는 관심사나 주제 있으시면 알려주세요! 열심히 적어 보도록 하겠습니다~
2022. 1. 27. 오후 4:17, Hardy : https://www.youtube.com/watch?v=9AUEfGZslmw
2022. 1. 27. 오후 4:17, Hardy : 이런걸 하네요?
2022. 1. 27. 오후 4:17, 유용태 (teo.yu) : 톡게시판 '공지': https://www.youtube.com/watch?v=9AUEfGZslmw
2022. 1. 27. 오후 4:18, 유용태 (teo.yu) : 오오! 쉽지 않을텐데 궁금하네요
2022. 1. 27. 오후 4:18, Hardy : 유튜브 알고리즘에 떠있었습니다 ㅋㅋ
2022. 1. 27. 오후 4:18, 꼬북 : 시각적요소 테스트자동화 재밌겠네요 ㅎㅎ
2022. 1. 27. 오후 4:18, 꼬북 : 역시 알고리즘까지 교과서 하디 ㅋㅋ
2022. 1. 27. 오후 4:18, 유용태 (teo.yu) : 저희 팀 내부에서도 설왕설래 하는 부분입니다. 프론트 테스트가 의미가 있나?
2022. 1. 27. 오후 4:19, 유용태 (teo.yu) : 분명이 이론상 그리고 경험상 필요한데
2022. 1. 27. 오후 4:19, 유용태 (teo.yu) : *분명히
2022. 1. 27. 오후 4:20, 유용태 (teo.yu) : 그정도의 효용체감을 느낄만한 테스트를 작성하는 비용이 너무 비싸서 되려 비효율을 야기하지 않나 정도가 중론인데
2022. 1. 27. 오후 4:20, 유용태 (teo.yu) : 그래서 방법을 찾아야 한다! 각자 찾게 되면 꼭 공유하자
2022. 1. 27. 오후 4:20, 유용태 (teo.yu) : 이정도로 논의 해본 적이 있어서 상당히 궁금하네요!
2022. 1. 27. 오후 4:23, 개발닥 : 테오님은 어떻게 생각하시나여?
2022. 1. 27. 오후 4:24, 유용태 (teo.yu) : 제 생각도 동일합니다. 테스트는 확실히 필요한것은 맞는데 현존하는 유닛 테스트 건 e2e 테스트건 프론트엔드와 궁합은 별로 좋지 않은 것 같다
2022. 1. 27. 오후 4:25, 유용태 (teo.yu) : Jest와 같은 류는 대부분 Node 기반으로 이루어져 있다보니 테스트를 작성하면서 개발을 한다는 TDD를 쓰기에도 브라우저 개발하고는 좀 맞지 않는 측면이 있구요 (콘솔이나 화면 구성에 불리함)
2022. 1. 27. 오후 4:26, 유용태 (teo.yu) : 그리고 REST API를 주축으로 서버와의 통신 이후 벌어지는 비동기로 엮이는 종속성들이 가장 큰 이슈인데 이걸 테스트 하기 위해서는 mock를 범벅해야 하는데 테스트의 신뢰도 문제가 있고
2022. 1. 27. 오후 4:26, 유용태 (teo.yu) : 정작 이러한 테스트들이 UI 이슈를 검증해 주지 못한다는 문제가 있어서
2022. 1. 27. 오후 4:27, 유용태 (teo.yu) : 실제 현장에서 느끼는 필요성을 충족시켜주는 테스트 도구나 TDD 개발 방법이 아직은 킬러도구가 프론트엔드에는 없다라는 생각입니다
2022. 1. 27. 오후 4:30, 웹린이 : 메시지들을 읽다가 제가 최근에 재미있게 읽었던 글이 생각나서
2022. 1. 27. 오후 4:30, 웹린이 : https://jbee.io/react/testing-0-react-testing-intro/
2022. 1. 27. 오후 4:30, 웹린이 : 들고 왔습니다!
2022. 1. 27. 오후 4:30, 유용태 (teo.yu) : 톡게시판 '공지': https://jbee.io/react/testing-0-react-testing-intro/
2022. 1. 27. 오후 4:31, 0_0 : 시각적요소 테스트면, percy 같은 툴 쓰는거려나요...
2022. 1. 27. 오후 4:34, 유용태 (teo.yu) : 사진
2022. 1. 27. 오후 4:34, 썰~~ : 그래서 하나씩 도입하려고 저도 스토리북을 보고는 있습니다
2022. 1. 27. 오후 4:36, 유용태 (teo.yu) : 프론트엔드 테스팅의 딜레마가 여기서 시작하는데 

1) 무엇을 테스트 해야 하는가? -> 동작과 부수효과

=> 부수효과는 이론적으로 테스트가 불가능함.
=> mock 데이터가 필수적으로 필요함.
=> mock 데이터를 테스트하는것을 신뢰 할 수 있나요?

1) 무엇을 테스트 하지 않을 것인가?
- 컴포넌트들이 제대로 합성되는가
- 컴포넌트들이 화면에 제대로 렌더링 되는가
- 컴포넌트에 어떠한 동작을 했을 때, 무엇인가 트리거가 되는가

=> 실제로 QA분들이 제일 많이 테스트를 하고 유의미하게 보고 계시는 것들.. (클릭했을때 펼접이 잘되나 데이터는 잘 보이나.. 잘리는 것은 없나...)
2022. 1. 27. 오후 4:37, 개발닥 : 프론트는 대부분 비동기라 더 어려운것 같아요
2022. 1. 27. 오후 4:38, 유용태 (teo.yu) : 테스트 무용론자는 절대 아닙니다! 제 올해 방법을 찾고 싶은 것들이라 꼭 만족할만한 방향성을 찾아보고 싶어요.

1) 서버의 의존성 없이 개발하기
2) 프론트엔드에서 TDD 하기
2022. 1. 27. 오후 4:39, 비옷입은 튜브 : 저는 이 모듈을 예전 프로젝트에 사용해서 백엔드 병목없이 개발할 수 있었습니다.

https://mswjs.io/
2022. 1. 27. 오후 4:39, 유용태 (teo.yu) : 맞아요 요새 많이들 쓰시더라구요
2022. 1. 27. 오후 4:39, 개발닥 : 전 테스트에 부정적이에요
2022. 1. 27. 오후 4:40, 유용태 (teo.yu) : 공감할수있습니다. ㅋㅋ
2022. 1. 27. 오후 4:40, 개발닥 : 목업구축하면, 나중에 서버 리스폰스 변경되면 목업 데이터도 싹다 갈아엎어야 하는데..
2022. 1. 27. 오후 4:40, 유용태 (teo.yu) : 톡게시판 '공지': 저는 이 모듈을 예전 프로젝트에 사용해서 백엔드 병목없이 개발할 수 있었습니다.

https://mswjs.io/
2022. 1. 27. 오후 4:40, 개발닥 : 이게 결국 의미가 있나 싶더라구요
2022. 1. 27. 오후 4:40, 유용태 (teo.yu) : 그러니까요!
2022. 1. 27. 오후 4:40, 비옷입은 튜브 : 슬퍼요 ..ㅠ
2022. 1. 27. 오후 4:41, 유용태 (teo.yu) : 전통적인 테스트 방법이 아니라 프론트엔드에 맞는 도구나 언젠가 갑자기 '짠~' 하고 나타날겁니다
2022. 1. 27. 오후 4:41, 프린이 : 짜짠
2022. 1. 27. 오후 4:41, 개발닥 : 또 프론트는 테스트하기 까다로운 상황이 너무 많아서… ( 모바일로만 접속 가능한 부분은 어떻게 테스트를 구축할것인가? )
2022. 1. 27. 오후 4:41, 유용태 (teo.yu) : 가*
2022. 1. 27. 오후 4:41, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 1. 27. 오후 4:41, 유용태 (teo.yu) : 이메일과 연동하는 테스트라던가
2022. 1. 27. 오후 4:42, 유용태 (teo.yu) : 특정 사람에게만 발생하는 재현환경이라던가ㅋ
2022. 1. 27. 오후 4:42, 개발닥 : ㅋㅋ 맞아요
2022. 1. 27. 오후 4:42, 프린이 : 상황 재현이 확실히 쉽지않겠네요 ㅋㅋㅋ
2022. 1. 27. 오후 4:42, 개발닥 : 테스트 코드는 갤럭시 s5를 지원하지 않ㅅ급니다
2022. 1. 27. 오후 4:42, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 27. 오후 4:42, 웹린이 : 와 갤5 ㄷㄷㄷㄷ
2022. 1. 27. 오후 4:43, 유용태 (teo.yu) : 진자 특정 단말이나 컴퓨터에서만 재현되는 이슈는 미쳐요. 재현율 100%면 괜찮은데 그것마저 아닐때
2022. 1. 27. 오후 4:43, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 1. 27. 오후 4:44, j : 저희는 데이터 목업 구성 자체가 일이라서 안하게 되더라구요..
2022. 1. 27. 오후 4:44, 유용태 (teo.yu) : 맞습니다!
2022. 1. 27. 오후 4:44, 유용태 (teo.yu) : https://netflix.github.io/pollyjs/#/
2022. 1. 27. 오후 4:44, j : 도메인이 특별해서 데이터셋 자체가 복잡도가 올라가면 그 목업데이터 만드는게 일이라..
2022. 1. 27. 오후 4:45, 유용태 (teo.yu) : 제가 아직 파보지는 않아서 개념만 좀 본건데
2022. 1. 27. 오후 4:45, 유용태 (teo.yu) : 일단 여기에서 말하길 이 라이브러리를 이용하면 실제 서버에서 테스트를 하는 내용을 녹화해서 보관한 다음에
2022. 1. 27. 오후 4:45, Hola : 크 좋은 말씀들을 많이 해주셔서 읽는것만으로도 굉장히 많은 공부가 되네요 +_+
2022. 1. 27. 오후 4:46, 유용태 (teo.yu) : 테스트할때 서버 없이도 해당 데이터를 mock으로 보여주는 그런 기능(!) 이 있다고 하네요
2022. 1. 27. 오후 4:46, 개발닥 : 엇
2022. 1. 27. 오후 4:46, 유용태 (teo.yu) : (안써보고 하는 말입니다)
2022. 1. 27. 오후 4:46, j : 오…녹화라니..
2022. 1. 27. 오후 4:46, j : 일단..인원 보충되면 한번 제의는 해봐야겠네요
2022. 1. 27. 오후 4:46, j : 제가 할일을 지금 또 늘려버리기엔..개발자 1인이..감당하기엔 너무 힘들어져서
2022. 1. 27. 오후 4:46, 유용태 (teo.yu) : Record... 녹화라기 보다 그냥 localStorage에 보관했다가 서버 없이도 테스트를 다시 돌려 볼 수 있는 뭐 그런
2022. 1. 27. 오후 4:47, 유용태 (teo.yu) : 저도 이걸 파보고 싶긴 한데 저도 아직은 손이 모자라서
2022. 1. 27. 오후 4:47, j : 얼른 사람 뽑혔으면 좋겠네요..
2022. 1. 27. 오후 4:47, 유용태 (teo.yu) : 좀 백업 인력이 오면 테스트 쪽을 파볼까 생각중입니다
2022. 1. 27. 오후 4:47, j : 오면 진짜 잘해줄 자신 있는데..
2022. 1. 27. 오후 4:47, 유용태 (teo.yu) : 그러게요! ㅋㅋ
2022. 1. 27. 오후 4:47, Hola : 저희도 곧 채용 해야하는데
2022. 1. 27. 오후 4:48, Hola : 걱정입니다.. ㅠㅠ
2022. 1. 27. 오후 4:48, 비옷입은 튜브 : ㅠㅠ
2022. 1. 27. 오후 4:48, j : 이게 거르는것도 일이고..
2022. 1. 27. 오후 4:48, Hardy : 저도 가면 진짜 잘 할 자신 있는데... 잘 안데려가시네요 ㅋㅋㅋㅋ
2022. 1. 27. 오후 4:48, j : 걸렀는데 안오신다고 하는것도 일이고
2022. 1. 27. 오후 4:48, j : 흡…
2022. 1. 27. 오후 4:48, 유용태 (teo.yu) : 어찌 이런... 수요과 공급이 둘 다 많은데 행복하지 못하네요 ㅠㅠ
2022. 1. 27. 오후 4:49, Hardy : 취업난과 구인난이 함께 있는 이상한...
2022. 1. 27. 오후 4:49, j : 흡..면접보면서 기빨리는것도..
2022. 1. 27. 오후 4:49, j : 2주동안 깃헙보면서 와 나 머햇지..
2022. 1. 27. 오후 4:49, j : 이러고 현타 경험하고..
2022. 1. 27. 오후 4:52, 유용태 (teo.yu) : 근데 막상 만나면 또 ... 음... 그러고 ㅋㅋ
2022. 1. 27. 오후 4:52, j : 그쵸,.
2022. 1. 27. 오후 4:53, j : 분명 코드 보고 물어봣는데
2022. 1. 27. 오후 4:53, j : 네?
2022. 1. 27. 오후 4:53, 유용태 (teo.yu) : ㅠㅠ
2022. 1. 27. 오후 4:53, j : 그럼 같이 물음표물음표
2022. 1. 27. 오후 4:53, j : 이거 이렇게 저렇게해서 구현한거 아닌가요?
2022. 1. 27. 오후 4:53, j : 아 마장요
2022. 1. 27. 오후 4:53, j : …왜 제가 설명하고 있나요..
2022. 1. 27. 오후 4:54, 유용태 (teo.yu) : ㅋㅋㅋㅋ ㅠㅠ
2022. 1. 27. 오후 4:54, j : 다들 구인구직 화이팅입니다!
2022. 1. 27. 오후 4:54, Hardy : 기술 면접은 재밌고 좋은데
2022. 1. 27. 오후 4:54, Hardy : 대표 면접이 무서워요 ㅠㅠ
2022. 1. 27. 오후 4:55, 프린이 : 저도 인성면접이 조금 ㅠㅠ
2022. 1. 27. 오후 4:55, j : 대표님 면접 무섭죠 ㅋㅋㅋ
2022. 1. 27. 오후 4:58, 유용태 (teo.yu) : 어떤 점이 그랬나요? 궁금하네요
2022. 1. 27. 오후 4:59, 설아아빠 : 저두 구인해야하는데 대표님이 급여는 적게주려하니 괴롭네요...
2022. 1. 27. 오후 5:01, j : 저흰 팀원 규모가 작아서..괴로워요
2022. 1. 27. 오후 5:02, j : 흑..눈물나네요 ㅠㅠ
2022. 1. 27. 오후 5:02, 설아아빠 : 저두요... 저라도 오기 싫을것 같은데...
2022. 1. 27. 오후 5:03, 엉망장자 : 값싼 잘하는 개발자....가 수요가 많은걸까요?..
2022. 1. 27. 오후 5:03, 엉망장자 : ㅜㅜ
2022. 1. 27. 오후 5:04, j : 공급 : 실력이 어느정도 보장된 개발자
수요 : 실력만큼 대우해주는 회사
2022. 1. 27. 오후 5:05, j : 이게 되어야 하는데 공급과 수요의 기준들이 요새 이거만 하면 될 수 있데!, 그전에도 이정도 받고 일했어! 이거면 충분하게 해주는거 아니야? 이런 느낌인지라..
2022. 1. 27. 오후 5:07, 설아아빠 : 그러개요! 저 궁금한게 있는데 요즘 주니어 초봉은 그냥 천차 만별인가요..?
2022. 1. 27. 오후 5:08, Hardy : 평균이 3200으로 잡혀 있는걸로 알고 있어요
2022. 1. 27. 오후 5:10, 설아아빠 : 답변 감사해요!
2022. 1. 27. 오후 5:19: 정돌이님이 들어왔습니다.
2022. 1. 27. 오후 5:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 27. 오후 5:19, 유용태 (teo.yu) : 안녕하세요 정돌이님 반갑습니다 :)
2022. 1. 27. 오후 5:20, 정돌이 : 안녕하세요~!! 저도 반갑습니다!
2022. 1. 27. 오후 5:21, Luke : 이거라면 msw라는 목서버가 있는데요, 관련 포스팅을 한 적이 있습니다. 

testing-library 도입기 - https://luke-tofu.tistory.com/18
2022. 1. 27. 오후 5:23, Luke : 결국에는 axios-mock-adapter를 사용하는 쪽으로 가닥이 잡혔네요
2022. 1. 27. 오후 5:24, 유용태 (teo.yu) : 여기는 개발 하다가 궁금하게 생겼을때 혹은 다른 취준생, 주니어, 시니어 입장에서 어떻게 생각하는지 궁금할 만한 주제들이 있을때 함께 얘기를 해보는 공간입니다. 무엇이든 편하게 글 남겨 주세요 :)
2022. 1. 27. 오후 5:26, 정돌이 : 네 감사합니다 !!
2022. 1. 27. 오후 5:26, 쑥스럽게 인사하는 프로도 : 사진
2022. 1. 27. 오후 5:26, 쑥스럽게 인사하는 프로도 : 이런거도 한다고 홍보 메일 보내주네요....ㅋㅋㅋ
2022. 1. 27. 오후 5:26, j : 저도 봤어요!
2022. 1. 27. 오후 5:26, j : 근데 저기서 전연인 만날까봐 무서워서 ...
2022. 1. 27. 오후 5:27, j : 신청 못하겠습니다
2022. 1. 27. 오후 5:27, 쑥스럽게 인사하는 프로도 : 헉
2022. 1. 27. 오후 5:27, 엉망장자 : ㄷㄷㄷㄷ
2022. 1. 27. 오후 5:27, j : 갑분 TMI..
2022. 1. 27. 오후 5:27, 알파카 : 와우 저 참여하고 싶은데 어떻게 신청하면 되나요 혹시...
2022. 1. 27. 오후 5:28, 쑥스럽게 인사하는 프로도 : https://docs.google.com/forms/d/e/1FAIpQLSci6hOvyzmxg7wp0aMQYEumM5adfZ0hbXSsoIAoBP68ezcZdw/viewform
여기서 접수받는다네용
2022. 1. 27. 오후 5:28, 알파카 : 이모티콘 
2022. 1. 27. 오후 5:32, 쑥스럽게 인사하는 프로도 : 다들 회사에서 개발에 관한 이야기 많이 나누시나요? 저희 회사는 개발1:주식9 여서 다른분들은 어떠신지 궁금하네요🤔🤔
2022. 1. 27. 오후 5:32, j : 저흰..그냥 개발 + 관심사
2022. 1. 27. 오후 5:33, j : 관심사에 IT도 포함되어 있어서
2022. 1. 27. 오후 5:33, j : 기기나 요새 이런거 나왔던데 하고 이야기 하곤 해요
2022. 1. 27. 오후 5:33, Luke : 저희는 상장 앞두고 있어서 다들 그거 관련된 얘기가 주예요
2022. 1. 27. 오후 5:34, Vintz : 저희는 개발얘기가 반이상이에요!
2022. 1. 27. 오후 5:34, 유지남 : 오~ 어디인가요?
2022. 1. 27. 오후 5:34, Luke : 의료쪽 이라는 것만 말씀드릴게요 ㅋㅋㅋ
2022. 1. 27. 오후 5:35, 쑥스럽게 인사하는 프로도 : 오오 정말 회사바이회사네요 신기하고 부럽습니다ㅋㅋㅋㅜㅜㅜ 말씀 감사합니다!!
2022. 1. 27. 오후 5:37, 생각하는오뎅 : ㄹㄴ?
2022. 1. 27. 오후 5:43: 눈물바다에 빠진 라이언님이 들어왔습니다.
2022. 1. 27. 오후 5:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 27. 오후 5:43, 유용태 (teo.yu) : 안녕하세요 눈물바다에 빠진 라이언님~ 반갑습니다 :)
2022. 1. 27. 오후 5:43, 눈물바다에 빠진 라이언 : 안녕하세요~ 반갑습니다
2022. 1. 27. 오후 5:44, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 관련 궁금한거 물어보거나 관련 잡담들 다른 개발자들은 어떻게 하는지 궁금할때 서로 물어보는 공간입니다. 편하게 글 남겨 주세요~
2022. 1. 27. 오후 5:44, 눈물바다에 빠진 라이언 : 네~ 잘부탁드립니다~ ㅎ
2022. 1. 27. 오후 5:45, 유용태 (teo.yu) : 개발 얘기랑 회사 얘기가 대부분인것 같아요 저희는 한참 사람 뽑고 있는 중이라서 인사 얘기가 요새 제일 핫해요
2022. 1. 27. 오후 5:47, Vintz : 와..eslint airbnb 사람 돌게 만드네요 ㅠㅠㅠ 뭐 이렇게 안되는 게 많아~~~
2022. 1. 27. 오후 5:47, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 27. 오후 5:47, 비옷입은 튜브 : 요즘 회사의 비즈니스 모델에 대해서 의구심이 많이 생기고 있어 저희 개발팀은 비즈니스 모델..을 대화 주제로 많이 이야기 하는 것 같습니다.
2022. 1. 27. 오후 5:48, 유용태 (teo.yu) : 아! 공감합니다 ㅠ
2022. 1. 27. 오후 5:48, 유용태 (teo.yu) : 회사가 잘되야 하는거죠
2022. 1. 27. 오후 5:48, 비옷입은 튜브 : 개발도 중요한데 ㅠㅠ 왜 개발하는지 목적성과 컨셉이 뚜렷해야 기획도 개발도 다 잘되는 것 같다고 요즘 많이 배우고 있습니다.
2022. 1. 27. 오후 5:49, 쑥스럽게 인사하는 프로도 : 꺼내기 조심스러운 대화 주제일 것 같은데 꼭 필요한 내용이네요... 다들 멋지십니다👍👍
2022. 1. 27. 오후 5:49, 유용태 (teo.yu) : 맞아요~ 사업부 보이스랑 개발자 보이스는 서로 중간에서 상쇄되나봐요 ㅋ
2022. 1. 27. 오후 5:50, 유용태 (teo.yu) : 분명히 공감대가 어딘가 있을텐데
2022. 1. 27. 오후 6:23, 0_0 : 사진
2022. 1. 27. 오후 6:23, 0_0 : msw쓰려고 툴만들었는데 막상 목업하기 번거로워서 잘 안쓰게되버린 ㅠㅠ...
2022. 1. 27. 오후 7:28: Muzi watching TV님이 들어왔습니다.
2022. 1. 27. 오후 7:28, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 27. 오후 7:28, 유용태 (teo.yu) : 안녕하세요 티비보는 무지님~ 반갑습니다 :)
2022. 1. 27. 오후 7:28, Muzi watching TV : 안녕하세요. 벨로그에서 css 역사 글 보고 들어오게 되었습니다. 좋은 글 감사합니다
2022. 1. 27. 오후 7:29, 유용태 (teo.yu) : 환영합니다 :) 감사합니다 여기는 개발하다가 문득 궁금해진 내용들을 물어보고 답해주는 공간입니다
2022. 1. 27. 오후 7:30, 유용태 (teo.yu) : 가벼운 질문들은 바로 답을 하고 있고 좋은 질문들은 블로그로 작성하고 있어요~ 각종 팁이나 좋은 자료들도 공유 하고 있습니다 :)
2022. 1. 27. 오후 7:30, 유용태 (teo.yu) : 편하게 글 남겨주세요!
2022. 1. 27. 오후 7:48, 공공 : 약간 타이밍을 놓쳤지만..프론트 테스트는 정말 적절한 수준과 방법을 꼭 찾고 싶네요 😂 아예 비즈니스 로직만 따로 떼어내서 거기까지만 단위테스트를 짜려고 노력해보긴 하는데, 이렇게 하면 또 테스트가 커버해주는 영역이 너무 좁은게 아닌가 싶고요
2022. 1. 27. 오후 7:49, 유용태 (teo.yu) : 맞습니다. 갑자기 프론트엔드 테스트 패러다임을 바꿔줄 누군가가 나오기 전까지는 계속 이 딜레마로 씨름을 하지 않을까 생각합니다
2022. 1. 27. 오후 7:52, 공공 : 지난 feconf에서 https://www.youtube.com/watch?v=L1dtkLeIz-M 요런 세션이 있기는 했더라고요
2022. 1. 27. 오후 7:53, 개발닥 : 테스트는 너무 어려워요
2022. 1. 27. 오후 7:54, 유용태 (teo.yu) : 톡게시판 '공지': 지난 feconf에서 https://www.youtube.com/watch?v=L1dtkLeIz-M 요런 세션이 있기는 했더라고요
2022. 1. 27. 오후 8:02, 이엘로 : 음 좋은 생각이 있는데요
새로 들어온 분들이 이전에 보내진 링크는 볼 수가 없고 공지는 볼 수 있어서 공지를 등록하고 있는 걸로 알아요. 
근데 공지는 하나씩밖에 등록을 못하고 중요한 공지가 묻힐 수도 있으니까 노션처럼 링크를 모아 놓을 수 있는 페이지 하나만 공지에 등록해놓고 링크를 거기 모을 수 있으면 좋을 것 같아요!
2022. 1. 27. 오후 8:03, 이엘로 : 공지에 올리는 것보다 링크가 눈에 더 잘 들어올 것 같기도 하고요
2022. 1. 27. 오후 8:03, 프린이 : 좋은 생각입니다
2022. 1. 27. 오후 8:04, 유용태 (teo.yu) : 좋은 생각이에요! 안그래도 지금 지난 일정을 백업 받아서 대화 내용과 링크를 추출해서 저의 아카이브를 볼 수 있는 홈페이지를 개발 중에 있습니다.
2022. 1. 27. 오후 8:04, 유용태 (teo.yu) : *저희
2022. 1. 27. 오후 8:04, 이엘로 : 오오오오 그게 더 좋겠는데요
2022. 1. 27. 오후 8:04, 생각하는오뎅 : 사진
2022. 1. 27. 오후 8:04, 유용태 (teo.yu) : 특히 여기서 오고가는 링크들은 제가 생각해도 좋은 링크들이 많고 오래되신 분들은 카톡에서 제공하는 링크 기능이 유용하게 사용될 것이나 나중에 오신분들은 확실히 좀 아쉬울 것 같아요
2022. 1. 27. 오후 8:04, 생각하는오뎅 : 좋은생각 보고 찾아보니 이게 아직 나오는군요...
2022. 1. 27. 오후 8:05, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 27. 오후 8:06, 공공 : 앗ㅋㅋㅋ저 재밌게 봤었는데, 아직 나오고 있었군요
2022. 1. 27. 오후 8:09, 어피치 : 시간이 좀 지났기는 한데 지금 우아한 형제들 테스트 자동화 관련 세션 있습니다!
https://www.youtube.com/watch?v=9AUEfGZslmw
2022. 1. 27. 오후 8:09, 유용태 (teo.yu) : 영상 다 봤는데 물론 소개 영상이니까 당연할수도 있지만 화면을 보지 않고 개발을 한다는 것에 대한 부분이 영 찜찜하네요
2022. 1. 27. 오후 8:20, 유용태 (teo.yu) : 아~ 까먹고 있었네요. 알려주셔서 감사합니다. 처음부터 2배속으로 빨리 따라잡아봐야겠네요 ㅎ
2022. 1. 27. 오후 8:32, 유용태 (teo.yu) : 발표의 내용 보다 테스트 그 자체에 대한 궁금증이 어마어마 하네요. ㅋㅋ Q&A가 훨씬 더 재밌는거 같아요. ㅋ
2022. 1. 27. 오후 8:33, 비옷입은 튜브 : 맞아요 ㅎㅎ
2022. 1. 27. 오후 8:38, 유용태 (teo.yu) : 공감가는 얘기들은 참 많은데 알고 있는 이상의 얘기들은 아직 없네요 ㅠ
2022. 1. 27. 오후 8:39, 공공 : 맞아요 저도 이건 발표 상황에서 todo 앱의 CRUD만 테스트 대상이라 할 수 있는 게 아닌가 싶었어요. 인터랙션이 많지 않은, 정말 정적인 페이지에서만 해당되는 내용은 아닌가 싶고요
2022. 1. 27. 오후 9:43, Joon : 선배님들 안녕하십니까 오랜만에 질문 드립니다!
선배님들은 리액트 공부할 때 어떤 순서로 나아가셨는지 궁금합니다.  
공부 방향? 혹은 커리큘럼?에 대해 조언이나 어떻게 공부하셨는지에 대한 경험을 공유해주시면 감사드리겠습니다🙇‍♂️
2022. 1. 27. 오후 9:44, Vintz : 저두 궁금하네요..! 저는 시간이 해결해준 타입이라 삽질도 많이하고 능동적으로 공부하진 못한거 같아요 ㅎㅎ 하다보니 익숙해지고, 재밌어진거라..
2022. 1. 27. 오후 9:51, 유용태 (teo.yu) : 지금 어느 정도의 수준이실까요?
2022. 1. 27. 오후 9:52, 비옷입은 튜브 : 짝짝짝
2022. 1. 27. 오후 10:02, Joon : 현재 html, css, js 이후 
리액트 공부 진행중이며
수준은 간단한 crud 구현 가능하지만
리액트에 대한 이해도가 많이 낮습니다.

usestate 훅 이외의 상태관리는 간단하게 해봤지만 어떻게 활용할 수 있는지 제대로 이해못하고 있습니다.(class를 사용했을 때의 state 관리를 어떻게 하는지도 공부했습니다)

그리고 useCallback , useMemo, React.memo 등 최적화 관련해서도 얕은 이해를 하고 있는 정도입니다 ㅠㅠ

결론적으로 저는 현재 딱 입문자 수준이라고 생각됩니다!
2022. 1. 27. 오후 10:05, 유용태 (teo.yu) : 일단 뭐든 구현을 해서 완성을 해보는게 제일 좋은데요. 제가 일단은 맨날 게임을 한번 만들어보라고 하는게 최근에 재밌는걸 하나 발견해서
2022. 1. 27. 오후 10:05, 유용태 (teo.yu) : https://www.powerlanguage.co.uk/wordle/
2022. 1. 27. 오후 10:05, 웹린이 : 오오..
2022. 1. 27. 오후 10:05, 부끄러워하는 라이언 : 삭제된 메시지입니다. 
2022. 1. 27. 오후 10:06, 유용태 (teo.yu) : 이 게임 요새 핫하던데 개발 공부하기에 참 좋은 구성이라고 생각해서 (클릭 이벤트, 키 이벤트, 핵심로직, 에니메이션, 예외처리)
2022. 1. 27. 오후 10:06, 유용태 (teo.yu) : 맨땅에 클론 코딩 한번 해보시면 좋을 것 같아요. 게임을 클론 코딩을 하면 좋은 점이 

1) 기획서가 없어도 요구사항을 완벽히 이해할 수 있다. 
2) 어떤 점이 버근인지 스스로 인지가 바로 가능하다
2022. 1. 27. 오후 10:07, 유용태 (teo.yu) : 라는 점이 있어서 일단은 요거 한번 구현해보시면 React 기초 쌓기에는 엄청 좋을 거에요 서버 로직이 없어서 개발하기도 편하고
2022. 1. 27. 오후 10:08, 유용태 (teo.yu) : 이후에는 서버 로직을 곁들인 좀 큰~~ 프로젝트를 한번 해보는게 필요한데 요거는 좀 커리큘럼을 좀 생각해볼게 나머지는 나 회사일을 하면서 저도 한거라
2022. 1. 27. 오후 10:08, 유용태 (teo.yu) : *다
2022. 1. 27. 오후 10:08, 부끄러워하는 라이언 : 안녕하세요 지금 웹팩 공부를 하고 있는데요. package.json에서  devDependencies랑 dependencies 구분은 어떻게 하시는지 궁금합니다..! 저는 아래 사진과 같이 했는데 조언 해주시면 감사하겠습니다!
2022. 1. 27. 오후 10:08, 부끄러워하는 라이언 : 사진
2022. 1. 27. 오후 10:09, 유용태 (teo.yu) : 내가 서버 로직을 하지 않는다면 그냥 devDepndency에 두시면 됩니다
2022. 1. 27. 오후 10:09, 유용태 (teo.yu) : Node에서 쓰는 것은 dep에 프론트는 dev에 넣는다고 거진 생각하시면 맞아요
2022. 1. 27. 오후 10:10, 유용태 (teo.yu) : dependencies에 두는 이유는 내가 나중에 서버를 배포할때
2022. 1. 27. 오후 10:10, Joon : 우와 감사합니다ㅜㅜ 게임 클론코딩 좋은 방법이 될 것 같아요!
2022. 1. 27. 오후 10:10, 유용태 (teo.yu) : 자동으로 install을 할때 꼭 필요한 것만 골라서 해주려고 하는건데
2022. 1. 27. 오후 10:10, 유용태 (teo.yu) : 반대로 dev에 있는 것들을 서버에서 굳이 install에서 제외해도 되는것
2022. 1. 27. 오후 10:10, 유용태 (teo.yu) : 즉 로컬에서 webpack으로 번들빌드를 하기 위한...거라서
2022. 1. 27. 오후 10:11, 유용태 (teo.yu) : CI+CD에서 번들 빌드를 서버에서 하는거라면 dev에 있어야 하곘네요;;
2022. 1. 27. 오후 10:11, 유용태 (teo.yu) : 제 기준으로 설명을 했네요. ㅠㅠ 로컬에서 빌드해서 스크립트로 배포를 하고 있어서
2022. 1. 27. 오후 10:12, 유용태 (teo.yu) : 회사에서 CI/CD를 뭘로 하는지 모르곘는데 일단 가급적 dev로 몰아보시고 에러나면 야금야금 내려보심이 어떨까요? ㅋㅋ
2022. 1. 27. 오후 10:13, 부끄러워하는 라이언 : 그렇다면  
   "@types/react": "^17.0.38",
    "@types/react-dom": "^17.0.11",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "styled-components": "^5.3.3"
도 dev로 다 올려봐야겠네요..!
2022. 1. 27. 오후 10:13, 콘솔 : 와 테오님은 모르는게없으시네여 .. 깊이가 달라…
2022. 1. 27. 오후 10:17, 부끄러워하는 라이언 : 제가 이해한게 맞다면 로컬에서 빌드를 돌리고 s3에 올리는 작업을 한다면 거의 dev에 두는게 맞고..
ec2에 인스턴스를 파서 빌드를 한다면 dep에 두는게 맞을까요..? 
ci/cd는 amplify로 하기는 합니다.. 헷갈리네여..
2022. 1. 27. 오후 10:18, 웹린이 : 저도 공부 시작한지 얼마 안된 개발자 지망생이지만 제 경험을 조심스럽게 공유해봅니다 ㅎㅎ
저는 공식 문서의 튜토리얼 보면서 우선 한번 사용해 보고, 문서를 읽으면서 간단한 미니 프로젝트 하나를 만들어봤습니다. 그리고 hooks나 함수 컴포넌트 등의 경우는 따라 만들어보면서 공부를 했습니다. 왜 hooks 규칙이 생겼고, 왜 상태를 불변하게 관리를 하는지 등을 이해하기 좋았어요!
2022. 1. 27. 오후 10:20, 유용태 (teo.yu) : 네 맞자요 amplify에서는 어떻게 하는지는 잘 몰라서 한번 dev로 한번 몰고 테스트해보세요 :)
2022. 1. 27. 오후 10:21, 웹린이 : 컴포넌트나 hooks 등을 바닐라로 직접 구현해보는게 너무 막막하고 부담스러우시다면 
https://junilhwang.github.io/TIL/Javascript/Design/Vanilla-JS-Component/#_1-%E1%84%8F%E1%85%A5%E1%86%B7%E1%84%91%E1%85%A9%E1%84%82%E1%85%A5%E1%86%AB%E1%84%90%E1%85%B3%E1%84%8B%E1%85%AA-%E1%84%89%E1%85%A1%E1%86%BC%E1%84%90%E1%85%A2%E1%84%80%E1%85%AA%E1%86%AB%E1%84%85%E1%85%B5
요기 블로그 참고하시면 도움이 되실 것 같아요!
2022. 1. 27. 오후 10:21, 유용태 (teo.yu) : 미니 프로젝트 좋네요 저도 공부보다는 일단 만들고 보자 주의라서
2022. 1. 27. 오후 10:21, 웹린이 : 일단 뭔가 만들어져야
2022. 1. 27. 오후 10:22, 웹린이 : 흥미가 생기는 것 같아요 ㅋㅋㅋ
2022. 1. 27. 오후 10:22, 유용태 (teo.yu) : 맞아요 뇌는 목적이 있을때 다르게 작동한다고 했어요
2022. 1. 27. 오후 10:22, 부끄러워하는 라이언 : 항상 좋은 답변 감사합니다..!
2022. 1. 27. 오후 10:23, 웹린이 : 늘 목적을 갖고 뭔가 해야겠네요 ㅎㅎ
2022. 1. 27. 오후 10:23, 웹린이 : 🔥🔥🔥🔥🔥
2022. 1. 27. 오후 10:28, 유용태 (teo.yu) : 저희 지난 대화 백업해서 링크를 추출해서 아카이브로 공유 하는 거 진행중인데요
2022. 1. 27. 오후 10:29, Joon : 조언들 감사합니다 참고해서 공부하겠습니다~!
2022. 1. 27. 오후 10:29, 유용태 (teo.yu) : 지난 대화도 공유 하는 건 어떻게 생각하세요? 좀 문제가 되려나요? 하게 되면 닉네임은 노출하지 않을 생각입니다만...
2022. 1. 27. 오후 10:31, 진현 : 좋을 것 같습니다!!
2022. 1. 27. 오후 10:31, Vintz : 저는 전혀 상관없습니다 ㅎㅎ
2022. 1. 27. 오후 10:31, 웹린이 : 제 경우에는 링크뿐만 아니라 대화에서도 많이 배워서 공유하면 좋을 것 같습니다!
2022. 1. 27. 오후 10:31, Vintz : 대화만 읽어도 도움이 되는 경우가 많더라구요
2022. 1. 27. 오후 10:31, Hola : 저도 많이 배워서요 :) 공유해도 좋을 것 같습니다.
2022. 1. 27. 오후 10:31, Vintz : 몇개 대화는 제 로컬에 있답니다 ㅎㅎ..
2022. 1. 27. 오후 10:34, 유용태 (teo.yu) : 감사합니다. 그러면 먼저 한번 만들어서 공유 드려보겠습니다~
2022. 1. 27. 오후 10:56, 부탁하는 무지 : 와 개발 단톡방 여러개 있지만 테오님 지식의 깊이 덕분인지 몰라도 인사이트가 제일 확실히 와닿는거 같아요ㅎㅎㅎ

항상 얘기하다보면 결론이 안나고 찝찝한 경우 정말 많은데 테오님은 요점을 확실히 짚어주셔서 도움이 많이 됩니다. 

정말 감사드려요~! 테오님 같은 시니어 개발자분 계시면 좋겠네요 ㅠㅠ
2022. 1. 27. 오후 10:58, 유용태 (teo.yu) : 감사합니다 :) 처음에 이 방 만들때 생각이 참 많았었는데 정말 하기 잘했다라는 생각이 드네요~ 고맙습니다
2022. 1. 27. 오후 11:08, 진현 : 사진
2022. 1. 27. 오후 11:09, 진현 : 이렇게 생긴  어드민 컴포넌트를 만들어야 하는데 table태그로 하는게 좋을까요?? 아니면 div로 하는게 좋을까요…?!
2022. 1. 27. 오후 11:10, 생못미 : 저도 종종 고민되는 부분이긴 해요 테이블 태그를 쓸지 div로 만든 다음에 그리드로 잡을지
2022. 1. 27. 오후 11:14, 유용태 (teo.yu) : 디자인이 안 바뀔거라는 전제라면 table이 그리기 더 편하고 유리한 디자인은 맞아요. (영역 구분이 선으로 되어 있어서)
2022. 1. 27. 오후 11:16, 진현 : 이모티콘 추후에 변경될 여지가 있으면 table태그를 사용하면 안되는군요…!! 도움주셔서 감사합니다!!(__)
2022. 1. 27. 오후 11:46, 화가난다 화가나 그래서 난 화가임 : 혹시 Routes 내부에 Routes가 중첩되면 안되나용?
2022. 1. 27. 오후 11:46, 화가난다 화가나 그래서 난 화가임 : 예를 들어
2022. 1. 27. 오후 11:46, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 27. 오후 11:46, 화가난다 화가나 그래서 난 화가임 : yumListPage 내부에
2022. 1. 27. 오후 11:46, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 27. 오후 11:47, 화가난다 화가나 그래서 난 화가임 : 이렇게 한 번 더 오면 안되나용?
2022. 1. 27. 오후 11:47, 화가난다 화가나 그래서 난 화가임 : 물론 /를 /*로 바꾸면 해결은 되는데, 안 좋은 부분도 있어서용
2022. 1. 27. 오후 11:54, 훌온텐드 : 중첩 라우팅을 하실꺼면 match props을 이용하세요
2022. 1. 27. 오후 11:57, 훌온텐드 : 그리고 path의 뎁쓰가 같은 라우팅을  내부컴포넌트에서 다시 쓰게 되면 안좋은구조로 생각됩니다.

2022년 1월 28일 금요일
2022. 1. 28. 오전 12:02, 화가난다 화가나 그래서 난 화가임 : match props가
2022. 1. 28. 오전 12:02, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 28. 오전 12:02, 화가난다 화가나 그래서 난 화가임 : 이거 맞지 않나용?
2022. 1. 28. 오전 12:03, 화가난다 화가나 그래서 난 화가임 : 문제는 해결이 됐는데. 궁금해용. routes 안에 routes로 중첩하면 편할 수도 있지 않나용?
2022. 1. 28. 오전 12:03, 화가난다 화가나 그래서 난 화가임 : 때에 맞혀서 컴포넌트 번갈아가며 바꿔줄 수 있으니까용
2022. 1. 28. 오전 12:03, 웹린이 : 이런 구조시라면
2022. 1. 28. 오전 12:03, 웹린이 : https://reactrouter.com/docs/en/v6/api#outlet
2022. 1. 28. 오전 12:04, 웹린이 : outlet사용 고려해보셔도 좋을 것 같아요~
2022. 1. 28. 오전 12:05, 화가난다 화가나 그래서 난 화가임 : 어머.. 저거 신기하네요?
2022. 1. 28. 오전 12:13, 웹린이 : 훌온텐드님이 우려하시는 것은 중첩 라우팅 보다는 지금 path의 깊이가 상위 Route와 하위 Route에서 1단계로 같은 부분인 것 같습니다!
지금 path를 상위에서 '/' , 하위에서 '/', '/detail' 쓰고 계신데 각각 '/yum', '/yum/list', '/yum/detail' 로 쓰시는 것을 권장드려요. 그런데 이 경우 /yum부분을 일일히 다 직접 입력하게되면 잘못쓸수도 있고 수정시 번거롭습니다. 때문에 match 파라미터를 이용해 `${match.path}/list`와 같이 일관성있고 수정하기 쉽게 사용하라고 조언해주신 것 같습니다!
2022. 1. 28. 오전 12:14, 웹린이 : https://www.daleseo.com/react-router-nested/
2022. 1. 28. 오전 12:15, 웹린이 : react router v5 를 기준으로 작성되었지만 참고 하시면 좋을 것 같아 공유드려요!
2022. 1. 28. 오전 12:30, 웹린이 : https://ui.dev/react-router-nested-routes/
요기는 영문이긴 한데 버전 별로 중첩 라우팅에 대해 정리가 잘되어있습니다!
2022. 1. 28. 오전 4:56, 화가난다 화가나 그래서 난 화가임 : 감사합니다!!!!!!
2022. 1. 28. 오전 9:00, 유용태 (teo.yu) : https://velog.io/@jay/google-sprint-2nd
2022. 1. 28. 오전 9:41: one_dev님이 들어왔습니다.
2022. 1. 28. 오전 9:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 28. 오전 9:41, 유용태 (teo.yu) : 안녕하세요 one_dev님 반갑습니다 :)
2022. 1. 28. 오전 9:41, one_dev : 안녕하세요 !
2022. 1. 28. 오전 9:42, 유용태 (teo.yu) : 어서오세요 :) 여기는 개발 관련 된 내용을 서로 묻고 답해주고 관련 좋은 자료가 있거나 본인이 공부한 것들이 있으면 공유 하는 공간입니다
2022. 1. 28. 오전 9:42, 유용태 (teo.yu) : 언제든 궁금한게 있으면 편하게 글 남겨주세요 :)
2022. 1. 28. 오전 10:43, 여의도개발 : 이런책도 있었네요 ㅋㅋ
http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&mallGb=KOR&barcode=9791165920739&orderClick=LEa&Kc=
2022. 1. 28. 오전 10:46, 여의도개발 : 이걸 말씀드리려고했던게아니라

아래책 가볍게 읽기 괜찮다고 말씀드리려했는데 위 책은 우연치않게 발견했네요
http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&mallGb=KOR&barcode=9791158391782&orderClick=LEa&Kc=
2022. 1. 28. 오전 10:47, 멋쟁이 프로도 : 안녕하세요 혹시 다른 분들은  웹서비스에 유저간 채팅 서비스 어떤 식으로 구현하셨는지 궁금합니다! 소켓에 디비 연결해서 직접 구현하셨는지.. 샌드버드와 같은 외부 솔루션을 사용했는지 궁금하네요ㅎㅎ
2022. 1. 28. 오전 10:48, 썰~~ : 샌드버드는 직접 다 구현해야되더라고요 결국
2022. 1. 28. 오전 10:48, 썰~~ : 웹소켓으로 직접 구현하셔도 됩니다
2022. 1. 28. 오전 10:49, 썰~~ : 샌드버드는 디비구조나 이런것들을 다 해주긴하지만 api다 붙여야되고..
2022. 1. 28. 오전 11:09, 프엔공부중 : 안녕하세요 css 애니메이션 질문이 있습니다.. ㅠㅠ 아래 네이버 클라우드 웹페이지에서 3번째 스크롤 시 나타나는 애니메이션(위에서 아래로 올라오는)을 구현하려고 합니다.

위에서 올라오는 애니메이션을 구현을 했는데 네이버 클라우드 처럼 계속 반복적으로 처음 나왔던 부분도 밑에서 부터 계속 올라오지 않고 한 번 아래에서 위로 올라오면 그 다음은 올라오지 않아서 해결을 못 하고 있습니다 ㅠㅠ 반복을 위해 animation 속성에 infinite 속성도 주었습니다!
https://www.navercloudcorp.com/?ref=koreawebdesign.com#Service
2022. 1. 28. 오전 11:11, 프엔공부중 : 코드는 길어서 노션으로 올렸습니다!  https://difunto.notion.site/f25ecd9db1c5421bb2b3b2a0df342727
2022. 1. 28. 오전 11:16, curlyjun : https://developer.mozilla.org/ko/docs/Web/API/Intersection_Observer_API

저라면 Intersection Observer 사용해서 할 것 같습니다
2022. 1. 28. 오전 11:18, 프엔공부중 : Intersection Observer로도 사용할 수 있나요? 인피니트 스크롤링에만 사용했었는데 다시 한번 찾아보겠습니다. 감사합니다!
2022. 1. 28. 오후 12:30, 유용태 (teo.yu) : 이거 codesandbox나 빌드된 결과물을 올려주실 수 있나요? 빌드를 못하니까 확인하기가 어렵네요 ㅠ
2022. 1. 28. 오후 12:57, 훌온텐드 : 웹소켓 + stompjs 추천드립니다.
2022. 1. 28. 오후 2:20, 프엔공부중 : 여기 있습니다!
2022. 1. 28. 오후 2:20, 프엔공부중 : 동영상
2022. 1. 28. 오후 2:21, 프엔공부중 : 근데 찾아보니 네이버도 그냥 똑같은 내용을 그대로 html로 반복시키고 4번정도 반복하면 아예 초기화 하는식으로 했더라구요..
2022. 1. 28. 오후 2:23, 유용태 (teo.yu) : 맞아요~ 일단은 2장을 붙이셔서 먼저 에니메이션 돌리고 돌아가도록 한번 해보세요 에니메이션을 infinite를 했는데 반복이 안되는 건가요?
2022. 1. 28. 오후 2:26, 프엔공부중 : 저는 네모 박스가 올라가다가 화면에서 보이지 않으면 즉 보이지 않는 px까지 이동하고 나면 다시 화면 밑에서 부터 올리고 싶은데 이러면 애니메이션을 2개를 써야 하는건가요?
2022. 1. 28. 오후 2:28, 유용태 (teo.yu) : https://replit.com/@developer1px/svelte-adorableCSS#src/App.svelte
2022. 1. 28. 오후 2:33, 유용태 (teo.yu) : 빨리 만든다고 제가 하는 방식으로 일단 했는데 동일한 컨텐츠 2장 연속으로 붙이는 거랑 transform: translateY(-100%) 그리고 animation에서 infinity 한번 해보시면 될 것 같아요
2022. 1. 28. 오후 2:33, 프엔공부중 : 올려주신 링크 코드 보고 있었는데
2022. 1. 28. 오후 2:33, 프엔공부중 : 감사합니다! 알려주신 방법으로 해보겠습니다!
2022. 1. 28. 오후 2:39: 이철웅님이 들어왔습니다.
2022. 1. 28. 오후 2:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 28. 오후 2:40, 유용태 (teo.yu) : 안녕하세요 이철웅님~ 반갑습니다 :)
2022. 1. 28. 오후 2:57, 리린이 : 선배님들은 후임이 들어오시면 어떤식으로 교육하시나요? 
어쩌다 회사에 인턴이 한분 입사해서 제가 사수?가 되었는데
기초지식이 거의 없으셔서 어디서부터 알려드려야 할지 감이 안오네요..! 예를들어.. nodejs를 설치할 줄 모른다던가. 그런 정도입니다..
2022. 1. 28. 오후 3:00, 리린이 : 제 인턴 때 생각나서 이것저것 처음에는 열심히 알려드리고 따로 야근하면서 계속 교육했었는데, 시간이 지나도 제자리걸음 이어서 힘에부치네요 제 방식이 잘못된건가 싶습니다..
2022. 1. 28. 오후 3:00, Luke : 그냥 문서를 던져줍니다. 그리고 그다지 중요하지 않은 일을 시키고 리뷰하면서 알려주는 편이에요.
2022. 1. 28. 오후 3:00, 유용태 (teo.yu) : 저는 뭐든 할 수 있을만한 프로젝트를 드리는 편입니다. 할 수 있을만한에 대해서는 사람마다 달라서 적정한 것을 고르는게 일이지만 그리고 매일 매일 리뷰를 하는 식으로 진행했어요
2022. 1. 28. 오후 3:00, Luke : 저희 신입이 지금은 그래도 일을 하지만, 처음 들어왔을 때 Docker 설치해두라고 했더니 vscode extension만 깔아두고 설치 다했다고 놀고 있었던 기억이 나네요....
2022. 1. 28. 오후 3:01, 리린이 : 문서라면 사내에서 작성된 문서를 말씀하시는 걸까요? 아니면 react docs같은 문서를 말씀하시는걸까요?
2022. 1. 28. 오후 3:01, Luke : 지금 진행하는 프로젝트에 대한 문서요. 당연히 처음에 읽어보면 이해가 안될텐데 그걸 읽는 것만으로도 전체적인 업무 흐름을 파악하는데 도움이 될 것 같아서요.
2022. 1. 28. 오후 3:01, 리린이 : 현재 진행되는 프로젝트에서 가중치 낮은 프로젝트를 몇개 던져줬는데, copy & paste만 해서 아주 단순한 에러라도 못찾으시더라구요,
2022. 1. 28. 오후 3:03, 리린이 : 그렇군요. ㅎ 의견 감사드립니다.
2022. 1. 28. 오후 3:06, 유용태 (teo.yu) : 고민이 많으시겠군요 ㅠㅠ 기대치를 더 낮춰야 하실텐데
2022. 1. 28. 오후 3:08, 리린이 : 기대치는 이미 많이 낮췄는데, 모르는거 하나 하나 다 알려줘버리면 이 분 커리어 발전이 안될 것 같아서 고민입니다..
2022. 1. 28. 오후 3:08, 리린이 : 도착지에 그냥 데려가기 보다는 방향을 알려주고 싶은데 고민이 많네요 ㅠ
2022. 1. 28. 오후 3:09, 리린이 : 답변 감사드려요. 연휴 푹 쉬고 머리 좀 식혀야겠습니다 ㅎㅎ
2022. 1. 28. 오후 3:17, 화가난다 화가나 그래서 난 화가임 : 선생님들.. 저 내일 cs스터디에서 작게 발표를 하는데, 이번에 맡은 부분이 정말로 비전공자로서
2022. 1. 28. 오후 3:17, 화가난다 화가나 그래서 난 화가임 : 이해가 너무 안 가는데, 어떤 선택을 내려야할까용
2022. 1. 28. 오후 3:17, 화가난다 화가나 그래서 난 화가임 : 형식상이라도 그냥 국어책 읽듯이라도 해야할까요..
2022. 1. 28. 오후 3:17, 알파카 : 유튜브에 비슷한 주제로 발표 잘한거 많이 찾아보세여
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 이미
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 찾았는데
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 왜 이해를 못하겠냐면
2022. 1. 28. 오후 3:18, 유용태 (teo.yu) : 멋진 마음이시네요! 꼭 신입이 그 마음 알아주고 따라와주길 바래요 응원합니다!
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 래치랑 플립플롭
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 부분인데
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 회로도만 계속 나오는데
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 그리고 모르는 단어들이랑
2022. 1. 28. 오후 3:18, 화가난다 화가나 그래서 난 화가임 : 제가 어느 지점부터 약간 놓쳤나봐용.. 이런 걸 보는 눈?
2022. 1. 28. 오후 3:20, 유용태 (teo.yu) : 어떤 선택지가 있나요?
2022. 1. 28. 오후 3:21, 엄지척 제이지 : 근데 컴퓨터 구조론 공부하시는 이유가 있으신가요?
2022. 1. 28. 오후 3:21, 화가난다 화가나 그래서 난 화가임 : '시간 표현과 상태 기억'에서 플립플롭과 래치를 맡아서 해야해용
2022. 1. 28. 오후 3:21, 화가난다 화가나 그래서 난 화가임 : 제가 지금 부트캠프에서 하고 있는데,
2022. 1. 28. 오후 3:21, 화가난다 화가나 그래서 난 화가임 : 하루에 조금씩
2022. 1. 28. 오후 3:21, 화가난다 화가나 그래서 난 화가임 : 하자는 의도에서
2022. 1. 28. 오후 3:21, 화가난다 화가나 그래서 난 화가임 : 진행되는 건뎅
2022. 1. 28. 오후 3:21, 화가난다 화가나 그래서 난 화가임 : 하아.. 리액트랑 js보다
2022. 1. 28. 오후 3:22, 화가난다 화가나 그래서 난 화가임 : cs가 너무 어려워용 ㅠㅠ
2022. 1. 28. 오후 3:22, 화가난다 화가나 그래서 난 화가임 : 한편으로 시간 소모가 너무 많아서
2022. 1. 28. 오후 3:22, 화가난다 화가나 그래서 난 화가임 : 스트레스 받고요..
2022. 1. 28. 오후 3:22, 화가난다 화가나 그래서 난 화가임 : 걍 열심히 하는게 좋은 전략일까요?
2022. 1. 28. 오후 3:22, 썰~~ : 부캠 어디로 가셨나요
2022. 1. 28. 오후 3:22, 유용태 (teo.yu) : 깊이 이해할 필요성을 못느낀다면
2022. 1. 28. 오후 3:22, 썰~~ : 항해?
2022. 1. 28. 오후 3:22, 화가난다 화가나 그래서 난 화가임 : 나중에 알려드리겠습니다!!
2022. 1. 28. 오후 3:23, 유용태 (teo.yu) : 그냥 좀 더 쉽게 직관적으로 비유적으로 이해하고 설명하는 방향으로 좀 돌려보세요
2022. 1. 28. 오후 3:24, 화가난다 화가나 그래서 난 화가임 : 그쵸. 그게 발표 전략일 수도 있는 거 같은데, 스키매틱만 나오는 부분에 걸렸네용
2022. 1. 28. 오후 3:24, 유용태 (teo.yu) : 초등학생이나 대학생 혹은 우리 엄마 아빠 한테 설명해준다고 생각하는 방식
2022. 1. 28. 오후 3:24, 화가난다 화가나 그래서 난 화가임 : 걍 부족하면 부족한데로라도 해야겠네욥
2022. 1. 28. 오후 3:25, j : http://m.yes24.com/Goods/Detail/106394800
2022. 1. 28. 오후 3:25, j : 이거 그냥 재미로 읽기 좋아요
2022. 1. 28. 오후 3:25, j : 대략적인 지식이나 간단하게 개념잡기 좋던데요
2022. 1. 28. 오후 3:25, 엄지척 제이지 : 공부하시는거 자체는 매우 좋네요 ㅎㅎ 다만 앞으로 서술이든 면접이든 순차회로 관련된 질문 받을 확률은 굉장히 희박할거에요
2022. 1. 28. 오후 3:26, j : 알라딘에서 보고 구매했는데 슥 읽기 좋아요
2022. 1. 28. 오후 3:26, 엄지척 제이지 : 너무 시간쓰지 마시고 가볍게 집고 넘어가시면 조을듯
2022. 1. 28. 오후 3:27, 화가난다 화가나 그래서 난 화가임 : 그래야겠습니다!! 제가 처음 접한 내용을 이해하기가 벅찬 파트네용
2022. 1. 28. 오후 3:27, j : 처음에 깊게 파는거보다
2022. 1. 28. 오후 3:28, j : 적당히 알고 넘어가는것고 좋아요
2022. 1. 28. 오후 3:28, j : 에너지분배는 중요하니까요
2022. 1. 28. 오후 3:29, 화가난다 화가나 그래서 난 화가임 : ㅠㅠㅠㅠㅠㅠㅠㅠㅠ
2022. 1. 28. 오후 3:29, 화가난다 화가나 그래서 난 화가임 : 감사합니다!!!
2022. 1. 28. 오후 3:46, 파이버 : 플립플롭은 전공 수업에서도 딱 그거 배웠던 2학년 1학기 전공 이후로 한 번도 못 만나본 거 같은데.. 되게 깊게까지 들어가시네요 화가님 ㄷㄷ
2022. 1. 28. 오후 3:46, 썰~~ : 플립플롭
2022. 1. 28. 오후 3:47, 썰~~ : ㅋㅋㅋㅋ 진짜 오랜만에 들어보네요
2022. 1. 28. 오후 3:47, 화가난다 화가나 그래서 난 화가임 : 어떡해요? 제가 자발적으로 들어간 건 아닌데, 들어갔는데 이해가 안돼요 ㅋㅋㅋ
2022. 1. 28. 오후 3:47, 썰~~ : 하드웨어단일텐제
2022. 1. 28. 오후 3:47, 썰~~ : 일텐데
2022. 1. 28. 오후 3:47, 화가난다 화가나 그래서 난 화가임 : 맞아요
2022. 1. 28. 오후 3:47, 프린이 : 디지털논리회로에서
2022. 1. 28. 오후 3:47, 프린이 : 배웠던기억이 있네요..
2022. 1. 28. 오후 3:47, 화가난다 화가나 그래서 난 화가임 : 순차회로
2022. 1. 28. 오후 3:47, 파이버 : 알아두면 재밌고 좋긴 하죠..
2022. 1. 28. 오후 3:47, 프린이 : 저는 전기과입니다.. ㅋㅋㅋㅋ
2022. 1. 28. 오후 3:47, 화가난다 화가나 그래서 난 화가임 : 근데
2022. 1. 28. 오후 3:47, 웹린이 : 저도요 ㅋㅋ...
2022. 1. 28. 오후 3:47, 썰~~ : 저는 애초에 반도체쪽이었어서
2022. 1. 28. 오후 3:47, 웹린이 : 헉 저도 전기과인데
2022. 1. 28. 오후 3:47, 웹린이 : 반갑습니다 ㅋㅋㅋ
2022. 1. 28. 오후 3:47, 썰~~ : 전기과 ㅋㅋㅋ
2022. 1. 28. 오후 3:47, 프린이 : ㅋㅋㅋㅋㅋㅋ
2022. 1. 28. 오후 3:48, 썰~~ : 반갑습니다 저도
2022. 1. 28. 오후 3:48, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 28. 오후 3:48, 화가난다 화가나 그래서 난 화가임 : 제가 이해하고 발표하는 느낌이 아니라서 너무
2022. 1. 28. 오후 3:48, 화가난다 화가나 그래서 난 화가임 : 슬프네요 ㅠㅠ
2022. 1. 28. 오후 3:48, 화가난다 화가나 그래서 난 화가임 : 유튜버의 말을 전달하는 느낌이
2022. 1. 28. 오후 3:48, 웹린이 : 처음에는 다 그럴 수 있다고 생각해요!
2022. 1. 28. 오후 3:48, 화가난다 화가나 그래서 난 화가임 : 이게 무슨 의미인가.. 싶기도 하고
2022. 1. 28. 오후 3:48, 웹린이 : 나중에 시간 여유 두시고
2022. 1. 28. 오후 3:48, 웹린이 : 다시 보시면 좀 더 이해가 잘 되시리라 생각합니다!
2022. 1. 28. 오후 3:48, 파이버 : 그러다가 나중에 1년쯤 지나서 머리에 종이 뎅 하고 칠 때가 있으실거예요
2022. 1. 28. 오후 3:48, 파이버 : 아 이게 이거였어?!
2022. 1. 28. 오후 3:48, 화가난다 화가나 그래서 난 화가임 : ㅠㅠㅠㅠㅠ 고마워요.
2022. 1. 28. 오후 3:48, 화가난다 화가나 그래서 난 화가임 : 정말로 이거 때문에
2022. 1. 28. 오후 3:48, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋ 근데 거기까지 프론트는 알필요는 없을텐데
2022. 1. 28. 오후 3:49, 화가난다 화가나 그래서 난 화가임 : 우선순위 끝에 두는 활동을 1순위로 하는 느낌이 자꾸만 들어서
2022. 1. 28. 오후 3:49, 썰~~ : 진짜 깊게 가시네요
2022. 1. 28. 오후 3:49, 화가난다 화가나 그래서 난 화가임 : 스트레스를 많이 받고 있는데
2022. 1. 28. 오후 3:49, 화가난다 화가나 그래서 난 화가임 : 대충할까? 라는 그런 갈등이 있었는데, 일단은 할 수 있는데까지는
2022. 1. 28. 오후 3:49, 화가난다 화가나 그래서 난 화가임 : 해보게욥 흐엥..
2022. 1. 28. 오후 3:49, 리린이 : cs 토픽이 나와서 질문드리는건데, 저도 비전공이라 cs를 좀 공부하고 싶은데 학위(방통대, 야간대 학점은행 등등..) 취득하는거 어떻게들 생각하시나요?
2022. 1. 28. 오후 3:49, 화가난다 화가나 그래서 난 화가임 : 물론, 유튜브 내용이지만 ㅠ
2022. 1. 28. 오후 3:49, 썰~~ : 닉네임이 화가시니까 예를 들면 그림 그리는데 잉크의 성분표까지 공부하시는 느낌
2022. 1. 28. 오후 3:49, 리린이 : 정보처리기사 공부도 많이들 추천하시던데 ㅎ
2022. 1. 28. 오후 3:50, 썰~~ : 알면 더 잉크 특성을 알아서 좋지만
2022. 1. 28. 오후 3:50, 썰~~ : 깊다고 생각하긴 합니다
2022. 1. 28. 오후 3:50, 썰~~ : 정처기는 따는건 프론트에게 도움이 된다 생각은 안하는데 네트워크쪽이나 os일부는
2022. 1. 28. 오후 3:51, 썰~~ : 프론트에게 이론적 지식에 도움 많이된다고 생각합니다
2022. 1. 28. 오후 3:51, 파이버 : OSI 7계층 같은거
2022. 1. 28. 오후 3:51, 리린이 : 그렇군요
2022. 1. 28. 오후 3:51, 파이버 : 근본 충만해지는 느낌?
2022. 1. 28. 오후 3:51, 썰~~ : 맞아요 웹 구조 이해에도 도움되는거같고
2022. 1. 28. 오후 3:52, 썰~~ : 그리고 면접질문에 가끔 cs 지식이라고해서 정처기 질문들 나오는경우도 많아요
2022. 1. 28. 오후 3:52, 엄지척 제이지 : 학위가 필요하다면 모를까 정규교육과정을 거칠 필요는 없다고 생각합니다
2022. 1. 28. 오후 3:53, 리린이 : 네트웍이랑 os공부를 따로하는게 좋다고들 생각하시는거네요. ㅎ 답변 감사드립니다.
2022. 1. 28. 오후 3:53, 썰~~ : 저는 개인적으로 학교를 좀 오래다닌 입장으로 졸업장이 없으면 안보이는 차별이 존재는 한다고 보고있어서
2022. 1. 28. 오후 3:53, 썰~~ : 있을때는 모르지만 없으면 약간의 차별이 있다고 생각합니다 ㅠㅠ
2022. 1. 28. 오후 3:54, 썰~~ : 그래서 딸수있다면 따는게 좋다고 생각해요
2022. 1. 28. 오후 3:54, 엄지척 제이지 : 리린이 님의 경우 타전공이신거 아닐까여?
2022. 1. 28. 오후 3:54, 썰~~ : 타전공이라도
2022. 1. 28. 오후 3:54, 썰~~ : 고졸이랑 다른거같아요
2022. 1. 28. 오후 3:54, 리린이 : 네. .기계전공입니다
2022. 1. 28. 오후 3:54, 엄지척 제이지 : 네 학위가 잇는 상태라면 굳이 하나 더 딸 필요는 없다 생각..
2022. 1. 28. 오후 3:54, 썰~~ : 아 이건 저도 같은생각
2022. 1. 28. 오후 3:55, 썰~~ : 굳이 컴공일 필요는 없다
2022. 1. 28. 오후 3:55, 썰~~ : 대학 졸업장이면 될거같아요
2022. 1. 28. 오후 3:55, 리린이 : 가끔보면 외국계 기업들은
2022. 1. 28. 오후 3:55, 썰~~ : 진짜 카이스트가 아닌이상은
2022. 1. 28. 오후 3:55, 썰~~ : 다 똑같은듯
2022. 1. 28. 오후 3:55, 리린이 : 자격요건에 4년제 관련학과 전공 이 있더라구요.
2022. 1. 28. 오후 3:55, 엄지척 제이지 : 근데 오히려 저는 기계 전기 이런 하드한 공학 전공이면 더 좋게 보게 되는거 같아요
2022. 1. 28. 오후 3:55, 리린이 : 컴공나온사람만 지원할 수 있어! 라고하니 아 이거 방통대라도 꼭 해야하나? 생각들더라구요 물론 일부지만요
2022. 1. 28. 오후 3:56, 리린이 : 회사에서 약간 컴공 나온분들이랑 얘기할 때도 좀.. 느껴지는 보이지않는 괴리감도 있기도하고.. ㅋㅋ
2022. 1. 28. 오후 3:57, 썰~~ : 지금 저희회사 개발자 5명있는데 전공자 1명뿐입니다
2022. 1. 28. 오후 3:57, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 1. 28. 오후 3:57, 리린이 : 물론제가 더 갖췄다면 신경쓰이지 않을 요소긴하지만 ㅎ
2022. 1. 28. 오후 3:57, 리린이 : ㅋㅋㅋㅋ
2022. 1. 28. 오후 4:37, Hola : Esbuild 관련해서 공부해보신 분들 있나요? 보고있는데, 웹팩이랑은 좀 컨셉이 다른 느낌이라 어렵네요ㅠ
2022. 1. 28. 오후 4:39, 유용태 (teo.yu) : 대부분의 번들 툴이 javascript로 개발했는데 성능상의 문제가 있어서 go를 이용한 네이티브 빌더로 만들어서 병렬성과 번들 성능을 개선한 빌드 툴이라고 생각하시면 되요
2022. 1. 28. 오후 4:39, 유용태 (teo.yu) : 대략 50배 정도 빠르다고 합니다
2022. 1. 28. 오후 4:40, 유용태 (teo.yu) : 웹팩은 에셋과 loader라고 불리는 플러그인 그리고 dev 서버까지 제공하지만
2022. 1. 28. 오후 4:40, 유용태 (teo.yu) : esbuild는 정말 빌드만 하기 위한 도구입니다
2022. 1. 28. 오후 4:41, 유용태 (teo.yu) : 그래서 esbuild의 성능을 이용해서 webpack처럼 쓰고 싶은 것들이 snowpack이 출시가 되었구요
2022. 1. 28. 오후 4:41, 유용태 (teo.yu) : 이를 벤치마킹해서 vite가 탄생했습니다
2022. 1. 28. 오후 4:41, 생못미 : 사진
2022. 1. 28. 오후 4:41, 유용태 (teo.yu) : 비슷한 맥락으로 Rust로 만들어진 swc가 있고
2022. 1. 28. 오후 4:41, 생못미 : tsc도 go로 포팅할거라고 하네요
2022. 1. 28. 오후 4:42, 유용태 (teo.yu) : tsup이 타입스크립트에 esbuild을 도입한 툴로 지금 쓰이고 있어요
2022. 1. 28. 오후 4:42, 유용태 (teo.yu) : 좀 해야 될거에요 tsc 넘나 느린것 ㅠㅠ
2022. 1. 28. 오후 4:42, 생못미 : 초기 테스트에서 62배 빠르게 나왔다고 하네요
2022. 1. 28. 오후 4:42, 유용태 (teo.yu) : 빨리 됬으면 좋겠네요 +_+
2022. 1. 28. 오후 4:42, 생못미 : https://kdy1.dev/posts/2022/1/tsc-go
2022. 1. 28. 오후 4:42, 유용태 (teo.yu) : 와!!
2022. 1. 28. 오후 4:43, 유용태 (teo.yu) : 톡게시판 '공지': https://kdy1.dev/posts/2022/1/tsc-go
2022. 1. 28. 오후 4:43, Hola : 오호 그렇군요. 설명 감사합니다. 아직 국내에서는 널리 쓰이지는 않는 느낌이군요
2022. 1. 28. 오후 4:43, 유용태 (teo.yu) : vite를 쓰거나 snowpack을 쓰면 쓸 수 있어요
2022. 1. 28. 오후 4:43, 유용태 (teo.yu) : tsup도 많이 쓰이긴 합니다
2022. 1. 28. 오후 4:45, 웹린이 : 와...
2022. 1. 28. 오후 4:46, 유용태 (teo.yu) : 멋있는거 같아요
2022. 1. 28. 오후 4:47, 생못미 : 전세계 개발자들의 시간을 얼마나 줄여주고 계신건지...
2022. 1. 28. 오후 4:49, 웹린이 : 저는 tsc엄청 느리길래
2022. 1. 28. 오후 4:49, 웹린이 : https://www.npmjs.com/package/vite-plugin-checker
2022. 1. 28. 오후 4:49, 웹린이 : 이거 쓰고 있었는데
2022. 1. 28. 오후 4:49, 웹린이 : tsup이라는 거는 오늘 처음 알았어요!
2022. 1. 28. 오후 4:49, 웹린이 : 알아봐야겠네요 감사합니다 ㅎㅎ
2022. 1. 28. 오후 5:44, Luke : https://luke-tofu.tistory.com/33 저번에 여러 분들이 도와주신 useCallback 관련 포스팅해서 공유드려요~ 다시 한 번 감사합니다!! 🙏
2022. 1. 28. 오후 7:02, 김동현 : 좋은 글 잘읽었습니다! 저도 회사업무중에 debounce 관련 정확히 같은 오류를 겪었었네요.
라이브러리 하나 소개시켜드립니다. rooks 라는 라이브러리인데, 말씀하신 debounce 말고 생짜로 짜면귀찮음 가득한 것들을 대부분 커스터마이징된 훅들을 제공합니다 천천히살펴보세요

https://react-hooks.org/docs/useDebounce
2022. 1. 28. 오후 7:20, 주니어개발자 : 안녕하세요 next.js로 개발중인 해결되지 않은 문제가 있어 질문 올려봐요. Dev 모드에서 public 폴더 안에 정적파일들이 정상적으로 접근되는데 Production 모드에서는 접근을 못해 폰트나 이미지가 나오지 않는 문제가 있습니다. 혹시 해결하셨거나 비슷한 문제 접근해보신 분들 계시면 의견 남겨주세요 ㅠㅠ
2022. 1. 28. 오후 7:20, Luke : 오...... 한번 쭉 둘러봤는데 제가 커스텀 훅으로 만들어뒀거나 만들까 고민하던 로직들도 몇몇개 보이네요!! 감사드립니다 ㅎㅎ 유용하겠어요
2022. 1. 28. 오후 8:09, 유용태 (teo.yu) : 톡게시판 '공지': https://luke-tofu.tistory.com/33 저번에 여러 분들이 도와주신 useCallback 관련 포스팅해서 공유드려요~ 다시 한 번 감사합니다!! 🙏
2022. 1. 28. 오후 9:12, 화가난다 화가나 그래서 난 화가임 : scss에
2022. 1. 28. 오후 9:12, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 28. 오후 9:13, 화가난다 화가나 그래서 난 화가임 : 저거 nesting 하는 거
2022. 1. 28. 오후 9:13, 화가난다 화가나 그래서 난 화가임 : &:-title
2022. 1. 28. 오후 9:13, 화가난다 화가나 그래서 난 화가임 : 이런 비슷한 거 있지 않았나용?
2022. 1. 28. 오후 9:17, 리린이 : &-title 이요
2022. 1. 28. 오후 9:20, 화가난다 화가나 그래서 난 화가임 : 와 근데
2022. 1. 28. 오후 9:20, 화가난다 화가나 그래서 난 화가임 : 진짜 억울하다고 하면 안되는 거 알지만
2022. 1. 28. 오후 9:20, 화가난다 화가나 그래서 난 화가임 : 억울해요 ㅋㅋㅋ
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : 저 분명 처음에 &- 이거랑
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : 아 &:-
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : 이거 했다
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : ㅋㅋㅋㅋ
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : hover 할 때 쓰던 거
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : ㅠㅠ
2022. 1. 28. 오후 9:21, 화가난다 화가나 그래서 난 화가임 : 감사함다
2022. 1. 28. 오후 9:21, 리린이 : ㅋㅋㅋ
2022. 1. 28. 오후 9:44, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 1. 28. 오후 10:33, 결과보단 과정을 / React,JS : 안녕하세요. 애들이랑 눈썰매장 다녀왔더니 글이 또 한아름 올라왔네요. ㅎㅎ Luke님의 블로그 글고 보이고…  
저 한가지 질문이 있습니다. 아는 분이 3d관련 기능 구현 알바 한번 해보지 않겠냐고 제안을 해주셨는데 회사 생활하면서 이런 경우가 처음이라 회사 플젝 일정에만 문제 없으면 수락해도 되지 않나 싶은데 금액이 생각보다 있어서 와이프는 회사 내규나 다른 법적인 문제? 가 있지 않을까 걱정을 합니다. 다른분들은 보통 이런 경우 어떻게 하시는지 궁금해서 글을 남겨봅니다. 어떻게들 하시나요??
2022. 1. 28. 오후 10:35, 김동현 : 회사 내규를 확인하시면 됩니다! 겸업이 금지되어있는지 알아보세요
2022. 1. 28. 오후 10:36, 김동현 : 저는 금지되어 있지 않았고, 허락을 맡고 진행했습니다.
2022. 1. 28. 오후 10:39, 유용태 (teo.yu) : 역시 회사에 먼저 물어 보는게 제일 확실하지 않을까 합니다
2022. 1. 28. 오후 11:14, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 28. 오후 11:15, 화가난다 화가나 그래서 난 화가임 : write[action.name] 안되는 이유가
저 깊은 복사? 그거 때문에 안되는 거 같아서 produce를 하면 될 거 같긴한데, 개인적으로 저 부분을 따로 공부하고 싶은데용!
2022. 1. 28. 오후 11:15, 화가난다 화가나 그래서 난 화가임 : 깊은 복사를 공부하면
2022. 1. 28. 오후 11:15, 화가난다 화가나 그래서 난 화가임 : 될까용?
2022. 1. 28. 오후 11:15, 화가난다 화가나 그래서 난 화가임 : 참고로 action.name의 값은 word나 pinyin입니다!
2022. 1. 28. 오후 11:24, 화가난다 화가나 그래서 난 화가임 : immer로 일단 해결은 했는데, write를 저러면 안되구나. 깊은 복사도 이참에 공부해봐야겠어융
2022. 1. 28. 오후 11:28, 파이버 : 엥 immer 쓰면 해결되나요?
2022. 1. 28. 오후 11:28, 파이버 : 자스에 저런 문법이 있었나
2022. 1. 28. 오후 11:31, Hardy : state.write로는 안되나요??
2022. 1. 28. 오후 11:32, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 28. 오후 11:32, 화가난다 화가나 그래서 난 화가임 : immer produce로 해결하였고
2022. 1. 28. 오후 11:32, 화가난다 화가나 그래서 난 화가임 : 그 write를
2022. 1. 28. 오후 11:33, 화가난다 화가나 그래서 난 화가임 : 왠지 ['write']로 했으면 됐을 거 같아용 확실하진 않음 좀 이따가 다시 해보고 알려드리겠슴다
2022. 1. 28. 오후 11:34, Hardy : 그냥 write[...] 는 없는 값이라 그런거 아닌가요? statr.write[...] 이렇게 접근하셔야 하지 않나 싶습니다
2022. 1. 28. 오후 11:36, 결과보단 과정을 / React,JS : 회사에 문의하면 아규 거리가 생길꺼 같아서 다른분들은 어떻게 하나 싶었는데… 역시나 문의 없이 진행하면 문제가 될 소지가 다분하네요 ㅜㅜ답변 감사드립니다.
2022. 1. 28. 오후 11:38, 화가난다 화가나 그래서 난 화가임 : 무슨 말인지 알 거 같습니다. 근데 저 깊은 복사 찐하게 공부 한 번 해봐야겠어용. 뭔가 객체 안에 객체 올 때마다 불안함요 ㅋㅋㅋㅋ

2022년 1월 29일 토요일
2022. 1. 29. 오전 3:03, Matthew : 네
2022. 1. 29. 오전 3:03, Matthew : 네
2022. 1. 29. 오전 3:53, 생못미 : ['write' + action.item] 이라고 쓰셨으면 될거 같아요 깊은 복사나 immer가 아니라 객체 계산된 속성명 검색해보시면 신택스 문제라는 걸 아실 수 있을거에요
2022. 1. 29. 오전 3:53, 생못미 : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Object_initializer#계산된_프로퍼티명
2022. 1. 29. 오전 8:25, 여의도개발 : 근데 테오님은 주말에 보통 뭐하세요? 급 궁금해서요 ㅎㅎ
2022. 1. 29. 오전 9:05, 유용태 (teo.yu) : 주말에는 주로 애들을 봅니다. 애들이랑 놀면서 요새는 블로그 뭐쓸지랑 뭐 만들지 고민하다가 생각나는거 있으면 녹음기 켜서 녹음해두고 저희 오픈 채팅 글 올라오면 답변 달고 그러고 있습니다.
2022. 1. 29. 오전 9:13, 유용태 (teo.yu) : https://engineering.linecorp.com/en/blog/the-baseline-for-web-development-in-2022/
2022. 1. 29. 오전 9:18, 유용태 (teo.yu) : https://www.smashingmagazine.com/2022/01/devtools-updates-2022/
2022. 1. 29. 오전 9:48, 유용태 (teo.yu) : 지금도 웹 사이트의  33%는 wordpress와 jquery로 만들어져있다. react로 만들어진 것은 8% 라는 사실은 흥미롭네요 ㅎ
2022. 1. 29. 오후 1:59, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 1. 29. 오후 2:00, 화가난다 화가나 그래서 난 화가임 : 문법 작성이 잘못된 부분 같나용? actio.dictionary를 쓰려하는데 자꾸 ',' expected.라고 뜨네용
2022. 1. 29. 오후 2:01, one_dev : action.text 키값일  적어주면 되지 않을까요 ??
2022. 1. 29. 오후 2:03, 화가난다 화가나 그래서 난 화가임 : 넹?
2022. 1. 29. 오후 2:04, 화가난다 화가나 그래서 난 화가임 : 일단은 그 위 라인에 걍 action.text를 변수에 담아서 사용하니까 되길래 이렇게 사용하고는 있는데
2022. 1. 29. 오후 2:04, Hardy : 키 없이 값만 넣고 계신거 아닌가요?
2022. 1. 29. 오후 2:04, 떨고있는 어피치 : action[item].text
2022. 1. 29. 오후 2:04, 화가난다 화가나 그래서 난 화가임 : 저거는 왜 안되는 건지 궁금하네용
2022. 1. 29. 오후 2:04, 떨고있는 어피치 : 아닌가요?
2022. 1. 29. 오후 2:05, 화가난다 화가나 그래서 난 화가임 : action[item].text는 생소한데
2022. 1. 29. 오후 2:05, 화가난다 화가나 그래서 난 화가임 : 한 번 해보겠습니다
2022. 1. 29. 오후 2:05, 화가난다 화가나 그래서 난 화가임 : 아닙니다! 값은 제대로 넣었슴다!
2022. 1. 29. 오후 2:05, 여의도개발 : https://youtu.be/QtOF0uMBy7k
2022. 1. 29. 오후 2:06, 떨고있는 어피치 : 저도 초보라
2022. 1. 29. 오후 2:08, Hardy : 객체는 키와 값으로 이루어진 프로퍼티들이 모여있는 형태인데 action.text라고만 적으시면 키와 값의 형태가 아니지 않나요?
2022. 1. 29. 오후 2:08, 피카츄돈까스/React,RN : 와
2022. 1. 29. 오후 2:09, Hardy : {...item, text: action.text}
2022. 1. 29. 오후 2:09, Hardy : 이게 맞지 않나 싶습니다
2022. 1. 29. 오후 2:09, Hardy : item의 값을 변경하고 싶으신거면 키를 변경하고자 하는 키로 바꾸심 되요
2022. 1. 29. 오후 2:12, Hola : 넵 키를 적어주셔야 할것 같아요 ~!!
2022. 1. 29. 오후 2:15, 화가난다 화가나 그래서 난 화가임 : 아하!!!!! 감사합니다! 사실 text가 객체라서 전개 연산자로 풀어주니까 되넹요!! 감사함다
2022. 1. 29. 오후 3:40, 프론트 : https://velog.io/@juunini/jQuery%EC%97%90-%EB%8C%80%ED%95%9C-%EC%8A%AC%ED%94%88-%EA%B3%A0%EC%B0%B0?fbclid=IwAR2o-sNVQBresUXeQStY6PP2Jj0a--BG0MJXgCGbhWAT1_ULn7k9ql0yYL4
2022. 1. 29. 오후 4:11, TriplexLab : 매우 공감가는 내용이네요ㅎㅎ 현재의 리액트,뷰 등등도 언젠가는 jquery 처럼 될수도 있으니깐요
2022. 1. 29. 오후 4:32, 영보떼 : 여러분 ㅠ.ㅠ
2022. 1. 29. 오후 4:35, 영보떼 : 문자열 작성시 큰 따옴표와 작은 따옴표 아무거나 써도 상관 없다 배웠는데, (열리고 닫히는건 같아야 함)

요건 왜 큰 따음표와 작은 따옴표 구분 지어야 할까요 ?

네모박스 친 값들을 " " 로 쓰면 에러 안 뜨던데.. 이 부분이 궁금합니다 !

html, css 와 javascript 의 값은 큰 따옴표, 작은 따옴표 서로 구분해서 작성해야해서 그런가요 ?
2022. 1. 29. 오후 4:35, 영보떼 : 사진
2022. 1. 29. 오후 4:36, 영보떼 : 에러
2022. 1. 29. 오후 4:36, 영보떼 : 사진
2022. 1. 29. 오후 4:36, 파이버 : 자바스크립트가 상관없는거고 html은
2022. 1. 29. 오후 4:36, 영보떼 : 에러X
2022. 1. 29. 오후 4:36, 썰~~ : 작은따옴표안에 작은따옴표는 안됩니다
2022. 1. 29. 오후 4:36, 파이버 : 아 그거구나! 머쓱
2022. 1. 29. 오후 4:36, 썰~~ : 큰따옴표안에 작은따옴표만 가능해요
2022. 1. 29. 오후 4:37, 영보떼 : 전 반대로 작은 따옴표 안에 큰 따옴표를 하던
큰 따옴표 안에 작은 따옴표를 하던 구현은 되길래
html css 랑 js랑 구분 지어야하나? 생각 들었네용ㅠ.ㅠ
2022. 1. 29. 오후 4:37, 썰~~ : 아 구분은 아니고
2022. 1. 29. 오후 4:37, 썰~~ : 같은건 안되는건가
2022. 1. 29. 오후 4:37, 썰~~ : 그럴꺼에요
2022. 1. 29. 오후 4:38, 썰~~ : 아 작은거 안에 큰거도 되나보네요
2022. 1. 29. 오후 4:38, 썰~~ : 같은거만 안쓰면 됩니다 그럼
2022. 1. 29. 오후 4:38, 영보떼 : 근데 또 어쩔땐 같은거 써도 되길래.. 이 구분이 너무 명확하지 않아서 헷갈립니다 ㅠㅠ vscode 빨강색 에러에 의존할 수도 없고 ㅠㅠ..
2022. 1. 29. 오후 4:38, 썰~~ : 시작점과 끝점을 나타내는거기 때문에 같은거 쓰면 시작점끝점이 모호해져서 에러나요
2022. 1. 29. 오후 4:38, 영보떼 : 서치해도 제가 서치를 못하는건지 제 궁금증에 대한 명확한 답변이 안나와용 ..
2022. 1. 29. 오후 4:39, 썰~~ : 흠 같은거 안쓰는걸로 하시는게 더 나을거에요
2022. 1. 29. 오후 4:39, 썰~~ : 에러생길 가능성이 농후해서
2022. 1. 29. 오후 4:39, 썰~~ : 그냥 다른거 써야지 이렇게 쓰는게 좋습니다
2022. 1. 29. 오후 4:40, 김태경 : https://kimserver-frontend.tistory.com/5?category=530985
이번에 처음으로 블로그를 써봤습니다. form관련으로 썼는데, 읽어주시면 감사합니다 ㅎ
2022. 1. 29. 오후 4:40, 영보떼 : 사진
2022. 1. 29. 오후 4:40, 파이버 : https://ko.javascript.info/string 이거 보시면 좀 명확하려나요
2022. 1. 29. 오후 4:40, 파이버 : 자바스크립트에만 해당되는 얘기긴 한데
2022. 1. 29. 오후 4:40, 영보떼 : 아 이 코드 같은 경우 input 태그의 onclick속성의 시작이 ' 라서 제가 속성 값(?) 시작을 ' 로 같게하면
2022. 1. 29. 오후 4:41, 영보떼 : onclick을 닫는건지? 아님 색상이나 뭐 저런 셀렉터들의 시작을 나타내는건지 헷갈려서 저렇게 오류 뜨는건가요 ?
2022. 1. 29. 오후 4:41, 썰~~ : 이거 한번 보셔요 ㅋㅋㅋ
2022. 1. 29. 오후 4:41, 파이버 : 'a'b'c' 라고 썼을 때 컴퓨터가 그걸 보고
2022. 1. 29. 오후 4:42, 썰~~ : 자바스크립트 들어가셨네요 ㅋㅋ
2022. 1. 29. 오후 4:42, 썰~~ : 근데
2022. 1. 29. 오후 4:42, 썰~~ : 화이팅입니다
2022. 1. 29. 오후 4:42, 파이버 : 'a' 라는 문자열 과 'c'라는 문자열 사이에 b라는 친구가 있는건지
2022. 1. 29. 오후 4:42, 파이버 : a'b'c 라는 문자열인 건지
2022. 1. 29. 오후 4:43, 파이버 : 그걸 구분하는 게 가능한지 한번 고민해보시면 어떨까유
2022. 1. 29. 오후 4:43, 영보떼 : 잠시만요 링크 보낸거 이해 안돼서
2022. 1. 29. 오후 4:43, 영보떼 : 3회독중입니다..
2022. 1. 29. 오후 4:44, 영보떼 : 저 백틱이란걸 처음바서..
2022. 1. 29. 오후 4:44, 썰~~ : 백틱은
2022. 1. 29. 오후 4:44, 썰~~ : 안보셔도 됩니다 ㅋㅋ
2022. 1. 29. 오후 4:44, 썰~~ : 1옆에있긴해요
2022. 1. 29. 오후 4:45, 썰~~ : 백틱은 자바스크립트 쓰면 많이쓰긴하지만 일단 패스..
2022. 1. 29. 오후 4:45, 영보떼 : 흠 근데 보내주신건 제가 궁금해하는 부분이 아니라ㅠㅠ
2022. 1. 29. 오후 4:48, 파이버 : 궁금하긴 하네요 HTML 파서가 따옴표 어떻게 처리하지
2022. 1. 29. 오후 4:53, 파이버 : 보떼님같은 경우는 큰따옴표 작은 따옴표 문제가 아니라

onclick='document.querySelector('body').style.color='blue''

이거를 컴퓨터가

onclick='
  document.querySelector('body').style.color='blue'
'

이렇게 의도하신 대로 읽은 게 아니라

onclick='
  document.querySelector(
'

body').style.color='blue'' <- 인식불가

이렇게 읽은 경우인 거 같아요
2022. 1. 29. 오후 4:53, 파이버 : 특별히 다른 지식이 필요하거나 특별히 다른 뭔가가 필요한 게 아니라 그냥 단순 문법 오류
2022. 1. 29. 오후 4:55, 영보떼 : 아 저 온클릭속성이 닫힌걸루 돼서 뒷부분이
2022. 1. 29. 오후 4:55, 영보떼 : 잘린건가용 ?
2022. 1. 29. 오후 4:55, 파이버 : 넹
2022. 1. 29. 오후 4:56, 썰~~ : 넵 ㅎㅎ
2022. 1. 29. 오후 4:56, 파이버 : 컴퓨터 입장에서는 코드 봤더니 문자열 열었다가 문자열 닫았으니까 닫는 게 당연한거라
2022. 1. 29. 오후 4:59, 영보떼 : 아아 와 진짜 궁금한거 싹 해결이네요
2022. 1. 29. 오후 4:59, 영보떼 : 이거 궁금한지 한 5일은 된거 같은데
2022. 1. 29. 오후 4:59, 영보떼 : 넘 감사드립니다 ^^
2022. 1. 29. 오후 5:03, 화가난다 화가나 그래서 난 화가임 : 기능구현완성이라고 생각하고 페이지들어가보니까 에러가 많이 떠서, 아 뭐야 왜 안돼하고? 코드 아무것도 안만지고 이리저리 살펴보다가 그냥 새로고침 눌렀는데, 해결돼있는 거 무슨상황이에용? ㅋㅋㅋ
2022. 1. 29. 오후 5:03, 화가난다 화가나 그래서 난 화가임 : 당황스럽군
2022. 1. 29. 오후 5:06, 파이버 : 뭐가 안 될 때

1. 새로고침한다
2. 강력 새로고침한다
3. 코드를 30초 정도 본다
4. 데브서버를 껐다킨다

일단 여기까지 기계적으로 하고 나서 생각하시면 됩니다
2022. 1. 29. 오후 5:07, 파이버 : 됩니다 -> 추천드립니다 😅
2022. 1. 29. 오후 5:14, 썰~~ : 저는 궁금한거 반나절 넘기지 않으셨으면 좋겠어요
2022. 1. 29. 오후 5:14, 썰~~ : 너무 바로 물어보는것도 좋아하지 않지만 반나절 이상되면 솔직히 시간낭비라고 생각합니다
2022. 1. 29. 오후 5:15, 영보떼 : 앗 그거 넘기구 다른거 하고 있긴 했었는데
2022. 1. 29. 오후 5:15, 영보떼 : 한 6시간 고민하다 안풀리면 물어볼게요 !
2022. 1. 29. 오후 5:16, 썰~~ : 넵 ㅎㅎ
2022. 1. 29. 오후 5:30, TriplexLab : https://youtu.be/2GhfkfcoFr4
2022. 1. 29. 오후 5:31, TriplexLab : 와 이거 시각적으로 볼수 있어서 좋네요
2022. 1. 29. 오후 5:55, 화가난다 화가나 그래서 난 화가임 : 오 ㅋㅋㅋㅋㅋ 근데 뭐가 에러 뜨면, vscode 내부에서 찾게되더라구용
2022. 1. 29. 오후 7:10, 유용태 (teo.yu) : 톡게시판 '공지': https://kimserver-frontend.tistory.com/5?category=530985
이번에 처음으로 블로그를 써봤습니다. form관련으로 썼는데, 읽어주시면 감사합니다 ㅎ
2022. 1. 29. 오후 7:52, 자율 : 엇 이제 벨로그 안 하시고 티스토리 하시는 건가요?
2022. 1. 29. 오후 8:26, 화가난다 화가나 그래서 난 화가임 : 잘 읽었슴다~
2022. 1. 29. 오후 8:27, 화가난다 화가나 그래서 난 화가임 : form에 대한 고민을 해본 적이 없는데, 읽으면서 아! 그럴 수도 있겠구나~ 생각했어용
2022. 1. 29. 오후 9:07, 유지남 : react 에서의 폼 제어는 거의 react-hook-form 으로 많이들 하는 것 같습니다.
2022. 1. 29. 오후 9:09, Muzi watching TV : 제가 일하는 회사에서도 react-hook-form 씁니다~~~
2022. 1. 29. 오후 9:29, 파이버 : 저희는 포믹 써요!
2022. 1. 29. 오후 9:48, 진현 : 사진
2022. 1. 29. 오후 9:49, 진현 : https://o-bang.kr/
2022. 1. 29. 오후 9:49, 진현 : 좋은 것 같아서 공유드립니당!!
2022. 1. 29. 오후 9:50, 유용태 (teo.yu) : 톡게시판 '공지': https://o-bang.kr/
2022. 1. 29. 오후 10:01, 화가난다 화가나 그래서 난 화가임 : 와 진짜 좋은 거 같아요..!
2022. 1. 29. 오후 11:16, Vintz : 와..아이디어 좋네요
2022. 1. 29. 오후 11:16, 꼬북 : 불편하다는 생각만하고 실천안한 내자신 ㅠ
2022. 1. 29. 오후 11:17, Vintz : 저두 생산자의 시각을 좀 키워야겠어요
2022. 1. 29. 오후 11:17, Vintz : 🤣
2022. 1. 29. 오후 11:46, Vintz : 여러분 궁금한게 있어요! 반응형 미디어 쿼리 작성하실 때 px로 하시나요 rem으로 하시나요?
2022. 1. 29. 오후 11:48, Vintz : 저는 보통 rem으로 작성하는데 생각해보니 px이 더 좋은게 아닌가..? 싶더라구요 이 고민만 이틀넘게 했네요 ㅠ
2022. 1. 29. 오후 11:52, Vintz : 예시로 600px이상일 때, 태블릿 레이아웃으로 변경된다고 해볼게요. rem으로 미디어쿼리를 설정하게 되면 만약 사용자가 브라우저에서 폰트 크기를 작게 설정하면 600px 이하일 때도 태블릿 레이아웃이 되는데요..! 이게 과연 좋은 반응형인지 모르겠어요.

오히려 600px로 고정을 하는 게 더 좋은건지..
2022. 1. 29. 오후 11:53, Vintz : 사진
2022. 1. 29. 오후 11:53, Vintz : 사진
2022. 1. 29. 오후 11:53, Vintz : 카톡도배 죄송합니다..😭

2022년 1월 30일 일요일
2022. 1. 30. 오전 12:07, 웹린이 : https://brunch.co.kr/@clay1987/170
예전에 다른분이 공유하셨던 글인데 도움이 되실 것 같아요!
2022. 1. 30. 오전 12:07, Hola : 아 저도 이거 보여드리려고 찾다가 실패했는데 위에 있었군요
2022. 1. 30. 오전 12:07, Hola : ㅋㅋㅋㅋㅋ
2022. 1. 30. 오전 12:08, 웹린이 : 얼른 가져왔습니다 ㄹㄹ
2022. 1. 30. 오전 12:08, 웹린이 : ㅎㅎ
2022. 1. 30. 오전 12:09, 프론트준비생 : Rem을써야하는군
2022. 1. 30. 오전 12:14, Vintz : 엌ㅋㅋㅋ 이거 제가 공유했었을거에요 아마..
2022. 1. 30. 오전 12:14, Vintz : 여러 글을 참고해봐도 '이게 좋은건가?'라는 생각이 들어서요 ㅠㅠ
2022. 1. 30. 오전 12:14, Vintz : https://zellwk.com/blog/media-query-units/
2022. 1. 30. 오전 12:14, Vintz : 이런 글도 있습니다..!
2022. 1. 30. 오전 12:20: 파이팅하는 무지님이 들어왔습니다.
2022. 1. 30. 오전 12:20, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 30. 오전 12:20, 파이팅하는 무지 : 안녕하세요 :)
2022. 1. 30. 오전 12:21, 파이팅하는 무지 : 블로그 글보고 rxjs 사용하시는 분을 뵈어서 넘 반가워서 달려왔습니다
2022. 1. 30. 오전 12:21, 파이팅하는 무지 : 저는 react + rxjs로 주로 사용하는데요
2022. 1. 30. 오전 12:21, 파이팅하는 무지 : rxjs의 BehaviorSubject로 주로 상태관리를 하고, 블록체인 앱을 개발하고 있기 때문에 비동기 처리를 꽤 많이 해야해서
2022. 1. 30. 오전 12:21, 파이팅하는 무지 : Observable도 새로 만들어서 사용하고 있습니다!
2022. 1. 30. 오전 12:22, 파이팅하는 무지 : 보던 중에, Svelte와 Rxjs가 굉장히 궁합이 잘 맞다고 들어서
2022. 1. 30. 오전 12:22, 파이팅하는 무지 : Svelte에 관심이 많았는데 Rxjs와 궁합도 잘맞다니!
2022. 1. 30. 오전 12:22, 파이팅하는 무지 : 테오님은 어떻게 쓰고 계신지 궁금해서 놀러와봤습니다 잘 부탁드립니다!
2022. 1. 30. 오전 12:22, 파이팅하는 무지 : 이모티콘 
2022. 1. 30. 오전 8:38, 유용태 (teo.yu) : 반갑습니다 어제는 시간대가 맞지 않아서 바로 답변을 못 드렸네요! rxjs를 쓰신다니 그리고 Observable도 새로 만들어 쓰신다니 동질감이 무지무지 샘솟네요!
2022. 1. 30. 오전 8:40, 유용태 (teo.yu) : 저는 Obsevable를 이용해서 redux와 firebase에서 영감을 받아 자체 제작한 상태관리를 만들어서 사용하고 있습니다 이건 기회가 되면 공유 해볼 예정입니다
2022. 1. 30. 오전 8:43, 유용태 (teo.yu) : svelte에서는 자체적인 store가 있고 이것을 $기호를 이용하면 컴파일이 되어 자동으로 subscribe / unsubscribe를 해주고 있습니다 ex <div>hello, {$name}<div>
2022. 1. 30. 오전 8:45, 유용태 (teo.yu) : svetle는 꼭 자체 store가 아니라 subscribe duck type만 맞으면 되는 거라 rxjs도 동일한 방식으로 사용을 할수 있고 virtual DOM을 쓰지 않기 때문에 업데이트를 한군데가 반복되어도 react처럼 컴포넌트 전체를 다시 계산하지 않습니다
2022. 1. 30. 오전 8:45, 유용태 (teo.yu) : https://timdeschryver.dev/blog/unlocking-reactivity-with-svelte-and-rxjs#a-svelte-store
2022. 1. 30. 오전 8:47, 유용태 (teo.yu) : 그리고 이것은 제가 지금 개발하고 쓰고 있는 라이브러리 입니다 https://github.com/developer-1px/adorable
2022. 1. 30. 오전 8:49, 유용태 (teo.yu) : 아직은 문서화전이라 나중에 어떻게 사용하고 계신지 인사이트 서로 나눠보면 너무 좋을 것 같습니다 자체적으로 Observable만들어 사용하신다는 부분도 너무 관심이 가네요!! +_+
2022. 1. 30. 오전 9:54, 유용태 (teo.yu) : 기술이나 스펙 보다는 의도를 먼저 생각해보시면 좋을 것 같아요. 타블렛과 모바일 그리고 PC의 레이아웃을 일반적으로 다르게 가져가는 이유는 서로간의 사용성이 다르기 때문입니다 PC가 작아져도 타블렛 UI로 전환이 되면 유용할수 있고 아니면 더 불편해질수도 있습니다 그러니 기기에 맞춰서 내가 반응형을 제공할거라면 px를 쓰는게 낫습니다
2022. 1. 30. 오전 9:55, 유용태 (teo.yu) : rem과 px에 대해서 rem을 쓰면 당연히 px의 기능을 함께 쓰면서도 추가적인 이점이 있으니 대부분 rem을 쓰라고 할겁니다. 그럼에도 실제 rem 사용량이 높지 않은 것은 굳이 안 필요한데 애써 바꿔야하는 귀찮음을 감수해야 하는 것인가? 하는 것입니다.
2022. 1. 30. 오전 10:02, 유용태 (teo.yu) : 질문에 대한 답만 정리하자면 미디어 쿼리에서 맞추고자 하는 의도가 기기(타블렛, 모바일)에 있다면 px를 쓰는게 낫다입니다.
2022. 1. 30. 오전 10:05, 유용태 (teo.yu) : 다만 터치형 포인터를 쓰는지 여부 미디어 쿼리와 화면 크기가 아니라 기기의 크기를 기준 미디어 쿼리 등이 나오고 있어서 그게 보편화가 되었을때에는 정확한 미디어 쿼리를 쓰는게 나을거라고 생각해요
2022. 1. 30. 오전 10:42, Vintz : 이모티콘 정말 너무너무 감사드립니다 테오..! 깊이가 다르네요 정말!! 😍 많은 부분이 해소되었습니다 정말 감사드려요 :)
2022. 1. 30. 오후 12:09: 이용욱님이 들어왔습니다.
2022. 1. 30. 오후 12:09, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 30. 오후 12:12, 유용태 (teo.yu) : 안녕하세요 이용욱님 반갑습니다 :)
2022. 1. 30. 오후 12:13, 이용욱 : 안녕하세요!ㅎㅎ 잘부탁드립니다
2022. 1. 30. 오후 12:14, 유용태 (teo.yu) : 네 언제든지 궁금한 거 있으면 편하게 글 남겨주시고 다른 분들이 궁금해 하는 것들 중에 내가 잘 알고 있다 싶으면 또 언제든 편하게 글 남겨 주세요 :)
2022. 1. 30. 오후 12:14, Hola : 든든한 선배님이 생긴 느낌이라 너무 좋네요! 테오님 항상 감사드려요 :)
2022. 1. 30. 오후 12:16, 이용욱 : 오늘 아침에 삘받아서 svelte+vite+adorableCss 로 블로그 만들고 단톡방까지 들어왔네요..ㅎㅎ 많이 배우고 있습니다!
2022. 1. 30. 오후 12:16, 피카츄돈까스/React,RN : 와..
2022. 1. 30. 오후 12:16, 유용태 (teo.yu) : 와!! 멋지네여!! 감사합니다
2022. 1. 30. 오후 12:18, 유용태 (teo.yu) : https://kit.svelte.dev/
2022. 1. 30. 오후 12:18, 유용태 (teo.yu) : svetlekit도 한번 해보시면 좋을거에요!
2022. 1. 30. 오후 12:20, 이용욱 : 오오!! 바로 한입 해봐야겠네요
2022. 1. 30. 오후 12:24, 파이팅하는 무지 : 오!' 감사합니다!!! 저도 공유할게요!
2022. 1. 30. 오후 12:25, 꼬북 : 아 ㅋㅋ 스벨트마렵네
2022. 1. 30. 오후 12:57, Vintz : 스벨트랑 어도러블 팬들이 늘어나고 있군여 ㅎㅎㅎ
2022. 1. 30. 오후 1:00, 유지남 : 예전에는 jquery + handlebarjs, twig + any serverside(번들러 용도) 로 많이 사용 했습니다.

최초의 번들러라 불리는 grunt가 나오기 이전에는 자바로 번들러를 만들었고, css, js 정도만 번들링 하는 정도였습니다.

이미지의 경우도 c 기반 라이브러리인 image magic 라이브러리로 관리 했습니다.

지금은 모든게 nodejs 로 돌릴수 있지만요.

그만큼 모든 영역에 가능성을 보여준 게 jquery이고, 점점 복잡한 기술, 복잡한 문법이 생기고, 쉬운걸 어렵게 만드는 시대가 되버려서 svelte 와 같은 간단한 형태가 더 관심이 많아지는게 아닌가 싶어요. (vite도 마찬가지)
2022. 1. 30. 오후 1:08, 퍼블퍼블 : prepend append / before after  의 차이점은 무엇인가용!??!!?
2022. 1. 30. 오후 1:12, 유지남 : 둘다 앞뒤에 어떤 요소를 넣는 기능이고, prepend, append는 javascript에서, before, after는 css 로 넣을 수 있습니다.
2022. 1. 30. 오후 1:38, 스타트업개발자 : 회사에서 admin 백 오피스를 개발하는데 상태관리를 굳이 써야하는지 개발자들이랑 얘기중인데,,, 어떻게들 생각하세요?
 * react + typescript + antd
 * typescript 도 겨우 설득시켜서 도입,,,
2022. 1. 30. 오후 1:42, 파이버 : 어드민이 보통 정보 조회하고 버튼 클릭하고 그런 거밖에 없어서 그런지 상태관리를 할 일이 잘 없더라고요
2022. 1. 30. 오후 1:43, 파이버 : 저희는 보안상 로그인할때 2FA 로직 있는데 그거 하나만 리덕스 통하고 나머지는 안 쓰고 있어요!
2022. 1. 30. 오후 5:14, 유용태 (teo.yu) : 백 오피스는 복잡한 상태관리까지는 필요없다는게 중론이긴 합니다. 그러다보니 Redux류의 상태관리 보다는 React-Query와 같은 서버 데이터를 관리하는 쪽을 많이 선택하고 있어서 아예 안 쓰기 보다는 도입한다면 React-Query를 한번 고려해보심을 추천드려요
2022. 1. 30. 오후 5:28, 스타트업개발자 : 감사합니다!! 그리고 항상 궁금한데 react query 가 어떻게 서버데이터를 관리한다 볼 수 있는지 공부는 하는데,,, 좀 궁금합니다
2022. 1. 30. 오후 5:30, 유용태 (teo.yu) : https://if.kakao.com/session/118
2022. 1. 30. 오후 5:33, 스타트업개발자 : 감사합니다!
2022. 1. 30. 오후 5:33, 스타트업개발자 : 계속공부해보겠습니다 ㅠㅠ
2022. 1. 30. 오후 8:36, 유용태 (teo.yu) : https://youtu.be/Y7PHBSqDfvE
2022. 1. 30. 오후 9:12, 설아아빠 : 방금 보고 톡방에 공유하려는데 이미 올라가있네요.... ㅋ
2022. 1. 30. 오후 10:07, 스타트업개발자 : 이번에 api 구조를 잡고있는데 이렇게 각 service 네이밍으로 각 페이지에서 호출하는 형식으로 하려는데 혹시 다른 좋은 방법이 있는지 궁금합니다.
2022. 1. 30. 오후 10:07, 스타트업개발자 : 사진
2022. 1. 30. 오후 10:08, 스타트업개발자 : 그리고 각 앞에는 get / create / update / delete 로 갈 듯한데,,, 다른 네이밍이있는지 궁금합니다
2022. 1. 30. 오후 10:11, 튜튜 : 백엔드요?
2022. 1. 30. 오후 10:11, 유용태 (teo.yu) : 이건 취향이라서 저는 http method랑 맞추되 목록 조회만 추가해서 fetch, get, post, put, patch, delete 이런식으로 쓰고 특별히 다르게 쓸때 ex) move 같은 경우에는 직접적으로 moveXXX 와 같이 쓰고 있어요
2022. 1. 30. 오후 10:11, 파이버 : 제 개인 취향으로는 메소드는 묶기보단 하나하나 export 하는 걸 선호하긴 합니다
2022. 1. 30. 오후 10:11, 스타트업개발자 : 리액트에서 저렇게 구조잡으려고하고있습니다
2022. 1. 30. 오후 10:13, 스타트업개발자 : 저 예제대로라면 각 페이지에서 service.getUsers() 를 사용한다 이해하면 될까요?
2022. 1. 30. 오후 10:13, 스타트업개발자 : 목록 조회를 fetch로 하시는 것 같은데 목록 조회가 정확히 어떤부분인지 궁금합니다
2022. 1. 30. 오후 10:14, j : /user/all 하신 부분이 user의 전체 목록을 조조회해는 서비스 아닌가요?
2022. 1. 30. 오후 10:16, 스타트업개발자 : 네네 근데 말씀대로라면 http method 로 맞추면 get 오로 맞출수있지 않나? 해서 물어봤습니다
2022. 1. 30. 오후 10:17, j : get은 보통 하나를 조회할때 사용하는 걸거고, fetch로 다수의 데이터를 불러올 경우도 있고..
2022. 1. 30. 오후 10:17, j : 네이밍의 차이 아닐까 싶네요
2022. 1. 30. 오후 10:17, 유용태 (teo.yu) : 복수 객체는 fetch 단일 개체 조회는 get으로 접두사를 쓰고 있어요
2022. 1. 30. 오후 10:17, 파이버 : userService = { getUsers () {} } 이렇게 사용하는 거보다

export const getUsers = () => { 이런 식으로 각각의 메소드를 export 하는 걸 말씀드렸던거예요!
2022. 1. 30. 오후 10:17, j : 전 단일, 복수 다 fetchUser fetchUser 이런식으로 사용합니다
2022. 1. 30. 오후 10:18, j : 서비스 네이밍은 백엔드랑 이야기해서 서로 명시적으로 합의하는 편이어서..
2022. 1. 30. 오후 10:19, 스타트업개발자 : 아하!! 다들 감사합니다!!
2022. 1. 30. 오후 10:19, 스타트업개발자 : 주말에다가 늦은시간인데 ㅠㅠ 다들 답변감사합니다!

2022년 1월 31일 월요일
2022. 1. 31. 오전 7:14: 위치원님이 들어왔습니다.
2022. 1. 31. 오전 7:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 31. 오전 8:39, 유용태 (teo.yu) : 안녕하세요 위치원님! 반갑습니다~ 어서오세요 :)
2022. 1. 31. 오전 8:39, 위치원 : 안녕하세요^^ 새벽이라 조용히 들어왔습니다~
2022. 1. 31. 오전 8:44, 유용태 (teo.yu) : 감사합니다 :) 여기는 서로 개발하다가 궁금한것들을 묻고 답하는 공간입니다. 이런것도 물어봐도 될까? 고민 하지 마시고 편하게 글 남겨주세요~
2022. 1. 31. 오전 8:46, 위치원 : 따뜻하게 맞아주셔서 감사합니다^^
2022. 1. 31. 오전 9:16, 프론트준비생 : 다들새해복 많이받으세여
2022. 1. 31. 오전 9:16, 유용태 (teo.yu) : 새해 복 많이 받으세요 :)
2022. 1. 31. 오전 10:51: 성석민님이 들어왔습니다.
2022. 1. 31. 오전 10:51, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 1. 31. 오전 10:52, 유용태 (teo.yu) : 안녕하세요 성석민님~ 반갑습니다 :)
2022. 1. 31. 오전 10:52, 성석민 : 안녕하세요 :)
2022. 1. 31. 오전 10:53, 유용태 (teo.yu) : 어서오세요~ 여기는 개발 하면서 궁금한 것들 뭐든 서로 물어보고 하는 공간입니다. 뭐든 편하게 글 남겨주세요
2022. 1. 31. 오전 10:54, 성석민 : 감사합니다😀
2022. 1. 31. 오후 12:06, 화가난다 화가나 그래서 난 화가임 : UX는 UX 디자이너의 역할인가용? 프론트엔드의 역할인가요?
2022. 1. 31. 오후 12:06, 화가난다 화가나 그래서 난 화가임 : 이제는 UX 카피라이터도 있는데
2022. 1. 31. 오후 12:06, 화가난다 화가나 그래서 난 화가임 : 누구의 역할이라고 단정하면 안 되는 부분인가요?
2022. 1. 31. 오후 12:07, Hardy : 누구 역할이라고 할 것 없이 다 연관되어 있는거 같아요
2022. 1. 31. 오후 12:08, 파이버 : 디자이너가 처리해서 피그마같은 걸로 주면 프론트엔드가 어느 정도 피드백을 주변서 이게 맞냐 이게 낫지 않냐 하면서 진행되는 거 같아요
2022. 1. 31. 오후 12:08, Hardy : 프론트에서 성능을 개선하는 이유도 생각해보면 사용자 때문이잖아요
2022. 1. 31. 오후 12:16, 화가난다 화가나 그래서 난 화가임 : 아 그쵸
2022. 1. 31. 오후 12:16, 화가난다 화가나 그래서 난 화가임 : 디자인 측면을 공부하는 프론트엔드 현업자도 많을까요?
2022. 1. 31. 오후 12:19, 김동현 : 디자인 시스템과 컴포넌트를 연결하는 역할을 맡으면서
2022. 1. 31. 오후 12:19, 김동현 : 자연스럽게 책을 많이 읽었습니다.
2022. 1. 31. 오후 12:19, 김동현 : 관련 디자인 측면 책이요!
2022. 1. 31. 오후 12:39, 화가난다 화가나 그래서 난 화가임 : 오호..
2022. 1. 31. 오후 2:02, 스타트업개발자 : 이번에 리액트로 페이지 개발을 연습중인데,,, 궁금한게 router 를 설정하는 부분에서 각 페이지 컴포넌트를 호출할 때 이렇게 설정하면 차이가 있나요?
2022. 1. 31. 오후 2:02, 스타트업개발자 : 사진
2022. 1. 31. 오후 2:06, 유용태 (teo.yu) : 코드 스플리팅을 통해 번들을 나눠서 만든 다음에 초기 로딩 속도를 올리고 해당 url이 될때 스크립트를 따로 불러와서 필요한 스크립트를 나중에 로딩 할 수 있도록 만들어줍니다
2022. 1. 31. 오후 2:13, 화가난다 화가나 그래서 난 화가임 : 다들 코딩 강의보실 때 유독 피로다가 심하신가요?
2022. 1. 31. 오후 2:13, 화가난다 화가나 그래서 난 화가임 : 모르는 부분 보는데, 유독 집중은 안되고 피로는 배로 쌓이네용
2022. 1. 31. 오후 2:13, 화가난다 화가나 그래서 난 화가임 : 한편 보고 졸리고 한편 보고 졸리고
2022. 1. 31. 오후 2:14, 화가난다 화가나 그래서 난 화가임 : 이모티콘 
2022. 1. 31. 오후 2:24, Kyle : https://ui.toast.com/weekly-pick/ko_20220127
2022. 1. 31. 오후 2:24, Kyle : 빌드도구 비교 글있어서 공유합니당
2022. 1. 31. 오후 2:39, 유용태 (teo.yu) : 오! 좋은 내용 감사합니다~
2022. 1. 31. 오후 2:56, 웹린이 : 저도 강의는 배운다보다 시청한다 느낌이 되어버려서 힘든 것 같아요 ㅠㅠ
아무래도 수동적인 학습방법이다보니...
라이브면 그래도 실시간으로 질문도 하고 하면 좀 낫긴하더라구요!
2022. 1. 31. 오후 3:01, 웹린이 : 참고 되실만한 링크들을 긁어왔습니다!
https://medium.com/humanscape-tech/react%EC%97%90%EC%84%9C-%ED%95%B4%EB%B3%B4%EB%8A%94-%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%94%8C%EB%A6%AC%ED%8C%85-code-splitting-56c9c7a1baa4
https://ko.reactjs.org/docs/code-splitting.html
https://webpack.kr/guides/code-splitting/
2022. 1. 31. 오후 3:02, 웹린이 : 사진
2022. 1. 31. 오후 3:02, 스타트업개발자 : 진짜 감사합니다 ㅠㅠ
2022. 1. 31. 오후 3:03, 웹린이 : 덕분에 저도 찾아보면서 또 배웠습니다 ㅎㅎ
2022. 1. 31. 오후 3:03, 웹린이 : 개발자 도구에서 안쓰이는 코드 비율 확인 할 수 있는거 첨 알았네요🙌
2022. 1. 31. 오후 3:21, Vintz : https://webdesign.tutsplus.com/ko/tutorials/comprehensive-guide-when-to-use-em-vs-rem--cms-23984

rem과 em, px까지 거의 총정리라고 할 수 있을만한 글을 발견해서 공유합니다!

2022년 2월 1일 화요일
2022. 2. 1. 오전 1:20, Vintz : https://onlydev.tistory.com/128

어제 오후에 공유한 글을 읽어보고 나름대로 정리 해봤어요..! 며칠 동안 고민하며 작성하고 지우고, 여러 글 찾으며 다시 쓴 글인데 막상 보니 분량이 적은 느낌..😭 그래도 머릿속에 정리가 되어서 좋네요 ㅎㅎ 쨋든 궁금하신 분들 한번 봐주시면 감사하겠습니다!!! 😆
2022. 2. 1. 오전 2:59: 제이님이 들어왔습니다.
2022. 2. 1. 오전 2:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥
2022. 2. 1. 오전 8:09, 여의도개발 : 테오님 rem사용시 10px로 쓰신다는게
html fontsize 10px가 아니라

Html fontsize 62.5%로 쓰신다는 거죠?
2022. 2. 1. 오전 8:12, 유용태 (teo.yu) : 안녕하세요 제이님 반갑습니다~
2022. 2. 1. 오전 8:14, 유용태 (teo.yu) : 현업에서 rem을 쓸 기회가 몇 번 없어서 대부분은 px로 작업을 했고 rem으로 디자인을 맞추기가 어려워 html에 10px를 주면 rem으로 만들기 쉽지 않을까 해서 그렇게 사용을 했었습니다
2022. 2. 1. 오전 8:16, 유용태 (teo.yu) : 나중에는 html 10px로 하는 것보다 %로 해야 브라우저 설정에서 글꼴을 변경했을때 적용을 할 수 있다 라는 것을 나중에 여기서 알게 되었구요 ㅋ 아직은 실전에서는 html 62.5%로 해본 적은 없습니다.
2022. 2. 1. 오전 8:19, 유용태 (teo.yu) : 요 경험을 바탕으로 adorableCSS에 px을 자동으로 rem으로 바꿔주는 기능을 고려해두고 있습니다. 아직 figma에서도 rem으로 보여주는 기능이 약해서 잘 안쓰게 되더라구요
2022. 2. 1. 오전 8:21, 여의도개발 : 답변 감사합니다!!!👍👍
2022. 2. 1. 오전 8:35, 유용태 (teo.yu) : https://blog.devgenius.io/7-useful-front-end-web-developer-cheatsheets-you-must-know-32e9ef3c03bb?source=email-e012841b24ec-1643649727537-digest.reader-4e2c1156667e-32e9ef3c03bb----2-72------------------2f73bb4a_c62b_4c10_bd2b_8abd425ae86e-28-&gi=89a243bc496f
2022. 2. 1. 오전 8:41, 실무뿌론트 : ㅎㅎ 감사합니다
2022. 2. 1. 오전 8:41, 실무뿌론트 : git sheet 유용한거같아요!
2022. 2. 1. 오전 8:41, 실무뿌론트 : 실제로 git 명령어 잘안쓰고 gui로 많이해서 갑자기 명령어로 찾아야할때 구글링하게되더라구요 ㅋㅋ
2022. 2. 1. 오후 12:37, 스타트업개발자 : 이번에 웹뷰를 개발중에 있는데 다른 페이지들에서도 쓰이는 컴포넌트는 styled-components, 각 페이지들은 scss 로 하려고 해보는데,,, 이렇게 혼용해서 써도 괜찮을까요…?
2022. 2. 1. 오후 12:48, Hola : 상관은 없겠지만, 굳이 섞어서 쓰시는 이유가 있으신가요?_?
2022. 2. 1. 오후 12:49, 스타트업개발자 : 웹뷰 말고 다른 프로젝트에서 쓰던 컴포넌트들을 가져다가 써야하는데,,, 그 컴포넌트들이 다 styled-components 로 되어있다보니,,, 당장 복붙해서 쓰려다보니,,, 부끄럽네요;;ㅋㅋㅋㅋ
2022. 2. 1. 오후 12:49, 스타트업개발자 : 나중에는 최대한 sass로 다 바꾸고 싶은데,,,
2022. 2. 1. 오후 1:14, Hola : 앗ㅎㅎㅎ 만약 저라면 시간 쪼꼼 들어도 통일해서 갈 것 같아요!
2022. 2. 1. 오후 1:15, 스타트업개발자 : 고민좀해봐야겠네요 ㅠㅠ 감사합니다!!
2022. 2. 1. 오후 1:15, 꼬북 : 빈츠글 지금봤는데 깔끔하게 잘썼네요!!
2022. 2. 1. 오후 1:39, Vintz : 감사합니다 꼬북!! :)
2022. 2. 1. 오후 2:28, 웹린이 : 사진 15장
2022. 2. 1. 오후 2:28, 웹린이 : 새해복 많이 받으세요!
2022. 2. 1. 오후 2:29, 유용태 (teo.yu) : 와! 새해복 많으세요!!
2022. 2. 1. 오후 2:34, 제이 : 안녕하세요, 벨로그보고 들어왔습니다!ㅎㅎ 새해복 많이 받으세요~~!!
2022. 2. 1. 오후 2:42: 택배 상자를 든 네오님이 나갔습니다.
2022. 2. 1. 오후 3:25, TriplexLab : 새해복 많이 많이 받으세요~ㅎㅎ!!
2022. 2. 1. 오후 4:35, 제레인트20 : 새해 복 많이 받으세요
