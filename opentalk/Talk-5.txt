Talk_2022.7.1 11:48-5.txt
저장한 날짜 : 2022. 7. 1. 오전 11:49



2022년 5월 17일 화요일
2022. 5. 17. 오전 11:11, 프엔공부중 : 우선은 전역적인 hooks 파일에 넣고 너무 많아지면 말씀해주신 컴포넌트별 hooks로 바꿔봐야겠네요 
2022. 5. 17. 오전 11:19, 델 : tkdodo 님이 컴포넌트별로 컴포넌트 옆에 커스텀훅 만드는 거 권장하긴 했어요
2022. 5. 17. 오전 11:20, 핑구는뮉뮉 : 안녕하세요 개발할 때 꼭 어딘가에 적어가면서 하는 편이라 노션을 사용하는데요.

정보보호 문제로 인해 회사에선 노션과 같은 외부 클라우드에 저장되는 메모장은 사용이 제한되더라구요..

노션과 비슷한데 외부 클라우드에 저장이 안되는 단순한 마크다운 메모장 추천 받습니당ㅠㅠㅠ
2022. 5. 17. 오전 11:21, 델 : 이렇게 하는거요! 공식문서가 인정한 best practice예요
2022. 5. 17. 오전 11:23, 부끄러운 어피치 : 몇 번 봤다 했는데, 그 블로그에서도 소개를 했었군요 ㅋㅋ 파이버님 고맙습니다~
2022. 5. 17. 오전 11:23, 프엔공부중 : 아 그렇군요! 저거에 맞춰서 잡아야겠네요 감사합니다!
2022. 5. 17. 오후 12:04, 애교뿜뿜 어피치 : typora 추천즈려뇨
2022. 5. 17. 오후 12:29: 프엔짱님이 들어왔습니다.
2022. 5. 17. 오후 12:29, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 17. 오후 1:41: 비디오가미래다님이 들어왔습니다.
2022. 5. 17. 오후 1:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 17. 오후 2:16, 부끄러운 어피치 : 사진
2022. 5. 17. 오후 2:16, 부끄러운 어피치 : 어 이거 여기방 아니였나요
2022. 5. 17. 오후 2:19, 마이크를 든 라이언 : ㅋㅋㅋㅋㅋㅋ
2022. 5. 17. 오후 2:20, 신난 어피치 : 돌고도는…
2022. 5. 17. 오후 2:21, 웅세 : nextjs 에서 Link 태그를 다는데 css hover 효과가 있는 컴포넌트는 click 이벤트가 안먹히나요??
2022. 5. 17. 오후 2:22, 선풍기 바람 쐬는 어피치 : 개발 관련 질문은 아닌데... /이런/ 프로젝트 진행 경험이 있으신지 궁금해서 메시지 남깁니다.

이런 프로젝트라 하면..
이미 구현된 서비스가 있는데, 기능은 그대로 두고 디자인만 갈아치우는 ui, ux 개선 프로젝트를 해보신 분이 계실까요?
2022. 5. 17. 오후 2:23, 선풍기 바람 쐬는 어피치 : 이미 구현된 상태에서 디자인만 변경하는 대대적 수정이 가능한지, 진행하면서 어려웠던 점이나 고려 해야 할 부분이 있는지 알고싶습니다.
2022. 5. 17. 오후 2:24, 박용준 : 아니요
2022. 5. 17. 오후 2:27, 취미는개발 : 전혀 무관하지 않나요 ?
2022. 5. 17. 오후 2:29, 웅세 : 이상하게 자꾸 안먹어가지고... 그렇군요 다시해보겠습니다!
2022. 5. 17. 오후 2:30, 취미는개발 : 소스 볼 수 있을까요 ?
2022. 5. 17. 오후 2:31, Vintz : 저는 어드민 페이지랑 사내 가이드 문서를 디자인만 변경한 적이 있습니다. pure css 만지는걸 좋아해서 나름 재밌게 했었지만 어드민 페이지는 정말 재미가 없더라구요. 가이드 문서는 코드 블록이 있어서 하이라이팅을 적용하거나 코드 블록 복사 기능을 붙여서 재밌게 했었어요.
2022. 5. 17. 오후 2:32, Vintz : 고려했던 것은 라이브러리/프레임워크 조사하고 적용할만한지 생각했던 것 같아요~프로젝트 크기가 크다면 쓰는게 좋겠죠
2022. 5. 17. 오후 2:34, 선풍기 바람 쐬는 어피치 : 경험을 공유해 주셔서 감사합니다.
버전업을 하기 전에 디자인 전반을 개선하고 넘어가려 하는데, 그것이 개발팀에게 버든이 되거나 가능하지 않은(=버전업한 새로운 구조에서만 가능한) 형태의 프로젝트일까 싶어 질문을 드렸습니다.
2022. 5. 17. 오후 2:42, Vintz : 흠..디자인에 따라 다르지 않을까요? 선풍기님이 생각하시는건 UI/UX 개선으로 레이아웃이나 HTML 구성이 바뀔까봐 염려하시는걸까요?
2022. 5. 17. 오후 2:52, 선풍기 바람 쐬는 어피치 : 네 그렇습니다.

저희가 디자인 컴포넌트를 활용하고 있기는 하지만 여러가지 기능 개발과 업데이트로 인해 예외 케이스들이 생성이 되기도 했고

(ux개선) 프로세스 변경으로 기능 구조를 변경하게 되는 부분이 개발팀에게 버든으로 작용할까봐 걱정되는 부분이 있습니다.
2022. 5. 17. 오후 2:56, Vintz : 아~그렇군요! 저는 혼자 할만한 수준으로밖에 못해봐서 거기까진 생각을 못했었네요. 그럴 수가 있겠군요.
2022. 5. 17. 오후 2:57, 선풍기 바람 쐬는 어피치 : 실제로 제가 개발을 하는 입장은 아니기 때문에 타 팀의 버든이 ㅋㅋㅋㅋ걱정이 됩니다.

대면하고 있으면 물어볼텐데 저희 재택중이라 ㅠㅠ
2022. 5. 17. 오후 2:58, 선풍기 바람 쐬는 어피치 : 디자인 정책을 수립하고 진행할 수 있는 부분 진행하고, 가능하지 않은 부분은 개선안으로 적용하고

디자인 정책으로 ver2를 좀 더 수월히 할 수 있다는 것에 의의를 둬야될 것 같다고 생각이 좀 정리되는 것 같아요. 함께 대화해 주셔서 감사해요 🥰🥰
2022. 5. 17. 오후 3:07, Vintz : 아 디자이너분이셨군요! 같은 팀 개발자분들이 든든하시겠어요. 짧은 대화였지만 즐거웠습니다 😆
2022. 5. 17. 오후 3:11, 선풍기 바람 쐬는 어피치 : 과찬이세요!!! 감사합니다. 😍
다음에 또 대화해요~~ 즐거운 오후 보내시구용//
2022. 5. 17. 오후 3:17, 여의도개발 : 혹시 npm 환경 구성하실때 dev나 stg 환경은 어떻게 구성들하시나요?
2022. 5. 17. 오후 3:18, 좌절하는 프론트 : 웅?같지않나요 ?
2022. 5. 17. 오후 3:19, 여의도개발 : 올라가는건 하나겠죠.?
운영 배포하고.. 
스테이징환경에서 수정이 필요한것들 확인해야하는 상황이 있을거같아서요
2022. 5. 17. 오후 3:20, 여의도개발 : 그럼 질문을 바꿀께요.
npm 환경 구성한상태에서 테스트나 래팩토링에 의해 변경된 것들을 테스트는 어떻게 하시나요?
2022. 5. 17. 오후 3:21, 여의도개발 : 로컬도 있지겠지만 실제 기기환경에서 확인하려면 스테이징에서 확인해야할 상황이 올거같거든요
2022. 5. 17. 오후 3:21, 좌절하는 프론트 : 아 제가 잘못이해했네요
2022. 5. 17. 오후 3:22, 좌절하는 프론트 : 저희는 인원이
없어서 현재는
2022. 5. 17. 오후 3:22, 좌절하는 프론트 : dev 브랜치가 개발배포 이자 릴리즈 전 qa 까지
다하는 브랜치라
2022. 5. 17. 오후 3:23, 좌절하는 프론트 : 일단 해당환경은
프로덕션이랑 같은 수준으로 하고있고요
2022. 5. 17. 오후 3:23, 좌절하는 프론트 : 음 
2022. 5. 17. 오후 3:24, 좌절하는 프론트 : 여의도님
이야기 들으니 qa 라고 파서 따로 해야하는데 리소스가 으읔
2022. 5. 17. 오후 3:24, 여의도개발 :  수정해서  npm에 publish 했는데
그사이 npm을 사용하는 prod에서 CI/CD를 돌리면 문제가 있지 않을까 싶은데요..
2022. 5. 17. 오후 3:24, 좌절하는 프론트 : 롤백을 할수밖에 없죠 지금은 ㅠ
2022. 5. 17. 오후 3:25, 여의도개발 : 아! 버전을 고정하는 방법도 있겠군요
2022. 5. 17. 오후 3:26, 좌절하는 프론트 : package lock 은
2022. 5. 17. 오후 3:26, 좌절하는 프론트 : 건들면 보고가 되게끔 돌고있어요 ㅋㅋㅋ
2022. 5. 17. 오후 3:26, 좌절하는 프론트 : 하 인원 좀 많으면 나누면 좋은데 ㅠ
2022. 5. 17. 오후 4:38, 프엔공부중 : 네이버 로그인을 javasscript sdk로 구현하려면 무조건 javascript로 버튼을 생성해야 하나요?
2022. 5. 17. 오후 4:39, 썰cho : 다른방법은 어떤걸 생각하시나요
2022. 5. 17. 오후 4:49: 말썽쟁이 네오님이 들어왔습니다.
2022. 5. 17. 오후 4:49, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 17. 오후 4:53, 프엔공부중 : 버튼을 svg로 나타내고 그 svg 에 onClick으로 설정하고 싶은데 불가능할까요?
2022. 5. 17. 오후 4:54, 썰cho : 버튼안에 svg넣으면 안되나요
2022. 5. 17. 오후 4:55, 프엔공부중 : 사진
2022. 5. 17. 오후 4:55, 프엔공부중 : 이런식으로 loginButton으로 만들어줘야 하는것 같아서 svg를 넣을수가 있나요?
2022. 5. 17. 오후 5:10, 썰cho : 이건 라이브러리 사용하신거 아닌가요
2022. 5. 17. 오후 5:10, 썰cho : 그리고 로그인버튼 자체는 네이버 규정이라 막 바꾸기도 힘드실거에요
2022. 5. 17. 오후 5:29, O_O : 삭제된 메시지입니다. 
2022. 5. 17. 오후 5:31, O_O : 사진
2022. 5. 17. 오후 5:31, O_O : TypeScript 질문입니다.
Form 타입의 각 속성의 값이 undefined일 수 있지만, 실제 값은 존재할 때...
16라인처럼 할당하려고 하면 값이 undefined 일 수 있기 때문에 할당이 안 되는데... as Payload 처럼 타입 단언 하는 방법 말고는 없을까요...?
2022. 5. 17. 오후 5:35, 프론트 공부 : name: '', age:'', ...form
2022. 5. 17. 오후 5:48, 델 : form을 정의하고 pay에서 spread 하기 전까지 내용이 수정될 수 있어서
2022. 5. 17. 오후 5:48, 델 : 타스 입장에서는 저렇게 하는 게 맞는 동작 같아요
2022. 5. 17. 오후 5:48, 델 : 코드상에서 타입을 적절하게 정의하고 필요한 적절한 위치에서 타입 가드를 이용해 주시면 될 거 같아요
2022. 5. 17. 오후 5:50, 델 : 저 사진에 오류를 해결하려면 form: Form 에서 변수에 타입 정의한 거 빼서 form 으로 바꾸면 되긴 하는데, 그건 원하신 답이 아닐 거 같고..
2022. 5. 17. 오후 5:51, O_O : 넵 저건 예시이고.. 저런식으로 undefined일 수 있기 때문에 할당이 안되어서 뭔가 쌈빡한 방법은 없나해서 질문 드려봤습니다..!
타스 입장에선 저렇게 뿜뿜하는게 맞죠 사실 ㅠㅠ..
2022. 5. 17. 오후 5:54, 델 : 코드가 어떤지 몰라서 명확하게 답변드리기 어렵지만 명확하게 타입을 정의할 수 있는 방안이 분명 있을 거예요
2022. 5. 17. 오후 5:55, 델 : 딱 한 단계는 undefined에 대한 타입 가드를 해 줘야 할 거고
2022. 5. 17. 오후 6:12, 썰cho : optional로 타입을 주셔야할듯
2022. 5. 17. 오후 7:24: 개발은어려웡님이 나갔습니다.
2022. 5. 17. 오후 8:17, Herb : // 위 질문과 관련된 질문입니다. 이렇게 하면 무방할지요??
const formToPayload = (form: Form): Payload | undefined => {
  const { name, age } = form;
  return name != undefined && age !== undefined
    ? { ...form, name, age }
    : undefined;
};

2022. 5. 17. 오후 8:52, 너겟 : 선배님들! 혹시 리액트 입문/필수코스로 추천해주실 강의 있을까요?? 리서치중인데 직접 들어보신분들 얘기 듣고 싶어서요...😄 가격은 상관없습니다! 
2022. 5. 17. 오후 9:01, 부끄러운 어피치 : 유데미에 자막있는 리액트 강의 추천해요!!
2022. 5. 17. 오후 9:05, 빠밤 : 오..혹시드어보셨나요?
2022. 5. 17. 오후 9:05, 빠밤 : 그강의추천많이하시는거같던데.. 좋나요?
2022. 5. 17. 오후 9:06, 주니어개발자 : 저는 개인적으로 만족스러웠습니다!!
2022. 5. 17. 오후 9:06, 빠밤 : 혹시 리액트 노베도 들어도될까요? js문법은아는상태입니다
2022. 5. 17. 오후 9:07, 주니어개발자 : 그건 안들어봐서 모르겠어용 ㅋㅋㅋㅜ 근데 워낙 유명하니.. 좋지않을까요..?!🫠
2022. 5. 17. 오후 9:16, 너겟 : 감사합니다!! 역시 udemy가 답인가봐요!
2022. 5. 17. 오후 9:17, 너겟 : 사진
2022. 5. 17. 오후 9:17, 너겟 : 혹시 이거 말씀하시는거 맞죠!
2022. 5. 17. 오후 9:19, 브레드 : https://www.udemykorea.com/home
2022. 5. 17. 오후 9:19, 브레드 :  우와 할인중인가봐용
2022. 5. 17. 오후 9:20, 브레드 : 카카오 광고에 뜨네요 ㅎㅎ 
2022. 5. 17. 오후 9:31, 부끄러운 어피치 : 리액트의 본질적인 부분들을 쉽게 설명해주는 듯해서 굉장히 만족해요~ 공식문서랑 같이 보면 좋을듯 싶습니다 ㅎㅎ
2022. 5. 17. 오후 9:55, 혜심 : 저는 완전 처음엔 벨로퍼트 강의도 좋았어요.

https://www.inflearn.com/course/react-velopert
2022. 5. 17. 오후 9:56, 혜심 : 내용이 쉽고 딱 기본만 있어서 노베이스에서 맛보기에 좋더라구요. 
2022. 5. 17. 오후 10:10, O_O : 회사에서 코드리뷰 하시는 분들
리뷰기한을 보통 얼마로 잡으시나요?!
2022. 5. 17. 오후 10:11, O_O : 유데미 한글자막도 꽤 많아졌네요
2022. 5. 17. 오후 10:15, 엉망장자 : 회사 내부 분위기를 알려면 지인이 있는 것 외에는 방법이 없으려나요?!
2022. 5. 17. 오후 10:16, 즐거운 네오 : 최대 3일이용
2022. 5. 17. 오후 10:16, 즐거운 네오 : 그 회사 다니는 사람한테 이메일 보내보거나 커피챗 서비스 이용해볼 수 있지 않을까요?
2022. 5. 17. 오후 10:16, 동동 : … 해줄때까지…
2022. 5. 17. 오후 10:17, O_O : 저희는 거의 즉시인데... 팀이 작긴하거든요
2022. 5. 17. 오후 10:18, O_O : 다른회사는 어떻게 하는지 궁금했어요, 받는 사람입장에서는 빨리 받는게 좋긴한데 하는 사람 입장에선 컨텍스트 스위치를 해야되니...
2022. 5. 17. 오후 10:19, 즐거운 네오 : 늘어질수록 좋을건 없다고 생각합니다 요청한 입장에서도 하는 입장에서도 리뷰하던 문맥을 까먹기 쉽다고 생각해서요...
2022. 5. 17. 오후 10:21, 프론트 공부 : 그래서 컨텍스트 스위칭이 최대한 일어나지않게 출근해서 일하기전, 밥먹고 일하기전 에 해서 4시간에 한번씩은 리뷰하게 하는 문화도 있더라구요!
2022. 5. 17. 오후 10:22, O_O : 오호 이런 방법도 좋네요
2022. 5. 17. 오후 10:51: 신입이님이 들어왔습니다.
2022. 5. 17. 오후 10:51, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 17. 오후 11:19, 살려줘 네오 : 혹시 서버에서 이미지를 여러개 가져오려면 어떤 방식이 좋을까요?
이미지가 한 100-300개 된다고 가정하면,
1.이미지 모델(이름,src)에 수동으로 일일히 놓고 그 db를 가져오는 식 외에 더 좋은 방법이 있을까요?
2.혹은 서버 없이 그냥 로컬에 100개 저장 후 프론트 단에서 import여러번 할 필요 없이 public에서 가져올 방법이 있을까요?

2022. 5. 17. 오후 11:29, 아이스크림 : // test.js
let a = 0;
module.exports = () => { 
    return a+=1
};
여기서 변수 a는 외부 파일에서 접근할 수 없는거죠?
2022. 5. 17. 오후 11:53, 곰젤리 : 넹

2022년 5월 18일 수요일
2022. 5. 18. 오전 12:01, 아이스크림 : node.js에 관한 질문인데요~....
모듈이 캐싱된다라는게 메모리 캐시를 말하는게 맞아요?
2022. 5. 18. 오전 12:16, 초롱초롱 네오 : 이미지를 이차원 배열 형식으로 붙여서 한번에 받은 다음에 프론트에서 처리 후 원하는거 갖다 쓰는 방식은 어떤가요
2022. 5. 18. 오전 12:34, 살려줘 네오 : 한번에 받는 다는 말씀이 무엇일까요? 결국 수동적으로 api를 만들어줘야된다는 걸까요? 
2022. 5. 18. 오전 7:58, 유용태 (teo.yu) : 프엔짱님~ 손흔드는 라이언님~ 말썽쟁이 네오님~~ 일하기 싫은 네오님~ 모두 모두 반갑습니다~
2022. 5. 18. 오전 8:02, 말썽쟁이 네오 : 안녕하세요!!
2022. 5. 18. 오전 8:03, 유용태 (teo.yu) : 어서오세요~ 환영합니다. ㅎ 여기는 프론트엔드나 개발 기타 무엇이든 궁금한 것들을 물어보고 또 답해주고 좋은 것들을 공유하며 함께 성장하고자 하는 공간입니다. 편하게 글 남겨주세요 :)
2022. 5. 18. 오전 8:04, 좌절하는 프론트 : 프엔에게 인프라란
2022. 5. 18. 오전 8:05, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 5. 18. 오전 8:06, 화가난다 화가나 그래서 난 화가임 : console.log(target)을 찍어보니, 렌더링 된 이후에 target 값이 .Target-Element 엘레멘트로 값이 변했던데
2022. 5. 18. 오전 8:06, 화가난다 화가나 그래서 난 화가임 : 어떤 부분에서 갑자기 업데이트함수가 일어난 건지 알 수 있을까요? ㅠㅠ
2022. 5. 18. 오전 8:07, 화가난다 화가나 그래서 난 화가임 : 처음에 저는 target이 계속 null로 유지되어야 한다는 생각을 가지고 있었습니다!
2022. 5. 18. 오전 8:17, 유용태 (teo.yu) : 평소에 내가 안해서 그런가보다 하다가 막상 하려면 스트레스 받는 그 작업? ㅋ
2022. 5. 18. 오전 8:20, 동동 : ref 에 setTarget 을 넘겨주셔서 그런거 같은데요..?
2022. 5. 18. 오전 8:21, 화가난다 화가나 그래서 난 화가임 : 그거 때문이 맞는 거 같은데
2022. 5. 18. 오전 8:21, 화가난다 화가나 그래서 난 화가임 : setTarget state의 업데이트 함수 아닌가용?
2022. 5. 18. 오전 8:21, 화가난다 화가나 그래서 난 화가임 : 저렇게 넣으면 해당 엘레멘트가 업데이트 함수의 인자로 넣어져서 설정이 되나용?
2022. 5. 18. 오전 8:24, 프론트 공부 : 셋타겟으로 업데이트를 해야지 변화를 감지해서 리랜더링 되는거 아닐까요?!
2022. 5. 18. 오전 8:25, 프론트 공부 : 타겟 = 15  이런식으로 하면 값은 변화하는데 리렌더링이 안되지않을까요?
2022. 5. 18. 오전 8:28, 동동 : ref 에 함수를 전달하면 마운트될 때 엘레멘트를 인자로 하서 함수를 호출하게 됩니다!
2022. 5. 18. 오전 8:28, 동동 : setTarget이 호출되니 리렌더링되는거구요~ 
2022. 5. 18. 오전 8:29, Vintz : 혹시 블로그 번역본 올린 경험들 있으실까요? 공부하면서 구글 번역기로 나름 번역해보면서 올리고싶은데 이런 경우 앞단에 출처를 올리더라도 대부분 원작자에게 번역 허락을 받아야겠죠? 트위터를 안하다보니 컨텍할 방법이 잘 없네요..ㅎㅎ
2022. 5. 18. 오전 8:29, 동동 : <div ref={e => setTarget(e)}  랑 똑같아요 ㅎㅎ
2022. 5. 18. 오전 8:29, 서경 : 아 요즘 너무 스트레스 받는 일이 있는데 여러분이라면 어떻게 해결하시나요…?
2022. 5. 18. 오전 8:29, 서경 : 스토리 포인트라고 해당 태스크 몇시간 정도 걸릴지 예상해 놓는게 있는데 제가 지금 하고 있는게 21점짜리를 받았거든요
2022. 5. 18. 오전 8:30, 서경 : 그런데 이거를 몇주째 하고 있는데 매일 시니어분한테 엄청 물어보고 그러는데도 몇주째 해결 못하고 있으니까 너무 스트레스 받네요
2022. 5. 18. 오전 8:30, 서경 : 인턴이라 그런가 아무도 그걸로 뭐라고 하진 않는데 너무 눈치 보이고 일을 너무 못하는게 느껴진다고 해야하나 ㅠㅠ
2022. 5. 18. 오전 8:30, 프론트 공부 : 너무큰걸 받으셨네용..ㅠ
2022. 5. 18. 오전 8:30, 서경 : 21시간이면 단순계산하면 2~3일이면 끝내야할 일인데 몇주째 붙잡고 있으니까 너무 답답하네요
2022. 5. 18. 오전 8:31, 유용태 (teo.yu) : ㅠㅠ 일단 위로의 말을 먼저 전달 드려봅니다. 너무 나이브하게 책정이 되었을 수도 있고 언제나 책정과 진짜 작업의 괴리감 느껴지면 힘들죠 특히 일정이 밀릴때는...
2022. 5. 18. 오전 8:32, 유용태 (teo.yu) : 잠깐 코딩을 멈추고 이제는 이해도가 올라갔을테니까 작정하고 다시 한번 태스크 분석을 한번 해보는 건 어떨까 추천드립니다.
2022. 5. 18. 오전 8:32, 화가난다 화가나 그래서 난 화가임 : 아 그렇군요.. 처음 알았어용. 알려주셔서 감사합니다!
2022. 5. 18. 오전 8:33, 유용태 (teo.yu) : 이걸 할 일로 나누지 말고 구현해야할 함수와 변수로 나눠보는 것을 좀 추천드립니다. 전에 글에 썼던 액션 - 계산 - 데이터 이런식이나 given - when - then 이나...
2022. 5. 18. 오전 8:33, Vintz : 일정 산출은 언제나 고민거리죠..ㅠ 예상한 것보다 밀리면 🥲
2022. 5. 18. 오전 8:34, 유용태 (teo.yu) : 그래서 전체 그림을 그리고 빠진 조각이 얼마나 있는지 다시 책정해보세요.
2022. 5. 18. 오전 8:34, 유용태 (teo.yu) : 해결이 안되는 원인 파악이나 분석은 어느정도는 되었나요?
2022. 5. 18. 오전 8:34, 서경 : 아 이게 주 원인이 전에 있던 요소를 쪼개는 건데
2022. 5. 18. 오전 8:34, 유용태 (teo.yu) : 지연의 원인 혹시 내가 아니라 외부요인이나 커뮤니케이션 문제인가요?
2022. 5. 18. 오전 8:35, 유용태 (teo.yu) : 네네~
2022. 5. 18. 오전 8:35, 서경 : 이게 엔드포인트가 여러 군데 흩어져 있어서 산발적으로 고쳐야 하고 테스트 코드도 뜯어고치고 그러다 보니까
2022. 5. 18. 오전 8:35, 서경 : 여기 고치면 저기가 망가지고 저기 고치면 다른쪽이 망가지고 그러더라구요
2022. 5. 18. 오전 8:36, 즐거운 네오 : 허락을 받는게 정석이긴하죠 대부분은 이메일이 공개되어있어 거기로 문의하거나 원문에 댓글을 남기거나 합니다
2022. 5. 18. 오전 8:36, 동동 : 리렌더링 안시키려면 useRef 쓰시는걸 추천드립니다! ref 에 함수를 전달하는거는 하위 호환성 땜에 남아있는 올드한 기능이라서, 수정할 수 잇다면 수정하는 것도 좋을거 같아요!
2022. 5. 18. 오전 8:36, 서경 : 그리고 좀 장기화 되다보니까 마스터랑 자꾸 리베이스 하면서 계속 틀어지고 그러게 되더라구여
2022. 5. 18. 오전 8:36, 서경 : 그럼 그거 또 고치고...
2022. 5. 18. 오전 8:37, 좌절하는 프론트 : 엌ㅋㅋㅋ 맞아요 ㅋㅋㅋ
2022. 5. 18. 오전 8:37, 유용태 (teo.yu) : 그러면 주로 망가지는 원인이 인터페이스가 외부에서 계속 바뀌고 있어서 그런건가요?
2022. 5. 18. 오전 8:37, 서경 : 그게 좀 큰 것 같아요 그리고 제가 물어볼 분이 시니어분 밖에 안 계신데
2022. 5. 18. 오전 8:38, 서경 : 재택이라 바쁘시면 아예 못 물어보기도 하고 그래서 좀 어렵네요;;
2022. 5. 18. 오전 8:38, 서경 : 신입이면 재택근무 그렇게 좋은 것 같진 않은 것 같아요 ㅠ
2022. 5. 18. 오전 8:38, 유용태 (teo.yu) : 여기에 연관되어 있는 사람이 많은가요? 그러니까 함께는 아니지만 영향을 줄 수 있는 사람
2022. 5. 18. 오전 8:38, 서경 : 음 아마 적을 것 같아요…
2022. 5. 18. 오전 8:39, 서경 : 사실 백엔드 쪽이기도 하고 외국이라서...
2022. 5. 18. 오전 8:39, 서경 : 그냥 너무 답답해서 풀어놓고 싶었습니다 ㅠ
2022. 5. 18. 오전 8:39, Vintz : 역시 허락을 받아야겠네요. 제가 본 블로그는 이메일이 없고 페이스북, 트위터만 공개되어 있다보니..댓글이나 다른 방법을 찾아봐야겠어요 감사합니다!
2022. 5. 18. 오전 8:40, 유용태 (teo.yu) : 시니어분께 일단 매일 만날 수 있는 시간을 좀 미리 스케쥴링 해서 정해진 시간이 만날 수 있거나 캘린더 등으로 좀 1주일치 시간을 좀 미리 확보해두시고
2022. 5. 18. 오전 8:40, 유용태 (teo.yu) : 솔직히 태스크가 21점이면 좋은 태스크가 아닌거니까
2022. 5. 18. 오전 8:40, 유용태 (teo.yu) : 너 잘게 쪼개 달라고 한번 요청 드려보세요
2022. 5. 18. 오전 8:40, 유용태 (teo.yu) : 더*
2022. 5. 18. 오전 8:40, 화가난다 화가나 그래서 난 화가임 : 그렇게 써도 잘 되는군요!! 사실 그것보다 ref에 함수를 전달하면 마운트 후에 엘레멘트를 인자로 호출되는 걸 처음 알았네용 ㅋㅋ
2022. 5. 18. 오전 8:40, 서경 : 이거 진짜 좋은 방법인 것 같아요
2022. 5. 18. 오전 8:41, 서경 : 원래는 그냥 슬랙 메세지 보내놓고 여유 되면 연락 달라고 말씀 드렸었는데
2022. 5. 18. 오전 8:41, 유용태 (teo.yu) : 그러면 절대로 여유시간이 없지요. ㅋㅋㅋㅋㅋ
2022. 5. 18. 오전 8:41, 서경 : 지금 바로 메세지 보내놓겠습니다 감사합니다 ㅠㅠ
2022. 5. 18. 오전 8:41, 서경 : 넵 그냥 아예 날 잡고 죄송하지만 페어프로그래밍 가능하시겠냐고
2022. 5. 18. 오전 8:42, 서경 : 여쭤보려구요… 염치 불구하지만
2022. 5. 18. 오전 8:42, 유용태 (teo.yu) : 일단 일이 되야 하니까 싫어하진 않을겁니다. 만약에 페어프로그래밍을 하실꺼라면 컨텍스트를 문서화 해서 좀 준비를 해둘 필요는 있어요
2022. 5. 18. 오전 8:43, 유용태 (teo.yu) : 그냥 처음부터 하면 컨텍스트 파악하느라 그냥 시간이 다 가고 진행된다라는 경험을 못 받으면 그 다음번을 하기가 심적으로 힘들어지긴 하거든요
2022. 5. 18. 오전 8:45, 서경 : 아하 그렇군요 그러면 오늘 남은 시간에 `현재 진행도`, `막히는 이유`, `엔드포인트`, `테스트 실패 지점` 정도 컨텍스트화 해야겠네요
2022. 5. 18. 오전 8:45, 유용태 (teo.yu) : 글보다는 그림의 형태가 더 좋은데 업무 내용을 모르니까 일단 요구사항(목표)을 정확하게 적어두고 전체적인 태스크들과 한번 1단계 2단계등으로 펼쳐두고 주로 문제가 되는 요소들 정도만 한번 적어보세요
2022. 5. 18. 오전 8:46, 유용태 (teo.yu) : 맞아요~ 현재 진행도를 표기하려면 전체적인 태스크 정리가 먼저 되야 설명이 가능하니까 오늘만은 코딩보다 그거 분석과 문서화를 한번 해보시는게 도움이 되실거 같네요 ㅎ
2022. 5. 18. 오전 8:47, 서경 : 감사합니다. 도움이 많이 되네요…! 일단 그럼 오늘 내일은 좀 돌아보면서 정리를 좀 해봐야겠네요… 어차피 몇주동안 밀린 거라 더 늦어도 할말 없는 것 같아서요 ㅋㅋ
2022. 5. 18. 오전 8:48, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ 덩어리 큰 태스크의 문제점이죠. 잘게 쪼개 뒀으면 몇개는 했고 몇개는 못했을텐데 그냥 지금은 0 아니면 100 이니 ㅠ
2022. 5. 18. 오전 8:48, 이프노즈 : 크으 코딩뿐만 아니라 모든 업무에 해당되는 이야기네요 무릎 탁 치고 갑니다,,, 
2022. 5. 18. 오전 8:48, 유용태 (teo.yu) : 웃을일은 아닌데 뭐 공감도 되고 전에 겪어봤던 일이라 화이팅입니다~
2022. 5. 18. 오전 8:50, 브레드 : 화이팅입니다!! ㅠ 잠깐 수다괜찮으실까요?ㅎㅎㅎ 생각을 잠깐 바꾸실겸…ㅎㅎ 지금 저희 회사에서 디자이너 분들만 인스타그램 로고가 바뀐걸 알아 차리셔서요 ㅋㅋㅋ 한참 수다중입니다 
2022. 5. 18. 오전 8:50, 브레드 : 사진
2022. 5. 18. 오전 8:50, 브레드 : 어제새벽부터 업데이트 하면 바뀌어 보인다는데…혹시 차이가…ㅎㅎㅎㅎ 보라색이 쨍해지고...흠....
2022. 5. 18. 오전 8:50, 유용태 (teo.yu) : 우상단쪽 색이 좀더 쨍해졌네요. ㅎ
2022. 5. 18. 오전 8:50, 곰젤리 : 엥 디자이너는 저게 보이는군요 ㅋㅋㅋㅋ
2022. 5. 18. 오전 8:51, 유용태 (teo.yu) : 역시... 1px 여백차이도 알아보는 디자이너!!
2022. 5. 18. 오전 8:52, 브레드 : ㅋㅋㅋㅋ 저는 그냥 제 화면 밝기가 심하게 올라간줄 알았는데…ㅎ… 검색해보니 진짜 바뀐거더라고요… 
2022. 5. 18. 오전 8:52, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ
2022. 5. 18. 오전 8:53, 설아아빠 : 저는 두개를 갖다놔도 한참 봐야 보이네요....ㅠ 
2022. 5. 18. 오전 8:53, 이프노즈 : 홀… 디바이스에서 보니까 눈아플정도네요 자기주장이 강해졌군요
2022. 5. 18. 오전 8:55, 브레드 : 네….저 보라색이 정말 ㅎㅎㅎㅎ 
2022. 5. 18. 오전 8:55, 서경 : ㅎㅎ…감사합니다. 안 그래도 방금 바로 시니어 분한테 요청드리고 나오는 길입니다 빨리 해결하고 다른 일 받으면 재밌게 할 수 있을 것 같네요 흑흑
2022. 5. 18. 오전 8:56, 유용태 (teo.yu) : 이렇게 덩치 큰 태스크를 받았을때 어떻게 할지 경험치가 올라가는 거겠죠. ㅎ 언제나 내가 더 짬이 차고 이런 경험을 하는 것보단 빨리 겪는게 낫다고 배웠습니다. ㅋ
2022. 5. 18. 오전 9:04: 오키님이 들어왔습니다.
2022. 5. 18. 오전 9:04, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 18. 오전 9:05, 유용태 (teo.yu) : 안녕하세요 오키님~~ 반갑습니다 :)
2022. 5. 18. 오전 9:05, 오키 : 안녕하세요~
2022. 5. 18. 오전 9:05, 유용태 (teo.yu) : 어서오세요~ 잘 부탁드립니다. ㅎ 프론트엔드에게 궁금한게 있다면 언제든 물어보세요 ㅎ
2022. 5. 18. 오전 9:16: geon님이 나갔습니다.
2022. 5. 18. 오후 1:14, 화가난다 화가나 그래서 난 화가임 : next.js랑 react-query 다들 어떻게 공부하셨나요?
1. 공식 문서 내용을 다 정독하기
2. 구글링으로 여러 내용을 훑어보기
3. ??
2022. 5. 18. 오후 1:16, 떨고있는 어피치 : 3. 그냥 아무거나 만들어 보기
2022. 5. 18. 오후 1:16, 델 : 1->2->3 무한반복이요
2022. 5. 18. 오후 1:16, 화가난다 화가나 그래서 난 화가임 : 궁금한게
2022. 5. 18. 오후 1:17, 떨고있는 어피치 : 저는 3번 만들다가 막히면 1번, 2번으로 했습니다
2022. 5. 18. 오후 1:17, 화가난다 화가나 그래서 난 화가임 : 공식 문서 내용들은 양이 되게 많은데
2022. 5. 18. 오후 1:17, 화가난다 화가나 그래서 난 화가임 : 실제 프로젝트에서 공식 문서 내용을 다 적용하는 경우가 있나용?
2022. 5. 18. 오후 1:17, 델 : 실제 프로젝트라고 해도 개인 프로젝트랑 크게 다르지 않아요
2022. 5. 18. 오후 1:18, 프로로 : 삽질하다가 공식문서보면 정답이 있는데 삽질하고 있었네 하며 123 무한반복입니다
2022. 5. 18. 오후 1:18, 델 : 회사마다 다르겠지만 다들 필요한 기능들은 쓰고 필요없는 기능들은 안 쓰지 않으려나요?
2022. 5. 18. 오후 1:18, 떨고있는 어피치 : 사람마다 다르겠지만…저는 다 정독해도 까먹어서….

하면서 막히면 글을 읽고 헤쳐나가는 방법을 택하고 있습니다

근데 공식 문서를 많이 알고 있으면 나에게 주어진 아이템이 많은거죠. 왜 이렇게 동작하고, 왜 이 메소드를 만들었는지 이해하고 있으면, 몰라서 어려운걸 간단하게 해결할 수 있죠
2022. 5. 18. 오후 1:19, 화가난다 화가나 그래서 난 화가임 : 공식문서를 전체 정독할까 고민 중에 있었어용. 실제로 다 쓸 거 같지 않고, 몇몇 기능만 쓰던 거 계속 쓸 거 같은데, 다 정독하는 건 과연 효율적인가? 
2022. 5. 18. 오후 1:22, 부끄러운 어피치 : 저는 효율적이라고 생각해요~
2022. 5. 18. 오후 1:22, 델 : 사람마다 다르겠지만 저같은 경우는 글을 너무 오래 읽으면 머리아프고 재미가 없어서 도입해보면서 조금조금씩 읽는 편이에요
2022. 5. 18. 오후 1:23, 델 : 그러다가 다 읽고 적용해보고 나면 이제 '이 라이브러리 어떻게 쓰는 건지 이해했다' 라고 생각하고
2022. 5. 18. 오후 1:26, 화가난다 화가나 그래서 난 화가임 : 걍 하루에 적당 시간을 두고 문서를 읽어야 겠군용
2022. 5. 18. 오후 1:26, 화가난다 화가나 그래서 난 화가임 : 감사합니다!
2022. 5. 18. 오후 2:12, O_O : 1이 힘들긴한데, 얕게라도 훑어보고 나면 삽질하는게 줄어들긴 하더라구요
2022. 5. 18. 오후 2:13, 즐거운 네오 : 3하다가 막히면 무조건 공식문서 보고 그담에 구글링이요
2022. 5. 18. 오후 2:15, O_O : '정독'까진 힘들고 이런게 있구나 하는 정도로만 넘어다고 나중에 막힐 때 도움이 되고,

react-query는 공식문서보다 그 컨트리뷰터분 블로그가 더 좋았어요
2022. 5. 18. 오후 2:20, 피카츄돈까스/React,RN : 오 저도요!
2022. 5. 18. 오후 2:26, 유용태 (teo.yu) : 저도 대강 훑고 일단 실전에서 해보고 막히는걸 위주로 찾아가면서 익혀요 그냥 목적없이 글을 읽어봐야 내것이 안되더라구요~ 

개인적으로 제일 좋아하는 방법을 일단 돌아가는 작은 코드를 찾아서 조금씩 내프로젝트에 맞게 수정해가는 방식입니다
2022. 5. 18. 오후 3:31, 좌절하는 프론트 : 이야 
2022. 5. 18. 오후 3:31, 좌절하는 프론트 : 프론트로 와서 진짜 리액트업무를 안주네
2022. 5. 18. 오후 3:31, 좌절하는 프론트 : 외주 스프링 프로젝트내에 타임리프 올만에보내
2022. 5. 18. 오후 3:32, 설아아빠 : 그럼 어떤 업무 하세용~? 
2022. 5. 18. 오후 3:32, 좌절하는 프론트 : phphphphphphphphphph
2022. 5. 18. 오후 3:32, 좌절하는 프론트 : 이모티콘 
2022. 5. 18. 오후 3:32, 설아아빠 : 아... ㅎㅎㅎ 
2022. 5. 18. 오후 3:32, 좌절하는 프론트 : 와 진짜 사장님 면담해도 씨알이
안먹히네요
2022. 5. 18. 오후 3:32, 좌절하는 프론트 : 오늘도 이렇게
커리어가 썩어갑니다
2022. 5. 18. 오후 3:35, 떨고있는 어피치 : 저도 사람 더 뽑아달라고 몇 개월 째 이야기 중인데…..안먹히네요….
2022. 5. 18. 오후 3:37, j : 사람 더 뽑아달라고 2년 째..하고 겨우 한명..
2022. 5. 18. 오후 3:39, fefe : 전에있던 스타텁은 일이 너무 많아서 힘들어서 사람 뽑아달라고 했는데. 1년동안.. 뽑아준사람이 4개월짜리 부트캠프 막 수료한지 일주일 된 사람..
2022. 5. 18. 오후 3:39, fefe : 미안하다를 외치고 도망나왔던 기억이..
2022. 5. 18. 오후 3:41, 설아아빠 : 이모티콘 공감되네여...
2022. 5. 18. 오후 3:41, 좌절하는 프론트 : 다들 슬픈이야기를 하시는군요
2022. 5. 18. 오후 3:41, 좌절하는 프론트 : 죄송합니다 ㅠ ㅠ
2022. 5. 18. 오후 3:42, 설아아빠 : 저는 퇴사했는데 사장님이 전화와서 진행중인 프로젝트 두개있는데 그게 제가 전에 했던 외부업체프레임워크라 질문에 답변만 좀 해달라길래 알았다고 했는데 학원 졸업한지 얼마 안되신분 두분이 프로젝트 하나씩 잡아서 고군분투중이더라구요...
2022. 5. 18. 오후 3:43, 좌절하는 프론트 : 헠
2022. 5. 18. 오후 3:44: 아이뽀송님이 나갔습니다.
2022. 5. 18. 오후 3:44, fefe : 말만 들어도 고통스럽네요..
2022. 5. 18. 오후 3:47, 설아아빠 : (흑흑)(흑흑)(흑흑)(흑흑)
2022. 5. 18. 오후 3:48, 좌절하는 프론트 : 프레이머 모션
2022. 5. 18. 오후 3:48, 좌절하는 프론트 : 빨리 써보고싶네요
2022. 5. 18. 오후 3:48, 좌절하는 프론트 : 뷰에는 트랜지션 컴포넌트가 있어서 구현하기 좋았는데
2022. 5. 18. 오후 3:49, 좌절하는 프론트 : 리액트는 그런게없어서 트랜지션을 만들어주는 라이브러리에 의존한거같은데
2022. 5. 18. 오후 3:49, 좌절하는 프론트 : 프레이머 모션보면 애니메이션 효과 주는거보면 우와 소리 나오더라고요
2022. 5. 18. 오후 3:50, 설아아빠 : 전설의다이님은 이것저것 다 하시나봐요! 
2022. 5. 18. 오후 3:50, 좌절하는 프론트 : 원래
백엔드로 시작해서
2022. 5. 18. 오후 3:50, 좌절하는 프론트 : 프론트 뷰쟁이로 전직했다가
2022. 5. 18. 오후 3:50, 썰cho : 라이브러리 없이 그냥 직접 구현하면 됩니다
2022. 5. 18. 오후 3:50, 좌절하는 프론트 : 리액트로 갈아탈려늠데 
2022. 5. 18. 오후 3:50, 좌절하는 프론트 : 잘 안되네유 ㅋㅋ
2022. 5. 18. 오후 3:51, 좌절하는 프론트 : 보통 키프레임으로 많이
처리하시나요 ?
2022. 5. 18. 오후 3:51, 썰cho : 저는 키프레임으로 하기도 하고
2022. 5. 18. 오후 3:51, 썰cho : 트렌지션 주기도 하고
2022. 5. 18. 오후 3:51, 썰cho : 그때그때 다를거 같아요
2022. 5. 18. 오후 3:52, 좌절하는 프론트 : 아하 그럼 요소들을 숨길때
2022. 5. 18. 오후 3:52, 좌절하는 프론트 : visibility 를 활용하시겠군요
2022. 5. 18. 오후 3:52, 좌절하는 프론트 : 그리고는 클래스로 스위칭?
2022. 5. 18. 오후 3:53, 썰cho : 굳이 그렇게까지 하진 않아요
2022. 5. 18. 오후 3:53, 썰cho : 그냥 바로 사라지게 하는데
2022. 5. 18. 오후 3:54, 좌절하는 프론트 : 아하 
2022. 5. 18. 오후 3:54, 썰cho : 뭐 근데 기획이나 디자인쪽에서 요청하면
2022. 5. 18. 오후 3:54, 썰cho : 그렇게 할거같아요
2022. 5. 18. 오후 3:54, 좌절하는 프론트 : 그쵸그쵸
2022. 5. 18. 오후 3:55, 애교뿜뿜 어피치 : eslint script를 실행했을 때 ts2322와 같은 error를 잡아내주지 못하는데.. 혹시 따로해야할 설정이 있을까요?
2022. 5. 18. 오후 4:51, 프론트 공부 : eslint 에서 타입스크립트 에러도 잡아줄수 있나요??
2022. 5. 18. 오후 4:54, 델 : @typescript-eslint 사용하고 계신가요?
2022. 5. 18. 오후 4:56, 애교뿜뿜 어피치 : 음 안되는 것 같습니다ㅎㅎ
2022. 5. 18. 오후 4:56, 애교뿜뿜 어피치 : https://github.com/typescript-eslint/typescript-eslint/issues/352
2022. 5. 18. 오후 4:57, 애교뿜뿜 어피치 : 그래서 tsc —noEmit 을 통해서 ts 에러 리포팅을 받을 순 있는 것 같은데, lint-staged 안에서는 이게 실행이 안되는 것 같구요.
2022. 5. 18. 오후 4:57, 애교뿜뿜 어피치 : 그래서 https://www.npmjs.com/package/tsc-files 요걸 이용했습니다.
2022. 5. 18. 오후 4:58, 프론트 공부 : 그냥 tsc 랑 뭐가다른거에용??
2022. 5. 18. 오후 4:58, 애교뿜뿜 어피치 : 요거요?
2022. 5. 18. 오후 4:58, 프론트 공부 : 옙
2022. 5. 18. 오후 5:01, 애교뿜뿜 어피치 : 'lint': 'tsc —project ./src/tsconfig.dev.json —noEmit && eslint **/*.{ts,json,js} *.*' 이 스크립트를 통해 현재 전체 코드의 타입스크립트 에러를 리포트 받을 수 있는데, 저 스크립트 자체가 lint-staged안에서는 사용이 안되는 것 같았어요.
2022. 5. 18. 오후 5:01, 애교뿜뿜 어피치 : TS5042: Option 'project' cannot be mixed with source files on a command line. 라는 에러가 뜨네요
2022. 5. 18. 오후 5:02, 애교뿜뿜 어피치 : 공식 소개를 보니 위 사항을 해결해주는 패키지 인 것 같습니다.
2022. 5. 18. 오후 5:25: jayss님이 들어왔습니다.
2022. 5. 18. 오후 5:25, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 18. 오후 5:27, 유용태 (teo.yu) : 안녕하세요 얼굴 마사지하는 제이지님 반갑습니다~ 어서오세요 :)
2022. 5. 18. 오후 5:29, jayss : 벨로그에서 항상 좋은 글 잘 읽고 있습니다!!
좋은 커뮤니티를 발견하게 되어 기쁜 마음입니다:))
2022. 5. 18. 오후 5:32, 유용태 (teo.yu) : 감사합니다!!! 언제든 궁금한게 있다면 편하게 글 남겨주세요. 제가 답할 수 있는 것은 바로 하고 긴 호흡의 길은 블로그로 남기고 있어요. 그 밖에 서로 질문에 답하면서 함께 성장하고자 합니다. 잘 부탁드려요 ㅎ
2022. 5. 18. 오후 5:33, 좌절하는 프론트 : 이모션을 써볼려고하는데 어떤가요 ?
2022. 5. 18. 오후 5:33, 좌절하는 프론트 : 스타일드 컴포넌트와 비교한글도 눈에 보이네요
2022. 5. 18. 오후 6:15, 강승진 : 최근에 리액트 프로젝트 하나 만들어야해서 여러개 보다가 결국 stitches 로 선택해서 써보고있어요 혹여 관심있다면 사용해보시길..
2022. 5. 18. 오후 6:15, 좌절하는 프론트 : 스티치스?
2022. 5. 18. 오후 6:15, 좌절하는 프론트 : 감사함다
2022. 5. 18. 오후 7:06, 음악듣는 어피치 : 갠적으로 스타일드 컴포넌트랑 비슷하다고 생각해요~
2022. 5. 18. 오후 7:13, 우오 : 이모션 사용법 거의 비슷해요~~
2022. 5. 18. 오후 7:16, 프엔이될테야 : ssr에서는 이모션이 간편합니다. 그리고 css props 기능을 사용할수도 있어요. 성능차이는 언급이있을정도로 많이 나지 않는다고 합니다.
2022. 5. 18. 오후 7:16, 좌절하는 프론트 : 앗 감사합니다
2022. 5. 18. 오후 7:25, 까루 : 혹시 이모션의 Styled의 경우에도 css와 동일하게 처리가 되나요? 단순 편의성을 위한 제공인지 성능 차이가 있는지 모르겠어서 여쭤봅니다
2022. 5. 18. 오후 7:29, 프엔이될테야 : 일반 css와 styled와 같은 css in js는 개념이 살짝 다릅니다. 차이점은 한번 검색해보시면 될거같아요!
2022. 5. 18. 오후 7:33, 까루 : 사진
2022. 5. 18. 오후 7:33, 까루 : 아 다음과 같이 사용하는걸 여쭤봤습니다
2022. 5. 18. 오후 7:34, 프엔이될테야 : 아하 저렇게 css로 사용할때는 js변수 props로 넘길때 했던거같아요
2022. 5. 18. 오후 7:35, 프엔이될테야 : 예를들어 a라는 불린값을 가진 변수가 true일때 버튼이 빨간색이라던가..
2022. 5. 18. 오후 7:35, 까루 : 둘다 ssr 도입을 고려할때 써도 무관하다고 봐도 괜찮을까요?
2022. 5. 18. 오후 7:41, 현수 : css, styled 둘 다 js 변수를 넘길 수 있지 않나용? 제가 잘못 알고 있을 수도 있습니다!
2022. 5. 18. 오후 7:44, 프엔이될테야 : 아앗 그랬던거같아요 css사용할때는 특정 변수안에 넣고 그걸 styled에서 불러왔던거같기도 하네요
2022. 5. 18. 오후 7:44, 프엔이될테야 : 저도 찾아봐야할것같습니다
2022. 5. 18. 오후 7:44, 프엔이될테야 : 이모티콘 
2022. 5. 18. 오후 7:46, 까루 : 저도 다시 공부해보겠습니다
2022. 5. 18. 오후 8:26: 1년 8개월님이 들어왔습니다.
2022. 5. 18. 오후 8:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 18. 오후 9:48, 유용태 (teo.yu) : 안녕하세요 1년 8개월님!! 반갑습니다 ;)
2022. 5. 18. 오후 10:18, 1년 8개월 : 안녕하세요 테오님 
2022. 5. 18. 오후 10:18, 1년 8개월 : 이모티콘 
2022. 5. 18. 오후 10:18, 유용태 (teo.yu) : 네! 어서오세요 ㅎ 잘 부탁드립니다 :)
2022. 5. 18. 오후 10:20, 유용태 (teo.yu) : 뭐든 궁금한게 있으면 편하게 글 남겨주세요~ 제가 아는 것이면 다 답변드리겠습니다 ㅋ
2022. 5. 18. 오후 10:28: 귀여운 라이언님이 들어왔습니다.
2022. 5. 18. 오후 10:28, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 18. 오후 10:28, 귀여운 라이언 : 안녕하세요
2022. 5. 18. 오후 10:29, 유용태 (teo.yu) : 안녕하세요 귀여운 라이언님~ ㅎㅎ 반갑습니다 :)
2022. 5. 18. 오후 10:45, A대 4-1(진) : 이번에 이력서를 작성하고있는데요!

바닐라 js 로 프로그래머스 과제 테스트 구현해보고 그 과정에 있어서 바닐라 Js 로 프론트 개발하기위한 라우팅과 컴포넌트 등을 보일러플레이트을 제작한거를 프로젝트에 작성해도 됄까요?
2022. 5. 18. 오후 10:46, 델 : 훌륭하시네요 👍👍
2022. 5. 18. 오후 10:46, 유용태 (teo.yu) : 네~ 얼마든지요. 신입으로 들어가는 것 작성인가요?
2022. 5. 18. 오후 10:46, A대 4-1(진) : 네 맞습니다!

제가 학습한내용을 어필좀하고싶은데,, 프로젝트라고하기엔 기간도 짧고 특출난 기술스택을 사용한게 아니라서,, 어렵네요 ㅜㅜ
2022. 5. 18. 오후 10:47, 유용태 (teo.yu) : 문제상황과 의도 그리고 해결한 내용을 중심으로 쓰면 좋을 것 같아요
2022. 5. 18. 오후 10:47, 델 : 개인적으로 바닐라가 제일 특출난 스택이라고 생각합니다 ㅋㅋㅋㅋㅋㅋ
2022. 5. 18. 오후 10:47, 유용태 (teo.yu) : 기술보다는 문제를 인식하고 해결하고 하는 실행력
2022. 5. 18. 오후 10:47, 유용태 (teo.yu) : ㅋㅋㅋ
2022. 5. 18. 오후 10:47, A대 4-1(진) : 감사합니다 ㅜㅜ,, 제 열정을 잘 녹여봐야겠습니다!

2022년 5월 19일 목요일
2022. 5. 19. 오전 4:35, 서경 : 테오님 어제 태스크가 너무 지연돼서 걱정이라고 했던 신입인데요 오늘 결국 잘 해결했습니다!!
2022. 5. 19. 오전 4:35, 서경 : 시니어분이랑 4시간 좀 넘게 페어 프로그래밍 하면서 결국 다 해결했네요…하하 그냥 슥 보시더니 테스트 에러난 부분 다 고치시더라고요
2022. 5. 19. 오전 4:36, 서경 : 초과근무하시면서까지 해결하시길래 미안하다고 했더니 말씀하신 대로 전혀 신경 안 쓴다고 오히려 모를 때마다 물어보는게 더 좋다고 말씀하시더라고요 :) 그게 더 많이 배울 거라고
2022. 5. 19. 오전 4:37, 서경 : 조언해주셔서 진짜 감사합니다 ㅠㅠㅠ
2022. 5. 19. 오전 4:38, 서경 : 커밋 수 마지막에 확인해 보니까 80개 좀 넘게 날렸더라고요…ㅋㅋㅋㅋ
2022. 5. 19. 오전 6:35, 여의도개발 : https://web.dev/state-of-css-2022/
2022. 5. 19. 오전 7:49, 유용태 (teo.yu) : 와!! 너무 잘 끝났네요 ㅎ 도움이 되었다니 기쁘네요 ㅎ 감사합니다~~
2022. 5. 19. 오전 7:52: 귀여운 라이언님이 나갔습니다.
2022. 5. 19. 오전 8:40, 서경 : 하하 넵… 이전에는 확실히 소통도 좀 적게 하고 pm분이 태스크 주신 대로 했는데 이제는 제 자의로 프로세스를 잘게 쪼개서 서브태스크로 나눠서  중간중간 기록해보는 습관 들이려구요 ㅎㅎ
2022. 5. 19. 오전 8:44, 유용태 (teo.yu) : 맞아요. ㅎ 진짜 좋은 습관입니다. 하루안에 끝낼 수 있는 태스크 단위까지 쪼개는 힘이 길러지길 바랍니다. 그래야 칼퇴해도 당당하게 기분좋게 퇴근할 수 있지요.
2022. 5. 19. 오전 8:44, 유용태 (teo.yu) : 개발자가 제일 많이 들으면서 제일 대답하기 힘든 2가지 질문이 바로 '어디까지 했어요?'와 '얼마나 걸릴것 같아요?' 가 있는데... ㅋㅋ 많은 도움이 되실거라고 생각해요. ㅎ
2022. 5. 19. 오전 8:54, 떨고있는 어피치 : 언제까지 돼요? 진짜 어려워요…
2022. 5. 19. 오전 8:55, 떨고있는 어피치 : 전 하나 더 마음 아픈 말 있어요…
“카카오에서 보면~ 이런거 되잖아요”
“OO(경쟁사)는 이런거 되는데~ 우리는 왜 안돼요?”
2022. 5. 19. 오전 8:56, 서경 : ㅋㅋㅋㅋㅋ 그러게요 이제 데일리 스크럼에서도 당당해질 수 있도록 노력해야죠
2022. 5. 19. 오전 8:57, 서경 : 전 아직 안 겪어봤는데 그러면 진짜 숨이 턱 막힐 것 같긴 하네요…
2022. 5. 19. 오전 8:58, 선풍기 바람 쐬는 어피치 : 얼마나 걸릴까요..?는 물어보는 입장에서도 난감한 지점이 생기더라구요.🤤

보통은 진행 범위와 플로우, 화면 기획 초안 정도를 두고 일정을 여쭙는 편인데

이렇게 하면 개발팀 외의 부서가 버든이고 그냥 냅다 물어보면 의미없는 일정을 예측하게 되니까 ㅋㅋㅋㅋㅋㅋ그 균형을 찾는게 어렵숩니다.😔

그래서 말인데, 어떤 형태로 질문 받으실 때 효과적이고 보다 정확한 산출이 가능하셨나요???!!
2022. 5. 19. 오전 9:06, 카타나 : 카카오 날짜표시업데이트됐군요
2022. 5. 19. 오전 9:08, 썰cho : 흠 태스크를 최대한 쪼개서
2022. 5. 19. 오전 9:08, 썰cho : 그거에 맞는 work day을 0.5단위로까지 쪼개서
2022. 5. 19. 오전 9:08, 썰cho : 일정을 정하면 얼추 맞긴하더라고요
2022. 5. 19. 오전 9:09, 썰cho : 늦더라도 하루이틀?
2022. 5. 19. 오전 9:12, 유용태 (teo.yu) : 이건 ㅋㅋ 얘기 할게 많은데... 일단 PM이나 기획분들에게 제가 주로하는 이야기는 일정 예측이라는 좋은 개발을 하기 위해서 하등 도움이 안된다고 좀 강하게 말씀을 드려요. 개발도 안해봤던 걸 하는 거라서 해보지 않고서 일정을 예측하는 것은 근거가 없는 추측일 뿐이고 일정이 확실하다는 것은 문구 수정과 같이 이미 해본 일 같은거겠죠
2022. 5. 19. 오전 9:13, 유용태 (teo.yu) : 그래서 일정을 가늠해보기 위한 정말 작은 핵심 요구사항을 이번주 정도 다 같이 만들어보고 다음주 언제 예상일자 알려드릴게요 이런식으로 답변 드리고 있습니다.
2022. 5. 19. 오전 9:14, 안녕하세요 : ㅠㅠ저게
2022. 5. 19. 오전 9:14, 안녕하세요 : 맞는데
2022. 5. 19. 오전 9:14, 즐거운 네오 : 저도 안해봤던거면 일정 산출을 위한 시간을 달라고 말씀드립니다 🥲
2022. 5. 19. 오전 9:14, 유용태 (teo.yu) : 맞아요. 어차피 일정산출을 하려면 기술 검토는 뭐든 해봐야 아는건데
2022. 5. 19. 오전 9:14, 안녕하세요 : 저도 얼마나 걸릴거같아요? 하고 감으로 산정하는데 그거 맞추는데 고통을 받는
2022. 5. 19. 오전 9:14, 썰cho : 아 저도 이렇게 말해요 일단
2022. 5. 19. 오전 9:15, 썰cho : 언제까지 말씀드리면 되나요?
2022. 5. 19. 오전 9:15, 썰cho : 이렇게
2022. 5. 19. 오전 9:15, 유용태 (teo.yu) : 그쵸... 개발자는 일정보다 늦게 하면 고통이고 일정보다 빨리해도 별로에요
2022. 5. 19. 오전 9:15, 선풍기 바람 쐬는 어피치 : 그쵸그쵸, 저도 그렇게 생각해요.

근데 또 한편으론 개발 시간을 고려하지 않고 데드라인을 짜는 것 혹은 가이드라인을 주는 것도 합리적이지는 않다보니..

저 세가지 자료가 나왔을 때 논의를 해보긴 하죠..어렵네요.ㅜㅜ
2022. 5. 19. 오전 9:15, 유용태 (teo.yu) : 그래서 제가 생각하는 방법은 마감없는 스프린트이구요
2022. 5. 19. 오전 9:16, 유용태 (teo.yu) : PM은 마음에 둔 일정이 있겠지만 꾹~ 참고 개발자가 일정을 실토할때 까지 기다리는 거죠. ㅋ
2022. 5. 19. 오전 9:16, 안녕하세요 : ㅋㅋㅋㅋ
2022. 5. 19. 오전 9:16, 안녕하세요 : 꾹 참기~~
2022. 5. 19. 오전 9:16, 선풍기 바람 쐬는 어피치 : 필요하겠네요! 일정 산출을 위한 시간을 사용할 때 타 팀에게 요청하거나, 있었으면 좋겠다 하는 자료가 있으셨나요??
2022. 5. 19. 오전 9:17, 선풍기 바람 쐬는 어피치 : ㅋㅋㅋㅋ그렇군요 꾹 참기 ㅋㅋㅋㅋ🤫
2022. 5. 19. 오전 9:17, 유용태 (teo.yu) : 그리고 마치 헬스 트레이너처럼 조금씩 조금씩 잘하고 있어요~ 하나만 더 하나만 더!! 이런식으로 ㅋ
2022. 5. 19. 오전 9:17, 안녕하세요 : 저 하나만 더
2022. 5. 19. 오전 9:17, 즐거운 네오 : 기능요구사항이나 디자인시안은 이미 나온 뒤라서.. 지금까지 추가로 요청하고싶었던 자료는 없었어요
2022. 5. 19. 오전 9:17, 안녕하세요 : 진짜 효율 좋습니다
2022. 5. 19. 오전 9:18, 유용태 (teo.yu) : 요구사항과 의도요!!
2022. 5. 19. 오전 9:18, 유용태 (teo.yu) : 배경?
2022. 5. 19. 오전 9:18, 선풍기 바람 쐬는 어피치 : 그쵸!! 뭐든 구체적일수록 좋겠죠//ㅎㅎ그래서 기획팀을 짜낼때가 있습니다..
2022. 5. 19. 오전 9:19, 썰cho : 기획 리뷰 한번 합니다 저희는
2022. 5. 19. 오전 9:19, 썰cho : 개발팀에서 논의 후에
2022. 5. 19. 오전 9:19, 선풍기 바람 쐬는 어피치 : 아주 틀린 방향은 아니었구나 싶네요😌
2022. 5. 19. 오전 9:19, 썰cho : 다시 가서 기획팀이랑 리뷰하고
2022. 5. 19. 오전 9:19, 썰cho : 전체적으로 의도와 방향을 일치시킨후에
2022. 5. 19. 오전 9:19, 썰cho : 개발을 진행합니다
2022. 5. 19. 오전 9:19, 유용태 (teo.yu) : 개발팀이 스트레스 받는 것중에 하나가 구현방법까지 다 결론이 난 상태로 일정까지 함께 받는 상황인데
2022. 5. 19. 오전 9:19, 즐거운 네오 : 저는 개발팀이 기획에도 함께 참여하는 방법이 참 좋더라구요
2022. 5. 19. 오전 9:20, 선풍기 바람 쐬는 어피치 : 방법 감사합니다. 저희도 이런식으로 하고 있는데 더 적극 활용 해야 겠어요.^^
2022. 5. 19. 오전 9:20, 즐거운 네오 : 그 이후에 일정산출하니까 따로 요청할 자료가 없었던거 같네요
2022. 5. 19. 오전 9:20, 안녕하세요 : 이것도 좋습니다 근데 이러면 개발팀에 업무가 더 늘어나지 않을까요?
2022. 5. 19. 오전 9:20, 썰cho : 기획은 일단 사람이 많으면 산으로 가더라고요.. 그래서 한명이 취합해서 초안을 만들고
2022. 5. 19. 오전 9:20, 썰cho : 전체 리뷰하는 형식으로 하니까
2022. 5. 19. 오전 9:21, 썰cho : 오히려 나은거같아요
2022. 5. 19. 오전 9:21, 즐거운 네오 : 음 지금까지 경험으론 그렇진 않았어요
2022. 5. 19. 오전 9:21, 썰cho : 프로젝트 시작되면 기획자는 pm역할을 하시고
2022. 5. 19. 오전 9:21, 썰cho : 자연스럽게
2022. 5. 19. 오전 9:21, 선풍기 바람 쐬는 어피치 : 이건 약간 케바케였던 것 같은데, 어느정도 가이드라인이 있는 상태에서는 좋았던 것 같아요.
2022. 5. 19. 오전 9:21, 선풍기 바람 쐬는 어피치 : *기획 가이드라인
2022. 5. 19. 오전 9:21, 유용태 (teo.yu) : 나중에 대량으로 쌓은 컨텍스트를 이해하고 소통하는 비용보다 훨씬 싸다고 생각합니다 
2022. 5. 19. 오전 9:22, 즐거운 네오 : 저흰 그렇게 했더니
앞단에서 기획 짜옴 -> 뒤에서 리뷰하며 무슨 이유로 반려 -> 다시 짜옴 -> 반려
요런 사이클이 되어버려서 완전 킥오프 아니면 같이 참여하는 방식으로 바뀌게 되었어요
2022. 5. 19. 오전 9:22, 선풍기 바람 쐬는 어피치 : 정말 당연하다 생각했던 부분에서 다르게 이해한 것들이 있더라고요.
2022. 5. 19. 오전 9:22, 썰cho : 절대 반려란 없어요 ㅋㅋ
2022. 5. 19. 오전 9:22, 즐거운 네오 : 네 이게 엄청 비용이 쎕니다
2022. 5. 19. 오전 9:22, 썰cho : 전체 리뷰하면서 안되는 이유를 말하고
2022. 5. 19. 오전 9:23, 썰cho : 어떻게 수정하면 좋을지 같이 전부 이야기해서
2022. 5. 19. 오전 9:23, 썰cho : 방향성은 1차 기획안대로 가고
2022. 5. 19. 오전 9:23, 썰cho : 세부적인 안되는 이유는
2022. 5. 19. 오전 9:23, 썰cho : 서로 양보해가면서 일치시키는??
2022. 5. 19. 오전 9:23, 썰cho : 그래서 유관부서도 들어올때도 많아요
2022. 5. 19. 오전 9:23, 유용태 (teo.yu) : 안되는 이유가 나오는 것 자체가 소통 비용이 증가했다는 말이기도 합니다
2022. 5. 19. 오전 9:23, 즐거운 네오 : 그건 물론 그렇겠죠 ㅋㅋ
2022. 5. 19. 오전 9:24, 유용태 (teo.yu) : 기획은 방법보다 의도와 방향성 그리고 현재상황 애로사항들
2022. 5. 19. 오전 9:25, 유용태 (teo.yu) : 이런것들을 먼저 개발한테 공감대를 얻기만해도 개발자들로부터 해결책을 받을 수 있어요 (사실 이걸 다 기획은 이미 생각한거지만 ㅋㅋ)
2022. 5. 19. 오전 9:25, 유용태 (teo.yu) : 방법을 빼고 개발자와 논의하고
2022. 5. 19. 오전 9:26, 유용태 (teo.yu) : 이후 해결책와 구현에 대해서 얘기하는 식으로만 진행되도 반려는 줄일수 있습니다
2022. 5. 19. 오전 9:26, 유용태 (teo.yu) : 방법을 가지고 개발자에게 들이밀면
2022. 5. 19. 오전 9:27, 유용태 (teo.yu) : 그 구현방법에 대한 논박으로 이어지는데 개발자랑 기획자랑 개발스킬이 다른데 개발얘기로 빠지면 힘들어요. 비개발자가 내놓은 구현방법에 대해서 개발자가 안 비판적으로 검토하기가 힘듭니다
2022. 5. 19. 오전 9:28, 선풍기 바람 쐬는 어피치 : 말씀해주시는 내용이 정말 와닿네요.

항상 의도와 방향성과 가이드라인을 가지고 대화하는 것이 좋겠다는 생각이 듭니다..👍
2022. 5. 19. 오전 9:30, 서경 : 샵검색 : #오늘도 개발자가 안된다고 말했다
2022. 5. 19. 오전 9:31, 유용태 (teo.yu) : 맞아요!! 그리고 한번에 풀지 말고 일단 야금야금~~ ㅋ
2022. 5. 19. 오전 9:31, 서경 : ㅋㅋㅋㅋㅋㅋ
2022. 5. 19. 오전 9:31, 좌절하는 프론트 : 저책 재미있게 읽었어요
2022. 5. 19. 오전 9:31, 선풍기 바람 쐬는 어피치 : 야금야금 스킬 획득했으니 잘 사용해보겠습니다 ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 19. 오전 9:37, 부끄러운 어피치 : 맞아요 .. 정말 중요한 것 같아요!
2022. 5. 19. 오전 9:38, 부끄러운 어피치 : 저.. 근데 마감없는 스프린트가 어떤 뜻인가요 ??!
2022. 5. 19. 오전 9:39, 유용태 (teo.yu) : 데드라인을 정하진 않고 (물론 있는데 개발자에게는 비밀) 매주 정해진 시간 (주로 금요일)에 데모하듯이 릴리즈하면서 진행도를 체크하는 방식입니다 ㅎ 일정예측과 속도는 PM이 체크하는 방식이구요
2022. 5. 19. 오전 9:40, 진정한 : 그냥 뜬금없이 기획 얘기하시는 거 보면서 든 생각인데, 카카오톡 채팅방 모으기 같은 기능을 만들지 않는 이유는 기획은 됐는데 기술적인 어려움이 있어서일까요? 그냥 문득 궁금하더라고요.. 있으면 좋을 거 같은데 카카오 같은 대기업이 생각 안 했을리는 없고 이런..?
2022. 5. 19. 오전 9:41, 유용태 (teo.yu) : 가성비가 안 나와서 아닐까요? 구현은 못하지는 않겠지만 카톡 사용자는 이미 4천만을 넘겼고 ㅋㅋ
2022. 5. 19. 오전 9:42, 진정한 : 그럴수도 있겠네요
2022. 5. 19. 오전 9:43, 진정한 : ㅋㅋㅋㅋㅋㅋ ㅠ 
2022. 5. 19. 오전 9:43, 진정한 : 만들어주면 좋겠다
2022. 5. 19. 오전 9:43, 유용태 (teo.yu) : 채팅편의는 우리입장에서는 엄청 중요한데 먹거리 확장은 카카오입장에서 중요하니까 요새는 새 기능들 보면 대부분 더보기 쪽으로 몰려있는 느낌이에요
2022. 5. 19. 오전 9:43, 유용태 (teo.yu) : 이모지 반응도 엄청 늦게 출시되었고
2022. 5. 19. 오전 9:44, 유용태 (teo.yu) : 후발주자들이 새로운 기능을 내면 천천히 따라가도 되는 위치가 된게 아닐까 생각해봅니다 ㅎ
2022. 5. 19. 오전 9:44, 진정한 : 카카오 입장에선
2022. 5. 19. 오전 9:44, 진정한 : 급할 게 없겠네요
2022. 5. 19. 오전 9:44, 진정한 : 허허..
2022. 5. 19. 오전 9:44, arthur : 후발주자가 어여 카톡과 경쟁할 수 있는 위치까지 올라가기를.. 
2022. 5. 19. 오전 9:45, 유용태 (teo.yu) : 그러게요 ㅎ
2022. 5. 19. 오전 9:46, 유용태 (teo.yu) : https://velog.io/@dlwocks31/translation-project-management-at-big-tech# 선풍기 바람 쐬는 어피치님께 여담으로 마감날짜를 개발자가 정할 수 있게 해주는게 중요하다는 얘기를 드리면서 개발자입에서 기획이 원하는 날짜가 나올수 있도록 잘 부탁드립니다 ㅋㅋㅋ
2022. 5. 19. 오전 9:47, 유용태 (teo.yu) : 물론 진짜 계획없이 개발자에게만 다 맡기면 큰일나요 ㅋㅋㅋ
2022. 5. 19. 오전 9:49, 선풍기 바람 쐬는 어피치 : 네!!! 좋은 얘기 해주셔서 저도 너무 너무 감사드립니다.
2022. 5. 19. 오전 10:06, 눈떠! : 프론트엔드 독학중 학습 방향성의 결론이 나지 않아서 그런데 의견좀 여쭤봐도 될까요 ㅠㅠ
2022. 5. 19. 오전 10:07, 유용태 (teo.yu) : 네~ 편하게 얘기해주세요 ㅎ
2022. 5. 19. 오전 10:08, 부끄러운 어피치 : 감사합니다!!
2022. 5. 19. 오전 10:09, 눈떠! : 감사합니다. 지금 코드 잇 강의로 웹 퍼블리싱(css/html), 자바스크립트 기초 강의, 그리고 자바스크립트 심화 강의를 듣고 있는 중이고 심화 강의가 끝나면 뭔가를 만들어 봐야겠다 해서 이것저것 찾아봤는데 
2022. 5. 19. 오전 10:10, 눈떠! : 찾은건 udemy에서 50개 miniproject 따라만들기, 제로초님 자바스크립트 기초강의 보면서 만들기, 노마드 코더 클론코딩? 이렇게 생각하는데 이걸 하는게 맞는건지 의문이 들어서 여쭤보고 싶었습니다.
2022. 5. 19. 오전 10:10, 벙찐 튜브 : 좋은것같아용
2022. 5. 19. 오전 10:11, 눈떠! : 아님 참고 자료 없이  자서 맨땅에 해딩하듯이 그냥 게시판이나 계산기 이런걸 만들지
2022. 5. 19. 오전 10:11, 눈떠! : 다른 의견이나 경험담을 공유해주시면 도움이 될 것 같아요!
2022. 5. 19. 오전 10:11, 눈떠! : 감자님의견 감사합니당
2022. 5. 19. 오전 10:12, 유용태 (teo.yu) : 다 하는거죠 뭐 ㅋㅋㅋ
2022. 5. 19. 오전 10:12, A대 4-1(진) : 이번에 프로젝트 구현하면서 메모리 100%를 찍게됐는데 개발자도구 통해서 어느 부분에서 메모리 소모가 큰지 확인할 수 있는 방법이 있을까요?? 키워드 추천부탁드립니다,,!
2022. 5. 19. 오전 10:12, 옥수수 수염차 : 최적의 효율 찾다가 둘다 완주 못하시는분들 너무 많습니다.
2022. 5. 19. 오전 10:12, 눈떠! : 이중에 하나를 하는 것이 아니라 전부다 하는 건가요? 반복되는 학습을 하는 것 같아서 시간효율상 이게 만나 의문이 들기도 해서요
2022. 5. 19. 오전 10:13, 유용태 (teo.yu) : 일단 목표는 작게라도 완성을 할 수 있는 프로젝트로 잡아보세요. 내가 관심을 가지고 만들 수 있는거라면 너무 좋습니다.
2022. 5. 19. 오전 10:13, 벙찐 튜브 : 하나씩 많이 해보셔용
2022. 5. 19. 오전 10:13, 유용태 (teo.yu) : 그걸 하기 위해서 강의도 보고 학습도 하고 한다고 생각해주세요.
2022. 5. 19. 오전 10:13, 눈떠! : 넵... 제 문제가 고민하는 시간이 너무 많은 것 같아서 문제인것 같기도 해요..
2022. 5. 19. 오전 10:14, 유용태 (teo.yu) : 목표가 없으면 강의나 책을 보는 것이 크게 새겨지지 않기도 하고
2022. 5. 19. 오전 10:14, 유용태 (teo.yu) : 강의나 학습은 영어로 치면 단어나 문법에 가까운거구요 결국 실전은 말하기죠
2022. 5. 19. 오전 10:15, 유용태 (teo.yu) : 말하기를 하지 않고서 영어를 한다고 하기는 어렵잖아요? 12년 영어공부만 한 우리들의 모습을 알고 있잖아요. ㅎ
2022. 5. 19. 오전 10:15, 벙찐 튜브 : 리펙토링은 안되나욭
2022. 5. 19. 오전 10:16, 유용태 (teo.yu) : 실전 문제해결 능력이 제일 중요한거라서 뭐라도 만들 수 있는 능력을 갖추기 위해서 필요한것들을 한다고 생각해보세요. ㅎ
2022. 5. 19. 오전 10:16, 델 : 최근에 좋은 글 하나 봤는데
2022. 5. 19. 오전 10:17, 눈떠! : 스스로 만들고 싶은게 생길 때까지 그럼 강의와 학습을 해야겠군요.
2022. 5. 19. 오전 10:17, 유용태 (teo.yu) : 좋은 생각이네요!!!
2022. 5. 19. 오전 10:18, A대 4-1(진) : 아 이게 3D 렌더링을 하고있는데 파일크기가 커서 그런지 메모리 100%찍고,, 3D모델 파일이 많아서그런지 CPU도 100%찍더라구요,,
2022. 5. 19. 오전 10:18, 눈떠! : 너무 시간을 낭비하지 않을까 고민 이였는데 덕분에 고민이 해결 됬습니다!
2022. 5. 19. 오전 10:18, 눈떠! : 다해야겠어요!
2022. 5. 19. 오전 10:18, 델 : https://blog.eunsukim.me/posts/debugging-javascript-memory-leak-with-chrome-devtools 잘쓰셨더라구요
2022. 5. 19. 오전 10:18, 눈떠! : 감사합니다!
2022. 5. 19. 오전 10:19, A대 4-1(진) : 와 최고최고
2022. 5. 19. 오전 10:20, 옥수수 수염차 : 3D 데이터를 청크 형식으로 받아서 사용할 부분만 로드 하고 사용한건 해제시키고 다음 청크 받는 형태로 해서 메모리 사용하는것도 적용 추천드려요
2022. 5. 19. 오전 10:21, A대 4-1(진) : 아 감사합니다 ㅜㅜ
2022. 5. 19. 오전 11:25, 프엔이될테야 : 개인적으로는 먼저 클론코딩으로 다른 개발자는 어떤 생각을 갖고 어떻게 개발하는지 감을 익혀보는것도 좋은거같아요. 그 다음에 만들어보고 싶은 프로젝트를 설계해도 어차피 막히는부분이 많을거라.. 그때 찾아보면서 하면 될것 같네요
2022. 5. 19. 오후 12:57, 엄지척 제이지 : pr을 올리고 코드리뷰를 받아야하는 상황에서 실수로 merge 버튼을 눌러서 develop브랜치에 반영해버렸습니다… 그래서 revert하고 다시 해당 브랜치로 pr을 올리려고 했는데 변경사항이 없다고 떠서 찾아보니 revert를 revert하면 된다고 하는데 이 방법 말고 다시 pr을 올릴 수 있는 방법이 있을까요?
2022. 5. 19. 오후 1:14, 1년 8개월 : 머지 되기 전에 브랜치에서 새로 브랜치딴다음 pr 다시 올려도 변경점이 안나오나요?
2022. 5. 19. 오후 1:22, 엄지척 제이지 : 네 안뜨네요… 그냥 revert로 해야겠습니다 답변 감사합니다!
2022. 5. 19. 오후 2:21: Kani님이 들어왔습니다.
2022. 5. 19. 오후 2:21, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 19. 오후 2:21, Kani : 안녕하세요
2022. 5. 19. 오후 2:21, Kani : 벨로그 글 보고 들어오게 되었습니다 ㅎㅎ
2022. 5. 19. 오후 2:21, 유용태 (teo.yu) : 환영합니다 Kani님 어서오세요 ㅎㅎㅎ
2022. 5. 19. 오후 2:22, Kani : 제가 쓴글 바로 위에 있으셔서 읽어보고
2022. 5. 19. 오후 2:22, Kani : 들어왔네요
2022. 5. 19. 오후 2:22, 유용태 (teo.yu) : 오오!! 엘든링인가요?? +_+
2022. 5. 19. 오후 2:22, Kani : 네넵 ㅋㅋ
2022. 5. 19. 오후 2:22, Kani : 그 글입니다 ㅋㅋ
2022. 5. 19. 오후 2:23, 유용태 (teo.yu) : ㅋㅋㅋ 저희 방에서도 그 글 공유했었습니다. 좋은 글 번역해주셔서 감사합니다 ㅎ
2022. 5. 19. 오후 2:23, Kani : 앗 ㅋㅋㅋ감사합니다
2022. 5. 19. 오후 2:24, 좌절하는 프론트 : 엘든링좌다
2022. 5. 19. 오후 2:24, Kani : ㅋㅋㅋㅋ
2022. 5. 19. 오후 2:24, Kani : 백엔드 개발자지만
2022. 5. 19. 오후 2:24, Kani : 프론트도 관심있어서 ㅎㅎ
2022. 5. 19. 오후 2:32, 유용태 (teo.yu) : 좋네요!! ㅎ
2022. 5. 19. 오후 2:32, 유용태 (teo.yu) : 언제든 궁금한게 생기면 편한게 글 남겨주세요ㅎ 여기는 함께 묻고 답하면서 성장하는 공간입니다. 환영합니다. ㅎ
2022. 5. 19. 오후 2:45, 벙찐 튜브 : 버튼에 백그라운드컬러 속성을 사용하여 색상을 지정하면 버튼기능이 작동하지않는것같아요 무슨일일까요..?
2022. 5. 19. 오후 2:49, 화가난다 화가나 그래서 난 화가임 : 버튼기능을 어떻게 작동시키고 있는지 보여주시면 좋을 거 같아요!
2022. 5. 19. 오후 2:50, 벙찐 튜브 : 자바스크립트로 버튼을 클릭하면 페이지를 이동시킵니다
2022. 5. 19. 오후 2:51, 애교뿜뿜 어피치 : 모바일에 최적화된 웹앱을 개발하고 있습니다. 그래서 onclick 대신 onTouchEnd를 사용해보았는데, 유저가 스크롤을 내리기 위해 드래깅을 하는 경우에도 그 드래깅의 컴포넌트에 onTouchEnd가 있는 경우 실행이 되는데요. 혹시 요런 문제는 어떻게 해결하면 될까요.?
2022. 5. 19. 오후 2:52, 여의도개발 : https://github.com/storybookjs/storybook/issues/16797

스토리북 6.5 릴리즈!
2022. 5. 19. 오후 2:55, 진현 : 스타일드 컴포넌트에서 디버깅을 더 편하게 하기위해 매크로를 아래처럼 임포트 하여 사용하는데.. import * from 'styled-components/macro' 를 일일이 써주지 않고 한번에 전체 파일에 적용하는 방법이 따로 있을까요??? 
2022. 5. 19. 오후 2:56, 진현 : https://styled-components.com/docs/tooling  바벨플러그인 적용이 안되어서 여쭈어봅니다ㅠ_ㅠ..
2022. 5. 19. 오후 3:05, 벙찐 튜브 : 해결되었습니당
2022. 5. 19. 오후 3:06, 유용태 (teo.yu) : onClick을 쓰시길 바래요 ^^;; 안그러면 구현하기 너무 귀찮을거라 ㅠ
2022. 5. 19. 오후 3:10, 애교뿜뿜 어피치 : 네 ㅠㅠ 그래야 할 것 같습니다..다만,, 만약 onTouch로 구현을 한다면 해당 컴포넌트를 벗어났을 때는 이어지는 코드가 실행되지 않도록 함수를 중지시키는 것을  별도로 개발을 해야겠죠..?
2022. 5. 19. 오후 3:11, 유용태 (teo.yu) : 네~ 그렇죠. ㅎ
2022. 5. 19. 오후 3:13, 애교뿜뿜 어피치 : 감사합니다 🙏
2022. 5. 19. 오후 3:14, 상고펭 : 책에서 공부한 내용을 블로그에 올릴 때 모든 코드와 내용을 재구성해서 올리시나요?
내용 요약하다보면 책에 나온 표현들을 일정부분은 쓰게 되기도 하는데
다른 분들은 저작권 준수하면서 올리는 팁이 있으신지 궁금합니다
2022. 5. 19. 오후 3:17, 썰cho : 코드와 내용은 거의 오픈소스라
2022. 5. 19. 오후 3:17, 썰cho : 상관 없을듯해요
2022. 5. 19. 오후 3:17, 썰cho : 이미지만 조심하면 될듯합니다
2022. 5. 19. 오후 3:17, 썰cho : 펭귄 열심히 하시나보네요 ㅎㅎ
2022. 5. 19. 오후 3:18, 상고펭 : 아 그렇군여 ㅋㅋㅋㅋ 여태 저만 변수명바꾸고 그랬나봐요.. 몰랐어요
2022. 5. 19. 오후 3:18, 상고펭 : 감사합니다ㅋㅋㅋ 네 나름대로 열심히 하고있어요!
2022. 5. 19. 오후 3:18, 썰cho : ㅋㅋㅋ 그리고 수익성이 아니면 크게 저작권에 걸리지 않습니다
2022. 5. 19. 오후 3:54, 기뻐하는 라이언 : 안녕하세요. 리액트에서 어떤 이유때문에 children props를 사용하는 이유가 무엇일까요??
2022. 5. 19. 오후 3:57, A대 4-1(진) : 고차컴포넌트 확인해보시는것도 좋을것같아여
2022. 5. 19. 오후 3:57, 살려줘 네오 : 여러 이유가 있겠지만 컴포넌트의 재사용성을 높이기 위해서도 하나의 이유라로 봅니다.
2022. 5. 19. 오후 3:57, 썰cho : 흠 저는 jsx문법을 사용해서라고 생각했었어요
2022. 5. 19. 오후 3:57, 프론돌이 : https://ko.reactjs.org/docs/composition-vs-inheritance.html
2022. 5. 19. 오후 3:57, 썰cho : 태그형태의 문법을 사용하기위해
2022. 5. 19. 오후 3:57, 프론돌이 : 사진
2022. 5. 19. 오후 3:59, 기뻐하는 라이언 : <FancyBorder>안의 내용을 FancyBorder 컴포넌트에 삽입해서 사용 해도 되지 않을까요?
2022. 5. 19. 오후 4:00, 프론돌이 : https://developer-talk.tistory.com/226

요거 읽어보셔도 잘 나와있네요!
2022. 5. 19. 오후 4:00, 썰cho : 그럼 컴포넌트를 쪼개는 의미가 없어지기도 하고
2022. 5. 19. 오후 4:00, 썰cho : 레이아웃 느낌으로 쓰고싶을수도 있어서요
2022. 5. 19. 오후 4:03, 김동현 : 레아이웃 느낌으로 쓰는것이 제일 많은것같습니다!
2022. 5. 19. 오후 4:06, 기뻐하는 라이언 : 상위 컴포넌트에서 사용하는 요소를 재사용 할 경우에도 사용 되는 것인가요?
2022. 5. 19. 오후 4:11, 기뻐하는 라이언 : return (
    <div className='App'>
      <Header>
        <h1>Hello World</h1>
      </Header>
    </div>
  );

const Header = ({ children }) => {
  return (
    <div>
      {children}
    </div>
  );
};

children을 이렇게 사용하는데
2022. 5. 19. 오후 4:12, 기뻐하는 라이언 : return (
    <div className='App'>
      <Header />
    </div>
  );

const Header = () => {
  return (
    <div>
      <h1>Hello World</h1>
    </div>
  );
};
export default Header;
2022. 5. 19. 오후 4:16, 핸디(강경석) : https://all-dev-kang.tistory.com/entry/%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-packagejson-%EB%8B%A4%EC%9D%B4%EC%96%B4%ED%8A%B8-%EC%97%AC%EC%A0%95%EA%B8%B0-depcheck-npm-check
뜬금없이 글 하나 공유드립니다. ㅎㅎ
기능 개발을 하다가 시간이 생각보다 많이 남아, 불필요한 패키지를 찾고 제거하는 과정을 글로 작성해봤어요.
정답인지는 모르겠지만, best practice를 만들려고 찾아가는 과정이니 많은 피드백 부탁드립니다.

2022. 5. 19. 오후 4:20, A대 4-1(진) : 와 최고최고,,, 대단하십니다
2022. 5. 19. 오후 4:22, 멀기트 : 핸디!!
2022. 5. 19. 오후 5:09, 머리 빗는 네오 : 리액트에서 기본 <button 태그로 
2022. 5. 19. 오후 5:09, 머리 빗는 네오 : 함수 발생시킬때
2022. 5. 19. 오후 5:10, 머리 빗는 네오 : e.prevent 꼭 써줘야하나요?
2022. 5. 19. 오후 5:13, 설아아빠 : https://ko.javascript.info/bubbling-and-capturing
2022. 5. 19. 오후 5:14, 1년 8개월 : 어떤식으로 사용하시는진 모르겠지만 button type이 submit이면 reload 방지차원에서 사용해야합니다.
2022. 5. 19. 오후 5:14, 설아아빠 : 버블링과 캡쳐링이 어떤건지 읽어보시면 도움이 될거같아영 
2022. 5. 19. 오후 5:14, 머리 빗는 네오 : 감사합니다~!
2022. 5. 19. 오후 5:15, 머리 빗는 네오 : react dlsep
2022. 5. 19. 오후 5:15, 머리 빗는 네오 : 인데
2022. 5. 19. 오후 5:15, 머리 빗는 네오 : typedp
2022. 5. 19. 오후 5:15, 머리 빗는 네오 : type 지정 안해주고 함수발생시키는 용도로 주로 쓰고있는데요
2022. 5. 19. 오후 5:17, 지노 : 서버에서 여러 사이트에서 이미지 링크 크롤링해서 저장하고, 클라이언트에서 이를 보여주고 있습니다. 그러다보니 요청 시간이 길어지고 있는데 자체적으로 cdn을 두는 것 말고는 최적화할 수 있는 방법이 없을까요?
2022. 5. 19. 오후 5:17, 지노 : 사진
2022. 5. 19. 오후 5:19, 설아아빠 : 백엔드에 사이즈를 줄여서 저장한 다음 호출하는 방법도 있을것 같아요
2022. 5. 19. 오후 5:20, 1년 8개월 : 일단 이미지를 tinypng에서 줄여보시는건 어떨까요 제가 알기로는 이미지가 3mb넘어가면 무거운걸로 알고있습니다.
2022. 5. 19. 오후 5:22, 지노 : 흠.. 결국 서버에서 최적화를 해줘야 되는군요. Next/image를 쓰고 싶은데 도메인에 wildcard를 설정할 수 없어서 못쓰는게 아쉽네요ㅠㅠ
2022. 5. 19. 오후 5:25, 프론돌이 : e.preventDefault() 관련해서는 버블링/캡처링을 막아준다가 아니라,   기본동작을 막아준다로 보셔야 해요! 

기본동작이 뭐인고 하니
a 태그에 href가 있으면, 그 a 태그를 눌렀을 때, 거기로 이동하는 동작이나
submit 태그를 누르면 해당 form안에 input을 전송한다거나 등등등


버블링/캡처링 막아주는 것은 e.stopPropagation() 입니다.
2022. 5. 19. 오후 5:26, 머리 빗는 네오 : 아 태그별 기본동작말씀이시군요
2022. 5. 19. 오후 5:26, 머리 빗는 네오 : 감사합니다!!!!!!
2022. 5. 19. 오후 5:26, 프론돌이 : 이름 그대로 preventDefault는 디폴트 동작을 막는다. 
stopPropagation은 전파를 막는다.
2022. 5. 19. 오후 5:26, 머리 빗는 네오 : 이모티콘 짱감사!!!!!1
2022. 5. 19. 오후 6:39: 눈물바다에 빠진 라이언님이 들어왔습니다.
2022. 5. 19. 오후 6:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 19. 오후 6:40, 유용태 (teo.yu) : 눈물바다에 빠진 라이언님~~ 어서오세요~~ 반갑습니다 :)
2022. 5. 19. 오후 6:40, 응애 : 이모티콘 
2022. 5. 19. 오후 6:41, 망치 : 안녕하세요! 혹시 사용해보신 차트라이브러리들 중에서 그래프 색상이 자동으로 지정되는 라이브러리가 있을까요?
2022. 5. 19. 오후 6:41, 최민석 : Apex요!
2022. 5. 19. 오후 6:44, 망치 : 오호 감사합니다!
2022. 5. 19. 오후 7:42, 프엔공부중 : 스타트업 시리즈 a 투자 받은 곳만 검색해서 찾아보거나 편하게 볼 수 있는 사이트가 혹시 있나요?
2022. 5. 19. 오후 7:43, 프엔공부중 : 자답입니다 ㅎ.. https://www.nextunicorn.kr/
2022. 5. 19. 오후 7:43, 현수 : https://thevc.kr/
도 있습니다!
2022. 5. 19. 오후 7:44, 프엔공부중 : 여기서 찾아봤는데 필터 같은 기능이 있나요? 찾아봤는데 안보여서 ㅠ
2022. 5. 19. 오후 7:44, 현수 : 자세한 기능은 아마… 유료일거에요 ㅎ..
2022. 5. 19. 오후 7:44, 현수 : 그래도 잘 되어있어서 추천드렸습니다
2022. 5. 19. 오후 7:52, 프엔공부중 : 아하 그렇군요 ㅎ 감사합니다!
2022. 5. 19. 오후 8:27, 마이크를 든 라이언 : 사진
2022. 5. 19. 오후 8:27, 마이크를 든 라이언 : 안녕하세요! 제로초 유투브  vue-webgame 강의 보고 있는데요! 어제부터 웹팩 설치하는데 잘 안됩니다 ㅠㅠ,,,, 혹시 도움 주실 수 있을까요…. 
2022. 5. 19. 오후 8:36, jayss : 유튜브에서 치는 버전으로 해보셨나요?.?
아마도 버전명시안하고 install하면 최신버전으로 다운되어서 에러가 나긴 할겁니다만 (구버전으로 다운받아야합니다) 버전문제가 아니라면 저도 잘 모르겠습니다ㅠㅜ
2022. 5. 19. 오후 8:39, 프엔공부중 : 현업에 계신 분들은 대학 졸업하기 전에 취업을 빨리 하는거에 대해 어떻게 생각하시나요? 취업을 빨리 하는게 좋은지 아니면 졸업때까진 천천히 준비하면서 취업을 하는게 좋은지 의견이 궁금합니다!
2022. 5. 19. 오후 8:41, 설아아빠 : 제가 다시 대학생이 된다면 목숨걸구 대학생활 할 것 같습니다
2022. 5. 19. 오후 8:41, 프론트 공부 : 워니님 인터뷰 보니깐 2학년때 취업을 하셨덛나구요!
2022. 5. 19. 오후 8:42, 프론트 공부 : 현업을 1년정도 경험한후 학교로 돌아오면 공부를할때 더 효율적이셨다고 하십니다!
2022. 5. 19. 오후 8:42, 프엔공부중 : 혹시 이유를 알 수 있을까요?!
2022. 5. 19. 오후 8:42, 최민석 : 전 이렇게하고 싶어서 준비하고 서류도 넣어봤는데 잘안됐어요ㅠㅠ 전 개인적으로 대단하다고 생각합니다! 가치관 차이인거같아요. 저는 실무 빨리 배워보고 싶은 생각이 많아서 준비했거든요 ..
2022. 5. 19. 오후 8:42, 살려줘 네오 : 그 워니의 이력서 그 워니님이요! Wow...?
2022. 5. 19. 오후 8:42, 프엔공부중 : 앗 저도 영상 봤습니다!!
2022. 5. 19. 오후 8:42, 프엔공부중 : 개발바닥님 유튭 영상보시면 나옵니다 ㅎ
2022. 5. 19. 오후 8:42, 설아아빠 : 그분은 취업하면서도 학교 장학금 받는 학점을 유지하셨다고 본것 같네요 
2022. 5. 19. 오후 8:42, 프엔공부중 : 그렇군요! 아무래도 각자의 가치관이나 방향성이에 따라 많이 나뉘어지겠네요 ㅎ
2022. 5. 19. 오후 8:43, 프엔공부중 : 넵 맞아요 ..
2022. 5. 19. 오후 8:43, 프론트 공부 : 저도 이유가 궁금하네요ㅎㅎ
2022. 5. 19. 오후 8:43, 최민석 : 프엔공부중님 ㅋㅅ 연락오셨나요?
2022. 5. 19. 오후 8:43, 프엔공부중 : 아 거긴 떨어졌습니다 ㅋㅋ
2022. 5. 19. 오후 8:43, 최민석 : 억 연락받으셨군요
2022. 5. 19. 오후 8:43, 프엔공부중 : 넵 아직 안오셨나요?
2022. 5. 19. 오후 8:43, 프론트 공부 : ㅋㅅ이 어딘지 궁금하네욥..ㅎㅎㅎ
2022. 5. 19. 오후 8:43, 카타나 : 삭제된 메시지입니다. 
2022. 5. 19. 오후 8:43, 최민석 : 네네 평가도 안이루어졌어요
2022. 5. 19. 오후 8:44, 최민석 : 삭제된 메시지입니다. 
2022. 5. 19. 오후 8:44, 카타나 : 아하
2022. 5. 19. 오후 8:44, 프엔공부중 : 넵 마장요
2022. 5. 19. 오후 8:44, 프엔공부중 : 아무래도 지원자가 생각보다 많나보네요.,
2022. 5. 19. 오후 8:44, 최민석 : 그런가봐용..
2022. 5. 19. 오후 8:44, 프엔공부중 : 꼭 붙으시길!!
2022. 5. 19. 오후 8:46, 마이크를 든 라이언 : 아! 버전 낮춰야하는군요!! 답변 감사합니다! ㅠㅠ
2022. 5. 19. 오후 8:58, 설아아빠 : cs지식이 많이 없어도 실무에 엄청 큰 영향은 없지만 그 cs지식이 있는 상태에서 성장하는 속도랑 없는 상태에서 성장하는 속도나 배움을 이해하는 속도의 차이가 큰 것 같아요
저는 cs지식이 거의 없는 수준이었는데 좀 연차가 되고나니 어떤 벽이 느껴저서 대학때 배웠던걸 다시 공부 하고 있어요.... 
2022. 5. 19. 오후 8:59, 프엔공부중 : 아 그렇군요.. 확실히 cs는 당장 필요가 없다고 느껴도 기본이라 중요함을 다시한번 느끼네요.. 감사합니다!
2022. 5. 19. 오후 9:01: 쑥스럽게 인사하는 프로도님이 들어왔습니다.
2022. 5. 19. 오후 9:01, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 19. 오후 9:04, 부끄러운 어피치 : 400명 넘었어요!!
2022. 5. 19. 오후 9:04, 유용태 (teo.yu) : 안녕하세요 쑥스럽게 인사하는 프로도님 반갑습니다
2022. 5. 19. 오후 9:06, 진현 : 아까 고민했던거 해결해서 결과 공유드립니당!

cra로 만들어진 프로젝트는 babel을 적용할 수 없고, 적용하려면 react-app-rewire-styled-components 같은걸로 강제로 변경시켜줘야 하더군요..!
그래서 그냥 vscode에서 아래 이미지처럼 강제로 전부 macro를 붙였습니다..!
2022. 5. 19. 오후 9:06, 진현 : 사진
2022. 5. 19. 오후 9:20, 프론트 공부 : 가장 간단한 방법이 가장 좋은방법일수도 있죠!
2022. 5. 19. 오후 11:05, 프론트 지키미 : 회사에서 1인 개발하시는 분 계신가요???
2022. 5. 19. 오후 11:10, 눈떠! : 다음 단계는 클론 코딩 강의를 참고하면서 공부하는 것이 좋다는 생각에 확신이 드네요! 답변 감사합니다! :)
2022. 5. 19. 오후 11:18, 설아아빠 : 저욤...
2022. 5. 19. 오후 11:21, 프론트 지키미 : 삭제된 메시지입니다. 
2022. 5. 19. 오후 11:22, 프론트 지키미 : 혹시 상담 가는할까여??
2022. 5. 19. 오후 11:26, 설아아빠 : 넵~
2022. 5. 19. 오후 11:28, 설아아빠 : 디코방에 같이개발수다떨어요 채널에 있을게요.. ㅎ 
2022. 5. 19. 오후 11:29, 프론트 지키미 : 삭제된 메시지입니다. 
2022. 5. 19. 오후 11:29, 프론트 지키미 : 여기로 가는할까요??
2022. 5. 19. 오후 11:29, 프론트 지키미 : 제가 디코가 지금 불가능해서요 
2022. 5. 19. 오후 11:30, 신난 어피치 : 오 이거 링크 잇나욤
2022. 5. 19. 오후 11:30, 설아아빠 : https://discord.gg/yVGaVQh6
2022. 5. 19. 오후 11:32, 신난 어피치 : 아 이 톡방 디코군요? ㅎㅎ 감사함다!

2022년 5월 20일 금요일
2022. 5. 20. 오전 11:10: 주니어님이 들어왔습니다.
2022. 5. 20. 오전 11:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 20. 오후 12:49, 웅세 : next js에서 사용자가 직접 url을 입력하여 접근하는것을 막을 수 있는 방법이 무엇이있나요?
2022. 5. 20. 오후 12:53, A대 4-1(진) : 서버에서 302 리다이렉트 ?
2022. 5. 20. 오후 1:05, 썰cho : history state를 주고
2022. 5. 20. 오후 1:05, 썰cho : history state없으면 이동시키면 될거같아요
2022. 5. 20. 오후 1:05, 썰cho : 넥스트에도 있을거같은데
2022. 5. 20. 오후 1:08, 웅세 : 오 넵넵 찾아보겠습니다!!
2022. 5. 20. 오후 1:08, 웅세 : 감사합니다!!
2022. 5. 20. 오후 2:36, 지노 : 검색 결과에 대한 응답으로 data.info.type이 'Collections'인 경우, 'Creators'인 경우, info가 빈 객체인 경우가 있습니다. 
useQuery의 onSuccess 메소드를 사용해서 조건에 따라 타입을 다르게 전달하는 방법이 있을까요?
2022. 5. 20. 오후 2:59, A대 4-1(진) : Component를 routing하는데 있어서 질문이 있습니다!!

const Page = MainPage; // MainPage is Page Component
console.log(Page);
return <Page />

---

console.log(Page)의 경우 
() => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_Templates_NickName__WEBPACK_IMPORTED_MODULE_0__['default'], {}, void 0, false, {
  fileName: _jsxFileName,
  lineNumb…
  
라는 결과를 나타내고  정상적으로 렌더링이 작동됩니다!
 
---
 
하지만,

const [userData,setUserData] = useState(...);
const [Page,setPage] = useState<() => JSX.Element | null>(null)

useEffect(() => {
    handlePage();
},[userData])


…
console.log(Page)
if(!Page) return null;
return <Page />

—

의 경우 

$$typeof: Symbol(react.element)
key: null
props: {}
ref: null
type: () => {…}
_owner: FiberNode {tag: 0, key: null, stateNode: null, elementType: ƒ, type: ƒ, …}
_store: {validated: false}

라는 값을 Page가 갖더라구요 제 생각엔 state로 Page Component를 관리해서 발생한 이슈라고 생각하는데 왜 그런지 알 수 있을까요?
2022. 5. 20. 오후 3:11, 델 : axios 단에서 처리하는 건 어떨까요?
2022. 5. 20. 오후 3:14, 델 : setPage하는 부분 로직이 어떻게 되나요?
2022. 5. 20. 오후 3:27, 프론돌이 : 사진
2022. 5. 20. 오후 3:27, 프론돌이 : 테오님 글을 여기서도 보네요! ㅋ
2022. 5. 20. 오후 3:48, 벙찐 튜브 : 실례합니다 혹시 화면속에 화면띄우는것을 뭐라고 하나요?
2022. 5. 20. 오후 3:48, 프론트 : 아이프레임 말씀하시는 건가여
2022. 5. 20. 오후 3:50, 벙찐 튜브 : 오 아이프레임 검색해볼게요
2022. 5. 20. 오후 3:52, 벙찐 튜브 : 사진
2022. 5. 20. 오후 3:52, 벙찐 튜브 : 이런걸 아이프레임이라고하는군용
2022. 5. 20. 오후 3:52, 벙찐 튜브 : 감사합니다아
2022. 5. 20. 오후 3:52, 벙찐 튜브 : 찾은거같아요!
2022. 5. 20. 오후 4:08, A대 4-1(진) : 답장이 늦어 죄송합니다!

setPage에는 userData에 따라 컴포넌트 함수를 저장해주고 있었습니다! setState에 제가 함수를 저장하다보니 함수가 실행된거같아요 ㅋㅅㅋ,,,
2022. 5. 20. 오후 4:09, A대 4-1(진) : const [page,setPage] = useState();
setPage(Component);

를 해서 발생한 문제인것같습니다 ㅎㅎ

Component는 () => ~~

라서 setState(Component) === setState(() => ~~~ )로 컴포넌트가 바로 실행되버렸네여
2022. 5. 20. 오후 4:10, A대 4-1(진) : 굳이 상태로 저장할필요를 못느껴서 useCallback으로 관리했습니다!
2022. 5. 20. 오후 4:41, 델 : 오 ㅋㅋㅋㅋㅋ 그럴수가있네요 생각도 못했는데 좋은 정보 감사합니다
2022. 5. 20. 오후 4:45, 헬렌 : 안녕하세요~! 혹시 전달하는 props의 개수가 많을 때는 어떻게 최적화하면 좋을까요? 컴포넌트를 만들어서 전달한다고 기억하는데 정확히 모르겠네요 🤔
2022. 5. 20. 오후 4:45, 프론트 : 많은게 어느정도 일까요?
2022. 5. 20. 오후 4:45, 헬렌 : 6개에요!
2022. 5. 20. 오후 4:46, 1년 8개월 : 혹시 어떻게 6개인지 알 수 있을까요?
2022. 5. 20. 오후 4:46, 프론트 : 6개 정도면 딱히 많은 거 같지는 않은데,,,
2022. 5. 20. 오후 4:46, 헬렌 : 아 그래요...?
2022. 5. 20. 오후 4:46, 헬렌 : 제가 만들고 보니까 6개를 넘겨줘야 하더라고요
2022. 5. 20. 오후 4:47, 1년 8개월 : 클린코드에서는 4개 이상이면 많다고 정의하긴합니다!
2022. 5. 20. 오후 4:47, 헬렌 : 오호~~
2022. 5. 20. 오후 4:47, 1년 8개월 : 어 이건 함수 기준이구나 
2022. 5. 20. 오후 4:48, 헬렌 : 전 3개도 많다고 생각하는데.. 흠~
2022. 5. 20. 오후 4:49, 1년 8개월 : 어떤거냐에 따라 다른거 같아요 예를 들어서 버튼이면 label, onClick, loading, disable, theme 등등 이니까
2022. 5. 20. 오후 4:49, 지노 : 만약 전달하는 props가 상태라면
2022. 5. 20. 오후 4:49, 지노 : 사진
2022. 5. 20. 오후 4:49, 1년 8개월 : 혹시 코드를 볼 수 있을까요
2022. 5. 20. 오후 4:49, 지노 : 이렇게 묶어서 보내는거 같아요
2022. 5. 20. 오후 4:49, 지노 : 근데 하나가 바뀌면 전부 리렌더링하게 되니까 memo를 써서 최적화해줘야 했습니다
2022. 5. 20. 오후 4:50, 프론트 : 개수가 중요한 게 아니라, 불필요한 props인지 아닌지가 중요하다고 생각해요
2022. 5. 20. 오후 5:06, 델 : props 개수가 많다는 거 자체는 별로 안 중요한 거 같아요
2022. 5. 20. 오후 5:06, 델 : mui button 같은 유명한 라이브러리도 props 가 이만큼이나 많고 https://mui.com/material-ui/api/button/#props
2022. 5. 20. 오후 5:08, 델 : 근데 prop 개수가 많다는 건 부모 컴포넌트랑 자식 컴포넌트가 강하게 결합돼 있을 확률이 높다고 볼 수 있을 거 같아요. 만약 그런 문제가 있다면 컴포넌트간 결합도를 낮추고 합성을 통한 재사용성을 높이는 방안을 고려해볼 수 있을 거 같긴 해요
2022. 5. 20. 오후 5:18, 헬렌 : 코드 보냅니다! 감사합니당
2022. 5. 20. 오후 5:19, 헬렌 : 사진
2022. 5. 20. 오후 5:19, 헬렌 : 거의 다 스타일링 관련된 거에요
2022. 5. 20. 오후 5:21, 1년 8개월 : fontSize, fomtWeight, underlineHeight
를 통일해서 size=small, medium, large로 통일하면 안될까요? 저게 다 스타일이 다를라나
2022. 5. 20. 오후 5:22, 김동현 : 그렇게 스타일 3개로만 가능 경우도 있고, 다양한 디자인을 추구하는 경우도 있습니다.
2022. 5. 20. 오후 5:22, 김동현 : 디자인 시스템을 어떻게 짜느냐에 따라 다른것 같아요 ㅎㅎ
2022. 5. 20. 오후 5:22, 1년 8개월 : 아 Typography같은 컴포넌트군요
2022. 5. 20. 오후 5:23, 헬렌 : 맞아요 다 달라요 ㅜㅜ
2022. 5. 20. 오후 5:49: 행돼님이 들어왔습니다.
2022. 5. 20. 오후 5:49, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 20. 오후 5:51, 유용태 (teo.yu) : 안녕하세요 형돼님~~ 반갑습니다.
2022. 5. 20. 오후 5:53, 행돼 : 안녕하세요! 신입 프론트엔드 개발자 입니다~! 프앤 선배님들, 동기분들과 정보 공유를 위해 들어오게되었습니다! 잘 부탁드립니다! 
2022. 5. 20. 오후 5:53, Kani : 어서오세요
2022. 5. 20. 오후 5:54, 좌절하는 프론트 : 아아 오늘은 저장소 이관
2022. 5. 20. 오후 5:56, 여의도개발 : 혹시 리액트 테스팅에서 hover시에 style 테스트해보신분 계씬가요?
2022. 5. 20. 오후 5:58, 델 : 그런 거면 오히려 커스텀할 수 있는 여지가 많은 좋은 구조인 거 같아요
2022. 5. 20. 오후 5:59, 델 : 상황에 맞게 옵션 적당히 줘서 쓸 수 있는
2022. 5. 20. 오후 6:03, 헬렌 : 음 맞아요 파이버님 말씀대로 최적화에 눈을 돌려야겠어요
2022. 5. 20. 오후 6:03, 헬렌 : 의견 아주 감사합니다
2022. 5. 20. 오후 6:12, fefe : 안녕하세요? 저희 회사 서비스를 구글이만든 라이트하우스를 좀 돌려봤는데 이미지 최적화를 하면 로딩속도가 더 개선될거 같다며 webP 형식으로 바꾸는걸 추천하던데 어떻게 개선하면 좋을까요? 
2022. 5. 20. 오후 6:13, fefe : 서버개발자 분에게 뭔가 세팅을 부탁드려야할지..? 다른 분들께서는 어떤 경험이 있으신지 궁금합니다
2022. 5. 20. 오후 6:14, 살려줘 네오 : 혹시…. 그 장비 구입 편하게 말하라고 하는데 어느 선에 편하게 얘기해야되요 ?
2022. 5. 20. 오후 6:14, 살려줘 네오 : 자꾸 편하게 얘기하라고 모니터 인치나 등등 말하는데 다들 어떻게 말씀하셨느지 궁금합니다.
2022. 5. 20. 오후 6:14, 살려줘 네오 : 키보드라든가 모니터라든가 아이맥 이나 맥북 뭐 알아서 고르라는데..
2022. 5. 20. 오후 6:17, 살려줘 네오 : 혹시 현업 계신 분들은 새로 장비를 맞추는 곳인 경우, 어떻게 대처하셨는지 궁금합니다! 당황해서, 아이맥보다는 맥 프로 아무거나면 된다고는 했는데.. 신입 입장에서 어느 정도 선을 요구하셧는지 듣고 싶네요.. 원하는거 사준다고 하는데 , 이런 경우는 처음이라 어떻게 말씀드려야 하나요?  혹시 장비를 사주는 기업에 입사하셨던 분들 경험이 궁금합니다.
2022. 5. 20. 오후 6:18, fefe : 원하는거 말씀하라고 하셨으니 당연히 원하는거 말씀하시면되고, 정 불안하시면 인사담당자분께 가격 상한선이 있나요? 라고 여쭤보시면 될 것 같은데요.
2022. 5. 20. 오후 6:18, 좌절하는 프론트 : 원하는거 ㄹ하면되요
2022. 5. 20. 오후 6:18, 좌절하는 프론트 : 만약 예산 오버되는거면 피드백 옵니다
2022. 5. 20. 오후 6:19, 좌절하는 프론트 : 그리고 툴도 사달라고 같이 고고
2022. 5. 20. 오후 6:19, fefe : 눈치보다 맥북에어 13인치 말씀하시는 그런 최악의사태는 안됩니다 ..
2022. 5. 20. 오후 6:19, 좌절하는 프론트 : 나비캣 프리미엄 그립다..
2022. 5. 20. 오후 6:20, 살려줘 네오 : HR담당자분도 그 윗선에 물어봐야되서 편하게 얘기하라고 하는데, 어느정도로 눈치껏 요구해야 되는지 모르겠네요 , 14-16인치 중에서 고르라면 뭐가 좋을까요.. 신형 m1말고 인텔로 요청해서 사준 개발자도 있다고 들었는데..
2022. 5. 20. 오후 6:20, 살려줘 네오 : 오 툴이라면 어떤것이 있을까요? 추천 부탁드려도 될까요
2022. 5. 20. 오후 6:21, fefe : 원하는거 얘기하라고 하셨다는데 눈치를 보실 이유가 ..? ..
2022. 5. 20. 오후 6:21, j : 주문할때 모니터도..
2022. 5. 20. 오후 6:22, fefe : 비싼거 얘기했다가 속물처럼 보일까봐 그러시는건가용..? 
2022. 5. 20. 오후 6:22, 살려줘 네오 : 36인치라고 불렀는데..추천부탁드려도 될까요
2022. 5. 20. 오후 6:23, j : 본인이 사용하시기에 좋은게 좋죠..?
2022. 5. 20. 오후 6:23, 애교뿜뿜 어피치 : 32인치 uhd isp p3 되는 걸로 사세요.. 
2022. 5. 20. 오후 6:23, j : 저는 그냥..27 2개쓰고있어서
2022. 5. 20. 오후 6:24, 애교뿜뿜 어피치 : 노트북은 맥북 m1 pro 면 합리적일것같은데
2022. 5. 20. 오후 6:24, 애교뿜뿜 어피치 : 27개도 좋죠!!! 
2022. 5. 20. 오후 6:25, O_O : 이모티콘 13인치 프로는 절대 하지마세요...
2022. 5. 20. 오후 6:25, O_O : 14,16 중에 취향껏 고르시면 될 것 같아요
2022. 5. 20. 오후 6:25, fefe : 천만원짜리 맥프로 쓰실거 아니니까 너무 눈치안보셔도돼용..ㅋㅋㅋ 
2022. 5. 20. 오후 6:33, 살려줘 네오 : isp p3 오 그거 뭘까요? 그 썬더볼트 말하시는건가… 썬더볼트 독은 사달라고햇는데.
2022. 5. 20. 오후 6:35, 살려줘 네오 : 그럼 m1 인텔중엔 어떤걸 추천하시나요? 14 ,16도 추천해주시면 감사합니다. 현재 intel 쓰는데, m1이 이슈가 있는지 인텔로 사달라고 한 개발자도 있다고 하더라구요. m1을 안써보서.ㅜㅜ
키보드는 뭐 쓰시는게 추천해주실만한게 있을까요… 막손이라 아무거나 키보드해도 괜찮긴합니다.
2022. 5. 20. 오후 6:37, O_O : 닥 m1이요.
성능 발열 등등 안 살 이유가 딱히 없는 것 같아요
2022. 5. 20. 오후 6:38, O_O : 14,16은 취향차이라... 큰거 좋아하고 무거워도 괜찮으시면 16
저는 16은 휴대하기 너무힘들어서 못 쓰겠더라구요ㅠ
화면은 어차피 모니터 쓰구
2022. 5. 20. 오후 6:40, 애교뿜뿜 어피치 : 안가지고 다니면 16사시구요. 가지고 다니면 14요 , 요건 모니터 색상 관련된 스펙입니당
2022. 5. 20. 오후 6:41, 살려줘 네오 : 성능 차이 심한가요? 화면 말구요
2022. 5. 20. 오후 6:44, 프론돌이 : 14인치 16인치 이제 성능차이 없어요. 같은 성능 맞출수 있음. 
2022. 5. 20. 오후 6:44, 프론돌이 : 성능은 인텔맥과 m1이 천지차이라 지금 시점에서 인텔맥을 쓰실이유가 거의 없죠. 인텔맥에서만 돌아가는 뭔가를 하지 않는 이상
2022. 5. 20. 오후 6:47, 멀기트 : 그 아키텍쳐 x86으로 명령 실행할 수 있어서
2022. 5. 20. 오후 6:47, 멀기트 : M1에서도 다 할 수 있지않나용...?
2022. 5. 20. 오후 6:48, 애교뿜뿜 어피치 : 네 저는 노드 14환경 구축할때 로제타로 돌린거 빼고 크게 느낀 문제는 없습니다
2022. 5. 20. 오후 6:50, 애교뿜뿜 어피치 : 퍼포먼스 차이가 워낙 커서 이건 고민할 내용이 아닌 듯 합니다 화이팅!! 👍👍
2022. 5. 20. 오후 6:51, 좌절하는 프론트 : 개발툴도 될수있고 생산성을 위한 툴이될수도있어요

저같은경우는 업무가 자꾸 잡다해서 
젯브레인즈 얼티메이트 같은걸 요구했어요
2022. 5. 20. 오후 7:00, 살려줘 네오 : @애교뿜뿜 어피치 @도요새 @프론돌이 @리린이 @밍뭉망 @j  등등 분들 감사합니다. 적당히 눈치껏을 얼만큼 보고 요구해야 하는 지 어렵네요!   모니터는 보통 본체나 맥북제외 1개쓰시나요? 
2022. 5. 20. 오후 7:01, 프론돌이 : 맥북 거치해두고, 두개 연결하는식으로 많이 쓰세요 ㅋ
2022. 5. 20. 오후 7:01, 살려줘 네오 : 감사합니다! 처음 보는 툴인데, 어떤 점이 좋은지 알아봐야겠네요 
2022. 5. 20. 오후 7:01, 프론돌이 : 맥북은 모니터 연결할 때, 4k 모니터여야 더더 좋습니다.
2022. 5. 20. 오후 7:01, 프론돌이 : 4k 이상
2022. 5. 20. 오후 7:02, 살려줘 네오 : 아 감사합니다. 4k로 무조건 요청해야겠네요.. 2개 요청하기는 좀 그래서 1개요청했네요.. 근데 4k 32인치 쓰니가 눈이 좀 많이 아프던데, 어떤 모니터 쓰시나요
2022. 5. 20. 오후 7:02, j : 눈치보시지마시고 일단 여쮸ㅓ보세쿄
2022. 5. 20. 오후 7:02, j : 이정도로 생각하는데 가능한가 여쭤보시면 말씀해주실거에요
2022. 5. 20. 오후 7:14, 주니어개발자 : m1 모니터 2개연결하려면 별도로 뭐사야하던데 모니터2개쓰시는분계신가요??
2022. 5. 20. 오후 7:20, 프론돌이 : m1이 그런게 아니라 m1 에어, m1 13인치가 그래요 ㅜ  m1 14, 16인치 모델은 2개 이상 연결 잘 됩니다!
2022. 5. 20. 오후 7:20, O_O : 맞아요 13인치 진짜.....계륵입니다
2022. 5. 20. 오후 7:27: 1년 8개월님이 나갔습니다.
2022. 5. 20. 오후 7:29, 콘솔 : 디스플레이 링크 탑재된 허브나 독 사서 확장하셔야해용 
2022. 5. 20. 오후 7:31, 주니어개발자 : 13인치는 웁니다..
2022. 5. 20. 오후 7:31, 주니어개발자 : 답변감사합니다!!
2022. 5. 20. 오후 9:21, 전연규 : 혹시 안드로이드 기기 네이버 앱에서 일부 페이지가 갑자기 튕겨버리는 현상 겪어보신 분계실까요?
2022. 5. 20. 오후 9:37, 벙찐 튜브 : 저는 없어용

2022년 5월 21일 토요일
2022. 5. 21. 오전 1:48, 코린이 : 삭제된 메시지입니다. 
2022. 5. 21. 오전 1:51, 코린이 : 아 ..컴터문제였네요
2022. 5. 21. 오전 9:53, 유용태 (teo.yu) : https://dev.to/richkurtzman/why-a-react-developer-used-svelte-for-an-arcade-3gdo
2022. 5. 21. 오후 3:16: 초롱초롱 네오님이 들어왔습니다.
2022. 5. 21. 오후 3:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 21. 오후 3:17, 유용태 (teo.yu) : 안녕하세요 초롱초롱 네오님!! 반갑습니다 :)
2022. 5. 21. 오후 3:33, 초롱초롱 네오 : 반갑습니다! 블로그글 보고 들어왔습니다!
2022. 5. 21. 오후 3:34, 유용태 (teo.yu) : 감사합니다 :) 
2022. 5. 21. 오후 3:35, 유용태 (teo.yu) : 여기는 블로그 내용도 좋고 다른 궁금한것들이 있을때 같이 물어보고 대답하면서 함께 성장하고자 하는 공간입니다~ 제가 답해드릴 수 있는 것들은 최대한 도움을 드리려고 해보고 있어요 ㅎ 언제든 편하게 글 남겨 주세요 ㅎ
2022. 5. 21. 오후 3:38, 초롱초롱 네오 : 넵! 너무 감사드립니다..!

2022. 5. 21. 오후 3:50, 퉁이리 : https://tech.kakao.com/2022/05/20/on-demand-atomic-css-library/?fbclid=IwAR0l88NBIS-7IwfNbHHTIWbjL2r64X204QeeSbjdPn8yg8GqNrl6W94JOnI
2022. 5. 21. 오후 3:51, 퉁이리 : 카카오 테크에 아주 좋은 글이 있어서 공유합니다
2022. 5. 21. 오후 3:55, 프엔공부중 : 좋은 글 감사합니다!
2022. 5. 21. 오후 3:58, 이프노즈 : that's cool!!
2022. 5. 21. 오후 5:08, 설아아빠 : 궁금한게 있어요! 오프라인 스프린트를 진행할땐 포스트잇으로 하나요~? 아니면 온라인 툴을 이용하나요~? 혹시 오프라인에서 두가지 모두 경험하셨으면 장단점은 어떤게 있는지 좀 알려주실수 있을까요~? 
2022. 5. 21. 오후 5:10, 퉁이리 : 오프라인때 큰 화이트보드를 이용해서 한걸 본적이 있어요.
2022. 5. 21. 오후 5:14, 설아아빠 : 저는 테오가하는 스프린트에 참여했었는데 온라인툴로 하는거랑 진짜 화이트보드랑 하는거랑 장단점이 있을거같아서 어떤 차이가 있는지 궁금해서요 ㅎ
2022. 5. 21. 오후 5:47, 피즈멍 : 백엔드에서 컨텐츠가 준비었을 경우 앱에서 준비 완료 버튼을 활성화하고 싶은데, 접근 방법을 모르겠네요 ㅠㅠ 참고할 만한 방식이나 AWS 서비스가 있을까요?
2022. 5. 21. 오후 6:06, 델 : api 쏴서 확인하는 건 어떨까요?
2022. 5. 21. 오후 6:16, 신난 어피치 : 해당로직만 소켓통신으로 연결해놓는것도 좋을것같아요!
2022. 5. 21. 오후 6:19, 피즈멍 : 두분 다 감사합니다~~ n초 마다  주기적으로 api 쏘는 방식으로 접근해보겠습니다!!
2022. 5. 21. 오후 6:34, 곰젤리 : useSWR 같은거 쓰면 n초마다 갱신해주는 옵션이 있을거에요
2022. 5. 21. 오후 6:35, 살려줘 네오 : useSWRT이 react Query처럼 refetch해주는 것 같은데 뭐가 다른 점이 있나요?
2022. 5. 21. 오후 6:37, 곰젤리 : 그것까지는 잘 모르겠네요 ㅠㅠ
2022. 5. 21. 오후 6:54, A대 4-1(진) : 오 ! 저도 마침 그 부분 공부하고있었는데 ㅎㅎ,,
2022. 5. 21. 오후 7:26, 진현 : 잘 정리된 노션이 있어서 공유드립니다..! ..엄청나네요
https://www.grabbing.me/IT-A-to-Z-By-1e1fbc981b7c4c03ac44943085ac8304
2022. 5. 21. 오후 7:41, 프엔공부중 : 와우..
2022. 5. 21. 오후 7:53, 델 : 경험상 swr이 좀더 가볍고 작고 기능도 적어요
2022. 5. 21. 오후 7:54, 델 : 근데 개인적으로는 swr을 쓸 이유를 크게 못 느끼겠더라구요 mutate 도 뭔가 동작이 어색하고
2022. 5. 21. 오후 7:54, 델 : react-query를 더 좋아해서 그럴 수도 있습니다 :)
2022. 5. 21. 오후 8:01, 델 : 뭔가 리액트쿼리는 서버상태관리라는 확실한 포지션이랑 철학이 있는데 swr은 api 콜을 더 편하게 하겠다는 게 끝인 느낌?
2022. 5. 21. 오후 8:03, A대 4-1(진) : 믿고 보는 파이버님 …
감사합니다 !
2022. 5. 21. 오후 10:43, 프론트 지키미 : SSE의 키워드도 도움이 될까요???
2022. 5. 21. 오후 10:45, 훌온텐드 : sse는 뭐죠? ses는 아는데...
2022. 5. 21. 오후 10:52, 인성(현파랑) : 서버 전송 이벤트… 인터벌 푸쉬… 백엔드 영역으로 접근해야겠네요
2022. 5. 21. 오후 10:58, 훌온텐드 : 푸시를 받던지 api로 받아오던지 해야죠..
2022. 5. 21. 오후 11:01, 훌온텐드 : 서버없이 운영편성으로 받으려면 파이어베이스도 생각해볼수 잇메요
2022. 5. 21. 오후 11:04, 자란다 Recruiter : 안녕하세요! (지난번엔 간략하게 올려.. 이번엔 상세히 올려봅니다.)

자란다 채용 매니저 김미준 입니다! 
이번에 새로 합류한 CTO 님과 자란다 소개와 함께 채용 공고 한번 올리게 되었습니다!

많관부드립니다. (_ _)
공고 :https://team.jaranda.kr/front

자란다 프론트엔드 스텍과 현재 고민하고 있는 문제들 ( Angular / Javascript / TypeScript )
: 초기 스타트업에 머물러 있는 프론트엔드 구조를 개선시키고자 재사용 가능한 컴포넌트를 도입한다든지, 낮은 결합도의 유집호수가 용이한 코드를 짠다던지, 새로운 기술 스택(React)로 이동을 한다든지와 같은 내용을 고민중입니다.

김택주 CTO 님 소개 
:아마존 본사를 거쳐 라인에서 '라인의 '오픈챗' 서비스와 메시징 플랫폼 개발책임자로 긴 시간 동안 일하시다가 합류하신 분으로 이번에 저희 자란다의 비즈니스와 시장의 가치를 보신 후 합류하시게 되었습니다.

자란다 소개 
:지난 4월 자란다는 시리즈 B 310억을 새롭게 투자받았고 유·아동 시장 자체가 허들이 높은 편임에도 불구하고, 데이터 기반으로 유·아동 시장을 모두 포괄하며 '아이 성장 과정의 디지털 트랜스포메이션'에 집중하고 있는 유·아동 시장을 선도하고 있는 데이터 매칭 플랫폼입니다.

조금 더 우리 기업의 이해를 돕기 위해 국가에서 분류되는 기준인 '중개' 카테고리로 저희 자란다를 본다고 하더라고 해당 카테고리 내 시장가치와 외부 기업 평가 모두 '1등'이기에 이번 '시리즈 B 투자를 310억'으로 마무리할 수 있었습니다.

커리어적 측면 
:저희 자란다는 현재 폭발적인 시장 확장 유저 유입을 만들어 내고 있는 상황이라 유저 임팩트 없이 더 빠르게 Frontend 를 만들기 위해 매일 노력하고 있는 상황이지만, 아쉽게도 초기 스타트업의 프론트엔드 구조에 머물러 있어, 작은 규모의 서비스에서 대규모 서비스로 하나의 서비스를 직접 만들어 보고 싶은 분이 오신다면 정말 좋아하실 만한 가치를 지닌 스타트업입니다.

많은 관심 부탁 드리겠습니다. (_ _)
감사합니다.
2022. 5. 21. 오후 11:07, 훌온텐드 : 삼성역이네여 가깝네요 ㅎ
2022. 5. 21. 오후 11:13, 좌절하는 프론트 : 자란다 자란다 자란다
2022. 5. 21. 오후 11:13, 좌절하는 프론트 : 사진
2022. 5. 21. 오후 11:14, 좌절하는 프론트 : 자란다 네임 보니 이 웃대잘이 생각나는군요..
2022. 5. 21. 오후 11:14, 알파카 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 21. 오후 11:30, 자란다 Recruiter : 엌ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 이거 저 엄청쓰는.. 그런 짤인뎈ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 21. 오후 11:31, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 채용담당자님도 센스쟁이시군요 ㅋㅋㅋ 
2022. 5. 21. 오후 11:32, 자란다 Recruiter : 감사합니다
2022. 5. 21. 오후 11:47, 이준희 : 노션인듯 노션아닌 리쿠르트 페이지네요 스크롤 감지 기능이 있어서 다시 봤습니다 ㅋㅋㅋ 
2022. 5. 21. 오후 11:50, 자란다 Recruiter : 아 저 우피써서 
2022. 5. 21. 오후 11:50, 자란다 Recruiter : SEO 작업도 제가 했고, 노션으로 보면 아무래도 불편하잖아요? 그래서 하단에 CTA 버튼이랑 뒤로가기 메뉴들도 만들어 두었습니다! 
2022. 5. 21. 오후 11:52, 이준희 : 이모티콘 채용 매니저님도 개발을 하시는 자란다는 어떤 곳일까요 기대가 됩니다 ㅎㅎ
2022. 5. 21. 오후 11:53, 자란다 Recruiter : 그렇게 말씀해주셔서 감사합니다만.. 전.. 개발자 너무 어려워서 못합니다.. 간간히 퍼블리셔 강의 듣는데.. 그런데도 안되거나, 빨간색 느낌표 파파파파팍 뜰때 많아서.. 헤헷
2022. 5. 21. 오후 11:54, 자란다 Recruiter : SEO 는 구글링 하면서 변역기 돌리고 하다보니.. 알게되었습니다 :) 
2022. 5. 21. 오후 11:56, 이준희 : 열린 마인드의 매니저님과 함께할 좋은 인재가 나타나기를 기도하겠습니다 ㅎㅎ🙏🏼 

2022년 5월 22일 일요일
2022. 5. 22. 오전 12:04, 자란다 Recruiter : 그렇게 말씀주셔서 감사합니다!
2022. 5. 22. 오전 12:12, 좌절하는 프론트 : 지원이 마렵다
2022. 5. 22. 오전 12:19, 피즈멍 : 앗 정확히 제가 찾고있던 거였어요 ㅠㅠㅠㅠㅠㅠ 정말 감사합니다
2022. 5. 22. 오전 12:25, 유용태 (teo.yu) : 오프라인이 온라인보다 훨씬 덜 지치고 에너지가 납니다 ㅋ 몸도 많이 움직이고 얘기도 많이해요~ 그리고 무엇보다 자연스럽게 소규모 대화가 빈번히 발생하게 됩니다. 대신 글로 남기기가 힘들어서 생각보다 많이 휘발되어 기록을 잘하는게 정말 중요합니다. 그리고 준비물이 많이 필요해요 ㅎㅎ

온라인은 반대로 기록을 하기 너무 좋고 다른사람이 말하는 도중에도 글로 반응을 해줄 수 있다는 점이 정말 좋은 것 같아요. 오프라인에서는 어쨋든 누군가가 말하고 있으면 들어줘야 하니까요. 효율은 온라인이 더 높은 거 같아요. 대신 온라인은 오프라인에 비해서는 오래 하기가 힘듭니다
2022. 5. 22. 오전 12:45, 설아아빠 : 감사해욧! ㅎㅎ 오프라인에서 보드도 작고 제가 피그마로 해봤으니 피그마를 이용해서 오프라인으로 진행을 해볼까 했는데 포스트잇이랑 종이로 정말 스프린트 책에 나와있는대로 진행을 해볼까 고민이 되어요 ㅠ 
2022. 5. 22. 오전 9:05, 자란다 Recruiter : 이모티콘 편안한 일요일 되세요!! :) 
2022. 5. 22. 오전 10:37, 유용태 (teo.yu) : 오프라인에서 피그마로 하면 뭔가 굉장히 어색합니다ㅋㅋㅋ 다 같이 모였는데 대화할때 얼굴을 안보고 각자 노트북만 보고있는게 너무 이상하더라구요ㅋㅋ 좀 큰 공간이서 대형 티비 등이 있어서 일단 다같이 보는게 있으면서 대화를 하면 좀 덜 어색한데 좁은데서는 좀 그랬어요 ㅎ
2022. 5. 22. 오전 10:49, 설아아빠 : 감사합니다 ㅋㅋ 손으로 쓰는게 더 어색할줄알았는데 그렇군요 ㅋㅋ 포스트잇으로 도전해봐야겠어요 ! 
2022. 5. 22. 오전 11:54, 자란다 Recruiter : 이모티콘 일요일이지만.. 꼭 점심 챙겨드세요! :) 
2022. 5. 22. 오후 12:36, 이준희 : 안녕하세요! 질문 보다는 고민이 있어서 이렇게 글을 남깁니다. 

다른 개발자 분들은 이런 상황에 어떻게 생각하실까 여쭙고자 요약한 글을 남겨봅니다!

서비스는 오디오 기반의 채팅이 가능한 시스템 (이전의 클럽하우스)에 방장(리더)는 얼굴을 보이는 것이 최종 목표입니다.

'A' 서비스는 아고라, 'B' 서비스는 샌드버드, 'C' 서비스는 100ms.live 입니다

- 'A' 서비스를 바탕으로 출시 예정이던 서비스가 있었는데 엎어졌던 상황
- 'A'를 털고 기획 단계에서 'B' 라는 서비스를 사용해서 새롭게 만들자고 얘기가 나옴
- 그때 당시 부족했던 부분을 보안하며 기획을 하다보니 새로운 요구사항이 생김
- 웹팀이 판단했을 때는 'B' 라는 서비스는 우리의 최종 기획 의도와는 맞지 않았고, 이에 따라 웹 팀 내부 회의 끝에 'C' 서비스를 대안으로 제시
- 'C' 서비스는 이해 관계자 분들은 'C' 서비스가 너무 신생 서비스(2020년 출시)이기 때문에 안정성이 떨어진다고 생각
- 'B' 와 'C' 모두 기획에 완벽히 부합하지는 않지만, 'B' 서비스를 분석하고 사용해 본 개발자의 입장에서는 'C' 서비스가 훨씬 더 매끄러운 연결이 가능하다고 생각함
- + 'B' 서비스가 가진 문제점이 'C' 서비스가 가진 문제점 보다 더욱 심각하다고 생각함
- 최종적으로 이해관계자 (CEO, PM, 컨텐츠 팀 등) 분들을 설득해야 하는 상황

이런 상황을 겪어보셨거나, 이런 상황이라고 가정했을 때 어떻게 풀어나가는게 좋을까요? 
2022. 5. 22. 오후 12:37, 이준희 : 방장(비디오), 관중/관객 (오디오) 라고 보시면 좋을 것 같습니다.
2022. 5. 22. 오후 12:38, 이준희 : *새로운 요구사항은 '기존에 오디오로만 연결되어있던 기능에서 방장은 비디오를 켤 수 있으면 좋겠다' 입니다.
2022. 5. 22. 오후 12:41, 이준희 : 'B' 서비스의 문제는 오디오/또는 비디오를 켠 환경에서 채팅 기능을 자체적으로 지원하지 않는(?) 그룹 콜/ 그룹 챗 기능을 따로 제공하는 상황입니다

'C' 서비스는 그룹 콜 내부에서 채팅 기능을 제공하지만, 파일 쉐어링 (이미지, 영상, pdf, ...) 을 지원하지 않는 상황입니다.
2022. 5. 22. 오후 12:45, 이준희 : PM 분 께서는 'B' 서비스로 생각하는 이유가 곧 'B' 서비스 또한 'C' 서비스처럼 그룹 콜 내부에서 채팅 기능을 제공할 것 같다고 하시는데, 개발자의 입장에서는 당장 지원하고 있지 않는 부분이라 결과적으로 'B'로 정해지고 개발을 하다 구현을 못할 것이 보여서 꺼려지는 것 같습니다. 

(그룹 콜/ 그룹 챗을 각각 지원하지만, 현재 상황에서는 그룹 콜 내부에서 그룹 챗 기능을 지원하지 않습니다)
2022. 5. 22. 오후 12:46: 나나님이 들어왔습니다.
2022. 5. 22. 오후 12:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 22. 오후 12:50, 유용태 (teo.yu) : 좌절하는 라이언님~~
반갑습니다 어서오세요 ㅎ
2022. 5. 22. 오후 12:51, 나나 : 이모티콘 안녕하세요~
2022. 5. 22. 오후 12:51, 유용태 (teo.yu) : 어서오세요~~ 반갑습니다 ㅎ
2022. 5. 22. 오후 12:53, 유용태 (teo.yu) : PM은 B사에 대해서 직접 언질을 받거나 로드맵에 대해서는 개발자들과 싱크나 양해를 구해둔 상태인가요?
2022. 5. 22. 오후 12:53, 유용태 (teo.yu) : 서로 설득을 하기 이전에 B사와 C사의 선택지에 대해서 다 펼쳐서 그림으로 한번 그려보는 시간을 먼저 가지시는게 필요할 것 같아요
2022. 5. 22. 오후 12:55, 유용태 (teo.yu) : 얘기를 들어보니 둘다 만들고 싶어 하는 최종 골을 구현하기 위해서는 개발자의 추가 구현은 필수로 보이는데
2022. 5. 22. 오후 12:55, 이준희 : 직접적인 언질을 받으신 부분은 없는데, 원래 원했던 오디오 관련 기능은 확실히 지원을 하기 때문에 오디오 쪽으로 먼저 구현하고 비디오로 확장해보자 
2022. 5. 22. 오후 12:56, 이준희 : 이런 느낌입니다. 하지만 확장성을 생각했을 때는 더더욱 C로 가야할 것 같은데 개발 단계가 아니여서 계속 오락가락하는 상황입니다 ㅜㅜ
2022. 5. 22. 오후 12:57, 유용태 (teo.yu) : 개발자들은 C라고 생각하는데 PM만 B를 주장하고 있다고 보시는건가요?
2022. 5. 22. 오후 1:00, 이준희 : 개발자들 만 C를 주장하고 있습니다. PM 분의 의견이 이해관계자들의 협의 끝에 나온 내용이라, 오래되고 안정된 상태인 B 서비스를 더 선호하시는 것 같습니다 
2022. 5. 22. 오후 1:02, 유용태 (teo.yu) : 그렇군요~ B보다 C가 나은 이유는 C에서 서비스에 필요한 기능을 제공하기 때문인거죠? 그걸 개발에서 구현하는데 비용이 많이 비싸지나요? 아니면 해당 플랫폼에서 지원을 못해 구현이 안되는 사항인가요?
2022. 5. 22. 오후 1:03, 유용태 (teo.yu) : (B에서 할경우)
2022. 5. 22. 오후 1:03, 이준희 : 기본적으로 예시를 줌이라고 했을 경우에
2022. 5. 22. 오후 1:03, 이준희 : 줌의 경우에는 방에 들어왔을 때 자동으로 비디오/오디오 연결 + 채팅 기능을 지원하고 있습니다 (C도 줌과 같은 계열)
2022. 5. 22. 오후 1:05, 이준희 : 하지만 B의 경우에는 방에 들어갔을 때, 들어온 채팅을 하기 위해서는 방장이 초대를 해야하는 형태입니다
2022. 5. 22. 오후 1:05, 네불 : b로 구현이 불가한데 b로 구현하자는 상황이 잘 이해가 안가네요
2022. 5. 22. 오후 1:05, 이준희 : 그룹 콜(줌과 같은 기능) 과 그룹 챗(채팅)을 독립적으로 지원하고 있어서 저희가 임의로 줕일 수는 있지만 줌처럼 매끄럽지는 않은 UX를 가질 것 같습니다
2022. 5. 22. 오후 1:06, 설아아빠 : 사용자인터뷰를 해보면 어때요
2022. 5. 22. 오후 1:06, 이준희 : 내부적으로 회의를 하면서 추가 기능을 보완하면서 B로 커버할 범위를 넘어선 것 같습니다 ㅜㅜ
2022. 5. 22. 오후 1:07, 이준희 : 예를 들면 B 서비스 사용자 말씀하시는 걸까요?
2022. 5. 22. 오후 1:09, 네불 : b에서 해당 기능 릴리즈일정 물어보고 개발일정이랑 안맞으면 그걸로 컴하면 되지않을까요?
2022. 5. 22. 오후 1:10, 네불 : 예상되는 구린ux를 시각화해서 보여주면 효과가 더 확실할거같아요
2022. 5. 22. 오후 1:10, 이준희 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 그런 방법도 있군요
2022. 5. 22. 오후 1:11, 유용태 (teo.yu) : 설득도 설득이지만 양측의 주장과 경우의 수를 다 모을 필요가 있어요~ 그냥
회의만 하거나 하는식으로는 뭉개고 넘어가지거나 지지부진 해질 수 있어요
2022. 5. 22. 오후 1:12, 이준희 : - b측에 저희측 요구사항을 한번더 메일로 보낸다
- b,c 의 경우의 수를 모아서 다시 한번 비교해본다
2022. 5. 22. 오후 1:13, 유용태 (teo.yu) : 반박보다는 목소리를 한데 모아서 정리를 먼저 할 필요가 있습니다 PM측에서도 선택하게 된 배경과 근거 그리고 로드맵이 있을테고 C에 대한 리스크 역시 고민을 했을테니까요
2022. 5. 22. 오후 1:13, 유용태 (teo.yu) : 그래서 두 경우 모두 최악 최선의 시나리오와 로드맵을 그리고 나야 이후에 어떤 선택을 하더라도 잘 진행이 될거라고 생각합니다~
2022. 5. 22. 오후 1:14, 이준희 : 감사합니다 ㅜㅜ 
2022. 5. 22. 오후 1:14, 이준희 : 돈 받고 일하면서 이제는 모든 일에 책임을 져야한다는 것을 알다보니깐
2022. 5. 22. 오후 1:15, 이준희 : 제가 하는 결정으로 결과물을 만들어내야 한다는 과정이 조금 힘든 것 같습니다 ㅜㅜ
2022. 5. 22. 오후 1:16, 이준희 : b,c 의 경우의 수를 모두 정리해야 겠네요!!
2022. 5. 22. 오후 1:16, 유용태 (teo.yu) : 준희님에게 책임과 리스크를 지라고 하지는 않을거라고 생각해요~ 그럴 위치도 아니기도 하고
2022. 5. 22. 오후 1:17, 유용태 (teo.yu) : 너무 걱정하지마시고 또 B라고 해서 내가 생각했던 너무 최악으로만 가지는
않으니까요
2022. 5. 22. 오후 1:17, 유용태 (teo.yu) : 납득이나 동기부여가 되는 것만으로도 괜찮아질수 있다고도 생각합니다
2022. 5. 22. 오후 1:18, 유용태 (teo.yu) : 선택에 대한 책임쪽으로 너무 괴롭지 않았으면 좋겠습니다~
2022. 5. 22. 오후 1:19, 이준희 : 감사합니다. 

B도 너무 친절하고, 개발 커뮤니티도 잘 되어있어서 A보단 확실히 좋은데, C 친구들이 너무 적극적이고 기능 구현이 편해서 시야가 편중된 것도 없지않아 있는 것 같아요. 
2022. 5. 22. 오후 1:19, 설아아빠 : 아아 기능이아니고 서비스를 골라야하는거였군요..
2022. 5. 22. 오후 1:19, 이준희 : C는 인도 친구들인데 화상회의도 했고 슬랙 채널도 열고 적극적으로 소통하더라구요
2022. 5. 22. 오후 1:20, 이준희 : 최종 기획에 맞는 외부 서비스를 결정하고, 커스텀하여 붙일 계획입니다..!
2022. 5. 22. 오후 1:21, 유용태 (teo.yu) : 그리고 구현보다도 음성 화상의 안전성 측면이라던가
2022. 5. 22. 오후 1:21, 유용태 (teo.yu) : 사용량 추적으로 인해 유료화나 모니터링
2022. 5. 22. 오후 1:22, 설아아빠 : 근데 말씀하신것도 좀 C위주를 좋게 말하시는것같아요. 적으신내용을보면 C를 선택 안할이유가 없는거같은데 피엠분도 생각이 있지않을까욘 
2022. 5. 22. 오후 1:23, 유용태 (teo.yu) : 장애대응등 생각해볼 측면은 다각도이다 보니 PM에게 설득당한다가 아니라 도입 근거나 배경에 대해서도 알아둘 필요는 있을것 같아요~ 개발하기 편하다만의
포인트로는 설득이 힘들수 있습니다 
2022. 5. 22. 오후 1:23, 이준희 : 셋 서비스 모두 대쉬보드 상으로 추적 및 모니터링 등을 할 수 있게 지원하고 있습니다. 

그래서 그런디 뭐가 더 요구사항에 있어서   '더' 부족할까를 봤을 때, B가 더 부족해 보여서 C를 좀 더 밀었던 것 같습니다. 
2022. 5. 22. 오후 1:24, 설아아빠 : 추가개발일정이 문제라면 들어가는 비용기간을 정리해보고 문서로 납득시키는게 좋지않을까영 
2022. 5. 22. 오후 1:25, 이준희 : 그런 것 같습니다.. 확실한 근거 및 의견에 대한 자료 정리,, 바로 실행에 옮기겠습니다
2022. 5. 22. 오후 1:25, 이준희 : 맞습니다 감사합니다!!!
2022. 5. 22. 오후 1:26, 이준희 : 이야기를 하다보니 시야가 조금 더 편중되어 있던게 맞는 것 같아요. 객관적으로 볼 수 있게 정리해야 겠군요 👍🏼👍🏼👍🏼
2022. 5. 22. 오후 1:28, 유용태 (teo.yu) : 그리고 준희님 말대로 된다고 하더라도 그 결정에 대한 책임과 리스크는 PM이 지는거라는 거는 꼭 기억해줬으면 좋겠습니다. 그 부분에 대해서는 PM에게 인정을 해줘야 된다고 생각해요
2022. 5. 22. 오후 1:33, 이준희 : 감사합니다 😊😊😊
2022. 5. 22. 오후 1:35, 이준희 : 지난주에는 이런식으로 회의내용 정리해서 갔더니, 설득력이 부족했던 것 같기도 하네요 ㅋㅋㅋ 열심히 해보겠습니다.

https://alder-waltz-e64.notion.site/100ms-live-question-list-863994fe1dae493383c712ccc92ea6c0
2022. 5. 22. 오후 1:40, 유용태 (teo.yu) : 내용은 좋네요 ㅎ 아마 일방적으로 전달이 되었기에 준희님이랑 공감대를 같이하기 어려웠을거라고 생각합니다. 일단 왜 PM이 선택을 했는지 공감을 하고 그게 C에서도 가능하다는 것을 말하고 C를 선택하지 못한 리스크에 대해서 그리고 준희님이 생각하는 B에대한 리스크를 비교해주는 식으로 PM에게 맞춰서 얘기를 해볼필요가 있다고 생각합니다
2022. 5. 22. 오후 1:41, 유용태 (teo.yu) : 이러한 한번 결정하면 되돌리기가 쉽지 않은 결정의 경우 좋은 점 보다는
리스크를 최소화 하는 쪽으로 더 생각할수 밖에 없기 때문에 리스크에 대한 우려사항을 불식시킬수 있는 쪽으로 설명을 해야 합니다 결국 모험을 하게 되는 것은 PM이니까요
2022. 5. 22. 오후 1:44, 이준희 : '리스크를 최소화 하는 쪽으로 더 생각하기' 너무 좋은 말씀이십니다 
2022. 5. 22. 오후 1:46, 이준희 : 개인적으로 '클린 코드' 저자 로버트 마틴이 쓴 다른 책인 '클린 코더'라는 책을 지금 읽고 있는데, 역시 경험이 많으신 분들의 말씀은 거를게 하나도 없네용 ㅋㅋㅋ
2022. 5. 22. 오후 1:47, 이준희 : 사진
2022. 5. 22. 오후 1:47, 이준희 : 말씀해주신 내용이 같은 울림을 전달해주는 것 같습니다
2022. 5. 22. 오후 1:47, 이준희 : ㅋㅋㅋㅋㅋ 감사합니다!
2022. 5. 22. 오후 2:29: 쏠라c님이 들어왔습니다.
2022. 5. 22. 오후 2:29, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 22. 오후 2:29, 유용태 (teo.yu) : 안녕하세요 눈빛 애교 어피치님~~~ 반갑습니다 :)
2022. 5. 22. 오후 2:31, 쏠라c : 안녕하세요 ! 프론트엔드 공부하고있는 학생입니다 반갑습니다 🙂
2022. 5. 22. 오후 2:33, 유용태 (teo.yu) : 어서오세요ㅎ 이 곳은 프론트엔드에 대해서 궁금한것들을 묻고 또 답해가며 함께 성장을 도모하는 곳입니다. ㅋ 언제든 궁금한거나 그냥 관심사 키워드라도 던져주면 다같이 얘기 해봤으면 좋겠습니다. ㅎ
2022. 5. 22. 오후 3:00: 박스님이 들어왔습니다.
2022. 5. 22. 오후 3:00, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 22. 오후 3:00, 유용태 (teo.yu) : 안녕하세요 박스님~~ 반갑습니다. ㅎ
2022. 5. 22. 오후 3:00, 박스 : 안녕하세요😄
2022. 5. 22. 오후 3:01, 박스 : 벨로그 잘 보고 있습니다🙌
2022. 5. 22. 오후 3:19, 유용태 (teo.yu) : 🙌 감사합니다. 벨로그를 통해서 듣고 싶은 관심있는 주제가 있다면 제안해주시면 언제든지 알려주세요. ㅎ 기타 프론트엔드에 궁금한것이 있거나 개발하다가 문득 다른 개발자들에게 궁금한게 생기거나 하면 편하게 글 남겨주세요. ㅎ
2022. 5. 22. 오후 3:34, 좌절하는 프론트 : 오늘 날씨 좋네요
2022. 5. 22. 오후 3:34, 좌절하는 프론트 : 맥북 들고 카페로 출동!
2022. 5. 22. 오후 3:34, 좌절하는 프론트 : 다들 좋은 일요일 보내십쇼
2022. 5. 22. 오후 3:35, 유용태 (teo.yu) : 화이팅입니다. ㅎ
2022. 5. 22. 오후 3:36, 살려줘 네오 : 코로나 조심 하세요(눈물)(흑흑)
2022. 5. 22. 오후 3:46, 프로로 : 테오님 혹시 단위테스트 관련해서 글 쓰실 계획이 있으신가요?? ㅎㅎ 
2022. 5. 22. 오후 3:49, 좌절하는 프론트 : 감사함다 
TMI이지만
1차 아스트라
2차 3차 화이자
마지막 피날레는 오미크론 확진으로 지옥을 다녀왔기에 괜찮습니다
ㅋㅋㅋㅋ
2022. 5. 22. 오후 3:49, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 22. 오후 3:52, 유용태 (teo.yu) : 하하 테스트란 녀석은 제가 정복하겠다고 벼르는 녀석인데 잘 안잡히네요 ㅋ 사실 실무에서 테스트는 거의 안하고 있어서 ㅠㅠ 거짓말은 할 수 없으니까 제가 방법을 찾아내고 한번 써보려고 합니다 본격적인 논의는 아니지만 저희도 다른 개발자끼리 만나면 '테스트는 어떻게 하고 계세요?'는 꼭 물어보는 주제인거 같아요 ㅋ
2022. 5. 22. 오후 3:55, 설아아빠 : 써주세욧
2022. 5. 22. 오후 3:55, 프로로 : 프론트엔드에서 테스트짜기가 쉽지않네요.. 일단 저는 util이나 순수함수는 그래도 작성하려고 하는데 기획이 바뀌니 유지보수하기도 쉽지않고 어디까지 작성하고 관리해야 될지 고민입니다 흑흑 테스트도 다 리소스라서 
2022. 5. 22. 오후 3:55, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ 모두가 그런 소리를 합니다 ㅋ 저도 그렇게 생각해요 ㅎ
2022. 5. 22. 오후 3:56, 좌절하는 프론트 : 제가 이전에 면접봤던 모업체도 프론트엔드 테스트에 대해서 고민이 많고, 이를 어떻게 적용시켜서 점진적으로 프로세스를 만들어갈지 생각이 많더라구요
2022. 5. 22. 오후 3:56, 프로로 : 관리를 안하면 어느순간 있으니만 못하더라구요 ㅋㅋㅋㅋ 
2022. 5. 22. 오후 3:57, 살려줘 네오 : 테스트 코드를 무조건 꼭 작성해야 하는 회사도 있는 걸로 아는데, 작성을 잘 안하게 되는 이유 등 이것 주제 관련해서도 블로그 업뎃되시면 보고싶습니다. 기대되네요 ㅎㅎ
2022. 5. 22. 오후 3:57, 유용태 (teo.yu) : 그쵸~ 테스트가 리소스 투입 대비 효용체감이 크지 못해서
2022. 5. 22. 오후 3:57, 좌절하는 프론트 : 개인적으로 QA 조직이 있다면, 중요로직만 테스트를 작성하면 될거같은데
2022. 5. 22. 오후 3:57, 좌절하는 프론트 : 그런 큰조직 가는건..상위 10%니..ㅋㅋㅋ
2022. 5. 22. 오후 3:59, 살려줘 네오 : 금융 플랫폼 같은 경우나 테스트 코드로 미리 선 에러를 발견 등 미리 리스크를 감수할 수 있는 경우는 테코가 필수작성이더라구요. 이 부분 되게 궁금한 이슈인거 같아요 회사마다 테스트 코드는 쓰는지 어떻게 리소스 관리하는지 ㅎㅎ
2022. 5. 22. 오후 4:00, 좌절하는 프론트 : 백엔드 개발에서의 TDD 는 그 개념대로 따르면 되는거같은데, 프론트엔드는 조금 시각을 바꿔야하는건지 아니면 과도기라 성숙하지 않은건지 저도 많이 궁금한부분이네요 ㅠㅠ
2022. 5. 22. 오후 4:01, 유용태 (teo.yu) : 여기서 테스트코드를 작성하면서 관리하시는분 계시나요? TDD를 하고 있다거나
2022. 5. 22. 오후 4:09, 이준희 : 정말 궁금한 주제인데 이렇게 나오네요 +_+
2022. 5. 22. 오후 4:10, 민석 : 저는 서버 개발자 준비 중인데 tdd 하고 있습니다
2022. 5. 22. 오후 4:10, 워니 : 저희 강남언니도 가능한 TDD로 개발하려고 노력하고 테스트코드 관리도 잘 해보려고 하고 있어요! 아직 갈길이 더 많이 남았긴하지만 ㅎㅎ 모든 코드레 테스트를 한다기보다는 안정감을 느낄 정도라는 어느정도는 주관적인 기준으로 진행하는 편인 거 같습니다! 그래서 디자인 시스템 컴포넌트들 같은 건 비교적 빡세게 테스트 케이스 작성하고 프로젝트 단위로는 번역이라던가 하는 비즈니스 주요 로직 위주로 신경쓰는 거 같아요. 백엔드는 대체로 더 빡세게 하고욤 ㅎㅎ
2022. 5. 22. 오후 4:11, 좌절하는 프론트 : 어라 워니님도 계시네?
2022. 5. 22. 오후 4:14, 유용태 (teo.yu) : 멋지네요+_+bbb 안정감을 느낄 정도의 주관적인 기준이라는 점에게 큰 공감을 하고 갑니다 ㅋㅋ
2022. 5. 22. 오후 4:18, 유용태 (teo.yu) : 물어보신 테스트 코드를 작성을 잘 안하게 되는 이유에 대해서는 테스트 코드를 작성하는데 들어가는 비용 대비 테스트코드에 대한 리턴이 너무 작기 때문이라고 생각합니다. 테스트 코드가 가치없다는 건 절대 아닌데요  백엔드가 아니라 프론트엔의 테스트가 어려운 이유가 눈으로 확인이 가능한 이슈들이 대부분인데 코드상 데이터가 맞다고해서 정상동작을 보장하기가 쉽지 않다는 점에 기인합니다
2022. 5. 22. 오후 4:20, 유용태 (teo.yu) : 가령 로그인 실패시 에러메시지가 잘 보이는지 확인하려고 한다면 액션 요청 이후에 DOM에 해당 문구가 존재하는지 등으로 체크를 하게 되는데 QA에서 이슈를 제보하는 것은 문구가 1줄로 나와서 잘려 보인다와 같은 식이죠
2022. 5. 22. 오후 4:21, 좌절하는 프론트 : 저도 이생각에 공감이되요 
바로 눈으로 확인이 가능한부분과
예를 들면 백단에서 갑자기 response 모델만 바꿔도 이전에는 통과했던 테스트로 올라가있는 상용 환경이라면 정상동작이 되지않을테니까요 
2022. 5. 22. 오후 4:21, 유용태 (teo.yu) : 혹은 모바일에서 글자를 입력하다가 스와이프를 했는데 다른 곳을 터치하면 키패드가 내려가지 않아요 라던가
2022. 5. 22. 오후 4:23, 유용태 (teo.yu) : 이걸 테스트 코드로 작성을 못하지는 않지만 이걸 작성했고 내가 코드를 수정한 다음에 테스트가 통과한다고 해서 프론트 회귀 QA 테스트를 안 돌려보고 자신있게 배포할수 있는가? 하는 문제에 당면하게 됩니다
2022. 5. 22. 오후 4:24, 유용태 (teo.yu) : '테스트 코드가 모두 통과 했으니 코드 수정은 많이 했지만 그냥 배포 해도 괜찮습니다!! +_+ 테스트 다 통과 한거 보이시지잖아요!!'
2022. 5. 22. 오후 4:24, 유용태 (teo.yu) : ...?!
2022. 5. 22. 오후 4:24, 좌절하는 프론트 : !!?
2022. 5. 22. 오후 4:25, 엉망장자 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 22. 오후 4:28, 유용태 (teo.yu) : 그리고 JEST등의 테스트 도구들은 Node를
기반으로 동작하고 브라우저 환경으로 돌아가지 않습니다~ 백엔드 스러운 입력 출력을 검증하는 단위테스트의 경우나 라이브러리의 경우에는 효과가 있지만 사용자의 동작을 기반으로 하는 테스트는 참 어려운것 같아요
2022. 5. 22. 오후 4:29, 좌절하는 프론트 : 갑자기 팬텀js마렵네
2022. 5. 22. 오후 4:31, 유용태 (teo.yu) :  리팩토링시에 협업을 하는 과정에서 거대한 레거시 코드들을 과감하게 수정하기 위해서는 이러한 테스크 코드들이 심리적인 안정장치가 되어준다고는 생각합니다
2022. 5. 22. 오후 4:34, O_O : 강남언니에서 프론트도 TDD로 짠다고 하시던데 궁금하네요...
2022. 5. 22. 오후 4:38, 즐거운 네오 : 그래서 cypress로 e2e짜면 그건 그거대로 너무 느려서 고통이고요...
2022. 5. 22. 오후 6:58, 부끄러운 어피치 : 싸이프레스는 함수 모킹이 안돼서 너무답답해요!!
2022. 5. 22. 오후 7:00, A대 4-1(진) : 안돼나요 ?
2022. 5. 22. 오후 7:07, 빠밤 : 샵검색 : #안되나요
2022. 5. 22. 오후 7:11, 부끄러운 어피치 : e2e 테스트는 내부 함수 모킹이 안되는걸로 알고있어요 
2022. 5. 22. 오후 7:11, 부끄러운 어피치 : 혹시 확실하게 아시는 분 있을까요 ??!
2022. 5. 22. 오후 7:26, 유용태 (teo.yu) : https://velog.io/@teo/scrum-sprint 얼마전에 있었던 디코에서 나눴던 일정 예측과 스프린트에 대한 대화들을 바탕으로 글로 만들어 봤습니다.
2022. 5. 22. 오후 7:36, 헬렌 : 제보! 테오 오타 있어용 

전에 헀던
2022. 5. 22. 오후 7:37, 유용태 (teo.yu) : 감사합니다. ㅎ 수정했어요 ㅎ
2022. 5. 22. 오후 7:42, 설아아빠 : 사진
2022. 5. 22. 오후 7:42, 설아아빠 : 사진
2022. 5. 22. 오후 7:42, 설아아빠 : 사진
2022. 5. 22. 오후 7:43, 좌절하는 프론트 : 응?설이님 스샷 뭐에용?
2022. 5. 22. 오후 7:43, 설아아빠 : 오타 검수요...
2022. 5. 22. 오후 7:43, 좌절하는 프론트 : 아하 ㅋㅋㅋ
2022. 5. 22. 오후 7:43, 설아아빠 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 22. 오후 7:45, 유용태 (teo.yu) : 감사합니다. resolve 했습니다. QA 하는 기분이네요. ㅋ
2022. 5. 22. 오후 7:49, 부끄러운 어피치 : 좋은 글 감사합니다~!!
2022. 5. 22. 오후 7:50, 설아아빠 : 정리 감사합니당 또 한번 잘 읽었습니당! 
2022. 5. 22. 오후 7:54, 헬렌 : 테오에게 전달하고 싶었는데 여기에 올려도 되는 건가요? 아하하 내일이 오기 전에 개인적인 회고를 한 번 해봤어요


https://velog.io/@hotbreakb/%ED%85%8C%EC%98%A4%EC%9D%98-%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8-8%EA%B8%B0-%ED%97%AC%EB%A0%8C%EC%9D%98-%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9D%B8-%ED%9A%8C%EA%B3%A0
2022. 5. 22. 오후 7:55, 유용태 (teo.yu) : 감사합니다 잘 읽어 볼게요~ +_+bb
2022. 5. 22. 오후 8:06, 좌절하는 프론트 : 링크드인 재미있는거 있어서 한번 공유합니다
2022. 5. 22. 오후 8:06, 좌절하는 프론트 : https://www.linkedin.com/posts/mokkapps_porting-zelda-classic-to-the-web-connor-activity-6933724157654269952-D0fz/?utm_source=linkedin_share&utm_medium=member_desktop_web
2022. 5. 22. 오후 8:07, 유용태 (teo.yu) : 와~
2022. 5. 22. 오후 8:07, 좌절하는 프론트 : 웹 프론트에 끝은 WASM 인가 ㄷㄷ
2022. 5. 22. 오후 8:08, 프론트 지키미 : react에서 inline style을 적용하면 매번 다시 리렌더링을 유발하는 것이 맞을까요?? 

[타 블로그에 나와있는 예시]
inline style에서 {{} === {} // 결과 false) 렌더링시 inline style에서 사용한 {}는 이전 값과 비교하였을때 false가 나와
매번 다시 리렌더링을 일으키게 됩니다.
이것이 규모가 커진 앱일수록 성능 저하를 일으킵니다.

[공식문서의 내용]
style이 갱신될 때, React는 또한 변경된 속성만을 갱신합니다. 예를 들어,
<div style={{color: 'red', fontWeight: 'bold'}} />
<div style={{color: 'green', fontWeight: 'bold'}} />
위 두 엘리먼트 사이에서 변경될 때, React는 fontWeight는 수정하지 않고 color 속성 만을 수정합니다.

제가 내린 결론은 inline style로 적용하여도 
style의 내용이 변경되지 않는다면 리렌더링이 발생하지 않는다 입니다.
판단의 근거는 공식문서의 내용을 이해한 내용이에요

여타 블로그에서는 inline-style을 적용하는 것만으로도 객체의 주소가 바뀌어서 
매번 리렌더링이 된다라고 전달이 되는것 같아서 헷갈려서 이곳에 문의드려요
2022. 5. 22. 오후 8:14, 프론트 지키미 : 사진
2022. 5. 22. 오후 8:14, 프론트 지키미 : + 추가 질문이에요

리액트 공식문서의 내용인데 어떻게 더 나은 성능을 보인다는 것인지 혹시 알고 계신분 있으실까요??
2022. 5. 22. 오후 8:24, 즐거운 네오 : https://aganglada.com/blog/react-performance-with-css

궁금하신거에 대한 글인거 같네요

이거말고도
https://www.sderosiaux.com/articles/2015/08/17/react-inline-styles-vs-css-stupid-benchmark/
이거나
https://blog.logrocket.com/why-you-shouldnt-use-inline-styling-in-production-react-apps/
이거나

react inline style performance로 구글링 했을때 여러 글이 나오는거 같습니다
2022. 5. 22. 오후 8:29, 프론트 지키미 : 감사합니다!!!!
2022. 5. 22. 오후 9:21: 론트리니님이 들어왔습니다.
2022. 5. 22. 오후 9:21, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 22. 오후 9:22, 유용태 (teo.yu) : 안녕하세요 론트리니님~~ 반갑습니다 :) 어서오세요. ㅎ
2022. 5. 22. 오후 9:22, 론트리니 : 안녕하세요 테오님 반갑습니다 ㅎㅎ 
2022. 5. 22. 오후 9:22, 유용태 (teo.yu) : 네~ 저도 반갑습니다 :)
2022. 5. 22. 오후 9:28, 유용태 (teo.yu) : 여기는 프론트엔드에 대해서 서로 묻고 답하면서 같이 성장하고자 만든 공간입니다. ㅎ 언제든 궁금한것이 있거나 함께 공유하고 싶으 내용이 있다면 편하게 글 남겨주세요. ㅎ
2022. 5. 22. 오후 9:28, 유용태 (teo.yu) : 제가 알고 있는 것들은 최대한 알려드리겠습니다. ㅎ
2022. 5. 22. 오후 9:29, 빠밤 : 저여러분
2022. 5. 22. 오후 9:29, 빠밤 : 혹시 인도 개발자랑 얘기(?)해본적있으신가요?
2022. 5. 22. 오후 9:29, 빠밤 : 개인적으로 수강중인 유데미강사가 운영하는 디스코드에 가입했는데
2022. 5. 22. 오후 9:29, 빠밤 : 갑자기 자기를 인도인이라 칭하는 사람이 dm으로 얘기좀하다가
2022. 5. 22. 오후 9:29, 빠밤 : 갑자기 보이스톡(?)같은거하자고 전화같은거걸었는데 당황스럽네요 ㄷ
2022. 5. 22. 오후 9:30, 그레이 : 먼가 쎄하면 차단하심이..
2022. 5. 22. 오후 9:30, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ
2022. 5. 22. 오후 9:32, 빠밤 : 이런적처음이라 당황스럽네
2022. 5. 22. 오후 9:32, DARTZ : 저 전에 자기 레스토랑 사이트 만들고 싶다고 외주 맡기고 싶다해서 구글로 화상통화도 했습니다 ㅋㅋㅋㅋ
2022. 5. 22. 오후 9:33, 신난 어피치 : 와 대박
2022. 5. 22. 오후 9:33, 신난 어피치 : 인도분들 엑센트가 독특해요
2022. 5. 22. 오후 9:33, DARTZ : 맞아요 그래서 대화 안통해서 끝났습니다
2022. 5. 22. 오후 9:38, 빠밤 : 그냥 말씹었습니다 ㅎㅎ..
2022. 5. 22. 오후 9:46, 론트리니 : 넵! 감사합니다 ㅎㅎ
2022. 5. 22. 오후 9:47, A대 4-1(진) : 다 훔쳐가겠습니다 ㅎㅎ
2022. 5. 22. 오후 11:16, 자란다 Recruiter : 이모티콘 오늘하루도 괜찮으셨길 바라며! 좋은 밤 되세요!
2022. 5. 22. 오후 11:16, 유용태 (teo.yu) : 수고하셨습니다 +_+bbb
2022. 5. 22. 오후 11:16, 엔 : 내일은 즐거운 월요일입니다
2022. 5. 22. 오후 11:17, 유용태 (teo.yu) : 출근할 생각에 행복해집니다. ㅎ
2022. 5. 22. 오후 11:19, 곰젤리 : 리빙포인트: 주말에도 출근하면 행복이 두배!
2022. 5. 22. 오후 11:21, 엔 : 초과수당도 두배!
2022. 5. 22. 오후 11:21, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 5. 22. 오후 11:46: devtimothy님이 들어왔습니다.
2022. 5. 22. 오후 11:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 22. 오후 11:47, 유용태 (teo.yu) : 안녕하세요 devtimonthy님 반갑습니다 :)
2022. 5. 22. 오후 11:47, devtimothy : 안녕하세요
2022. 5. 22. 오후 11:47, 유용태 (teo.yu) : 네~ 안녕하세요 어서오세요. ㅎ
2022. 5. 22. 오후 11:47, devtimothy : AdorableCSS 보고 링크 타다가 여기까지 왔습니다 (_ _)
2022. 5. 22. 오후 11:48, 유용태 (teo.yu) : 와!!! 감사합니다. ㅋ 많은 관심 부탁드려요. ㅎㅎ
2022. 5. 22. 오후 11:48, 유용태 (teo.yu) : 토이나 사이드에서 쓰신다가 궁금하신게 있다면 얼마든지 알려드리겠습니다. ㅋㅋㅋ
2022. 5. 22. 오후 11:48, 유용태 (teo.yu) : 필요한 기능 제안도 다 받아요!
2022. 5. 22. 오후 11:49, devtimothy : ㅋㅋ 사실 글 보면서 기술에 대한 궁금증도 궁금증이지만 이런 지식은 어떻게 쌓아오시는지가 참 궁금해졌습니다
2022. 5. 22. 오후 11:51, 유용태 (teo.yu) : 일단 홍대병 힙스터 기질과 더불어 이런게 생겨난 배경이 뭘까를 탐구해서 나름의 논리와 소설을 갖다붙여서 정리해보니 '으음 요게 이런거구만... 그렇면 차라리 이런 방식이 더 낫지않나?' 요런 테크를 타는 것 같아요. ㅋ
2022. 5. 22. 오후 11:58, devtimothy : 오호 그렇군요… 테오님은 개발 하신지 얼마나 되셨어요?
2022. 5. 22. 오후 11:59, 유용태 (teo.yu) : 코딩은 초딩때 시작헀는데 본격적으로 한건 대학때이고 많이 했는데 나이가 추정되는게 싫어서 말 안할래요. ㅋㅋ 짧지는 않아요. ㅎ

2022년 5월 23일 월요일
2022. 5. 23. 오전 12:03, 정돌이 : 삭제된 메시지입니다. 
2022. 5. 23. 오전 12:03, devtimothy : ㅋㅋㅋ 그렇군요 실례했습니다 (_ _)
2022. 5. 23. 오전 12:04, 유용태 (teo.yu) : 아닙니다. ㅋ 저희 회사가 나이는 비밀로 하고 있는데 혹시 여기에 누가 있을까봐요. ㅋ
2022. 5. 23. 오전 12:07, 눈물바다에 빠진 라이언 : 나이가 비밀인게 신선하네요
2022. 5. 23. 오전 12:08, 눈물바다에 빠진 라이언 : 밥먹을때 몇 살인지 추측하고 그러면
2022. 5. 23. 오전 12:08, 눈물바다에 빠진 라이언 : 징계감인가요?...
2022. 5. 23. 오전 12:08, 유용태 (teo.yu) : 아뇨. ㅋㅋ 그냥 권고사항 정도입니다. 수평적인 문화에 서로 영어호칭으로 말하는 권장하고 있어서 나이를 알면 그게 잘 안되잖아요. ㅎ
2022. 5. 23. 오전 12:10, 웹린이 : 저희도 나이 얘기 잘 안하는 것 같아요 ㅎㅎ
2022. 5. 23. 오전 12:10, 유용태 (teo.yu) : 맞아요 솔직히 팀웤에 전혀 도움이 된다고 생각하지 않습니다. ㅎ
2022. 5. 23. 오전 12:11, 웹린이 : 맞아요 모른다고 딱히 문제 있는 경우도 없구요 ㅋㅋㅋ
2022. 5. 23. 오전 12:11, 유용태 (teo.yu) : 맞아요
2022. 5. 23. 오전 12:11, 웹린이 : 어 뭔가 단정하면 좀 그러니
2022. 5. 23. 오전 12:11, 웹린이 : 없었던 것 같아요 ㅋㅋㅋㅋ
2022. 5. 23. 오전 12:11, 엔 : 근데 친해지면 뭔가 다 알게되긴 하더라구요 ㅋㅋㅋ
2022. 5. 23. 오전 12:11, 유용태 (teo.yu) : ㅋㅋㅋㅋ 저도요 ㅎ
2022. 5. 23. 오전 12:12, 유용태 (teo.yu) : 그때되면 이미 팀웤이 굳건한거니까. ㅋ
2022. 5. 23. 오전 12:12, 그레이 : ㅋㅋ 근데 종종 유교식 관계 형성을 좋아하는 리더 있으면........
2022. 5. 23. 오전 12:12, 유용태 (teo.yu) : 헐.. 그게 문제죠.
2022. 5. 23. 오전 12:12, 유용태 (teo.yu) : 유교에서도 나이가지고 존대하대한거는 아니라고하더라구요. ㅋ
2022. 5. 23. 오전 12:13, 부끄러운 어피치 : 제일 힘든 경우는 그 분 본인이 인정을 안하시는 경우요 ㅋㅋㅋ
2022. 5. 23. 오전 12:13, 살려줘 네오 : 나이도 있지만 직급때문에라도 수평 문화가 안되는 영향도 큰거 같거라구요.
2022. 5. 23. 오전 12:13, 웹린이 : 오성과 한음도 다섯살 차이라고 들었습니다 ㅎㅎㅎ
2022. 5. 23. 오전 12:14, 그레이 : 우리식 유교 문화랄까요 ㅎㅎ 먼가 군대문화랑 짬뽕되서 조직 문화를 안드로메다를 ㅇ이끌고 가는 경우가 많은듯 합니다 ㅎㅎㅎ
2022. 5. 23. 오전 12:14, 유용태 (teo.yu) : 애플도 권위랑 수직적인 문화가 엄청 깊다고 해서 수평이 수직보다 좋은것이라고 할수는 없지만... 저는 수평파입니다. ㅋ
2022. 5. 23. 오전 12:15, 그레이 : 아무래도 제조회사가 그런 경향이 좀 있는듯 하죠? ㅎㅎ
2022. 5. 23. 오전 12:16, 유용태 (teo.yu) : 그렇다고 하더라구요. 똑똑한 소수의 사람이 대부분을 먹여살리는 구조
2022. 5. 23. 오전 12:17, 눈물바다에 빠진 라이언 : 애플 겉으로 볼 땐 되게 수평적이엇는데 수직적이었구나
2022. 5. 23. 오전 12:20, 웹린이 : 애플이 소프트웨어도 강하지만 그래도 매출 구조에서 하드웨어 비중이 더 크기 때문에 그런게 아닐까요? ㅎㅎ
2022. 5. 23. 오전 12:20, 웹린이 : 시작이 컴퓨터 만들어 팔던 회사기도 하구요😅
2022. 5. 23. 오전 12:21, 웹린이 : 그레이님이 말씀하신 경향이 애플에도 적용되지 않을까 싶네요🤔
2022. 5. 23. 오전 12:21, 웹린이 : 물론 뇌피셜입니다 ㅋㅋㅋㅋ
2022. 5. 23. 오전 12:21, 그레이 : 그쵸 전통적으로 제조회사였으니 ㅎㅎ
2022. 5. 23. 오전 12:22, O_O : 다른회사에서는 
프론트에서 API Response 타입 정리하실 때 어떤 방법으로 하시나요..?
저희 회사 지금 상태가... 백엔드에서 따로 정의해주거나 스웨거 정리가 안되어 있어서 프론트 개발자가 직접 API 호출한거보고 대충 알아서 만들거든요...ㅠㅠ 
이러다보니 같은 타입임에도 프론트개발자 마다 다 그때그때 따로 만들다보니 타입 파편화가 너무 심각한 지경이라... 정리가 필요한데, 
다른 회사에선 어떻게 백엔드-프론트 타입을 정리하는지 궁금하네요.
2022. 5. 23. 오전 12:23, 유용태 (teo.yu) : 어찌나 구구절절 공감이 가는지요. ㅋㅋㅋ
2022. 5. 23. 오전 12:27, O_O : 이번에 개발팀 전체 회의 때 건의해보려고하는데 ... 다른 회사는 어떻게 하는지 궁금하네요 ㅠㅠ
이거 땜에 진짜 골치 아파요..... 
예~전에는 아예 따로 공용 타입을 라이브러리화 시킨 적도 있다던데, 이것도 관리하기가 여간 까다로운게 아닌가보더라구요ㅠ
2022. 5. 23. 오전 12:28, O_O : 그나마 현재는 개발팀 규모가 작아서
더 커지기전에 잡아야 나중에 들어오는 사람을 위해서도 좋을 듯 한데..딱히 좋은 방법이 안떠오르네요
2022. 5. 23. 오전 12:29, 엔 : 백엔드에서 스웨거로 정리해줄 환경은 안되는 건가요
2022. 5. 23. 오전 12:31, O_O : 스웨거가 있긴한데, 리소스 부족으로 관리가 잘 안 되고 있어요. 개인적으로는 살~짝 납득이 안 가긴해요... 스웨거는 백엔드에서 기본적으로 해줘야 할 부분 같은데....ㅠㅠ
다른 오카방에서 여쭤봐도 다들 스웨거는 기본이라고 말씀들 하시더라구요..
2022. 5. 23. 오전 12:31, 엔 : swagger + openapi-generator = 천국입니다 🥲
2022. 5. 23. 오전 12:36, 그레이 : 스웨거가 있어도 파편화 되기 쉬운데.. 스웨거라도 해달라고 위쪽으로다가 건의를 해보심이..
2022. 5. 23. 오전 12:37, 엔 : 일일히 다 타이핑을 해야하는 상황이라면 처음에 잘 규칙을 맞춰도 결국에는 파편화가 생기게 되더라구요. 저희도 서비스마다 좀 각각이라… 주기적으로 리팩토링 하려고 노력하고 있습니다. ㅠㅠ 좋은 방법이 있다면 저도 알고싶네요.
2022. 5. 23. 오전 12:37, 스타트업개발자 : 기획문서를 보고 백엔드 프론트엔드 개발자가 얘기해서 구조를 같이 정합니다. 스웨거나 및 노션에 정리는 부가적인 요소로 하고있습니다.
2022. 5. 23. 오전 12:47, O_O : 스웨거는 있어요.. 단지 Responses가 텅텅 비어 있을뿐 ..ㅠㅠ
2022. 5. 23. 오전 12:47, O_O : 사진
2022. 5. 23. 오전 12:47, O_O : 이모티콘 
2022. 5. 23. 오전 12:49, 그레이 : ㅎㅎㅎ 네.. 누군가 조율해주지 않으면 프론트 백엔드 개발자끼리 서로 싸우게 되기도 해서ㅜ
2022. 5. 23. 오전 12:49, 그레이 : ???: 그냥 DTO 열어보세요 다 나와있잖아요
2022. 5. 23. 오전 12:49, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 5. 23. 오전 12:52, O_O : ㅋㅋㅋㅋㅋㅋ 비슷한 얘기 들었어요 
????: 아래쪽에 DTO있는데 찾아보세요. 
2022. 5. 23. 오전 12:52, O_O : 눈치껏 찾아쓰고있습니다...ㅠㅠ
2022. 5. 23. 오전 12:52, 그레이 : ㅋㅋㅋㅋ ㅜㅜㅜ
2022. 5. 23. 오전 12:58, 좌절하는 프론트 : 아 자야하는데
2022. 5. 23. 오전 12:58, 좌절하는 프론트 : 책을 읽어야하는데..
2022. 5. 23. 오전 12:58, 좌절하는 프론트 : 아 자야하는데..
2022. 5. 23. 오전 12:58, 좌절하는 프론트 : 책을 읽어야하는데..
2022. 5. 23. 오전 12:58, 유용태 (teo.yu) : 오디오 북 추천 드립니다. ㅎ
2022. 5. 23. 오전 12:58, 좌절하는 프론트 : 앗 이미 교보에서 종이책으로 받았습니다 ㅋㅋㅋ
2022. 5. 23. 오전 12:58, 좌절하는 프론트 : 50페이지만 읽고자야지 ㅋㅋㅋ
2022. 5. 23. 오전 2:02, O_O : 와 한국인이 epl 득점왕 하는걸 보는군요....
2022. 5. 23. 오전 2:02, 프로로 : ㅠㅠ 흥궈사랑해요
2022. 5. 23. 오전 2:02, O_O : 필드골만으로 진짜 대단하네요
2022. 5. 23. 오전 2:03, 취미는개발 : 안 자고 보길 잘했네요 ㅋㅋ
2022. 5. 23. 오전 2:04, 멀기트 : 쏘니!
2022. 5. 23. 오전 2:06, 프로로 : 저희는 낼 출근 화이팅하시죠 ㅋㅋㅋ
2022. 5. 23. 오전 5:41, Herb : 혹시 특정 분야에 대한 도메인 지식이 잘 활용되는 분야는 프론트엔드/백엔드 중 어느 쪽인지 여쭈어도 괜찮을지요? 예를 들면... 뭐가 좋을까... 문구 판매 관련 서비스를 진행할 때 문구를 팔아본 사람이 그 경험을 녹여내거나 문방구 사장님과 얘기를 할 기회가 많은 쪽이 어느 쪽인지가 궁금했습니다!
2022. 5. 23. 오전 5:55, 벙찐 튜브 : 도메인 관련지식은 프론트vs백으로 구분하자면 백인것같습니당
2022. 5. 23. 오전 6:22, 음악듣는 어피치 : 저도 그렇게 생각합니다
2022. 5. 23. 오전 7:44, Herb : 그렇군요! 답글 남겨주셔서 감사드립니다!!
2022. 5. 23. 오전 9:30, 머리 빗는 네오 : 안녕하세요 ㅠ 갑자기 하루아침에
2022. 5. 23. 오전 9:30, 머리 빗는 네오 : 사진
2022. 5. 23. 오전 9:31, 머리 빗는 네오 : 구글링 해보고있는데 어렵네요 ㅠ 
2022. 5. 23. 오전 9:33, 델 : source ~/.zshrc 한번 해보실래요..?
2022. 5. 23. 오전 9:35, 머리 빗는 네오 : 사진
2022. 5. 23. 오전 9:36, 델 : /. 말고 ~/. 이요!
2022. 5. 23. 오전 9:37, 머리 빗는 네오 : 입력해쏘요
2022. 5. 23. 오전 9:37, 머리 빗는 네오 : 사진
2022. 5. 23. 오전 9:37, 델 : 그래도 안되시나요?
2022. 5. 23. 오전 9:37, 머리 빗는 네오 : 네 ㅠㅠ 
2022. 5. 23. 오전 9:38, 머리 빗는 네오 : 껏다켜두 안되네요 ㅠㅠ
2022. 5. 23. 오전 9:38, 델 : node -v 하면 정상적으로 나오시나요?
2022. 5. 23. 오전 9:42, 마이크를 든 라이언 : 저 git으로 협업할 때 궁금한게 있는데요!! 5인미만인 개발팀에서는 git branch 안파고 그냥 바로 master에서 작업하나요???
2022. 5. 23. 오전 9:43, 꽐 : 개인적인 경험이긴한데... 그래도 브랜치 따서 하는게 나은거 같더라구요..
2022. 5. 23. 오전 9:43, 사수가없어요 : 브랜치 따로해서 나중에 머지하거나
2022. 5. 23. 오전 9:43, 델 : 저희는 혼자 하는 거여도 귀찮지 않다면 브랜치 따고 해요
2022. 5. 23. 오전 9:43, 사수가없어요 : 한 브랜치쓰고 커밋하기전에 사전에 알려주거나
2022. 5. 23. 오전 9:43, 사수가없어요 : 팀바팀
2022. 5. 23. 오전 9:43, 마이크를 든 라이언 : 일단 저는 브랜치는 dev,feature 무조건 파서 해야한다고 생각하긴 합니다!ㅜㅜ
2022. 5. 23. 오전 9:44, 사수가없어요 : 어떻게 운영하는지에 따라 달라서
2022. 5. 23. 오전 9:44, 델 : 저도 팀바팀인 거 같아요!
2022. 5. 23. 오전 9:44, 사수가없어요 : 브랜치만 관리하는 사람도 있어요 브랜치가 많으면..
2022. 5. 23. 오전 9:45, 델 : 근데 경험상 마스터에 그대로 작업하면 머지커밋이 안 생기는데 그럼 나중에 이슈생겨서 롤백하거나 할 때 골치아프더라고요
2022. 5. 23. 오전 9:45, 마이크를 든 라이언 : 저희는 크게 피쳐 > 데브(테스트) > 마스터(실서버) 이런식이라,,
2022. 5. 23. 오전 9:46, 마이크를 든 라이언 : 맞아여!,,
2022. 5. 23. 오전 9:46, 꽐 : 저희는 이거 참고해서 구성했어요.

https://gmlwjd9405.github.io/2018/05/11/types-of-git-branch.html
2022. 5. 23. 오전 9:47, 즐거운 네오 : 5인 미만이라 할지라도 혼자 개발하는거 아닌 이상 깃 무조건 꼬일텐데 브랜치없이 작업하는게 가능한가요??
2022. 5. 23. 오전 9:48, 델 : 피쳐 브랜치 하나를 두 명이서 같이 작업해본 적이 있는데 브랜치 없이 작업 잘 됐었어요!
2022. 5. 23. 오전 9:49, 즐거운 네오 : 오 그렇군요
2022. 5. 23. 오전 9:49, 그레이 : trunk based development 라고 있긴한데.. 브랜치를 아예 따지 않는 개념은 아닙니다
2022. 5. 23. 오전 9:49, 그레이 : 불안정한 코드를 관리해주는 방법만 염두에 두시면 될듯
2022. 5. 23. 오전 9:50, 델 : 사실 git도 코드 관리 도와주는 도구일 뿐이라 방법론에 얽매이지 말고 쓰고 싶은 대로 쓰면 되는 거 같아요 다만 지금 쓰고 있는 방법이 어떤 장단점이 있는지 인지만 한다면
2022. 5. 23. 오전 9:51, 델 : 결국 브랜치를 따고 머지를 한다는 규칙을 지키는 게 중요한 게 아니라 코드 관리를 더 잘 함으로써 고객한테 더 나은 피드백을 더 빨리 주는 게 중요한 거니까요
2022. 5. 23. 오전 9:51, 머리 빗는 네오 : 네네 npm node nvm 다 버전 잘 찍혀요 ㅠ
2022. 5. 23. 오전 9:52, 머리 빗는 네오 : 사진
2022. 5. 23. 오전 9:53, 동동 : 요거는 어떻게 실행하신거에요?
2022. 5. 23. 오전 9:53, 델 : 아 vscode 터미널에서만 npm run build 가 안 되시는 건가요? 
2022. 5. 23. 오전 9:57, Herb : 혹시 이 이슈랑 관련이 있을까요?
2022. 5. 23. 오전 9:57, Herb : https://github.com/microsoft/vscode/issues/143061
2022. 5. 23. 오전 10:05, A대 4-1(진) : 삭제된 메시지입니다. 
2022. 5. 23. 오전 10:06, 머리 빗는 네오 : 리액트 패키지에서 script start 로요 ㅠ 평소처럼
2022. 5. 23. 오전 10:06, 머리 빗는 네오 : 찾아보겠습니다
2022. 5. 23. 오전 10:06, 그레이 : 실례되지 않을까요 ㅋㅋ;
2022. 5. 23. 오전 10:07, A대 4-1(진) : 앗 ,,, 죄송합니다! 바로 지웠습니다..ㅎㅎ
2022. 5. 23. 오전 10:14, 동동 : vscode 터미널에서 실행하신거에요?
2022. 5. 23. 오전 10:16, Herb : 혹시 vscode의 react extension이 제공하는 script start 명령을 실행하셨다는 말씀이신가요??
2022. 5. 23. 오전 10:17, 머리 빗는 네오 : spq
2022. 5. 23. 오전 10:17, 머리 빗는 네오 : 냅
2022. 5. 23. 오전 10:17, 머리 빗는 네오 : 사진
2022. 5. 23. 오전 10:17, 머리 빗는 네오 : ㅎㅎ;;
2022. 5. 23. 오전 10:18, 머리 빗는 네오 : 사진
2022. 5. 23. 오전 10:18, 머리 빗는 네오 : 엥 그냥 npm run start
2022. 5. 23. 오전 10:19, 머리 빗는 네오 : 하니까 되네요 ;;
2022. 5. 23. 오전 10:19, 머리 빗는 네오 : 왜 근데 평소하던대로 했는데 안되지
2022. 5. 23. 오전 10:19, 머리 빗는 네오 : 안됏던거지 ㅠ 된거라면 왜 된거고 ㅠ
2022. 5. 23. 오전 10:21, fefe : 가끔 np mrun start 로 되는경우도 있을거고,, 
npn run start도 있을수도 있어요.. ㅋㅋㅋ 
2022. 5. 23. 오전 10:25, 동동 : 익스텐션도 있나요? 신기하네요… 😵‍💫
2022. 5. 23. 오전 10:28, 여의도개발 : 리액트 프로젝트에서 디버깅 보통 어떻게들 하시나요?
2022. 5. 23. 오전 10:30, 썰cho : sentry로 에러 로깅하긴하는데
2022. 5. 23. 오전 10:30, 썰cho : 그마저도 여의치 않네요..
2022. 5. 23. 오후 12:03, 퇴근하는 프로도 : 안녕하세요… ios관련하여 여쭐 게 있습니다.
textarea가 focused상태가 되면 UI가 일부 바뀌며 키보드가 올라오고 그 위로 텍스트박스가 보여야하는데, 키보드가 textarea를 자꾸 덮어서 가려버립니다… 안 덮을 때도 있습니다ㅠㅠ 어떤 상황인지 감이 잘 안 옵니다.. 힌트를 얻을 수 있을까요?ㅠㅠ
2022. 5. 23. 오후 12:06, 썰cho : rn인가요?
2022. 5. 23. 오후 12:06, 썰cho : flex direction flex-end 하니까
2022. 5. 23. 오후 12:06, 썰cho : justify contents였나
2022. 5. 23. 오후 12:06, 좌절하는 프론트 : 어떤 플랫폼으로 개발을 하셨는지(RN, 플러터, IOS)는 모르지만..
https://channel.io/ko/blog/cross_browsing_ios15

위 글이 도움이 되길
2022. 5. 23. 오후 12:06, 썰cho : 자동으로 올라도던데요
2022. 5. 23. 오후 12:09, 좌절하는 프론트 : https://stackoverflow.com/questions/18921880/keyboard-covers-text-input-in-webapp-ios
2022. 5. 23. 오후 12:09, 좌절하는 프론트 : https://stackoverflow.com/questions/69944254/virtual-keyboard-covers-html-element-in-safari-on-ios
2022. 5. 23. 오후 12:09, 좌절하는 프론트 : 공유드린걸로 해결이 되시길 응원합니다
2022. 5. 23. 오후 12:21, 퇴근하는 프로도 : 원래는 자동으로 올라오는게 맞다고 생각하는데 자동으로 올라오다가 자동으로 안올라오기를 반복하더라구요.. vue 기반 웹페이지입니다.
귀중한 시간내주셔서 링크주셔서 정말 감사드립니다!! 주신 글 읽으며 버그 찾아보겠습니다.!!!
2022. 5. 23. 오후 12:22, team_smalt 성석원 : grapql 사용관련 해서 질문이 있습니다. 
 프론트에서 백으로 요청을 보냈을 때 백에서 처리 되는 과정이 궁금한데, 생각하기로는 요청을 받으면 서버에서는 sql을 이용해서 데이터를 새로 조회 한 후에 grapql 들어온 요청에 맞게 데이터를 내보내주는 식인건가요 ??
2022. 5. 23. 오후 12:28, j : 네 맞습니다 자세한 과정은
schema 객체에서 쿼리를 수신하고 resolver에 매팽하여 일치하는 필드로 바인딩 시켜서 아웃풋을 전달시키는 구조로 알고 있습니다.
2022. 5. 23. 오후 12:28, team_smalt 성석원 : 답변 감사합니다 !
2022. 5. 23. 오후 12:29, j : https://www.howtographql.com/advanced/1-server/
2022. 5. 23. 오후 12:29, j : 해당 문서에 설명 되어있습니다.
2022. 5. 23. 오후 12:30, team_smalt 성석원 : 감사합니다!
2022. 5. 23. 오후 1:02: 이영광님이 들어왔습니다.
2022. 5. 23. 오후 1:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 23. 오후 1:28, 부끄러운 어피치 : nextjs로 장난감 프로젝트 만들면서 간단하게 서버도 구현해보려 하는데, 파이어스토어 괜찮나요 ??!
2022. 5. 23. 오후 1:28, 썰cho : 넵넵 토이플젝 정도면
2022. 5. 23. 오후 1:28, 썰cho : 괜찮아요
2022. 5. 23. 오후 1:29, 부끄러운 어피치 : 감사합니다~! 혹시 다른 괜찮은 것도 있으면 추천해주심 감사하겠습니다~
2022. 5. 23. 오후 1:30, 유용태 (teo.yu) : 안녕하세요 이영광님~~ 반갑습니다 :)
2022. 5. 23. 오후 1:31, 이영광 : 안녕하세요!! 
2022. 5. 23. 오후 1:31, 유용태 (teo.yu) : 어서오세요~~ 여기는 개발하면서 궁금한 내용들 서로 묻고 답하는 공간입니다ㅎ 언제든 궁금하게 생기거나 최근 관심사 공유 해주시며 같이 이야기해요 ㅎ
2022. 5. 23. 오후 1:32, 이영광 : 네~ ㅎㅎ 감사합니다
2022. 5. 23. 오후 1:43, 좌절하는 프론트 : 자란다 리쿠르터님 친절쓰.. 좋은 인사담당자에 표본이었다
2022. 5. 23. 오후 1:43, 좌절하는 프론트 : 사진
2022. 5. 23. 오후 1:43, 좌절하는 프론트 : 감사합니다
2022. 5. 23. 오후 1:56, gahui : 안녕하세요. 쿠키 관련해서 질문이 있는데요.
2022. 5. 23. 오후 1:56, gahui : 웹서버에서 api 응답보내줄때 Set-Cookie 에 아래 내용을 전달해 주고 있어요.
2022. 5. 23. 오후 1:56, gahui : 사진
2022. 5. 23. 오후 1:56, gahui : 제가 알고 있기로는 저런식으로 쿠키를 받아오면 
2022. 5. 23. 오후 1:57, gahui : 브라우저 쿠키에 자동으로 저장되는걸로 알고 있는데요
2022. 5. 23. 오후 1:57, gahui : 실제 브라우저 개발자 창 쿠키에 들어가보면 아무값도 없습니다.
2022. 5. 23. 오후 1:57, gahui : 사진
2022. 5. 23. 오후 1:57, gahui : 요롭게요.. ㅠㅠ
2022. 5. 23. 오후 1:58, gahui : 혹시 제가 잘못 알고 있는건지 궁금하고 답답해서 질문 남겨봐요..
2022. 5. 23. 오후 1:58, A대 4-1(진) : 도메인이
2022. 5. 23. 오후 1:58, A대 4-1(진) : 달라서 그런걸까요?
2022. 5. 23. 오후 1:59, gahui : 프론트엔드랑 백엔드 서버말씀하시는건가요?
2022. 5. 23. 오후 1:59, 좌절하는 프론트 : 음
2022. 5. 23. 오후 2:00, 좌절하는 프론트 : url정보요
2022. 5. 23. 오후 2:00, gahui : 아 프론트엔드랑 백엔드 도메인 주소가 다르면 안보일수 있군여....
2022. 5. 23. 오후 2:00, 좌절하는 프론트 : 쿠키 쓸라면 same origin 정책일거에요 
2022. 5. 23. 오후 2:00, A대 4-1(진) : 멀티도메인 설정이 있는걸로 알고있어요
2022. 5. 23. 오후 2:01, 좌절하는 프론트 : 프로토콜 도메인 포트 같아야해요
2022. 5. 23. 오후 2:02, gahui : 예를 들어 프론트엔드의 도메인은 https://example.com/list이고
2022. 5. 23. 오후 2:02, gahui : 백엔드로의 요청은 
2022. 5. 23. 오후 2:02, 유용태 (teo.yu) : cookie path가 /grems-api 인데
2022. 5. 23. 오후 2:02, gahui : https://example.com/grems-api/list
2022. 5. 23. 오후 2:02, gahui : 도메인이 다르다고 할수 있는거죠? (넘나 기초적이고 멍청한 질문 죄송해여ㅠㅠ)
2022. 5. 23. 오후 2:06, 유용태 (teo.yu) : 아니에요~~~ 좋은 질문 감사합니다~ 그런 생각하지 마세요
2022. 5. 23. 오후 2:06, 유용태 (teo.yu) : 지금 저도 맞는가 긴가민가 하면서 적고 있었는데
2022. 5. 23. 오후 2:07, 벙찐 튜브 : gahui님 질문으로 저도 배웠어용
2022. 5. 23. 오후 2:07, 유용태 (teo.yu) : 혹시 지금 쿠키 값은 개발자 도구에서 확인을 하셨어요? +_+
2022. 5. 23. 오후 2:10, gahui : 네 개발자 도구에서 확인했어요!
2022. 5. 23. 오후 2:10, 유용태 (teo.yu) : 어떻게 하니까 된거에요?
2022. 5. 23. 오후 2:11, gahui : 무슨 말인지 이해를 못했어요 어떤걸 말이죠? ㅠㅠ
2022. 5. 23. 오후 2:12, 유용태 (teo.yu) : path때문이 맞았는지가 궁금했어요.. 확실치가 않아서 ^^;;
2022. 5. 23. 오후 2:14, gahui : 아직 확인을 제대로 안해봐서 한번 확인해보겠습니다! 
2022. 5. 23. 오후 2:14, 유용태 (teo.yu) : 네~ 감사합니다 :)
2022. 5. 23. 오후 2:16, A대 4-1(진) : https://seob.dev/posts/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%BF%A0%ED%82%A4%EC%99%80-SameSite-%EC%86%8D%EC%84%B1/

요게 좀 도움될까여
2022. 5. 23. 오후 2:21, gahui : 감사합니다 참고해보겠슴돵
2022. 5. 23. 오후 2:21, 웅세 : 리액트쿼리와 next를 사용해 개발중인데 아이템이 여러가지가 있을때 한 아이템을 클릭했다가 뒤로가기했다가 다른 아이템을 클릭했을때 처음에 클릭했던 아이템의 정보가 그대로 남아있네요ㅜㅜㅜ

dev 환경에서는 아이템의 정보가 잘 업데이트됐는데 빌드하니 이러는데 무엇을 확인해야할까요?
2022. 5. 23. 오후 2:24, 웅세 : 새로고침을 하면 정보를 또 잘보여주긴하는데
2022. 5. 23. 오후 2:24, 웅세 : ㅜㅜㅜㅜ
2022. 5. 23. 오후 2:32, 델 : 쿼리키값에 아이템 id가 잘 들어가 있나요?
2022. 5. 23. 오후 2:33, 웅세 : 사진
2022. 5. 23. 오후 2:33, 웅세 : 현재 이렇게 사용중이었습니다..!
2022. 5. 23. 오후 2:34, 델 : 쿼리키에 아이템 id가 없어서
2022. 5. 23. 오후 2:36, 델 : keepPreviousData 도 true라서 버그가 발생한 거 같아요
2022. 5. 23. 오후 2:36: 짜짜개발자님이 들어왔습니다.
2022. 5. 23. 오후 2:36, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 23. 오후 2:36, 델 : 'pitcher' 대신 ['pitcher', year, name, birth] 이런 식으로 쿼리키를 주시면 해결될 거예요
2022. 5. 23. 오후 2:36, 델 : 일반적으로 queryFn 에 들어가는 파라미터들은 무조건 queryKey 에 들어간다고 생각하면 되는 거 같아요
2022. 5. 23. 오후 2:37, 델 : https://tkdodo.eu/blog/practical-react-query#treat-the-query-key-like-a-dependency-array 이 부분 참고해 보셔요!
2022. 5. 23. 오후 2:37, 웅세 : 오오 넵 다시 해보겠습니다!!! 감사합니다!!
2022. 5. 23. 오후 2:42: 제게 힘을주세요..님이 들어왔습니다.
2022. 5. 23. 오후 2:42, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 23. 오후 2:43, 제게 힘을주세요.. : 안녕하세요 반갑읍니다
2022. 5. 23. 오후 3:23, 웅세 : 사진
2022. 5. 23. 오후 3:23, 웅세 : 요렇게 하고 나니까 이런 오류가 발생하네요
2022. 5. 23. 오후 3:23, 웅세 : 백엔드 api 주소가 https 가 아닌 http 라 그런걸까요
2022. 5. 23. 오후 3:23, 델 : 네넵 요건 mixed content 에러인데
2022. 5. 23. 오후 3:24, 델 : https 프론트가 http 백엔드로 쏘면 저렇게 되는 걸로 알아요
2022. 5. 23. 오후 3:24, 웅세 : 그럼 백개발자한테 https로 바꿔달라고
2022. 5. 23. 오후 3:24, 웅세 : 요청하면될까요??
2022. 5. 23. 오후 3:24, 델 : 넵넵
2022. 5. 23. 오후 3:24, 웅세 : 근데 왜 쿼리키를 바꾸니까 오류가 발생했을까요 이유를 모르겠네요..
2022. 5. 23. 오후 3:24, 델 : 근데 로컬 프론트가 https 이신가요?
2022. 5. 23. 오후 3:25, 웅세 : 혹시 로컬프론트가 https인지 어떻게 확인이가능할까요?
2022. 5. 23. 오후 3:25, 썰cho : 포트가 443인지 확인?
2022. 5. 23. 오후 3:25, 델 : 그냥 브라우저 주소창을 봤을 때 https인지..?
2022. 5. 23. 오후 3:25, 웅세 : 아아아
2022. 5. 23. 오후 3:25, 웅세 : 아뇨 거기선 http입니다
2022. 5. 23. 오후 3:26, 웅세 : 그래서 로컬에서는 잘되는데 빌드했을때 안되고 그랬던걸까요
2022. 5. 23. 오후 3:26, 델 : 아아 빌드했을 때라는게
2022. 5. 23. 오후 3:27, 델 : 빌드해서 로컬에서 띄우신 게 아니라 vercel 에서 CD가 돈거군요
2022. 5. 23. 오후 3:27, 델 : 넵넵 그런거같아요
2022. 5. 23. 오후 3:27, 웅세 : 버셀에 배포를 했는데
2022. 5. 23. 오후 3:27, 웅세 : 아아 넵 맞습니다
2022. 5. 23. 오후 3:29, 웅세 : 같이 프로젝트하는 백 친구한테 https로 바꿔달라고 요청했습니다 감사합니다!
2022. 5. 23. 오후 4:15, 애교뿜뿜 무지 : 안녕하세요 혹시 빅테크(네카라 등)에서는 차트 그릴때 직접 구현하시는지 아니면 라이브러리는 보통 뭐 사용하시는지 알 수 있을까요?
2022. 5. 23. 오후 4:16, 핸디(강경석) : 빅테크는 아니지만.. d3로 하려고 했는데 수십종 차트를 짧은 시간내에 만들어야한다고 해서 plotly.js로 랩핑해서 쓰고 있습니다.
2022. 5. 23. 오후 4:34, fefe : 안녕하세요. 지금 프론트 4년차고,, 이직준비중인데, 개인적으로 과제전형있는 회사를 선호하는데, 그런 회사들 리스트는 어디서들 찾아보시나요? 모아서 보면 좋을 것 같은데.. 
2022. 5. 23. 오후 4:35, fefe : 잡플래닛에도 안나오는 경우가 많더라구요 ㅠ 혹시 정보 아시는 분 계시면 공유해주시면 정말 감사하겠습니다
2022. 5. 23. 오후 4:39, 떨고있는 어피치 : 저도 과제를 더 선호하는 편인데, 요즘 과제보다 코테가 진짜 많긴 하더라구여…….ㅜㅜ 저도 궁금하네요…..
2022. 5. 23. 오후 4:40, 떨고있는 어피치 : 제가 아는 과제전형 진행하는 회사는 '에이블리', '크몽', '리멤버', '토스(토스는 과제전형인데 4시간짜리…?)' 입니다.
2022. 5. 23. 오후 4:53, 소심한 네오 : 사진
2022. 5. 23. 오후 4:53, 소심한 네오 : 경로는 맞는데.. 계속 찾지 못한다고 에러를 냅니다ㅠㅠ 
2022. 5. 23. 오후 4:53, 소심한 네오 : 이 경우에 설정해줘야 하는 값이 있을까요..? 
2022. 5. 23. 오후 4:55, 프론트 공부 : 한번 pages/index.tsx 로 변경해보실래요??
2022. 5. 23. 오후 4:56, 프론트 공부 : 아니다
2022. 5. 23. 오후 5:00, 쥬아~ : tsconfig 설정하셧나요?!
2022. 5. 23. 오후 5:05, 주니어 : 삭제된 메시지입니다. 
2022. 5. 23. 오후 5:10, 소심한 네오 : 엇 아니요…ㅠ 
2022. 5. 23. 오후 5:11, 초롱초롱 네오 : useNavigate로 버튼 눌러서 화면 변경시에 state로 boolean 값하고 함수를 넘기려고 하는데 계속 undefined가 떠서 무슨 이유인지 혹시 아는 분이 계실까요,,?
2022. 5. 23. 오후 5:11, 초롱초롱 네오 : 사진
2022. 5. 23. 오후 5:11, 초롱초롱 네오 : 사진
2022. 5. 23. 오후 5:12, 초롱초롱 네오 : 아래 사진에서 계속 undefined 출력해서,, ㅠㅠ
2022. 5. 23. 오후 5:17, 유용태 (teo.yu) : 짜짜개발자님!! 제게 힘을 주세요님~~~ 어서오세요 :) 반갑습니다!!!!!! ;)
2022. 5. 23. 오후 5:19, 소심한 네오 : 흑 해결했습니다8ㅅ8 힌트 주셔서 감사합니닷!! 
2022. 5. 23. 오후 5:25, 개발잘하고싶 : 라우터 설정쪽도 보여줄 수 있으신가요?
2022. 5. 23. 오후 5:27, 초롱초롱 네오 : 여기 말씀하시는걸까요?
2022. 5. 23. 오후 5:27, 초롱초롱 네오 : 사진
2022. 5. 23. 오후 5:30, 개발잘하고싶 : 네네
2022. 5. 23. 오후 5:31, 개발잘하고싶 : 객체를 못넘기지 않나요?
2022. 5. 23. 오후 5:31, 초롱초롱 네오 : 구글에선 된다고해서 해봤는데 안되더라고요,,
2022. 5. 23. 오후 5:31, 초롱초롱 네오 : 그냥 2 넣어서 해봤는데 그것도 undefined로 뜨고,,
2022. 5. 23. 오후 5:34, 개발잘하고싶 : 오호 찾아보겠슴돠
2022. 5. 23. 오후 5:37, YoMotERi : useLocation을 쓰셔야 할듯해요
2022. 5. 23. 오후 5:39, 개발잘하고싶 : const state = location.state
2022. 5. 23. 오후 5:39, 개발잘하고싶 : 이런식으로 쓰시면 될거같아요
2022. 5. 23. 오후 5:39, 개발잘하고싶 : const location = useLocation() 선언하고요
2022. 5. 23. 오후 5:41, 너겟 : 혹시 리액트 클래스 컴포넌트 방식 지원종료 관련해서 인사이트 있으신분 계신가요? 
2022. 5. 23. 오후 5:42: 알파카님이 나갔습니다.
2022. 5. 23. 오후 5:42, 너겟 : 요즘 유명한 강의들에서도 따로 다루지 않더라구요.. 
2022. 5. 23. 오후 5:46, 그레이 : 클래스 컴포넌트가 deprecated 됐나요?
2022. 5. 23. 오후 5:46, 초롱초롱 네오 : 객체는 안되는게 맞나보네요,, 제가 잘못 찾아본것 같습니다,,
2022. 5. 23. 오후 5:46, 초롱초롱 네오 : 객체 빼고, 바꾸니깐 잘되네요 감사합니다!
2022. 5. 23. 오후 5:47, 초롱초롱 네오 : 감사합니다 ㅠㅠ
2022. 5. 23. 오후 5:47, fefe : 정보 공유 감사드립니다! 
2022. 5. 23. 오후 5:47, fefe : 혹시 위 질문 관련하여.. 더 아시는분이 계시면 공유해주시면 감사드리겠습니다..!! 
2022. 5. 23. 오후 5:47, 개발잘하고싶 : 사진
2022. 5. 23. 오후 5:47, 너겟 : 리액트가 공식적으로 클래스형말고 함수형으로 쓰라고 권장하고 있어서 요즘 가르치는 곳들은 함수형 위주로 다 가르치더라구요
2022. 5. 23. 오후 5:48, 개발잘하고싶 : 아닙니다! path가 /login/ 인게 좀 걸려서 사진처럼 하셔도 됩니다!
2022. 5. 23. 오후 5:48, 초롱초롱 네오 : 넵 감사합니다 ㅠㅠㅠ
2022. 5. 23. 오후 5:50, 그레이 : 네 함수 컴포넌트가 가지는 장점이 많아서.. 레거시를 다루는게 아니라면 굳이 클래스 컴포넌트를 쓸 필요는 없을 듯 합니다
2022. 5. 23. 오후 5:52, 너겟 : 넵 리액트15.5에서 deprecated된 createClass기능처럼 지금쓰이는 class형도 없어질거라는 추측이 있던데 혹시 언제쯤일까 하는 생각이 들어서요. 혹시 아시는분이 계실까싶어.... 
2022. 5. 23. 오후 5:52, 너겟 : 그레이님 의견 감사합니다!!
2022. 5. 23. 오후 5:55, 델 : 좀 옛날 소식이긴 하지만 훅 처음 나올 때는 클래스 컴포넌트에 대한 지원을 중단하지 않을 거라고 말했어서
2022. 5. 23. 오후 5:56, 델 : 웬만해서는 클래스 컴포넌트에 대한 지원 중단은 없을 거 같긴 해요!
2022. 5. 23. 오후 5:56, 델 : https://ko.reactjs.org/docs/hooks-intro.html#gradual-adoption-strategy
2022. 5. 23. 오후 5:58, 너겟 : 감사합니다! 읽어보겠습니다...!!! 클래스 개념이 너무 어려워서 어느정도까지 봐야하나 싶어 여쭤봤습니다!
2022. 5. 23. 오후 5:59, 너겟 : 제가 공식문서를 자세히 찾아보지 못했네요 ㅠㅠ!
2022. 5. 23. 오후 5:59, 떨고있는 어피치 : 그래도 계속 보다보면 이해가 가실거에요….
레거시들은 전부 Class라서…….


2022. 5. 23. 오후 5:59, 떨고있는 어피치 : 사진
2022. 5. 23. 오후 6:00, 떨고있는 어피치 : 저도 공식문서 잘 안봐서 ㅋㅋㅋ오늘 아침에 누군가 올린 트위터 짤 보고 살짝 찔리긴 했었습니당…..ㅋㅋㅋㅋ

화이팅입니다......

2022. 5. 23. 오후 6:06, 너겟 : 감사합니다!!
2022. 5. 23. 오후 6:32: 초롱초롱 무지님이 들어왔습니다.
2022. 5. 23. 오후 6:32, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 23. 오후 6:33, A대 4-1(진) : 인스타 팔로우나 좋아요 같은거는 실시간성을 보장하지만 socket연동은 무의미한 자원을 낭비한다고 생각되는데 이 떄 사용되는게 sse인가요?
2022. 5. 23. 오후 6:34, 자란다 Recruiter : 이모티콘 날이 갑자기 푹푹 찌네요 ;;
오늘도 무사히 괜찮은날 보내셨길 바라겠습니다!퇴근 잘하셔요!
2022. 5. 23. 오후 6:42, gahui : Path 때문이 맞았어요! 덕분에 궁금증 해결했습니다!! 
2022. 5. 23. 오후 7:13, 흔들 : 혹시 지인통해 코딩 과외? 문의가 자주 들어오나요?
2022. 5. 23. 오후 7:14, 흔들 : 나도 어리버리한데 뭘 가르쳐달라고.....
2022. 5. 23. 오후 7:21, 벙찐 튜브 : 대놓고 좀 알려달라는것도 양심이 없긴 하네요..
2022. 5. 23. 오후 7:24, 유용태 (teo.yu) : 초롱초롱 무지님 어서오세요. ㅎ 반갑습니다 :)
2022. 5. 23. 오후 7:24, fefe : 과외 개념이면 비용지불할테니 알아봐달라는 뜻 아닐까요? ㅎ
2022. 5. 23. 오후 7:41, 프론트 공부 : 요즘 비전공자도 개발자! 이런 광고가 많으니깐 실제 개발자한테 물어보고싶은거 아닐까요?ㅎㅎ
2022. 5. 23. 오후 7:42, 프론트 공부 : 그래도 흔들님이 외부에서 보기에는 괜찮은 개발자 삶을 살고계시니깐 지인분들이 추천해주는거 같습니다 ㅎㅎ
2022. 5. 23. 오후 7:42, 흔들 : 비용은 주실분이긴 한데 요즘 부쩍 많이들 물어보시네요.
2022. 5. 23. 오후 7:43, 흔들 : 아닙니다. 전 그냥 잘 놀아주는 그런 인간입니다. ㅎㅎ
2022. 5. 23. 오후 7:44, 흔들 : 그냥 다들 이런 경우가 있었을꺼 같아서 여쭈어본겁니다.
2022. 5. 23. 오후 7:46, 즐거운 네오 : 전 아니고,,, 학생 과외해주는 분을 보긴 했습니다
2022. 5. 23. 오후 8:17, 킴티오 : 코딩과외하면
2022. 5. 23. 오후 8:17, 킴티오 : 보통 얼마나 받나요 한달에 몇시간하구요
2022. 5. 23. 오후 10:41: 피자 먹다 자는 무지님이 들어왔습니다.
2022. 5. 23. 오후 10:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 23. 오후 10:41, 유용태 (teo.yu) : 안녕하세요 피자 먹자 자는 무지님~~~ 반갑습니다 :)
2022. 5. 23. 오후 10:41, 피자 먹다 자는 무지 : 안녕하세요!ㅎㅎ 잘부탁드립니다
2022. 5. 23. 오후 10:42, 유용태 (teo.yu) : 네~ 어서오세요. 환영합니다 .ㅎㅎ 궁금한게 있다면 무엇이든 편하게 물어보세요. ㅎ
2022. 5. 23. 오후 10:42, 프론트 지키미 : 개발자 공백기는 어느정도까지 괜찮을까요???
공백기가 4개월이 넘어가고 있는데 많이 불안해지네요 ㅜㅜ
2022. 5. 23. 오후 10:43, 유용태 (teo.yu) : 경력으로 인정 받으려고 하는게 아니라면 이유만 있으면 괜찮지 않을까요?
2022. 5. 23. 오후 10:43, 프론트 지키미 : 기간이 문제가 아니라 이유가 중요하다는 말씀이시군요
2022. 5. 23. 오후 10:45, 유용태 (teo.yu) : 지금 지키미님의 전체 커리어 모양이 어떤지는 잘 모르곘지만 공백기에 대해서 크게 문제삼지는 않았던 것 같아요
2022. 5. 23. 오후 10:46: 철진님이 들어왔습니다.
2022. 5. 23. 오후 10:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 23. 오후 10:46, 유용태 (teo.yu) : 안녕하세요 철진님~~ 반갑습니다 :)
2022. 5. 23. 오후 10:46, 철진 : 안녕하세요!!! 저도 반갑습니다!!!☺️
2022. 5. 23. 오후 10:46, 프론트 지키미 : 말씀 감사합니다! ㅎㅎ 
제 커리어 모양은 2년 1개월 동안 근무하다 퇴사하고 공백기를 가진 상태였어요
2022. 5. 23. 오후 10:47, 유용태 (teo.yu) : 얼마나 길어지실지는 모르곘지만 그 정도는 별 문제 안될 것 같습니다. 물어는 볼텐데 대단히 중요한 의미까지 필요한 것 아닌거 같아요
2022. 5. 23. 오후 10:48, 프론트 지키미 : 말씀 감사합니다!! 여유를 가져볼수 있도록 노력해야겠어요 ㅎㅎ
2022. 5. 23. 오후 10:49, 유용태 (teo.yu) : 네~ 이 곳은 서로 궁금한것들을 물어보고 좋은 자료들을 함께 공유하며 같이 성장하고자 하는 곳입니다. 궁금한게 있으면 언제든 글 남겨주세요 ㅎ
2022. 5. 23. 오후 10:49, 철진 : 네 감사합니다!!!☺️
2022. 5. 23. 오후 10:57, 흔들 : 어서오세용.
2022. 5. 23. 오후 11:13, 유용태 (teo.yu) : 안녕하세요!!!! 지지~~~난주에 시작을 했던 취준생들의 2주짜리 스프린트 그 결과를 소개합니다!!! 많은 테스트와 피드백 부탁드립니다. 

청년들이 신청할 수 있는 청약을 보여주는 웹사이트: 청년을 구해줘!
https://save-my-youth.ga/
2022. 5. 23. 오후 11:15, DARTZ : 혹시 로그인 해보시는분들 구글 임베디드 정책상 카카오로 바로 들어가시면 로그인이 안되십니다..! 브라우저로 들어가주시면 감사하겠습니다..
2022. 5. 23. 오후 11:17, Herb : 와 이쁘다
2022. 5. 23. 오후 11:17, 헬렌 : 우와
2022. 5. 23. 오후 11:21, 신나는 프로도 : 멋지네요!!
2022. 5. 23. 오후 11:24, 퉁이리 : 평균 웹개발 시작 평균 3개월정도인 사람들이 모여서 열심히 만들었어요!
FE 꿈나무들의 작품! 부족하지만 재미있게 봐주세요!

대한민국! 청년을 구해줘!

git: https://github.com/subscriptionRescueTeam/save-my-youth
2022. 5. 23. 오후 11:27, 웹린이 : 깔끔하고 예쁘네요~👍
2022. 5. 23. 오후 11:27, 룰루 : 진짜 깔끔하고 좋네요!
2022. 5. 23. 오후 11:30, 좌절하는 프론트 : 완주하신분들 멋져요!!
2022. 5. 23. 오후 11:36, 쥬아~ : 디테일 페이지가 계속 서초구 르엘 신반포 파크에비뉴로 나오네용..!
2022. 5. 23. 오후 11:36, 유용태 (teo.yu) : 그리고 또 다른 팀의 결과물인 프로젝트 배고파 입니다. 많은 관심 부탁드립니다. 
https://vegopa-avdow676x-codadoc.vercel.app/
2022. 5. 23. 오후 11:36, DARTZ : 흑흑.. 아직 완벽한 구현이.. 안되었습니다..
2022. 5. 23. 오후 11:37, 유용태 (teo.yu) : 이번팀 역시 웹개발이 거의 처음이신분들이라 시도한 프로젝트라는 점으로 사랑스럽게 봐주세요 :)
2022. 5. 23. 오후 11:37, 퉁이리 : 게다가 일주일뿐이라 ㅠㅠ 흑흑.. 죄송해요
2022. 5. 23. 오후 11:38, 쥬아~ : 와 그래도 너무 고생하셨어요!!!
2022. 5. 23. 오후 11:38, 자란다 Recruiter : 이모티콘 오늘 하루도 적게일했는데 큰 성과 나셨길, 혹은 나만 아는 큰일 하셨길 바라겠습니다! 푹 쉬세요!! 
2022. 5. 23. 오후 11:39, 제이영 : 음식추천하고 바로 지도로 연결해주는거 재미있네요 ㅎㅎㅎ
2022. 5. 23. 오후 11:42, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋ 와 재미지게 만들었다
2022. 5. 23. 오후 11:45, Herb : ㅋㅋㅋㅋㅋㅋㅋ 재밌어요!
2022. 5. 23. 오후 11:56, 웹린이 : 에이 죄송할게 뭐 있나요 ㅎㅎ
짧은 기간에 잘 해내신 것 같아요~

2022년 5월 24일 화요일
2022. 5. 24. 오전 12:01, 진현 : 이모티콘 너무 멋있어요>_<!!!
2022. 5. 24. 오전 12:04, 울지마 라이언 : 오와 완주하신분들 다들 멋집니다 !! 
2022. 5. 24. 오전 10:12, 자란다 Recruiter : 이모티콘 오늘도 출근 잘하셨길 바라고요! (집에서든,! 회사에서든! ) 괜찮은 하루되셔요!!! 
2022. 5. 24. 오전 10:30, 머리 빗는 네오 : 와 대박이에요~~ 퀄리티 좋은데요!! 기능도 잘되고
2022. 5. 24. 오전 10:30, 머리 빗는 네오 : 2주간 스프린트 결과물인가요?
2022. 5. 24. 오전 10:35, 썰cho : 사진
2022. 5. 24. 오전 10:35, 썰cho : 인터널서버에러인데.. 404와요..
2022. 5. 24. 오전 10:43, DARTZ : 아직 완벽한 결과물이 아니었습니다.. 버그를 많이 못잡았어요 ㅠㅠ
2022. 5. 24. 오전 10:43, 썰cho : ㅋㅋㅋㅋ 넵넵!!
2022. 5. 24. 오전 10:43, 썰cho : 그래도 신입분들이신데 배포까지 완료하신건 대단하다고 생각합니다
2022. 5. 24. 오전 10:44, 설아아빠 : 게더에 항상 모여 계시던데 정말 대단합니당! 
2022. 5. 24. 오전 10:47, 애교뿜뿜 어피치 : 저희 백앤드 팀원이 aws vpc 환경을 구축하고 있는데, 현재 next로 구축된 프론트엔드는 vercel로 빌드가 되어 있습니다. 저희 팀원의견으로는 aws S3를 통해서만 vpc환경 내에 속할 수 있다고 하는데, 관련 내용을 명확하게 찾지못하고 있어,, 질문드려봅니다 ㅎㅎ;
2022. 5. 24. 오전 10:48, 썰cho : 넥스트는 서버가 필요한프레임워크라..
2022. 5. 24. 오전 10:48, 썰cho : s3만으로는 힘들거에요
2022. 5. 24. 오전 10:54, 애교뿜뿜 어피치 : 음 S3가 아닌 EC2에 웹서버를 올리고 거기에 배포가 되어야 한다는 말씀일까요?
2022. 5. 24. 오전 11:00, 빠밤 : 저 뷰 컴포넌트 질문있습니다
2022. 5. 24. 오전 11:00, 빠밤 : 사진
2022. 5. 24. 오전 11:00, 빠밤 : main.js에 ui라는 폴더내에 basebutton.vue,basecard.vue라는 글로벌 컴포넌트를 만들었습니다 그리고 이 두 컴포넌트를
2022. 5. 24. 오전 11:00, 빠밤 : 사진
2022. 5. 24. 오전 11:01, 빠밤 : theRousources라는 컴포넌트에서 불러왔는데
여기서궁금한건 현재 theResouces컴포넌트에서 basebutton,basecard컴포넌트를 가져와서 사용하고있는데 이럴때는 basebutton,basecard컴포넌트를 부모로 보고 두 컴포넌트를 사용하는 therousources컴포넌트를 자식으로 보는게맞나요?
2022. 5. 24. 오전 11:24, 프론트 : Nextjs에서 첫 렌더시에먼 getServersideProps 이용하고 그 이후에는 이용하지 않을 방법 있을까요?
2022. 5. 24. 오후 12:42, 유용태 (teo.yu) : https://dev.to/northwillov/react-vs-svelte-25e6
2022. 5. 24. 오후 1:07, 호호 부는 튜브 : 태오님도 스벨트 사용하시나용?
2022. 5. 24. 오후 1:08, 유용태 (teo.yu) : 네!! 그럼요 :)
2022. 5. 24. 오후 1:08, 유용태 (teo.yu) : 스벨트만세!!
2022. 5. 24. 오후 1:10, 호호 부는 튜브 : 앗ㅋㅋㅋㅋ 혹시 팀에서도 사용중이실까요 ?!
2022. 5. 24. 오후 1:14, 유용태 (teo.yu) : 네! 전부는 아니구요 제가 한 프로젝트는 스벨트로 했구요 다른 것들은 리액트로 되어 있어요
2022. 5. 24. 오후 1:18, 부끄러운 어피치 : 넘 멋져요
2022. 5. 24. 오후 1:22, 좌절하는 프론트 : 이모티콘 무엇 ㅋㅋㅋㅋ
2022. 5. 24. 오후 1:22, 자란다 Recruiter : :) 마케터 방에서 추천을 받은.... :)
2022. 5. 24. 오후 1:23, 좌절하는 프론트 : 그럼 어디..지원해볼까
2022. 5. 24. 오후 1:23, 자란다 Recruiter : 이모티콘
2022. 5. 24. 오후 1:28, 좌절하는 프론트 : complete
2022. 5. 24. 오후 1:32, 좌절하는 프론트 : 스벨트야 빨리 무럭무럭 크자
2022. 5. 24. 오후 1:34, 썰cho : 스벨트에 관한 의견중에 스벨트는 게임 체인저가 아니라
2022. 5. 24. 오후 1:34, 썰cho : 크기 힘들다는 말도 있던데
2022. 5. 24. 오후 1:34, 썰cho : 다들 어떻게 생각하시나요
2022. 5. 24. 오후 1:35, 썰cho : 리액트가 크게된건 앵귤러1에서 앵귤러2로 넘어가면서 거의 새로운 프레임워크가 되어서 후발주자인 리액트가 뜨게되었고 그런 사건이 없는 이상 다른 프레임워크나 라이브러리로 넘어가긴 힘들다라고 어제 들어서요
2022. 5. 24. 오후 1:36, Vintz : 저도 동의해요 리액트도 잘해주고 있다고 생각을해서 큰 사건이 있지않는 이상 움직이기 힘들 것 같아요.
2022. 5. 24. 오후 1:36, 유용태 (teo.yu) : 라이브러리가 아니라 컴파일러라는 방식은 충분히 넥스트제네레이션으로 봤는데요
2022. 5. 24. 오후 1:36, 델 : 게임 체인저가 아니란 건 동의하지 못하지만 리액트보다 커지지는 않을거 같다고 생각해요
2022. 5. 24. 오후 1:36, 좌절하는 프론트 : 저는 게임 체인저라 생각을해요
이유는 UI 라이브러리가 없던 시절에 JS 를 쓰던 느낌을 주기도 하고(디자인패턴이던 좀 더 코드에 녹일 여지가 많음), VDOM 이 만능도 아니고 표준(?)도 아닌걸로 알고있습니다.
+ 그리고 리액트 프로젝트도 커지면 컴포넌트 코드들 관리가 어려워지는데, 스벨트는 상대적으로 코드베이스가 적으니 개발자분들이 좋은걸 찾다보면 자동으로 넘어오지 않을까요?!
2022. 5. 24. 오후 1:37, Vintz : 스벨트를 사용해보신 분들은 정말 개발자 경험이 좋으셨나보군요!
2022. 5. 24. 오후 1:37, 좌절하는 프론트 : 아쉬운부분은 아직 뒷배가 든든하지 않은것뿐..
2022. 5. 24. 오후 1:38, 좌절하는 프론트 : 페이스북 성님 VS  Rich Harris
2022. 5. 24. 오후 1:38, 좌절하는 프론트 : 언제부터 기술들이 이렇게 커뮤니티랑 스폰서 파워가 세진건지 아쉽쓰 ㅠㅠ
2022. 5. 24. 오후 1:39, 델 : 항상 기술 뒤엔 커뮤니티랑 스폰서 파워가 있었던 거 같긴 합니다..ㅋㅋㅋ
2022. 5. 24. 오후 1:39, 썰cho : 그렇긴 하죠 애초에 앵귤러는 구글꺼였고
2022. 5. 24. 오후 1:40, 썰cho : 리액트는 페북꺼였어서
2022. 5. 24. 오후 1:40, 유용태 (teo.yu) : 인정합니다 결국 프레임워크만 좋아서아 아니라 IDE 지원도 필요하고
2022. 5. 24. 오후 1:40, 유용태 (teo.yu) : 서드파티 라이브러리도 필요하고 (근데 스벨트는 이제 꿀리진 않는다고 생각합니다)
2022. 5. 24. 오후 1:40, 좌절하는 프론트 : 힘내라 스벨트
2022. 5. 24. 오후 1:40, 좌절하는 프론트 : 힘내라 롤업
2022. 5. 24. 오후 1:40, 유용태 (teo.yu) : 스택 오버 플로우에 물어봤을때 답을 찾기 어렵다 정도의 문제인데
2022. 5. 24. 오후 1:40, 좌절하는 프론트 : 힘내라 스벨트 관련 서드파티들아!
2022. 5. 24. 오후 1:41, 유용태 (teo.yu) : 스벨트가 더 쉬운데 오히려 잘 하는 개발자여야 할 수 있다는 사실?!
2022. 5. 24. 오후 1:41, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 24. 오후 1:41, 유용태 (teo.yu) : 저희 회사에서 근데 스벨트 모르고 리액트만 하신분들도 그냥 3일정도 공부하면 바로 쓰시더라구요 ㅎ
2022. 5. 24. 오후 1:42, 좌절하는 프론트 : 러닝커브는 뷰를 메인으로 했던 저도 인정합니다 ㅋㅋ
2022. 5. 24. 오후 1:42, 좌절하는 프론트 : 뷰보다 더 쉽네?
2022. 5. 24. 오후 1:42, 대장 : ㄷㄷ
2022. 5. 24. 오후 1:42, 좌절하는 프론트 : 코드는 뷰랑 리액트보다 적네..?
2022. 5. 24. 오후 1:42, 좌절하는 프론트 : 근데 레퍼런스 함정이 있네..?
2022. 5. 24. 오후 1:42, 대장 : 가상돔 아니여서 속도도 더 빠르지않나요 ?
2022. 5. 24. 오후 1:42, 유용태 (teo.yu) : 맞아요
2022. 5. 24. 오후 1:42, 델 : 번들도 더 작죠
2022. 5. 24. 오후 1:42, 유용태 (teo.yu) : 코드도 깔끔하고 ㅎ
2022. 5. 24. 오후 1:42, 썰cho : 저희가 주스탄드를 쓰려다가 다시 리코일을 쓰게 된 원인이 레퍼런스가 없어서인거도 있는데 ㅠㅠ
2022. 5. 24. 오후 1:42, 좌절하는 프론트 : 맞아요 애초에 컴파일단계에서 최적화를 해줘서 
2022. 5. 24. 오후 1:43, 대장 : 안 쓸 이유가 ,,,,
2022. 5. 24. 오후 1:43, 대장 : ㅋㅋㅋㅋ
2022. 5. 24. 오후 1:43, 썰cho : 그런 이유...
2022. 5. 24. 오후 1:43, 좌절하는 프론트 : 아아
2022. 5. 24. 오후 1:43, 대장 : 지금 리액트 상황이 옛날 제이쿼리 상황 아닌가요 ?
2022. 5. 24. 오후 1:43, 델 : 근데 개인적인 의견이지만 전 리액트가 좀더 개발하기 편했던 거 같아요
2022. 5. 24. 오후 1:43, 대장 : 너무 대중화 된 느낌
2022. 5. 24. 오후 1:43, 좌절하는 프론트 : 조타이도 괜찮은데
2022. 5. 24. 오후 1:43, 썰cho : 그쵸?
2022. 5. 24. 오후 1:43, 델 : 커뮤니티 사이즈 빼고 로직만 봐도
2022. 5. 24. 오후 1:43, 대장 : 스벨트가 리액트전국시대를 깨줬으면 하네요 ㅋㅋ
2022. 5. 24. 오후 1:44, 대장 : 앵귤러는 나가리 느낌이고 솔직히
2022. 5. 24. 오후 1:44, 썰cho : 근데 다른점은 제이쿼리를 대체할만한 충분한 것은 없었지만 리액트는 대체 가능한게 뷰 앵귤러 스벨트 있다는 점에서
2022. 5. 24. 오후 1:44, 썰cho : 좀 다른거같아요
2022. 5. 24. 오후 1:44, 좌절하는 프론트 : 앵귤러는 항상 통수를 조심해야..
2022. 5. 24. 오후 1:44, 대장 : 리액트, 뷰, 스벨트 이렇게 삼대장이 됐으면,,
2022. 5. 24. 오후 1:44, 썰cho : 어제 술마셨던 개발자가 그말하더라고요
2022. 5. 24. 오후 1:44, 썰cho : 그래서 플러터를 안한다고
2022. 5. 24. 오후 1:44, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 24. 오후 1:44, 썰cho : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 24. 오후 1:44, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 24. 오후 1:44, 썰cho : 진짜 그분 3년차때 앵귤러 1 밤새며 공부해서
2022. 5. 24. 오후 1:45, 썰cho : 했다는데 2로 넘어가면서 엄청난 배신감을 느꼈다고
2022. 5. 24. 오후 1:45, 좌절하는 프론트 : 2 버전에서 독주를 마셨겠네요...?
2022. 5. 24. 오후 1:45, 유용태 (teo.yu) : 회사가 커지고 효율을 추구하면서 프레임워크는 하나로 통일을 하기마련인데
2022. 5. 24. 오후 1:45, 썰cho : 그래서 리액트가 크게되었다고
2022. 5. 24. 오후 1:45, 좌절하는 프론트 : 그러다가 앵귤러 4 나오면서
2022. 5. 24. 오후 1:45, 좌절하는 프론트 : 결정타
2022. 5. 24. 오후 1:45, 유용태 (teo.yu) : 뷰나 스벨트로 통일하는거에 대한 리스크를 감내하기 힘든게 더 큰거 같아요
2022. 5. 24. 오후 1:46, 썰cho : 리액트는 개발자에 의해 좌우되는게 큰데 지금 누구나 리액트를 쓰는 추세라… 장점이 부각되지 않는다고 탐탁치 않아보이셨어요 어제 그분이 ㅋㅋ
2022. 5. 24. 오후 1:46, 대장 : 리액트는 ,,,,
2022. 5. 24. 오후 1:46, 썰cho : 뷰개발자이시긴 하지만 리액트의 고점은 높지만 고점까지 하는 개발자는 적다..
2022. 5. 24. 오후 1:46, 좌절하는 프론트 : 좋은 술자리였군요
2022. 5. 24. 오후 1:46, 대장 : 좀비,,,?
2022. 5. 24. 오후 1:46, 좌절하는 프론트 : 어제 디아2 레저렉션 샀는데
2022. 5. 24. 오후 1:46, 썰cho : 오히려 저점도 뷰보다 낮아서 뷰보다 못하게 개발하는 개발자들도 많다고 하시더라고요
2022. 5. 24. 오후 1:47, 좌절하는 프론트 : 차지딘 스킬 어케 찍는거였나요..
2022. 5. 24. 오후 1:47, 좌절하는 프론트 : 모르겠네 ~_~;;
2022. 5. 24. 오후 1:48: Sleepy Ryan님이 나갔습니다.
2022. 5. 24. 오후 2:21, 여의도개발 : 사진
2022. 5. 24. 오후 2:22, 여의도개발 : 아… rem 쓸때 이런 미세한 차이가 생기네요 ㅠ...ㅠ
2022. 5. 24. 오후 2:22, 여의도개발 : 24여야하는데 ㅋㅋ ㅠㅠ..
2022. 5. 24. 오후 2:22, 썰cho : 0.009px차이도 디자이너가 안된대요?
2022. 5. 24. 오후 2:23, 여의도개발 : 그건아니지만.. 뭔가 모르게 불편해져서요
2022. 5. 24. 오후 2:23, 여의도개발 : QA전이라 또 안된다할수도 ??
2022. 5. 24. 오후 2:23, 철진 : rem 영향으로 소수점이 생기나요…? 
24px이면 1.5rem으로 딱 안떨어지던가요??
2022. 5. 24. 오후 2:23, 여의도개발 : 안떨어지네요??
2022. 5. 24. 오후 2:24, 철진 : 난해하네요!! ㅠㅠ
2022. 5. 24. 오후 2:27, 여의도개발 : 어라 24px로 해도 24가 안되네요 
어디선가 잘못된거같네요 
혼선드려 죄송합니다 ㅡㅡㅋㅋ
2022. 5. 24. 오후 3:54, 소심한 네오 : 저 질문 있습니다! svg파일을 통합적으로 관리하고 컴포넌트화 하고, 호출 시에 인자값으로 보이는 파일을 다르게 하는 소스를 예전에 누가 만들어주셔서 사용한 적이 있는데요… 
2022. 5. 24. 오후 3:54, 소심한 네오 : 제가 제작을 해보려고 하니 소스가 안보여서ㅠ 검색중에 있는데 찾기가 힘들어서요ㅠㅠ
2022. 5. 24. 오후 3:54, 소심한 네오 : 혹시 명칭이나… 해당 기능 소스가 있는 레포지토리 공유해주실 수 있으신 분 계신가요? 
2022. 5. 24. 오후 3:56, 최민석 : 이거 path값이랑 다 따로 빼서 쓰시는거 말씀하시는거맞죵
2022. 5. 24. 오후 3:56, 최민석 : https://blog.toycrane.xyz/react%EC%97%90%EC%84%9C-icon-%EB%8B%A4%EB%A3%A8%EA%B8%B0-59b6d987d61f 이거 맞을까요
2022. 5. 24. 오후 4:04, 소심한 네오 : 엇 맞아요!! 
2022. 5. 24. 오후 4:04, 소심한 네오 : 감사합니다🥰
2022. 5. 24. 오후 4:36, 설아아빠 : 혹시 피그잼에서 마우스 커서 옆에 나오는 로그인 사용자 아이디나 포스트잇에 나오는 로그인 사용자의 아이디를 감출 수 있는 기능이 있을까요~?
2022. 5. 24. 오후 4:54, 유용태 (teo.yu) : 포스트잇 서명은 안보이게 할 수 있는데 (다시 켜면 보이긴 하지만) 아이디 감추는건 잘 모르겠어요
2022. 5. 24. 오후 4:57, 설아아빠 : 그렇군여.. 무기명으로 진행할 수 있는 방법이 없나 해서용.. ㅎ 
2022. 5. 24. 오후 4:57, 좌절하는 프론트 : stitches 스타일드 컴포넌트 추천해주신분
2022. 5. 24. 오후 4:57, 좌절하는 프론트 : 감사합니다 써보니까 괜찮다는 생각이 많아지네요
2022. 5. 24. 오후 4:58, 좌절하는 프론트 : 사진
2022. 5. 24. 오후 4:58, 좌절하는 프론트 : 베리언트라는걸 제공해줘서 직접 props 로 제어하는게 아니라서 보기좋은거같아요
2022. 5. 24. 오후 4:59, 좌절하는 프론트 : css 라는 특별한 속성을 또 제공해주니 스타일 오버라이딩도 쉽네요
2022. 5. 24. 오후 5:00, 호호 부는 튜브 : 혹시 보통 api가 500에러를 던져줄때 어떻게 처리하시나요? 
2022. 5. 24. 오후 5:02, 철진 : 저희는 error Toast만 보여주고 있어요.
2022. 5. 24. 오후 5:02, 좌절하는 프론트 : 저도 모달 또는 토스트
2022. 5. 24. 오후 5:20, 호호 부는 튜브 : 삭제된 메시지입니다. 
2022. 5. 24. 오후 5:21, 호호 부는 튜브 : 그러면 특정 api 500에러인지 전체적으로 서비스 장애가 났는지를 구분이 되야될 것 같은데 그 구분은 어떻게 해주시나요 ?
2022. 5. 24. 오후 5:21, 철진 : 저희는 500의 경우에도 errorMessage가 따로 있어서 이를 통해 구별할 수 있습니다. 
2022. 5. 24. 오후 5:32, 호호 부는 튜브 : 아하 errorMessage로 체크하시는군요
2022. 5. 24. 오후 5:33, 철진 : 넵 맞습니다! 
2022. 5. 24. 오후 5:33, 호호 부는 튜브 : 감사합니다 :) backend에 요청드려서 health check을 반환받는 api를 만들어야되나 고민했었네요 ㅋㅋ
2022. 5. 24. 오후 5:34, O_O : 혹시 이방에 채용 공고 올려도 괜찮은가요...?
따로 규칙이 있나요?
2022. 5. 24. 오후 6:25, 뮤츠 : 혹시 Vite 로 빌드한 프로젝트에서 html 태그 내부에 환경변수를 쓰려면 어떻게 하나요?? script 내부에서 사용되는 키를 숨기고 싶은데 vite 로 빌드해서 그런가 dotenv 도 안먹히고.. config파일에서 설정해주면 될것같기도한데 vite 홈페이지에서 설명만으론 이해가 잘안되서 어렵네요
2022. 5. 24. 오후 6:26, 초보개발자 : 혹시 해외에서 개발자로 일하고 계시거나 일해본 적 있으신 분 계실까요?
2022. 5. 24. 오후 6:29, 주니어 : vite가 정보가 많이 없죠ㅜㅜ
2022. 5. 24. 오후 6:39, 뮤츠 : vite 빨라서 좋긴한데 가끔 이런 사소한 부분에서 막히는 경우가 있네요
2022. 5. 24. 오후 6:49, 좌절하는 프론트 : 비테 ㅠ 저도 막히면
2022. 5. 24. 오후 6:49, 좌절하는 프론트 : 비테
깃헙 가서 이슈 등록하던가
2022. 5. 24. 오후 6:49, 좌절하는 프론트 : 비테랜드
디스코드가고그랬네요 ㅠ
2022. 5. 24. 오후 6:52, 뮤츠 : 으어 이거 찾다가 오늘하루날렸네여
2022. 5. 24. 오후 7:27, 강승진 : 지나가다 제가 했었던 기억이..
https://github.com/radix-ui/design-system/tree/master/components
컴포넌트 만들면서 어떻게 설계해야 할지 조금 막막할때가 있는데, 공식에서 제공하는 이쪽 레퍼런스로 참조하기 좋더라구요~
2022. 5. 24. 오후 7:36, 좌절하는 프론트 : 아앗 감사합니다
2022. 5. 24. 오후 10:22: 인사하는 제이지님이 들어왔습니다.
2022. 5. 24. 오후 10:22, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 24. 오후 10:22, 유용태 (teo.yu) : 안녕하세요 인사하는 제이지님~~ 반갑습니다 :)
2022. 5. 24. 오후 10:23, 인사하는 제이지 : 안녕하세요 :) 
2022. 5. 24. 오후 10:46, 초보개발자 : 전부터 계속 고민하던 건데 다른 분들의 의견을 듣고 싶어 여쭤봅니다 ..

혹시 React 애플리케이션을 개발하실 때 비즈니스 로직을 뷰 코드와 분리하시나요?
만약 분리하신다면 어떤 방식으로 분리하시나요 ??
2022. 5. 24. 오후 10:49, O_O : 커스텀훅으로 분리해요
2022. 5. 24. 오후 10:49, O_O : https://velog.io/@velopert/using-redux-in-2021#presentational--container-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%8A%94-%EC%9D%B4%EC%A0%9C-%EA%B7%B8%EB%A7%8C
2022. 5. 24. 오후 10:49, 델 : 전 따로 분리하지 않습니당
2022. 5. 24. 오후 10:51, 초보개발자 : 이렇게 되면 서비스 규모가 커질수록 파일이 방대해지지 않나요??
2022. 5. 24. 오후 10:51, 초보개발자 : 제가 듣기론 파일 한 개당 200줄 이상 넘어가는 걸 지양해야 한다고 알고 있었는데요 ..
2022. 5. 24. 오후 10:52, 초보개발자 : 이 부분도 고민을 했었는데, 혹시 데이터 가공 로직과 API Call 함수를 모두 커스텀 훅으로 선언하시나요?
2022. 5. 24. 오후 10:52, 델 : 음.. 저는 따로 파일이 방대해진다는 생각은 안해봤어요
2022. 5. 24. 오후 10:53, 델 : 파일이 너무 크다 싶으면 컴포넌트를 분리하거나 복잡한 로직을 유틸함수로 빼거나 그런 식으로 했어요!
2022. 5. 24. 오후 10:53, O_O : 훅 나누는 단위는 사실 잘 못 나누고 있는 것 같아요 ㅠ
제대로 나누려면 관심사별로 딱딱 분리를 잘 해야하는데...
2022. 5. 24. 오후 10:54, O_O : 이거 고민하는 시간에 당장 해야할 일을 쳐내는게 바빠서....
2022. 5. 24. 오후 10:55, O_O : Api Call은 리액트쿼리 훅으로 따로 관리하긴 해요
2022. 5. 24. 오후 10:55, 초보개발자 : 저라면 이렇게 되었을 때 코드가 일관성있게 짜기 힘들 것 같아요 ㅠㅠ

필요에 의해 컴포넌트나 유틸 함수로 분리하는 건 저도 시도해봤는데, 재사용성 행상이라는 목적에 어긋나기도 하고 그정도는 유연하게 넘어간다고 하더라도 애플리케이션 코드 전체에 대한 일관성이 좀 흐트러지지 않나… 싶기도 하더라구요
2022. 5. 24. 오후 10:55, O_O : 데이터 가공이나 이벤트 핸들러 같은건 컴포넌트 훅 따로 만들어서 거기서 관리하구요
2022. 5. 24. 오후 10:56, 델 : 사실 일관성이나 패턴에 대한 고민을 많이 하지 않는 편인 건 맞는 거 같아요
2022. 5. 24. 오후 10:56, 초보개발자 : 이 고민을 다시 하게 된 게 React Query를 도입하고자 해서 생긴 문제였는데..

제 나름대로는 비즈니스 로직을
Page - Service - Helper, 3 Layer로 분리했거든요
2022. 5. 24. 오후 10:57, 초보개발자 : Page는 리액트 컴포넌트이고, Service는 클래스, Helper 부분은 Api Call만을 담당하기 때문에 일반 함수로 작성했었는데
2022. 5. 24. 오후 10:58, O_O : 모노레포 공용 패키지에서 리액트 쿼리(API Call) 훅은 따로 관리

컴포넌트 폴더에는
tsx(뷰만 담당) + 스타일 파일(스타일드 컴포넌트) + 커스텀 훅(이벤트 핸들러나 데이터 가공, 상태 관리 등) 요렇게 관리하는 듯 해요.
2022. 5. 24. 오후 10:58, 초보개발자 : React Query의 useQuery가 Hook이라서 기존 구조에서는 Helper를 대신해서 도입하기가 불가능하더라구요
2022. 5. 24. 오후 10:59, 초보개발자 : React도 Express처럼 정해진 구조가 없고 자율성이 강한 느낌이라 답은 없겠지만 … 정해진 기준에 따라 코드를 분리하고 싶은 마음이 커서 구조 잡는 게 쉽지 않네요
2022. 5. 24. 오후 11:00, 델 : 질문주신 거랑 관계는 없지만 코드를 딱딱 레이어 나눠서 구현하실 때 개발 생산성이나 유지보수성에 유의미한 상승이 있으셨나요?
2022. 5. 24. 오후 11:02, 초보개발자 : 일단 개인적으로 파일이 커지는 것을 선호하지 않는 스타일이구요.
명확한 기준없이 주관적으로 코드를 분리하게 되면 그때그때 이건 어디에 넣지? 고민하게 되는 시간이나 다른 개발자분에게 구조나 코드를 설명할 때 답답하고 스스로도 이해하기 힘든 코드가 되는 것 같아서요
2022. 5. 24. 오후 11:03, 델 : 아하 넵넵 감사합니다!
2022. 5. 24. 오후 11:03, 철진 : 혹시 분리하실 때 모든 이벤트 로직이나 데이터 가공 로직 등을 커스텀 훅으로 분리하시나요?? 
2022. 5. 24. 오후 11:04, 초보개발자 : 저도 아키텍처나 클린 코드 등에 대하여 지식이 거의 없는 수준이지만..
실제로 그렇게 개발하다보면 유지보수 과정에서 리팩토링하기 힘든 수준까지 번지는 경우가 있어서
2022. 5. 24. 오후 11:05, 초보개발자 : 레퍼런스를 많이 찾아봐야겠어요 ㅠㅠ
2022. 5. 24. 오후 11:05, O_O : 저는 일단은....그렇게 하는데 이건 팀원들 자유에 맡겨서 하고 있어요. 근데 나누면서도 하나 수정할 때 여러 파일은 건드려야 하니 이게 맞나 싶긴하네요 요즘 ㅠ
2022. 5. 24. 오후 11:06, 델 : 저는 아주 빡빡한 규칙은 아니지만 대체로 하나의 컴포넌트를 구성할 때

- 컴포넌트.tsx
- 컴포넌트.queries.ts (useQuery & useMutation)
- 컴포넌트.styles.ts (스타일 파일)
- 컴포넌트.constants.ts (상수값이 많다면?)

이런 식으로 하는 거 같아요!
2022. 5. 24. 오후 11:07, 델 : 위에 분리 안한다고 말했는데 다시 생각해보니 분리를 하고 있었군요 😅
2022. 5. 24. 오후 11:07, 철진 : 커스텀 훅으로 다 빼는 경우에 로직 흐름을 보기 위해 여러 파일을 봐야하는 경우도 생기는 것 같아 고민이 되긴 하더라구요. 자주 쓰는 로직은 최대한 커스텀 훅으로 분리하고는 있지만 이벤트 핸들러 등이 애매한 것 같아요...🥹
2022. 5. 24. 오후 11:08, 초보개발자 : ㅋㅋㅋㅋ 좋은 예시 감사합니다 !
MBTI 중 J적 성향이 강해서,, 명확한 기준, 계획 없이 코드 짜는 게 답답하네요..
다른 분들 얘기 들어보면 제 스스로가 너무 코드를 빡빡하게 짜려고 하지 않나,, 라는 생각도 하게 되네요
2022. 5. 24. 오후 11:12, 철진 : 초보개발자님 덕분에 많은 생각 가지고 갑니다. 코드에 대해 많이 고민하시는 부분 좋은 것 같아요!!👍
2022. 5. 24. 오후 11:12, A대 4-1(진) : type설정이랑 util 정리는 컴포넌트.tsx에서 하시나요 ?
2022. 5. 24. 오후 11:14, 델 : 타입은 너무 길어지면 .types.ts 로 따로 분리하고.. util은 src/utils/ 에 두는 편이에요
2022. 5. 24. 오후 11:16, O_O : 그러고보니, 예전에 이방에서 디렉토리구조 뭐 한다고 하시지 않았나요..? 이미 끝났나요?!
2022. 5. 24. 오후 11:16, A대 4-1(진) : 해당 컴포넌트에서 필요한 로직같은거는 컴포넌트.tsx에서 관리하시나여 ?? 
2022. 5. 24. 오후 11:16, A대 4-1(진) : 답변감사드려여 ! 많이 배웁니다 파이버님 ㅎㅎ
2022. 5. 24. 오후 11:17, 이영광 : 혹시 ENFP 있으신가요..
2022. 5. 24. 오후 11:19, 웹린이 : 코드를 어디까지 나눠야 하나가 진짜 늘 고민인 것 같아요 ㅎㅎ
2022. 5. 24. 오후 11:20, 웹린이 : https://youtu.be/edWbHp_k_9Y 
최근에 본 영상중에 생각 정리하는데 도움이 많이 되었던 영상입니다.
2022. 5. 24. 오후 11:21, 웹린이 : 제 나름 요약하면 맥락을 해치지 않는 선에서 분리하자! 정도인 것 같아요 ㅎㅎ
2022. 5. 24. 오후 11:21, 웹린이 : 근데 생각은 이렇게 해도 막상 하려고 하면 잘 안되더라구요 ㅋㅋㅋㅋ
2022. 5. 24. 오후 11:21, 델 : 대체로 그렇게는 하는데 너무 세세하게 정해놓고 나누진 않아요 ㅎ
2022. 5. 24. 오후 11:22, 철진 : 저 영상 여러번 봤는데 맥락을 해치지 않는 선에서 분리가 정말 어려운 것 같아요 ㅎㅎ🥹
2022. 5. 24. 오후 11:22, 웹린이 : 맞아요 어짜피 코드 추가하다보면 달라질 수 있어서
2022. 5. 24. 오후 11:23, 웹린이 : 영상에서 인상 깊었던 말 중 하나가 '그때는 맞고, 지금은 틀리다' 였던 것 같아요!
2022. 5. 24. 오후 11:23, 웹린이 : 정확한지는 가물가물한데 대충 이런 말이었어요 ㅋㅋㅋㅋ
2022. 5. 24. 오후 11:23, O_O : 맞아요..ㅎㅎ
2022. 5. 24. 오후 11:24, O_O : 작년에 저거 되게 인상적으로봤어요
2022. 5. 24. 오후 11:24, O_O : 그래서 막 완벽한 구조를 짜려고 너무 스트레스만 안 받으면 될 것같아요
2022. 5. 24. 오후 11:25, 철진 : 이 말도 정말 맞는 것 같아요. 팀내에서 룰만 잘 정하면서 가면!!👍
2022. 5. 24. 오후 11:25, A대 4-1(진) : 흐 ㅜㅜ 어렵네요.. 저는 항상 컴포넌트 => 커스텀훅 => 유틸 => 유틸
로 넘어가서 .. 뎁스가 깊어지면 햇갈릴수 있다는 얘길들어서 너무 어렵네요
2022. 5. 24. 오후 11:28, 초보개발자 : 혹시 방금 전 아키텍처에 대한 얘기 하셨던 분들,,

오랜만에 벨로그 소재로 제가 고민했던 내용 쓰면서 해당 카톡방 캡처 사진을 첨부하려고 하는데, 혹시 불편하시거나 원치 않으시는 분 계실까요 ??
있으시다면 편하게 말씀해주세요 !
2022. 5. 24. 오후 11:29, O_O : 전 괜찮습니다!
2022. 5. 24. 오후 11:29, 철진 : 전 질문만 했어서! 상관 없습니다!
2022. 5. 24. 오후 11:30, 초보개발자 : 아 네넵 감사합니다 !

열심히 글 써보겠습니다 ㅎㅎ,,
2022. 5. 24. 오후 11:33, 철진 : 쓰고 올려주시몀 잘 읽어보겠습니다!!

2022년 5월 25일 수요일
2022. 5. 25. 오전 2:23: 예비개발자님이 들어왔습니다.
2022. 5. 25. 오전 2:23, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오전 7:51, 초보개발자 : 어제 잠깐 얘기했던 로직 분리에 대하여 제가 그동안 고민했었던 장단점을 좀 더 논리적?으로 풀어 쓴 글입니다
글 솜씨도 부족하고 말 그대로 “초보 개발자”이므로 가볍게 봐주셨으면 좋겠습니다 ㅎㅎ…

피드백과 의견 공유는 언제든지 감사합니다

https://velog.io/@sonwanseo/React-디자인-패턴에-대한-고민
2022. 5. 25. 오전 7:53, 썰cho : 저도 어떻게 나눠야될지 고민을 많이했는데 이방법 나쁘지 않아보이네요!!
2022. 5. 25. 오전 8:23, 유용태 (teo.yu) : 개발자의 고민이 오롯이 느껴지는 공감이 많이 되는 글이네요. 감사합니다 저도 Best 구조를 찾기 위해서 참 고민을 많이 하고 있어요 ㅎ 저희가 스프린트 이전에 했었던 천하제일폴더구조경진대회와도 맞닿아 있다고 생각합니다ㅋ
2022. 5. 25. 오전 8:25, 유용태 (teo.yu) : 저요!
2022. 5. 25. 오전 8:25, 유용태 (teo.yu) : 예비개발자님~~ 반갑습니다 어서오세요 ㅎ
2022. 5. 25. 오전 8:30, 초보개발자 : 프론트엔드는 특히나 계속해서 변화하고 있고 계속해서 새로운 트렌드가 나오다보니 폴더 구조가 정형화되기 쉽지 않은 것 같습니다.
글에는 다른 패턴들에 대한 주관적인 장단점을 서술했지만, 결국 협업하는 팀원 모두가 동의하는 구조를 사용하는 게 제일 중요한 것 같아요 !

천하제일폴더구조경진대회 ㅋㅋㅋㅋ
혹시 대회 결과에 대한 글이 있나요? 한 번 보고 싶습니다 ㅎㅎ
2022. 5. 25. 오전 8:36, 유용태 (teo.yu) : 아쉽게도 흔적만 있을뿐 글로 작성되지는 못했습니다~ 그때 느꼈던것은 일단 많은 이름과 세분화할 수 있는 이름(!)을 많이 가지고 있다는 것이 구조를 잘 만드는데 많이 도움이 된다는 거였어요
2022. 5. 25. 오전 8:45: 나크샤님이 들어왔습니다.
2022. 5. 25. 오전 8:45, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오전 8:46, 유용태 (teo.yu) : 안녕하세요 나크샤님~~ 반갑습니다 :)
2022. 5. 25. 오전 8:46, 나크샤 : 안녕하세요
2022. 5. 25. 오전 8:46, 유용태 (teo.yu) : https://www.figma.com/file/RgVhoFmYevEM4RgbOGnYo6/
2022. 5. 25. 오전 8:47, 유용태 (teo.yu) : 어서오세요~ 여기는 프론트엔드에 대해 궁금한것들을 묻고 답하고 좋은 자료나 생각들을 공유해보고자 하는 공간입니다. ㅎ 편하게 글 남겨주세요. ㅎ
2022. 5. 25. 오전 8:48, Kani : 좋은 아침입니다~
2022. 5. 25. 오전 8:49: seed님이 들어왔습니다.
2022. 5. 25. 오전 8:49, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오전 8:49, 유용태 (teo.yu) : 안녕하세요~~~ seed님~~ 어서오세요. ㅎ
2022. 5. 25. 오전 8:49, seed : 안녕하세요!
2022. 5. 25. 오전 8:51, 유용태 (teo.yu) : 어서오세요. ㅎ 여기는 프론트엔드 하면서 다른 개발자들은 어떻게 생각할지 궁금할때 같이 얘기를 나눠보고 또 함께 성장해보고자 하는 공간입니다. 편하게 궁금한 것들 글 남겨 주세요.~
2022. 5. 25. 오전 8:51, 자란다 Recruiter : 이모티콘 전 오늘 재택이라 출근은 안하지만.. !! 
다들 사무실 이든, 집으로든 출근 잘하길 바라겠습니다!! 
2022. 5. 25. 오전 9:01, 멋쩍은 튜브 : 쪼아~!
2022. 5. 25. 오전 9:03, 좌절하는 프론트 : 오늘은 출근날 ㅠ
2022. 5. 25. 오전 9:04, Kani : 저도 ㅠ
2022. 5. 25. 오전 9:04, 음악듣는 어피치 : 다들 재택/오프출근 어떻게 하고 계세요? 점점 오프출근 하는 추세인가요?
2022. 5. 25. 오전 9:05, Kani : 저희는 완전 자율이라
2022. 5. 25. 오전 9:05, Kani : 아직도 풀 재택 하시는 분 많아용
2022. 5. 25. 오전 9:06, 론트리니 : 저도 풀재택이요~ 
2022. 5. 25. 오전 9:06, Kani : 코로나 상관없이 그냥 쭉 재택기조 유지하더라구요
2022. 5. 25. 오전 9:08, 나그네 : 갑자기 오프출근 강제하면 개발자들이 엄청 이탈할 조짐이 보여서 대부분의 회사가 재택에 대해 열어두는 방향이더라고요
2022. 5. 25. 오전 9:10, 주니어 : 저희회사는 재택이어도 회의때문에 출근들 하셔요🥲
2022. 5. 25. 오전 9:11, fefe : 개발자분들은 갑자기 출근하라고하면 반발 심할듯,ㅎㅎ 
2022. 5. 25. 오전 9:36, 유용태 (teo.yu) : 저희는 출근을 해도 회의는 온라인에서. ㅋㅋㅋ
2022. 5. 25. 오전 9:36, 소심한 네오 : 재택이 전혀 없고 
2022. 5. 25. 오전 9:36, 소심한 네오 : 시간도 정해져 있는.. 회사아…
2022. 5. 25. 오전 9:36, 소심한 네오 : 이모티콘 
2022. 5. 25. 오전 9:36, 소심한 네오 : 부럽네요 다들ㅠㅠ 
2022. 5. 25. 오전 9:37, 유용태 (teo.yu) : 저희도 아직은 자율인데 그래도 하이브리드 형태의 기조로 권고나 기조는 만들고자 하는것 같아요 자율을 기반으로 하되 완전 전면 재택까지 장려하는 것은 아니다 이정도 느낌?
2022. 5. 25. 오전 9:37, gahui : 저도에요 ㅠㅠ
2022. 5. 25. 오전 9:37, fefe : 재택하는곳, 출근하는곳이 좋다 나쁘다는 할수없지만.. 좋은 회사는 재택하는곳이 많은게 현실인 것 같네요! ㅎ
2022. 5. 25. 오전 9:37, gahui : 같은 연차의 제 친구는 회사가 완전 재택이라 처음엔 좋아했지만... 지금은 너무 힘들어해요.. 
2022. 5. 25. 오전 9:38, gahui : 주니어들한테는 독이 될수도 있겠다 생각했네요
2022. 5. 25. 오전 9:38, fefe : 개인적인 생각으로는 주1회 출근정도가 적당한 것 같네요 
2022. 5. 25. 오전 9:38, 철진 : 유연이지만… 재택은 대표가 싫어하는 분위기라서 쭈욱 출근중입니다 ㅠㅠ
2022. 5. 25. 오전 9:41, 프론돌이 : 재택, 출근, 둘다 장단점이 있다고 생각해요. 
특히 이직 막 하시는 분들 온보딩 입장에선 재택은 죽을맛일듯 ㅜ
2022. 5. 25. 오전 9:41, 프론돌이 : 확실히 적응이 더 오래 걸리시더라구요
2022. 5. 25. 오전 9:42, 철진 : 맞는 것 같아요. 저는 부트캠프 다니던 시절에 기업에 협업을 나갔는데, 거의 재택인 곳으로 가신 분들은 어려워하시긴 하더라구요. 회사에 사람이 없어서…! 
2022. 5. 25. 오전 9:42, 유용태 (teo.yu) : 맞아요. 특히 최근 딱 몇개월전에는 심했죠 강제였기 때문에
2022. 5. 25. 오전 9:55, 사수가없어요 : 경력 쌓을때
1. 리액트 쓰는 회사
2. 뷰 쓰는 회사
3. 둘다 가리지 않고 쓰는 회사

어느게 더 낫나요?
2022. 5. 25. 오전 9:56, 프론돌이 : 이것만 가지고는 판단하기가 매우 애매할듯...?
2022. 5. 25. 오전 9:56, 좌절하는 프론트 : 리액
2022. 5. 25. 오전 9:56, 사수가없어요 : 이제 가서 막 배우고 만드는 단계입니다
2022. 5. 25. 오전 9:56, 사수가없어요 : 1로 갈 예정인데..
2022. 5. 25. 오전 9:56, 사수가없어요 : 현 회사는 2에요
2022. 5. 25. 오전 9:56, 좌절하는 프론트 : 뤼액
2022. 5. 25. 오전 9:57, Vintz : ㅋㅋㅋㅋㅋ 확고하시네요!
2022. 5. 25. 오전 9:57, 좌절하는 프론트 : 하지만 전 메인스택 뷰에욬ㅋㅋㅋ
2022. 5. 25. 오전 9:57, 사수가없어요 : 가고싶은 회사들이 대체적으로 1인 거 같아서..
2022. 5. 25. 오전 9:57, Vintz : 이럴수갘ㅋㅋㅋㅋㅋㅋ
2022. 5. 25. 오전 9:57, 사수가없어요 : 둘다 어렵지만요 ㅠ
2022. 5. 25. 오전 9:57, 좌절하는 프론트 : 이직 쉽지않아요 ㅋㅋㅋ
2022. 5. 25. 오전 9:57, 사수가없어요 : 네 저연차일때는 이직이 싑지 않네요..
2022. 5. 25. 오전 9:58, Vintz : 비슷한 환경이라고 했을 때는 확실히 저도 1이..
2022. 5. 25. 오전 9:58, 사수가없어요 : 아무래도.. 그렇겠죠? ㅠㅜ 둘다 잘하면 좋을텐데
2022. 5. 25. 오전 9:58, 사수가없어요 : 3인 회사가 베스트인데 아직 그정도 레벨이 안되네요 ㅠㅠ
2022. 5. 25. 오전 9:59, 좌절하는 프론트 : 뷰 하는 회사 
해빗팩토리
강남언니
백패커
노리
2022. 5. 25. 오전 9:59, 좌절하는 프론트 : 그외는 리액
2022. 5. 25. 오전 9:59, Vintz : 강남언니가 뷰를 쓰는군요!
2022. 5. 25. 오전 10:00, 좌절하는 프론트 : 워니님도 여기 계시지만 화상으로 뵈었을때 아리따운분이셨지요
2022. 5. 25. 오전 10:00, 좌절하는 프론트 : 뜨합 흐앵
2022. 5. 25. 오전 10:00, 사수가없어요 : 뱅샐은 리액트쓸까요?
2022. 5. 25. 오전 10:01, 좌절하는 프론트 : 아 뱅샐도 뷰었던걸로 ?
2022. 5. 25. 오전 10:01, 좌절하는 프론트 : 지금은 모르겠네요
2022. 5. 25. 오전 10:02, 사수가없어요 : 뭐 어디가든 어차피 알아야하는건 마찬가지겠네요
2022. 5. 25. 오전 10:04, 좌절하는 프론트 : 플리즈 리앸
2022. 5. 25. 오전 10:04, 좌절하는 프론트 : 리앸을 하셔야 살아남으십니닷
2022. 5. 25. 오전 10:05, 이프노즈 : 하… 선거유세때문에 너무 스트레스 받네요 ㅜㅜ
2022. 5. 25. 오전 10:07, 카타나 : 소리엄청커요 ㅠㅠ
2022. 5. 25. 오전 10:07, Kani : ㅠㅠ
2022. 5. 25. 오전 10:25, 썰cho : 내가 원하는 회사가 쓰는 스택을 쓰는 회사..
2022. 5. 25. 오전 10:33, 손을 번쩍 든 무지 : 어떤기술을 쓰느냐보단 어떻게 쓰고있느냐가 중요할 것 같네요,,ㅋㅋ
2022. 5. 25. 오전 10:34, 웹린이 : 기술은 프로젝트 바이 프로젝트일 것 같아요ㅎㅎ
2022. 5. 25. 오전 10:36, 델 : 시장이 워낙 리액트가 강세다 보니 진짜 저거만 놓고 보라고 한다면 리액트긴 한데 더 중요한 다른 요소들이 많을 거 같아요!
2022. 5. 25. 오전 10:41, Vintz : 맞아요 기술 외에도 워낙 다른 요소들이 많으니까요! 저는 제가 안쓰는 기술 쓴다해도 다른 요소들이 월등히 높다면 그곳을 선택할 것 같아요
2022. 5. 25. 오전 10:45: InteractiveMedia님이 들어왔습니다.
2022. 5. 25. 오전 10:45, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오전 10:49, O_O : https://toss.im/slash-22
프론트 주제도 좋은게 많네요!
2022. 5. 25. 오전 10:49, 유용태 (teo.yu) : InteractiveMedia님 반갑습니다 :)
2022. 5. 25. 오전 10:53, InteractiveMedia : 안녕하세요 velog 보고 들어왔습니다. 잘 부탁드립니다 😊
2022. 5. 25. 오전 11:00, somedaycode : 안녕하세요
현재 웹팩 번들 이후에 analyzer로 살펴본 결과 core-js가 root/node_module에 한개, @vue/babel.../node_module에 한개 더.
이렇게 서로 다른버전으로 존재하고 있습니다

https://github.com/zloirock/core-js/issues/522

해당 이슈와 문제가 비슷한데.. 답변에서 웹팩으로 mapping(?)을 하면 된다고 하던데
웹팩에서 mapping을 한다는게 정확히 어떻게 하는건지 잘 모르겠어서.. 아시는 분 있으실까요??
2022. 5. 25. 오전 11:17, 여의도개발 : 상관없다.. 
2022. 5. 25. 오전 11:17, 여의도개발 : 굳이 선택하자면 1번
2022. 5. 25. 오후 12:19: 홍다예님이 들어왔습니다.
2022. 5. 25. 오후 12:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오후 12:46, 헬렌 : 타입스크립트로 된 다른 레포를 보면서 언어 사용방식을 익히고 싶은데 어떻게 보면 좋을까요? 지금 찾아보니까 react-router v6가 타입스크립트로 되어있더라고요!!! fork해서 구조를 보면 좋을까요?

https://github.com/remix-run/react-router


2022. 5. 25. 오후 1:04, 유용태 (teo.yu) : 네 환영합니다~ 언젠든 편하게 글 남겨주세요. 궁금한거나 관심있는 주제 올려주시면 많이 답변도 남길게요 ㅎ
2022. 5. 25. 오후 1:04, 유용태 (teo.yu) : 안녕하세요 홍다예님~~ 반갑습니다 :)
2022. 5. 25. 오후 1:06, 철진 : 예전에 만드신 것이긴 하지만 velog-client 같은 경우에 타입스크립트로 개발되어 있어서 이거 참고하셔도 좋을 것 같아요! 
2022. 5. 25. 오후 1:07, 헬렌 : 와우 너무 감사해요
2022. 5. 25. 오후 1:08, 헬렌 : 테오~~ 우리 레포 깃허브 트랜딩에 올라갔어요
2022. 5. 25. 오후 1:18, 유용태 (teo.yu) : 이모티콘 
2022. 5. 25. 오후 1:21, 좌절하는 프론트 : 점심회식
2022. 5. 25. 오후 1:21, 좌절하는 프론트 : 카페
2022. 5. 25. 오후 1:21, 좌절하는 프론트 : 이모티콘 
2022. 5. 25. 오후 1:57: 퇴근하는 프로도님이 들어왔습니다.
2022. 5. 25. 오후 1:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오후 2:18, 헬렌 : 벨로그가 벨로퍼트가 만든 거였다니
2022. 5. 25. 오후 2:18, 헬렌 : 너무 충격적이에요
2022. 5. 25. 오후 2:18, 헬렌 : 이제까지 누가 만든지도 모르고 썼다니...
2022. 5. 25. 오후 2:27, 철진 : 그러실 수 있죠!! ㅋㅋㅋ 
2022. 5. 25. 오후 2:34: 예비개발자님이 나갔습니다.
2022. 5. 25. 오후 2:36, 행돼 : 안녕하세요~ 프론트엔드 신입입니당!
이번주 월요일에 입사를 했는데, 회사 깃허브 주소를 주시고 api 파악하고 있으라고 말씀하셨는데 혹시 api 확인이라는게 코드 파악을 하라는 것일까요? 제가 아는 api는 restAPI 같은 crud 뿐이라 뭘 의미하는건지 잘 이해가 안가서요 ㅠㅠ (직접 무슨 의미인지 믈어보자니 대표님 이시고 이미 넵넵 해버려서 우선 선배님들께 물어봅니다...)
2022. 5. 25. 오후 2:37, 살려줘 네오 : Api명세 확인해서 해당api url이랑 req 시 res 어떻게 받는지 파악하라는거 아닐까요
2022. 5. 25. 오후 2:39, 행돼 : 헛 그렇군요 url 파악하고 res,req 부분 정리 해봐야겠습니다...ㅎㅎ 처음이라 이런것도 헷갈리네요ㅠ
2022. 5. 25. 오후 2:41, 행돼 : 조언해주셔서 감사합니닷 ㅜㅜ
2022. 5. 25. 오후 2:45, gahui : 안뇽하세요. 혹시, docking layout 직접 구현해보셨거나 무료로 사용할 수 있는 라이브러리 알고 계신분 있나요 ㅠㅠ
2022. 5. 25. 오후 2:45, gahui : https://www.htmlelements.com/vue/demos/docking-layout/overview/
2022. 5. 25. 오후 2:46, gahui : 예를 들면 이런 형식으로된 레이아웃을 말합니다..
2022. 5. 25. 오후 3:25, 유용태 (teo.yu) : application programming interface니까 그냥 함수 인풋 아웃풋들도 api라서 코드 적응하라는 의미로 얘기한듯 하고 api라는 키워드에 큰 의미를 둔것 같지는 않아요~
2022. 5. 25. 오후 3:29, 행돼 : 앗 그렇군요... 그럼 무지님 말씀대로 req,res 정리하면서 천천히 전체 코드 파악을 하고있어야겠습니다 감사합니다!
2022. 5. 25. 오후 3:45, O_O : 더 대단한건 만드는 과정을 매일밤 유튜브로 방송하셨어요...
2022. 5. 25. 오후 3:45, 헬렌 : ….!
2022. 5. 25. 오후 3:45, 헬렌 : 미쳤네요
2022. 5. 25. 오후 3:46: 프린이님이 들어왔습니다.
2022. 5. 25. 오후 3:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오후 3:46, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 5. 25. 오후 3:47, 유용태 (teo.yu) : 안녕하세요~ 프린이님~~ 반갑습니다 ;)
2022. 5. 25. 오후 3:47, 프린이 : 안녕하세요 반갑습니다 :)
2022. 5. 25. 오후 3:48, 유용태 (teo.yu) : 어서오세요 ㅎㅎ 프론트엔드에게 궁금한것들 다른 개발자들은 어떻게들 하는지 궁금한 내용들 많이 많이 물어보시고 내가 아는 거다 싶으면 지체없이 답해보세요 호
2022. 5. 25. 오후 3:50, 좌절하는 프론트 : 안녕하세요
2022. 5. 25. 오후 4:17, InteractiveMedia : 안녕하세요 신입 프론트 개발자입니다. Typescript+MobX 프로젝트에서 class 상속과 interface를 상속해 쓰는 것의 장단점이 궁금한데 의견 여쭤봐도 될까요?
2022. 5. 25. 오후 4:18, A대 4-1(진) : interface는 중복 선언으로 확장이 가능하다고 알고있습니다!
2022. 5. 25. 오후 4:25, 인성(현파랑) : class 상속은 프로토타입 기반의 문법적 설탕이 가미되었을 뿐이므로 상속에 대한 제어 수단을 개발자가 직접 구현해야 합니다. 그렇지 않다면 OOP의 주요 원칙에 위배되는 상황을 많이 겪게 되고 앱이 커지면 그 문제를 해결해야만 합니다. 반면 interface는 구현을 해야하는 형태를 정의해 놓은 것이므로 컴파일 이전에 제어가 가능하고, 개발자가 유기적으로 확장할 수 있어요. 추상화를 잘 적용하여 객체 특성을 활용한다면 MobX로 처리해야하는 상태들이 아무리 많아져도 일관성을 가져갈 수 있습니다
2022. 5. 25. 오후 4:34, A대 4-1(진) : 삭제된 메시지입니다. 
2022. 5. 25. 오후 5:27, InteractiveMedia : 답변 감사합니다 찾아보니 MobX에서 subclassing이 제한적이기도 하네요

https://mobx.js.org/subclassing.html
2022. 5. 25. 오후 7:11: 안녕하세요님이 들어왔습니다.
2022. 5. 25. 오후 7:11, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 25. 오후 9:49, 유용태 (teo.yu) : 안녕하세요 안녕하세요님 반갑습니다 :)
2022. 5. 25. 오후 9:49, 유용태 (teo.yu) : https://www.inflearn.com/pages/midnight-fe-2205
2022. 5. 25. 오후 9:49, 유용태 (teo.yu) : 인프런에서 이런 행사를 하네요~ 관심이 있으면 한번 신청해보세요. ㅎ
2022. 5. 25. 오후 9:52, 시무룩한 튜브 : 오 너무 참여하고 싶네요 소식 감사해요
2022. 5. 25. 오후 9:58, 프엔공부중 : 오 저도 신청해봐야겠네요!
2022. 5. 25. 오후 9:58, Vintz : 신청 완료했습니다. ㅎㅎ 정보 공유 감사해요!
2022. 5. 25. 오후 9:58, 좌절하는 프론트 : 앗 뺘삐꼬님이 연사라니
2022. 5. 25. 오후 10:00, 주니어개발자 : 저도 신청했어요!! 좋은 정보 감사합니다🤩
2022. 5. 25. 오후 10:02, 좌절하는 프론트 : 좋은 정보 감사합니다 컴플릿
2022. 5. 25. 오후 10:06, 철진 : 신청했어요! 감사합니다
2022. 5. 25. 오후 10:51, 좌절하는 프론트 : 뭐여 빠삐꼬님 여기 계셨어요?ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 25. 오후 10:52, 좌절하는 프론트 : 저 옛날에 멘토링 했던 그녀석인데..기억하실라나..신청되면 만나러갑니다..후후후..
2022. 5. 25. 오후 11:17: 궁시렁 프로도님이 나갔습니다.
2022. 5. 25. 오후 11:34, O_O : 혹시 다른 회사에서는 기능 단위라도 전체 히스토리를 관리하는 통합기획서(?) 같은게 있나요..?
2022. 5. 25. 오후 11:36, 벙찐 튜브 : 개인프로젝트하는데 저는 만들어놓고 시작해요
2022. 5. 25. 오후 11:37, O_O : 저희 회사 서비스가 초창기라 요구사항이 생길 떄마다 기능 추가/수정 기획서를 따로 만들다보니 전체 히스토리를 아무도 모르는 문제가 생기고 있습니다...ㅠㅠ 
그래서 이걸 통합해서 관리해야 될 필요성을 느껴서 개선하려고 하는데
다른 회사에서는 어떤 식으로 기획서를 관리하고 있는지가 궁금합니다.
2022. 5. 25. 오후 11:39, 벙찐 튜브 : 취준생이다보니 고수님들 답변남겨주신다면 배우겠습니다
2022. 5. 25. 오후 11:49, 철진 : 저희 회사에서는 시트를 드라이브 통해서 한 기능의 경우에 버전별로 추적은 되도록 쌓아두고 있긴 한데, 전체 히스토리를 한 번에 파악하기는 어려운 실정이구요. 기획자들 사이에서도 개편의 의지는 있어서 고민중입니다! 

요약하면 시트(드라이브)를 통해서 기능 별로 버전 관리를 하고 있다 인 것 같아요! 
2022. 5. 25. 오후 11:51, O_O : 시트라는게, 구글드라이브의 스프레드시트에 PPT 기획서같은걸 버전별로 링크걸어놓는 방식인가요...?
2022. 5. 25. 오후 11:52, 유용태 (teo.yu) : 저희는 wiki를 통해서 관리하는데 만족스럽냐? 하면 그렇지는 않습니다 ㅠ
2022. 5. 25. 오후 11:54, 철진 : 슬프게도… 맞습니다 ㅠㅠ 
2022. 5. 25. 오후 11:56, 설아아빠 : 저도 궁금합니닷! 
2022. 5. 25. 오후 11:57, 신난 어피치 : 저도 궁금하네용
2022. 5. 25. 오후 11:58, 유용태 (teo.yu) : 1) wiki 혹은 피그마를 통해서 항상 최신화되고 디자인 - 기획 - 개발이 align이 되어 있는 문서를 유지하는 노력을 한다.

2) 기타 히스토리나 맥락의 경우에는 데일리 회의록 / 주간 회의록 / 월간 회의록등을 계속 남겨가면서 후임자가 컨텍스트를 이해할 수 있도록 한다.
2022. 5. 25. 오후 11:58, 유용태 (teo.yu) : 저희 회사는 이러한 기조로 관리를 하고 있습니다.
2022. 5. 25. 오후 11:59, 유용태 (teo.yu) : 기획의 버전 컨트롤이 크게 의미가 없더라구요.
2022. 5. 25. 오후 11:59, 유용태 (teo.yu) : 왜 이러한 결정을 했는지 그때 당시에 어떠한 분위기였는지 (어쩔 수 없었는지.. 단호한 결정이었는지... ) 이런것들이 결정에도 영향을 미치기에

2022년 5월 26일 목요일
2022. 5. 26. 오전 12:00, 유용태 (teo.yu) : 최대한 그때의 맥락을 생생하게 기록을 많이 하려고 하고 있어요
2022. 5. 26. 오전 12:02, O_O : 저희는 엄청 초반에는 큰 기능 단위로 기획서가 있고, 
여기에 기능이 추가/수정될 경우에는 버전별 히스토리를 남기도록 했는데...
어느 순간 맥이 끊겼거든요 ㅠㅠ

그 이후에는 작은 요구사항 단위로 그때그때 필요한 기획서만 나오고 이게 관리가 안되다보니,

나중에 되니까 특정 기능이 왜 만들어지고, 어떻게 동작하는게 맞는건지 찾아보려면 기획서를 한 3개는 찾아봐야 되더라구요 ㅠㅠ
2022. 5. 26. 오전 12:02, 유용태 (teo.yu) : 저희는 슬랙을 못 씁니다만 전해들은 바로는 슬랙에서 맥락을 쌓고 wiki를 연동해서 버전 업데이트를 전체 알림을 받고 최신화된 문서링크를 고정해두고 그런식으로 했을때 좋았는데 지금은 그러지 못해서 불편하다는 얘기는 들어봤어요. ㅎ
2022. 5. 26. 오전 12:02, 유용태 (teo.yu) : 공감합니다. ㅠㅠ
2022. 5. 26. 오전 12:02, 벙찐 튜브 : 호오..
2022. 5. 26. 오전 12:02, 델 : 전에 다니던 회사는 문서화를 깔끔하게 포기했지만 대부분의 소통을 구두가 아닌 슬랙으로 하다 보니 나중에 히스토리를 보기 되게 편했던 경험이 있어요
2022. 5. 26. 오전 12:03, O_O : 내일 회의 때 의제로 던지긴할건데.. 마땅한 대안이 안  떠오르네용..
2022. 5. 26. 오전 12:03, 유용태 (teo.yu) : 무슨 도구를 사용하건 간에.. 

1) 최신화된 문서를 기록하는 곳 
2) 맥락을 기록하는 곳 
3) 전체를 조망하는 곳 
4) 그리고 업데이트 알림을 받을 수 있는 장치
2022. 5. 26. 오전 12:03, 유용태 (teo.yu) : 5) 언제든지 최신 문서 링크가 있는 곳
2022. 5. 26. 오전 12:04, 철진 : 좋은 정리 같습니다!
2022. 5. 26. 오전 12:04, 유용태 (teo.yu) : 이러한 것들은 갖춰야 되는것 같아요. ㅎ
2022. 5. 26. 오전 12:04, 유용태 (teo.yu) : 주변 기회자들은 노션으로 해결해보고 싶어 하는데 의견이 분분하더라구요
2022. 5. 26. 오전 12:05, 유용태 (teo.yu) : 저는 이거다!! 한 경험은 없고 반면교사들만 있어서. ㅋㅋ 좋은 방법이 만들어지면 귀띔 좀 부탁드려요. ㅎㅎ
2022. 5. 26. 오전 12:05, O_O : 정리 감사합니다:)
2022. 5. 26. 오전 12:11, 부끄러워하는 라이언 : 기획이 있으시군요… 제가 요 몇일전에 그만둔 회사는 그냥 회의하고 피피티한장 이였는데… 나머지는 그냥 다 회의로…말로… 시리즈 b였는데…
2022. 5. 26. 오전 12:12, 유용태 (teo.yu) : ㅠㅠ
2022. 5. 26. 오전 12:12, 철진 : ㅜㅜ
2022. 5. 26. 오전 12:54, 실무뿌론트 : styled component와 같은 css in js방식에서
2022. 5. 26. 오전 12:55, 실무뿌론트 : 렌더링이 잦은 경우에 css in js 파일도 다시 렌더링되는건가요?
2022. 5. 26. 오전 12:55, 실무뿌론트 : 사진
2022. 5. 26. 오전 12:55, 실무뿌론트 : css module관련글을 찾아보니 이런내용은 처음접하는데 파일도 재렌더링에 포함된다고하니 좀 이상해서요
2022. 5. 26. 오전 12:57, 유용태 (teo.yu) : CSS in JS의 경우 추가된 style이 필요해서 클래스를 만들어야 하면 style 태그를 생성하는 것을 그렇게 표현하는것 같아요
2022. 5. 26. 오전 12:57, 유용태 (teo.yu) : style태그 생성 및 스타일 수정
2022. 5. 26. 오전 12:58, 실무뿌론트 : 용태님 말씀해주시니 정리되네요
2022. 5. 26. 오전 12:58, 유용태 (teo.yu) : 렌더링이라는 워딩을 정확히 정의없이 쓰고 있는데 여기서의 렌더링은 DOM을 이용해서 HTML, CSS를 그려내는 것을 의미합니다.
2022. 5. 26. 오전 12:58, 유용태 (teo.yu) : 그려내는(X) 만들어 내는
2022. 5. 26. 오전 12:59, 실무뿌론트 : 감사합니다 그리고 혹시 css module에서 제공하는 핵심적인 기능이 클래스이름을 고유후ㅏㄴ 값으로 자동으로 만들어주는걸로 알고있는데
2022. 5. 26. 오전 12:59, 실무뿌론트 : styled component에서도 클래스이름을 자동으로 생성하는것과 동일한 걸까요?
(이를 표현하는 이름이 마땅히 모르겠네요)
2022. 5. 26. 오전 1:00, 유용태 (teo.yu) : 조금 미묘하게 달라요. CSS Module의 경우 렌더링을 할때 클래스가 붙는 건 맞지만 한번 생성 이후 같은 값으로 출력이 됩니다.
2022. 5. 26. 오전 1:01, 유용태 (teo.yu) : css의 경우에도 기존 클래스와 해시된 키와 조립해서 다 생성하고 있구요
2022. 5. 26. 오전 1:02, 유용태 (teo.yu) : styledComponent의 경우에는 런타임에 React를 통해서 DOM을 만들어낼때 필요한 style과 class를 같이 만들어내고 이건 경우에 현재 스타일에 따라서 달라질수 있습니다.
2022. 5. 26. 오전 1:06, 실무뿌론트 : 오 이건 처음 알게되었네요 늦은시간에
정말 꿀같은 답변주셔서 감사합니다
2022. 5. 26. 오전 9:10, 여의도개발 : https://www.patterns.dev/
2022. 5. 26. 오전 9:12, 여의도개발 : 디자인패턴(HOC, Hook, Presentational, Render Props etc)
Renderaing Pattherns, Perfermance Pattern 정리집입니다.
2022. 5. 26. 오전 9:13, 꽐 : 좋은 자료 감사합니당
2022. 5. 26. 오전 9:31, 즐거운 네오 : 여러분들은 여러가지를 함께 공부하는 편이신가요 (월욜엔 a, 수욜엔 b, 주말엔 c...) 아니면 하나씩, 하나에만 집중해서 공부하시는 편이신가요?
2022. 5. 26. 오전 9:31, 썰cho : 목표를 위해 공부하는?
2022. 5. 26. 오전 9:32, 썰cho : 뭐를 만들어야 겠다 -> 필요한게 무엇이지?
2022. 5. 26. 오전 9:32, 썰cho : 리액트필요하면 리액트 공부
2022. 5. 26. 오전 9:32, 썰cho : 인증 필요하면 인증쪽공부 ->
2022. 5. 26. 오전 9:32, 썰cho : 이런식으로
2022. 5. 26. 오전 9:33, SI탈출하는상상하는프로도 : 저는 너무 목표를 크게 잡고 공부했다가 이도저도 안되는 것 같아서 하나에만 집중하기로 했어요ㅎㅎ 마음도 좀 편하고 전보다 더 집중할 수 있는것 같아서 좋은 것 같아요
2022. 5. 26. 오전 9:41, 하트어피치 : 공감해요… 마음이 편해야 학습능률이 좋은거같아요
2022. 5. 26. 오전 9:42, 하트어피치 : 과욕은 금물
2022. 5. 26. 오전 9:49, 여의도개발 : 저라면 골고루.. 골고루 할수밖에 없죠 ㅎㅎ
2022. 5. 26. 오전 9:49, 프엔이될테야 : 저도 골고루요..
2022. 5. 26. 오전 11:16, 유용태 (teo.yu) : 프레임워크별로 어떤식으로 코드가 다른지 알려주는 사이트 입니다.
https://component-party.dev/#reactivity
2022. 5. 26. 오전 11:18, 부끄러운 어피치 : 다른 라이브러리, 프레임워크 넘어갈때 좋은 자료가 될것같아요~ !
2022. 5. 26. 오전 11:54, fefe : 안녕하세요, 테오를 비롯하여 여기 계신 모든분들께 여쭤보고 싶은데요..! 현재 재직중인곳은 스타트업이고 개발팀은 10명정도 됩니다. 수익모델이 좀 미약한 것 같아서 전 직원 회의를통해 의무적으로 비즈니스모델을 위한 아이디어를 내라는 과제를 받아서 매일아침 회의를 하고있는데요, 사실 좋은 제품을 위해서는 같이 하는게 맞다고 생각하지만.. 개발만해도 바쁜데,, 그리고 규모가 큰 곳에서는 개발에 더 집중하게 만들어주는 환경을 만들어주기위해 노력한다고 하는데.. 좀 현타가와서 이런 경험들이 있으신지 궁금합니다.
2022. 5. 26. 오전 11:56, 유용태 (teo.yu) : 그렇군요... 반대로 비지니스에 관여를 하지 않고 기획에서 전달하는 것만 개발하고 스킬에만 집중하는것도 현타가 옵니다. 나가 그냥 개발해주는 도구 같은 느낌이 들게 하거든요
2022. 5. 26. 오전 11:56, 유용태 (teo.yu) : 바쁜거랑 회의의 밸런스를 회사가 되었던 개인이 되었던 잘 못맞추고 있는거 같아요
2022. 5. 26. 오전 11:57, 유용태 (teo.yu) : 회의의 결과가 개발로 이어지고 개발의 결과로 회의가 진행되어야 각자의 업무가 호용체감이 되는데
2022. 5. 26. 오전 11:57, 유용태 (teo.yu) : 회의따로 개발따로 마감따로 이렇게 되니까 그렇게 느끼는게 아닐까 싶네요
2022. 5. 26. 오전 11:57, 유용태 (teo.yu) : 비지니스 모델에 대한 아이디어 = 내 개발과 상관없음
2022. 5. 26. 오전 11:59, 퇴근하는 프로도 : 저도 그런 회사를 다니고 있는지라 공감이 되네요.
특징이 기획자가 없거나 PM 역할만 존재하고 내부적인 기획과 정책이 없어 디자인만 던져주고 개발하는 게 태반입니다.
잘되면 내탓, 안되면 니네탓 되기 십상이에요.
2022. 5. 26. 오전 11:59, fefe : 답변 감사드립니다. 
2022. 5. 26. 오전 11:59, fefe : 아직 아이디에이션 단계라 뭔가 현타가 더 온 것 같다는 생각도 많이드네요 
2022. 5. 26. 오후 12:00, 유용태 (teo.yu) : 개발자 입장에서는 뭘 만들지 논의하는것은 원래 즐거운 일인데 회의를 너무 기획이나 사업 입장에서 하고 있는게 아닌가 생각이 드네요
2022. 5. 26. 오후 12:00, 유용태 (teo.yu) : 전 직원 회의라고 하면 또 10명이 한자리에 모이는건가요?
2022. 5. 26. 오후 12:00, fefe : 아직 제역량이 부족한탓인지 사업 계획이 정해진 상태에서 기능구현에대한 회의나, 디자인 회의에 참여하고싶은데 신사업모델 구상부터 하려고하니 너무 힘이들더라구요
2022. 5. 26. 오후 12:01, fefe : 개발자, 기획자, 영업팀, 마케터 모두가 모여 회의를 진행하고있습니다
2022. 5. 26. 오후 12:02, 유용태 (teo.yu) : 같이 마음 맞는 사람들끼리 좀 나눠서 소규모로 수다 떨듯이 좀 할 수 있게 하고
2022. 5. 26. 오후 12:02, fefe : 저도 그런 경험이있어 공감이됩니다.
2022. 5. 26. 오후 12:02, 신입생 : 안녕하세요.
결례가 아니라면, 여기 계신 분들께 혹 공백기에 대해 어찌 생각들 하시는지 의견을 청해도 괜찮을까요?

작년 10월까지 b2b를 대상으로 하는 회사에서 c#, mysql을 사용하여 2년여 근무하다 퇴사하고, 명확히 미래에 대해 그리지 못한 채, 언리얼, 유니티 등을 해보며 5개월 정도를 방황하다시피 하였습니다.

또한, 지금은 어느 정도 고민 끝에 프엔으로 방향성을 잡고, js와 node.js에 익숙해지려 토이프로젝트를 제작하고 있으며, 학습을 시작한지는 3개월여 정도 되었습니다.

이 기간이 저에게 있어서는, 앞으로 살아가는데 필요할 수도 있었을 터닝 포인트라고 생각하지만서도, 
근 1년 가까이 공백기가 생기는 것 같아서, 이러한 지원자 혹은 지인이 있다면 어찌 생각하실지, 의견을 청하고자 합니다..
2022. 5. 26. 오후 12:02, 유용태 (teo.yu) : 사업팀 위주로 아젠다를 던져서 질문 리스트들을 각 팀에게 던질 수 있게 하고 재밌게 수다떨고 나온 내용들을 모아서 전달하는 식으로
2022. 5. 26. 오후 12:03, fefe : 불만을 토로하고싶은데, 비즈니스에 관심없고 애사심없고 더 나은 프로덕트를 만들기위한 노력을 안하는 사람으로 보일까봐 사실 얘기도 하기 힘든 것 같습니다
2022. 5. 26. 오후 12:03, 유용태 (teo.yu) : 회의를 위한 회의가 아닌 것처럼 문화를 세팅해보자고 한번 얘기해보세요
2022. 5. 26. 오후 12:04, 유용태 (teo.yu) : 리린이의 불만은 회의를 안하고 싶어가 아니라 더 잘하고 싶은데 지금의 방식이 괜찮은가에 대한 의문이 든다 정도로 얘기하면 그렇게 보이지는 않을것 같아요
2022. 5. 26. 오후 12:04, fefe : 좋은 말씀 감사드립니다. 이렇게하지않으면 업무가 하나 더 추가된 것 같은 부담감만 생길 것 같습니다. 
2022. 5. 26. 오후 12:04, 유용태 (teo.yu) : 맞아요~ 가벼운 회의가 되어야 된다고 생각합니다. 마음 편한 사람들끼리 얘기할 수 있도록 좀 쪼개달라고 해보세요.
2022. 5. 26. 오후 12:04, 유용태 (teo.yu) : '우리 회사가 어떤걸로 돈을 벌면 좋을까요?'
2022. 5. 26. 오후 12:05, fefe : 네. 답변 감사해요 
2022. 5. 26. 오후 12:05, 유용태 (teo.yu) : 이런 주제는 그냥 커피마시면서 수다떨듯이 충분히 얘기할 수가 있고
2022. 5. 26. 오후 12:05, 유용태 (teo.yu) : '우리 개발팀은 어떤 방향으로 갈것인가?' 이런 얘기도 좋고
2022. 5. 26. 오후 12:05, 유용태 (teo.yu) : 재밌게 할 수 있고 연습이 필요한것 같아요. 지금은 방식의 문제가 있다고 보이네요. 화이팅입니다 +_+bb
2022. 5. 26. 오후 12:07, 유용태 (teo.yu) : 개발은 개발이니까 다른 것을 해봤다는 것에 대해서 지금 하고 있는 것이랑 잘 엮어서 설명을 할 수 있다면 참작은 충분히 될거라고 생각합니다. 잘하는 사람은 사실 뭘로 개발해도 다 잘하니까요
2022. 5. 26. 오후 12:11, 신입생 : 답변 주셔서 감사합니다 😅😆
배우는게 분명 재밌고, 방향을 잡았다 생각했는데 공백기가 계속 길어지다보니, 다른 분들께서 보시는 공백기는 어떨까 싶었는데
2022. 5. 26. 오후 12:11, 신입생 : 덕분에 고민의 갈피가 풀려가는 것 같습니다
2022. 5. 26. 오후 12:12, 유용태 (teo.yu) : 지금 FE 면접관에 있는 분들은 FE라는게 없던 시절부터 개발을 했던 사람들이라 유니티나 C#, mysql 이런것들을 모를리 없고 오히려 그때 물어봤는데 대답을 잘 한다면 기본기가 훌륭하다고 생각할수도 있어요
2022. 5. 26. 오후 12:12, 좌절하는 프론트 : 저는 퇴사하고 이직준비하면서 공백이 6개월 넘긴적도있어요
2022. 5. 26. 오후 12:13, 퇴근하는 프로도 : 괜찮습니다 ㅎㅎ 저는 임베디드 소프트웨어 개발 하다가, 퇴사 후 무려 6년의 공백기를 갖고 있었으나(다른 분야 준비..ㅠㅠ) 현재 프론트엔드 개발자로 일하고 있습니다. 그 기간동안 유니티도 해보셨고, 언리얼 엔진도 써보셨던 거면 다양한 분야를 공부해보고 싶은 욕심이었을 거예요. 그런 부분을 잘 어필하시면 좋지 않을까 생각합니다. 저는 그렇게 공백기 길다고 생각하지 않습니다. 굶어죽진 않더라고요.
2022. 5. 26. 오후 12:14, 유용태 (teo.yu) : 대신 이 분야를 하게된 계기나 진정성 그리고 방향이나 목표등에 대해서는 분명하고 설득력은 필요할거라고 생각합니다. 자칫 또 FE도 하다가 그만두면 어떻하지? 할수도 있구요. 사실 그렇게 해도 상관은 없긴 하지만 그래도 최소 2~3년은 일해주기를 바라니까요
2022. 5. 26. 오후 12:14, 행돼 : 안녕하세요, 신입 개발자입니다. 혹시 코드를 파악할 때 리액트 혹은 뷰 언어로 개발한 경우 빌드 후 파일로 파악해보신 적 있나요? 현재 빌드가 완료된 후의 코드를 보며 구조를 파악중인데, 사측에 빌드 후 말고 빌드 전 개발코드를 요청드리는게 타당한가 싶어서요ㅎㅎ 빌드 후 코드로도 충분히 코드 파악이 될까요? 
2022. 5. 26. 오후 12:14, 좌절하는 프론트 : 다양하게 해보는거 좋다고 생각합니다
그만큼 관심이있고 애정이있는거니 너무 걱정하지마세요
만약 꼬아서 보는 면접관이있다면 핏이 안맞는거니 무시하십쇼 ㅎㅎ
2022. 5. 26. 오후 12:15, 좌절하는 프론트 : 빌드가 된 이후는 코드가 난독화가 되어서 리버스 엔지니어링 하는데 비용이 너무들어요
2022. 5. 26. 오후 12:15, 유용태 (teo.yu) : 빌드 후에는 암호화나 minify가 적용이 안되어있나요? 설사 그렇다 하더라도 너무 비효율적일거 같아요. 모듈이나 컴포넌트에 대한게 없어서 구조 파악이 하나도 안되실텐데요;;;
2022. 5. 26. 오후 12:16: 사랑하긴했었나요스쳐가는인연이었나요짧지님이 나갔습니다.
2022. 5. 26. 오후 12:16, 신입생 : 다들 귀중한 답변 감사합니다 !!
2022. 5. 26. 오후 12:17, 신입생 : 생각해보지 못한 관점에서의 이야기도 주시고, 공감되는 이야기도 주시고 하셔서 오늘도 많은 것을 배워가는 것 같습니다 !
2022. 5. 26. 오후 12:17, 행돼 : 안 그래도 빌드 후 파일이라 경로에 파일이 없거나 url 같은 경우는 암호화나 숨김으로 처리되어 있어서 파악하는데 시간이 걸리고 있습니다ㅠㅠ 역시 개발 코드를 따로 요청드려야 겠네요... 다들 알려주셔서 감사합니다!!
2022. 5. 26. 오후 12:17, 유용태 (teo.yu) : 고맙습니다. 이런 화두는 저도 생각을 하게 해줘서 뭐든 편하게 질문남겨주세요. ㅎ
2022. 5. 26. 오후 12:18, 유용태 (teo.yu) : 맞아요!! 당연히 요구해야 된다고 생각합니다 ㅎ git링크를 주는거은 기본 아닙니까!! ㅋ
2022. 5. 26. 오후 12:21, 행돼 : 현업에선 이렇게 코드를 파악하나 했네요 ㅎㅎ 처음이다보니 ㅎㅎㅎ 덕분에 자신감 가지고 요청드렸습니다!
2022. 5. 26. 오후 12:29, 유용태 (teo.yu) : 좋아요!!
2022. 5. 26. 오후 1:28, 좌절하는 프론트 : ㅋㅋㅋㅋㅋ 리린이님이 이런 이야기 하셔서, 그런가 지금 제가 다니는 회사 사내메신저에서 소통관련 이슈 발생!
두다다다 지원사격중..
2022. 5. 26. 오후 1:35, fefe : 리쏘공인가요 . . ㅋㅋㅋㅋ
2022. 5. 26. 오후 1:37, 좌절하는 프론트 : 제네럴 채널에서 말하기 어려우면 DM 으로 달라고 요청까지!?
2022. 5. 26. 오후 1:37, 좌절하는 프론트 : ㅋㅋㅋㅋ 엌 갑자기 면담이다
2022. 5. 26. 오후 1:40, fefe : 헉 ㅋㅋ
2022. 5. 26. 오후 1:41, 좌절하는 프론트 : 분위기가 너무 딱ㄸ가해져서
2022. 5. 26. 오후 1:41, 좌절하는 프론트 : 제가 아이스브레이킹 했습니다
2022. 5. 26. 오후 1:41, 좌절하는 프론트 : 이야기하는데 너무 딱딱해져도 좋은 이야기가 오고가지 않으니 ㅠㅠ
2022. 5. 26. 오후 1:47, 유용태 (teo.yu) : 와~~ 소통 문제 중요하죠. ㅋㅋㅋ
2022. 5. 26. 오후 1:50, 좌절하는 프론트 : 백엔드 지인은
2022. 5. 26. 오후 1:50, 좌절하는 프론트 : 너무 찍먹으러 이야기를 전달하는거같다
2022. 5. 26. 오후 1:50, 좌절하는 프론트 : 이게 도루묵이 되어도 좋으니 0~10까지 좀 디테일을 원한다 입장이고
2022. 5. 26. 오후 1:50, 좌절하는 프론트 : 저같은 경우도 너무 이미 마음과 생각을 정하고 찍먹식으로 주는거같다
2022. 5. 26. 오후 1:51, 좌절하는 프론트 : 최소 어떤 레퍼런스나 글같은걸 공유한후 나는 이글을 보고 우리회사에 점진적으로 뭘 도입해야겠다는 생각이 듭니다 식으로 이야기를 한다면
2022. 5. 26. 오후 1:51, 좌절하는 프론트 : 저는 좀 더 설득력이 있고 건강한 소통이 일어날거같다라고 의견을 줬고
2022. 5. 26. 오후 1:51, 좌절하는 프론트 : 다른 신입 프론트엔드분은 전달해주시는 소통이 무겁게 느껴진다. 뭔가 불확실한거고 아무도 전문가가 없다면 단순하게 전달해서 시작하는것도 나쁘지 않다라는 의견이
2022. 5. 26. 오후 1:51, 좌절하는 프론트 : 오고갔습니다
2022. 5. 26. 오후 1:52, 좌절하는 프론트 : 갑자기 왜 이게 오늘 터지지..
2022. 5. 26. 오후 1:58, fefe : 전체 채널에서 업무 요청 받는게 부담스럽다는 뜻 인가요? ㅎ 
2022. 5. 26. 오후 1:58, 좌절하는 프론트 : 그런거 같긴합니다
2022. 5. 26. 오후 1:58, 좌절하는 프론트 : 이걸 하라는건지 말라는건지 혼란을 느끼시는것도 같군요
2022. 5. 26. 오후 1:58, 좌절하는 프론트 : 그치..나도 헷갈리는데..
2022. 5. 26. 오후 2:00, fefe : 아무래도 신입이시니 전체 채널에서 본인이 언급되고나서 일정에 못맞추거나 퍼포먼스가 안나올수도 있다는 부담감때문이실듯..
2022. 5. 26. 오후 2:00, fefe : 하라는건지 말라는건지도 헷갈리실거같고.. ㅋㅋㅋ
2022. 5. 26. 오후 2:00, 좌절하는 프론트 : 커피 사주면서 프레셔를 덜어줘야겠습니다 ㅋㅋㅋ
2022. 5. 26. 오후 2:00, 좌절하는 프론트 : 다음주 수욜날 출근해서 ~_~
2022. 5. 26. 오후 3:45, 스타트업개발자 : 이번에 0 ~ 100점으로 도장 같은걸 만드는데 linear-gradient에서 특정 수치로해서 색을 뽑을 수 있나요…?
2022. 5. 26. 오후 3:48: 부끄러워하는 라이언님이 들어왔습니다.
2022. 5. 26. 오후 3:48, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 26. 오후 3:49, 유용태 (teo.yu) : 안녕하세요 부끄러워하는 라이언님 반갑습니다 :)
2022. 5. 26. 오후 3:49, 부끄러워하는 라이언 : 안녕하세요 반갑습니다 :)
2022. 5. 26. 오후 3:58, 유용태 (teo.yu) : 네~ 어서오세요~~ :) 여기에서 프론트엔드에 관한 궁금한것들 있으면 편하게 글 남겨주세요 ㅎㅎ
2022. 5. 26. 오후 4:00, 유용태 (teo.yu) : 저도 궁금합니당
2022. 5. 26. 오후 4:17, 웅세 : Mixed Contents 에러를 아직 해결하지못했습니다ㅜㅜ 데브환경에선 에러가 없는데 배포환경에서 https->http api를 쏘는 mixed contents 오류가 발생하는데 api를 수정하지 않는 선에서 프론트 개발이 이 이슈를 해결할수있는 방법이 있을까요??
2022. 5. 26. 오후 4:22, 썰cho : 그건 서버 배포해서 https 되어있는거 아닌가요
2022. 5. 26. 오후 4:22, 썰cho : 엔드포인트를 https로 바꿔달라고 하셔야할거같은데
2022. 5. 26. 오후 4:22, 썰cho : 아니면 http로 배포를 바꾸던가..
2022. 5. 26. 오후 4:23, 비디오가미래다 : http로 접속하면 될듯 해요
2022. 5. 26. 오후 4:24, 델 : 프론트를 http로 접속하시면 될듯합니다
2022. 5. 26. 오후 4:24, 썰cho : 보통은 https로 리디렉션 많이 시켜놔서
2022. 5. 26. 오후 4:24, 썰cho : 그거 없으면 http로 접속..
2022. 5. 26. 오후 4:25, 델 : 아 근데 vercel 배포에서 http 쓸 수 있는지 기억이 안나네요
2022. 5. 26. 오후 4:26, 델 : 뭔가 어렴풋이 옛날에 시도했다가 안돼서 포기했던 기억이 나는데 기억조작인지 진짜인지 모르겠어요
2022. 5. 26. 오후 4:26, 델 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 26. 오후 4:32, 웅세 : 맞아요 버셀배포에서 https로 돼있고 api가 http로 돼있습니다! 엔드포인트를 https로 바꾸는것을 요청해놨는데 저희 둘다 초보개발자라 친구가 어려워하고있네요 프론트 버셀배포를 http로 바꾸는 방법을 찾아봐야할까요
2022. 5. 26. 오후 4:33, 델 : 백엔드 배포에 뭐 쓰고 계신가요?
2022. 5. 26. 오후 4:34, 웅세 : s3 사용중입니다!
2022. 5. 26. 오후 4:34, 델 : 백엔드가 뭐로 되어있나요?
2022. 5. 26. 오후 4:35, 웅세 : 아아 스프링말씀이신가요?
2022. 5. 26. 오후 4:35, 델 : 아하 스프링이면 s3이 아니라 아마 ec2를 이용하고 계실 거 같은데.. ec2 이용중이신 게 맞다면 api gateway 다시면 되게 간단하게 https 설정 할 수 있어요
2022. 5. 26. 오후 4:35, 웅세 : 아 그런가요? 친구가 s3라길래
2022. 5. 26. 오후 4:36, 비디오가미래다 : 아... 친구분께 다시 확인해달라고 해야될듯 해요 S3는 아닐거에요
2022. 5. 26. 오후 4:37, 비디오가미래다 : 아닐거에요 -> 아니에요...
2022. 5. 26. 오후 4:37, 웅세 : 오 넵넵
2022. 5. 26. 오후 4:37, arthur : http-proxy-middleware로 될 수도 있을 것 같긴해요
2022. 5. 26. 오후 4:38, 웅세 : 확인해보겠습니다!!
2022. 5. 26. 오후 4:59: 생각하는 라이언님이 들어왔습니다.
2022. 5. 26. 오후 4:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 26. 오후 6:49, 유용태 (teo.yu) : 생각하는 라이언님~ 어서오세요!! 반갑습니다 :)
2022. 5. 26. 오후 6:54: 대장님이 나갔습니다.
2022. 5. 26. 오후 6:54: 대장님이 들어왔습니다.
2022. 5. 26. 오후 6:54, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 26. 오후 6:55, 유용태 (teo.yu) : 안녕하세요 대장님~~ 반갑습니다 :)
2022. 5. 26. 오후 8:05, 여의도개발 : https://velog.io/@tnehd1998/%EC%A3%BC%EC%86%8C%EC%B0%BD%EC%97%90-www.google.com%EC%9D%84-%EC%9E%85%EB%A0%A5%ED%96%88%EC%9D%84-%EB%95%8C-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EA%B3%BC%EC%A0%95
2022. 5. 26. 오후 8:06, 여의도개발 : 제가 평소에 중요하게 생각하는 지식입니다~
2022. 5. 26. 오후 8:42, 사수가없어요 : 실무에서 스토리북 쓰시는 분 계신가요?
2022. 5. 26. 오후 8:42, 사수가없어요 : 어떻게 협업하고 계시는지..
2022. 5. 26. 오후 8:43, 사수가없어요 : UI 인벤토리 작업 등..
2022. 5. 26. 오후 8:48, 여의도개발 : 스토리북 너무나 잘쓰고 있습니다~
2022. 5. 26. 오후 8:48, 여의도개발 : 크로매틱과 스토리북은 정말 최고입니다
2022. 5. 26. 오후 8:48, 사수가없어요 : 크로매틱?
2022. 5. 26. 오후 8:49, 여의도개발 : 넵
2022. 5. 26. 오후 8:49, 철진 : 스토리북 배포해서 볼 수 있는 정적 사이트가 크로매틱입니자
2022. 5. 26. 오후 8:49, 사수가없어요 : 삭제된 메시지입니다. 
2022. 5. 26. 오후 8:49, 현수 : 스토리북을 사용했을 때 가장 좋은 점이 뭔가요?
2022. 5. 26. 오후 8:50, 사수가없어요 : https://techwell.wooritech.com/blog/2021/11/09/visual-ui-test-with-storybook/
2022. 5. 26. 오후 8:50, 사수가없어요 : 이런건가요?
2022. 5. 26. 오후 8:50, 철진 : 컴포넌트를 독립적으로 개발 할 수 있다는 점이 편리하기도 하고, 디자이너와 협업 시에도 장점이 있었습니다.
2022. 5. 26. 오후 8:50, 여의도개발 : 컴포넌트 단위로 테스트및 마크업을 할수있어요~
2022. 5. 26. 오후 8:51, 사수가없어요 : https://github.com/realgrid/realgrid2-storybook
2022. 5. 26. 오후 8:51, 즐거운 네오 : 저도 이 부분이요!!
2022. 5. 26. 오후 8:51, 사수가없어요 : 새로 도입할구도 있을거 같아서
2022. 5. 26. 오후 8:51, 사수가없어요 : 힌트얻었네요 고맙습니다~
2022. 5. 26. 오후 8:51, 즐거운 네오 : 근데 초기 구축이 귀찮긴 하기 때문에 팀 동의 없이는 제대로 활용하기 어려울 수 있습니다. 
2022. 5. 26. 오후 8:52, 사수가없어요 : 아..그렇군요 
2022. 5. 26. 오후 8:52, 철진 : 맞아요. 초기 구축이 매우 귀찮은 편인 것 같아여 
2022. 5. 26. 오후 8:52, 사수가없어요 : 보통 디자인시스템도 
2022. 5. 26. 오후 8:52, 사수가없어요 : 만들기까지 1년 넘게 걸리는걸로 아는데..
2022. 5. 26. 오후 8:53, 사수가없어요 : 빌드하고 테스팅까지 같이하려면
2022. 5. 26. 오후 8:53, 사수가없어요 : 꽤 기간이 있겠네요
2022. 5. 26. 오후 8:55, 유용태 (teo.yu) : 저희는 굳이 스토리북을 디자인시스템 용도가 아니더라도 마크업팀이 서비스와 무관하게 결과물을 전달하는 수단으로 사용하고 있어요
2022. 5. 26. 오후 9:01, O_O : 혹시 저희 회사 채용공고를 여기에 올려봐도 괜찮을까요...?
2022. 5. 26. 오후 9:05, 주니어개발자 : 우왕 올려주세용..!
2022. 5. 26. 오후 9:05, 유용태 (teo.yu) : 그럼요~~ 편하게 올려주세요 +_+bb
2022. 5. 26. 오후 9:06, O_O : 감사합니다:)
2022. 5. 26. 오후 9:10, O_O : https://shipda.notion.site/FrontEnd-4497575281b44e12b75dc519bde7c410

셀러노트에서 FE 개발자를 채용하고 있습니다!

개인적으로 저희 팀의 제일 큰 장점은 회고를 통해 매주 더 나은 팀과 회사로 거듭나기 위해 노력하고 있다는 점이라고 생각합니다. 
많은 지원 부탁드립니다! :) 

궁금한 점 있으시면 오픈톡 열어두었으니 질문 주시면 제가 대답 가능한 범위 내에서 답변 드리도록 하겠습니다! 
2022. 5. 26. 오후 9:15, O_O : 기술적으로도 오픈마인드이고, 피드백 많이하는 팀원을 사랑하는 팀이라 
하고 싶은게 많은데 이런저런 이유로 못하시는 분들은 저희회사 오시면 팀장님과 CTO님이 팍팍 밀어드릴거에요!
2022. 5. 26. 오후 9:24, 대장 : 오 .. 좋은 회사 같네요 !
2022. 5. 26. 오후 9:25, 뮤츠 : 신입도 지원가능한가요
2022. 5. 26. 오후 9:37, O_O : 이건 제가 답변 드리기 정말 애매하고 민감한 부분인 것 같은데... ㅠㅠ
요즘 신입임에도 편차가 커서 지원하시는 분이 어떤 분이냐에 따라 조금 다를 것 같습니다.

제가 결정권자가 아니라 두루뭉실하게 답변해드리는 점 양해 부탁드립니다..! ㅠㅠ
2022. 5. 26. 오후 9:40, 프엔공부중 : 편차가 크다라는 말씀이 괜시리 찔리네요.. 공부 열심히 해야겠다..
2022. 5. 26. 오후 9:40, 프론트 공부 : 사전과제 있으니깐 일단 지원하면 되지않을까요? :)
2022. 5. 26. 오후 9:42, 초보개발자 : 혹시 Next 기반 애플리케이션에서 'net::ERR_ABORTED 404 (Not Found)'나 'Failed to load resource: the server responded with a status of 404' 본 적 있으신 분 계실까요 ?
2022. 5. 26. 오후 9:42, O_O : 모든 개발자 공고가 그렇듯이 잘하시는분은 경력무관 언제든 환영이다. 정도로 봐주시면 될 것 같아요.. 😅
2022. 5. 26. 오후 9:43, 초보개발자 : EC2 환경에서 next build & start 했는데, .next/static 폴더에 접근하지 못하는 것 같네요
2022. 5. 26. 오후 10:06: 티비보는 무지님이 들어왔습니다.
2022. 5. 26. 오후 10:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 26. 오후 10:07, 유용태 (teo.yu) : 안녕하세요 티비보는 무지님~~ 어서오세요 :)
2022. 5. 26. 오후 10:08, 티비보는 무지 : 안녕하세요 ~ 벨로그 글보고 인상깊어서 왔습니다 ㅎㅎ
2022. 5. 26. 오후 10:09, 유용태 (teo.yu) : 와!! 감사합니다 :) 블로그에 썼던 내용들을 함께 하고 싶어서 시작한 이곳은 다같이 프론트엔드에 대해 묻고 답하고 공유하는 공간이 되었답니다 ㅎ
2022. 5. 26. 오후 10:09, 유용태 (teo.yu) : 언제든 궁금한게 생기면 편하게 글 남겨주세요!! 
2022. 5. 26. 오후 10:11, 티비보는 무지 : 넵 환영해 주셔서 감사합니다. 선한 영향력 존경스럽네요 
2022. 5. 26. 오후 10:12, 유용태 (teo.yu) : 와~~ 칭찬 너무 감사드려요+_+
2022. 5. 26. 오후 10:12, 호호 부는 튜브 : 안녕하세요. 
스타트업에 취업해서 첫출근을 앞두고 있는데요 

보통 첫출근 때 복장은 어떻게들 하시나요?? 그리고 첫날에는 무슨일을 하게될까요??

답변해주시면 정말 감사하겠습니다!

2022. 5. 26. 오후 10:13, 좌절하는 프론트 : 깔끔한 청바지와 셔츠요
2022. 5. 26. 오후 10:13, 이영광 : 후드티 입고 가더라는.. 
2022. 5. 26. 오후 10:13, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 5. 26. 오후 10:13, 살려줘 네오 : 편하게 입으시면 되지 않을까요? ㅎ
가서 팀장님이나 다른 분들이 안내 해주는게 있니 않을지
2022. 5. 26. 오후 10:14, 유용태 (teo.yu) : 크게 신경은 안쓰겠지만 첫인상과 그때 만들어지는 선입관은 오래간다고했기에
2022. 5. 26. 오후 10:14, 티비보는 무지 : 와이셔츠에 슬랙스 정도 입고 가서.. 다른분들 복장보고 비슷하게 입는게 안전하지 않을까요?
2022. 5. 26. 오후 10:14, 이영광 : 저는 무겁게.. 입고닸습니더.. ㅋㅋㅋ
2022. 5. 26. 오후 10:14, 유용태 (teo.yu) : 평소에 나 같지만 신경은 쓰고 가시길 바래요~ 잘 보다는 깔끔 ㅋ
2022. 5. 26. 오후 10:15, 유용태 (teo.yu) : 첫날에는 딱히 일을 하기보다는 사람들과 친해지고 적응하고 익숙해지는게 먼저겠지요 ㅎ
2022. 5. 26. 오후 10:15, 호호 부는 튜브 : 셔츠에 슬랙스로 깔끔하게 입어야겠네요 답변 감사드립니다!!
2022. 5. 26. 오후 10:15, O_O : 셔츠 + 슬랙스 정도면 깔끔할 것 같아요!
2022. 5. 26. 오후 10:15, 유용태 (teo.yu) : 친해지고 알아가는 시간이라고 생각해보세요~ 
2022. 5. 26. 오후 10:20, 유용태 (teo.yu) : 회바회 팀바팀이라 맞이 해주는 사람 역량에 따라 다르겠지만 여유가 있어 보인다면 대화를 많이 하시고 다들 엄청 바쁜 분위기라면 궁금한 내용들이나 느낀 점들을 기록을 해두면 좋은 것 같아요 나중에 몰아서 물어보고 얘기할 거리가 생기도록 도와주니까요
2022. 5. 26. 오후 10:28, 티비보는 무지 : 태오님 글 읽고 도움이 많이 되었습니다. 커피한잔 보내드리고 싶은데, 도네 페이지나 개인 오픈톡방 있으실까요?
2022. 5. 26. 오후 10:30, 유용태 (teo.yu) : 마음 너무 감사합니다~ 개인 톡방은 따로 없어요
2022. 5. 26. 오후 10:35, 프론돌이 : 이거 면접 단골문제죠 ㅋ
2022. 5. 26. 오후 10:36, 유용태 (teo.yu) : ㅋㅋㅋ 맞아요 혼자서 공부한 글들은 많았는데 정리를 참 잘 하셨더라구요
2022. 5. 26. 오후 10:39, 티비보는 무지 : developer.1px@gmail.com 메일로 기프티콘 하나 보냈는데.. 확인 한번 부탁드려요.
2022. 5. 26. 오후 10:40, 유용태 (teo.yu) : 네 확인했어요 답장을 쓰고 있는 중이었습니다~ 감사합니다 잘 받겠습니다 ;)
2022. 5. 26. 오후 10:40: 프린이님이 나갔습니다.
2022. 5. 26. 오후 10:43: 엄지척 튜브님이 들어왔습니다.
2022. 5. 26. 오후 10:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 26. 오후 10:43, 유용태 (teo.yu) : 안녕하세요 퇴근하는 프로도님~ 반갑습니다 :)
2022. 5. 26. 오후 10:43, 엄지척 튜브 : 반갑습니다 !
2022. 5. 26. 오후 10:43, 엄지척 튜브 : 이모티콘 
2022. 5. 26. 오후 10:45, 유용태 (teo.yu) : 어서오세요!! 이곳은 프론트엔드나 웹 개발에 대해 궁금하거나 나 말고 다른 개발자들은 어떻게 생각할지 궁금했던 내용들을 묻고 또 답하면서 성장하는 공간입니다~ 이곳에서 좋은 사람에 대한 교류가 일어나길 바래요 ㅎ
2022. 5. 26. 오후 10:58, 눈물바다에 빠진 라이언 : 주니어라 항상 질문만 드려서 죄송하네요 ㅠ 제가 처음으로 만드는 사이드프로젝트 코드를 짰는데 로딩시간이 무려 3초나 걸려서 라이브러리를 끌어다 썻더니 1초도 안 걸리는데… 다들 처음엔 이런가요? 라이브러리 코드 다 분해해서 어떤 로직인지 반드시 알아야하는지 궁금합니다 (코드가 이해가 안 되서요ㅠ 우걱우걱 해석해야하나 싶네요)
2022. 5. 26. 오후 10:58, 눈물바다에 빠진 라이언 : 장인의 코드라 그런지… 완전 다른 언어 보는 것 같고 그러네요..
2022. 5. 26. 오후 10:59, 철진 : 어떤 라이브러리인가요??
2022. 5. 26. 오후 10:59, 유용태 (teo.yu) : 뭘 했는데 3초가 걸린거에요?
2022. 5. 26. 오후 10:59, 유용태 (teo.yu) : 여담으로 질문은 부담스러워하지마세요~ 오히려 고마워요 :)
2022. 5. 26. 오후 10:59, 눈물바다에 빠진 라이언 : 캔버스 이미지에서 컬러를 추출하는 알고리즘을 넣었는데… 그 계산이 오래걸리더라구요 ㅠ
2022. 5. 26. 오후 10:59, 눈물바다에 빠진 라이언 : 에라 모르겟다 하고 라이브러리 쏙 넣었더니
2022. 5. 26. 오후 11:00, 눈물바다에 빠진 라이언 : 냅다 0.5~1초면 나와서...;;;
2022. 5. 26. 오후 11:00, 눈물바다에 빠진 라이언 : 처음엔 이미지 파일이 커서 그런가 했는데 라이브러리는 전혀 지장없고
2022. 5. 26. 오후 11:00, 눈물바다에 빠진 라이언 : 오히려 제 코드만 용량이 커질수록
2022. 5. 26. 오후 11:00, 눈물바다에 빠진 라이언 : 답이없는 로딩속도가..
2022. 5. 26. 오후 11:01, 유용태 (teo.yu) : 어떤식으로 코드가 적혔을지 궁금하네요 비효율적인 구간이 분명히 있을텐데 말이죠
2022. 5. 26. 오후 11:01, 유용태 (teo.yu) : 알고 나면 좋은 공부가 될 것 같네요 ㅎ
2022. 5. 26. 오후 11:03, 눈물바다에 빠진 라이언 : 보통 라이브러리도 코드 구조 다 보면서 공부하시나요? 사실 이미 머리론 보고 배워.인데
2022. 5. 26. 오후 11:03, 눈물바다에 빠진 라이언 : 자괴감이 드네요 ㅎ.........
2022. 5. 26. 오후 11:04, 유용태 (teo.yu) : 보통은 그렇진 않은데 알고리즘류는 좀 다른것 같아요 일반적으로는
코드를 적게 쓸 수록 할 수 있는건 적지만 더 빨라야 되는데
2022. 5. 26. 오후 11:04, 유용태 (teo.yu) : 지금은 적게 썼는데 더 느린 상황이니까
2022. 5. 26. 오후 11:05, 유용태 (teo.yu) : https://hacks.mozilla.org/2011/12/faster-canvas-pixel-manipulation-with-typed-arrays/
2022. 5. 26. 오후 11:05, 유용태 (teo.yu) : 이런걸까요?
2022. 5. 26. 오후 11:06, 델 : 보통 프론트에서 말하는 라이브러리들은 더 나은 추상화와 더 깔끔한 코드 작성을 목적으로 하기 때문에 쓰면 쓸수록 성능이 낮아지는데, 알고리즘류는 코드가 아닌 성능이 목적이다 보니 라이브러리의 성능이 더 높은 게 자연스러운 상황인 거 같아요
2022. 5. 26. 오후 11:07, 유용태 (teo.yu) : 맞아요! 특히 canvas
2022. 5. 26. 오후 11:07, 델 : 물론 모르는 것보다야 아는 게 낫긴 하지만, 컬러 추출 알고리즘을 알고 계실 때 앞으로의 개발에 있어서 어떤 도움이 될지 생각해보시고 도움이 더 많이 된다 싶으면 공부하시면 될 거 같아요! (저였으면 대충 원리만 파악하고 코드 공부는 딱히 안 했을듯합니다)
2022. 5. 26. 오후 11:08, 유용태 (teo.yu) : 와! 너무 맞는말 좋은 말이네요!!
2022. 5. 26. 오후 11:10, 델 : 앗 테오님 칭찬이라니 영광이네요 ㅋㅋㅋㅋㅋㅋㅋ 감사합니다 😀
2022. 5. 26. 오후 11:11, 신난 어피치 : 짜요님 실무 마스터 느낌이시에영
2022. 5. 26. 오후 11:11, 신난 어피치 : ㅋㅋㅋㅋㅋㅋㅋ꙼̈
2022. 5. 26. 오후 11:13, 눈물바다에 빠진 라이언 : 너무너무 좋은 충고 감사합니다😊
2022. 5. 26. 오후 11:13, 눈물바다에 빠진 라이언 : 비전공이여서 그런가 개발이 끝이 없으니까 어디까지 알아야한다는 선이 없어서 자주 방황을 하네요 하핳
2022. 5. 26. 오후 11:14, 눈물바다에 빠진 라이언 : 이 방이 그래서 너무 도움이 많이 돼요
2022. 5. 26. 오후 11:15, 티비보는 무지 : 앗..아닙니다 ㅎㅎ 별거아닌데.. 작은 감사의 표현입니다.
2022. 5. 26. 오후 11:18: 생각하는 라이언님이 나갔습니다.

2022년 5월 27일 금요일
2022. 5. 27. 오전 12:05, 브레드 : https://toss.im/slash-22?gh_src=aa7aa3623us&utm_source=KakaoBiz&utm_medium=2022Slash#Session
2022. 5. 27. 오전 12:05, 브레드 :  우왕 토스에서 개발자 컨퍼런스 하네옹 ㅎㅎ 
2022. 5. 27. 오전 12:11, O_O : vscode 쓰시는분들 테마 뭐 쓰시나요..?
night owl 쓰고 있는데 슬슬 질려서 바꿔보고 싶은데,
확 끌리는게 없네요...
2022. 5. 27. 오전 12:12, 동동 : 저는 monokai 쓰고 있습니다... 이게 익숙해서 어떤 에디터쓰던 monokai 있거나 없으면 다운받아서 쓰고 있어요 ㅎㅎ..
2022. 5. 27. 오전 12:14, O_O : Monokai도 좋죠! 저도 night owl 쓰기전에 그것만 썼어요 ㅎㅎㅎ
2022. 5. 27. 오전 12:54, 시닙프엔 : 리액트 스크롤 이벤트 구현할때 intersectionObserve API 쓰는게 제일 나은가요?? 지금은 일반 스크롤 이벤트로 하는데 비효율적이라고 하네요,,
2022. 5. 27. 오전 12:55, 호호 부는 튜브 : io가 편하긴합니당
2022. 5. 27. 오전 12:58, 포유 : 쓰로틀 걸면 그나마 낫긴한데 그래도 intersection observer가 성능이 좋아용
2022. 5. 27. 오전 7:39, 론트리니 : io가 좋죠
2022. 5. 27. 오전 8:12: 햄햄님이 들어왔습니다.
2022. 5. 27. 오전 8:12, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 27. 오전 8:12, 햄햄 : 안녕하세요
2022. 5. 27. 오전 8:12, 유용태 (teo.yu) : 안녕하세요~~~ 햄햄님~ ㅎㅎ 어서오세요 :)
2022. 5. 27. 오전 8:29, 유용태 (teo.yu) : https://youtu.be/QutIXPbKWpw
2022. 5. 27. 오전 8:29, 유용태 (teo.yu) : 우형에서 테크 세미나를 하네요
2022. 5. 27. 오전 8:38, 유용태 (teo.yu) : 새롭게 생긴 아직은 유명하진 않은 CSS 셀렉터에 대한 소개글 입니다 잘 정리되어 있는 것 같아 당장 쓰진 않더라도 알고 있으면 좋을 것 같아요 
https://junghan92.medium.com/%EB%B2%88%EC%97%AD-where-is-has-%EB%8B%B9%EC%8B%A0%EC%9D%98-%EC%82%B6%EC%9D%84-%EB%8D%94-%EC%89%BD%EA%B2%8C-%EB%A7%8C%EB%93%A4%EC%96%B4-%EC%A4%84-%EC%83%88%EB%A1%9C%EC%9A%B4-css-%EC%84%A0%ED%83%9D%EC%9E%90-ee44dd58aa3b
2022. 5. 27. 오전 8:56, 마이크를 든 라이언 : https://ponyozzang.tistory.com/220
2022. 5. 27. 오전 8:56, 마이크를 든 라이언 : jquery dataTable에 대해서 질문이 있습니당!
2022. 5. 27. 오전 8:58, 마이크를 든 라이언 : 기본구조가 저 링크처럼 저런데 info부분을 안보이게 하고 싶어서 info: false라고 해놓으면 아예 위치가 없어지는게 아니라, visibility: hidden; 처럼 되어있는데 아예 없앨 수 있는 방법은 없나요?!
2022. 5. 27. 오전 8:58, 마이크를 든 라이언 : 사진
2022. 5. 27. 오전 9:00, 프론트 : 아래 페이징div를 안보이게 하고 싶다는 말일까요?
2022. 5. 27. 오전 9:00, 마이크를 든 라이언 : 네네!
2022. 5. 27. 오전 9:01, 프론트 : 문서보니까 paging:flase옵션이 있네요
2022. 5. 27. 오전 9:02, 프론트 : datatables.net/manual/options
2022. 5. 27. 오전 9:02, 마이크를 든 라이언 : false라고 하면 display: none처럼 아예 없어지지가 않습니다ㅠㅠ
2022. 5. 27. 오전 9:02, 프론트 : 영역은 남아있어요?
2022. 5. 27. 오전 9:02, 마이크를 든 라이언 : 넵!
2022. 5. 27. 오전 9:04, 마이크를 든 라이언 : 사진
2022. 5. 27. 오전 9:07, 유용태 (teo.yu) : css로 display:none을 걸업보는 건 어떨까요? ㅋ
2022. 5. 27. 오전 9:08, 유용태 (teo.yu) : 걸어*
2022. 5. 27. 오전 9:08, 프론트 : Jsbin에서 제가 해봤는데 display none처리 되네영
2022. 5. 27. 오전 9:08, 프론트 : 회사컴이 피시카톡이 안되서 링크공유가 힘들어가지고…ㅠ
2022. 5. 27. 오전 9:09, 프론트 : live.datatables.net/gowihae/1/edit
2022. 5. 27. 오전 9:10, 프론트 : 여기서 옵션 한번 줘보시고 예제 따라해보시면 될거 같아요!
2022. 5. 27. 오전 9:10, 프론트 : 저도 근데 질문 하나만 올려도 될까요 오랜만에???
2022. 5. 27. 오전 9:13, 유용태 (teo.yu) : 얼마든지요 ㅋㅋ
2022. 5. 27. 오전 9:16, 프론트 : 레거시 코드 메서드중 하나에 거의 20개가 넘는 기능들이 들어가 있어서 분리를 하려고 하는데여..이걸 다 분리해도 코드 줄이 1000줄 가까이 될거같은데 이런 경우는 어찌해야 할까요??? 

파일을 분리하려고 해도 다 한곳에서만 사용하는 기능들이라 이게 맞는 방법인지도 잘 모르겠어요 ㅠㅠ

여러 디자인패턴을 참고해봤는 이런 경우엔 다들 어찌 하시는지 궁금합니다
2022. 5. 27. 오전 9:17, 유용태 (teo.yu) : 분리해서 코드 줄이 늘어가는 것은 문제가 아닙니다 그만큼 복잡하다는 것이겠죠
2022. 5. 27. 오전 9:17, 유용태 (teo.yu) : 우선 변수들간의 연관부터 정리해보세요
2022. 5. 27. 오전 9:18, 마이크를 든 라이언 : 앗 감사합니당!!
2022. 5. 27. 오전 9:18, 유용태 (teo.yu) : 서로 간섭을 전혀 하지 않는 변수 그룹과 계층이 있을 거에요
2022. 5. 27. 오전 9:21, 유용태 (teo.yu) : 기능이 커지고 파일이 큰것이 문제가 아니에요 오히려 조각조각을 내서 파악이 더 어려워 질수가 있으니까요~ 서로 전혀 관계가 없는 변수가 존재한다면 분립 터 시도해보세요~
2022. 5. 27. 오전 9:22, 티비보는 무지 : 저는 ERP(SAP) 개발자인데.. 회사 밖에서 취미로 서비스를 만들어보고 싶어서 웹프로그래밍 공부중입니다. 
레이아웃을 그릴때 너무 다양한 방법으로 가능하다보니 CSS가 가장 헛갈렸는데 테오님 글 읽고 보니 일단 flexbox를 이용해서 연습하는게 맞다고 생각되는데, 제가 제대로 이해한게 맞을까요?
2022. 5. 27. 오전 9:22, 유용태 (teo.yu) : 대부분의 지역변수들은 그 위치에 있지 않아도 되는 경우가 있습니다 사용하는 함수나 쓰이는 근처로 모아보세요
2022. 5. 27. 오전 9:23, 유용태 (teo.yu) : 네!! 맞습니다 figma autolayout과 flexbox를 같이 이해하는 것을 추천드립니다. 일단 flexbox로 레이아웃을 하고 안되는 것만 따로 케이스로 공부 한다 요런 마인드요 피그마에 있는 AutoLayout은 심지어 flexbox보다 기능이 적지만 충분히 디자인이 가능합니다
2022. 5. 27. 오전 9:24, 티비보는 무지 : 피그마 설치후 오토레이아웃도 한번 살펴볼게요.. 감사합니다!
2022. 5. 27. 오전 9:26, 프론트 : 정말 좋은 말씀 감사합니다! 관계가 전혀 없는 것부터 점진적으로 진행하는 방향으로 생각 해봐야겠어요. 저도 목표가 모든 팀원들이 봤을 때 최대한 빠른 파악이 가능했으면 하는거라… 역시 테오는 모두의 시니어입니다 ㅠㅠ👍
2022. 5. 27. 오전 9:28, 유용태 (teo.yu) : 감사합니다~ 그리고 리팩토링을 하실때에는 먼저 섹션별로 주석을 달고 그룹핑을 하면서 코드 의도를 많아 적어 두시길 바래요~ 
2022. 5. 27. 오전 9:28, 유용태 (teo.yu) : 제목을 달아두면 사람은 자동으로 카테고리화 합니다 블로그 쓸때를 한번 생각해보세요 ㅎ
2022. 5. 27. 오전 9:30, 티비보는 무지 : 스벨트 관련 글보고 질문이 하나 생겼습니다.

현재 리액트, 뷰 공부해서 디자인 포기한 CRUD(게시판) 정도 까지는  가능한 수준입니다. 스벨트 글 보고나니 배워보고싶은데, 초보가 개인프로젝트로 쓰기에 괜찮을까요? 웹쪽은 경력이 적어서 래퍼런스가 많은 리액트나 뷰로 계속 하는게 맞을까요?
2022. 5. 27. 오전 9:32, 유용태 (teo.yu) : 어려운 질문이네요 스벨트가 확실히 쉬워요~ 개인 프로젝트에 쓰는 것은 아무 문제가 없을거에요 레퍼런스는 솔직히 스벨트 홈페이지만으로도 충분합니다
2022. 5. 27. 오전 9:33, 유용태 (teo.yu) : 하지만 대부분 스벨트를 하기전에 뭐라도 해봣던 사람들이 주변에 있고 스벨트를 접하고 해주는 반응이라서
2022. 5. 27. 오전 9:34, 유용태 (teo.yu) : 그럼에도 스벨트를 먼저 이해하고 리액트를 이해하면 그냥 웹 프레임워크 그 자체에 대해 훨씬 더 쉽게 이해할수 있지 않을까 싶네요~ 리액트가 더 어려운건 맞거든요
2022. 5. 27. 오전 9:35, 유용태 (teo.yu) : 개인프로젝트라면 적게 쓰고 많이 결과를 낼 수 있기에 퍼포먼스 측면에서는 좋을 거리고 추천합니다 막히는데 레퍼런스찾기가 어려우시먄 제가 도와드릴게요 ㅎ
2022. 5. 27. 오전 9:37, 티비보는 무지 : 너무 친절하게 알려주셔서 감사합니다. 말씀해주신대로 시작해보겠습니다!
2022. 5. 27. 오전 10:27, 프엔공부중 : api 요청에 대해 비동기 처리를 안해주어야 할 경우도 있을까요..?
2022. 5. 27. 오전 10:37, 진정한 : https://yozm.wishket.com/magazine/detail/1499/

글을 읽고 사소하다 생각된 부분이었는데, 인사이트를 얻어 공유합니다 :)
2022. 5. 27. 오전 10:45, 자란다 Recruiter : 이모티콘 오늘은 금요일! 7시간만 있으면 퇴근!!! 뽜이팅 입니다. 
2022. 5. 27. 오전 10:45, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ 화이이이이팅!이요
2022. 5. 27. 오전 10:53, 델 : 비동기 처리를 안해준다는 게 아예 메세지큐를 안 통하고 콜스택을 계속 점유한다는 뜻인가요?
2022. 5. 27. 오전 11:06, 애교뿜뿜 어피치 : 안녕하세요, github actions에서 '@sls-next/serverless-component' 를 이용해서 배포 자동화 설정을 하고 있는데, 

Attempted to run an interactive setup in non TTY environment.
  If that's intended, run with the SLS_INTERACTIVE_SETUP_ENABLE=1 environment variable

에러가 표시되는데, 혹시 위 라이브러리를 사용해보신 분이 계실까요..?
2022. 5. 27. 오전 11:19, 엄지척 튜브 : 예를들어 장바구니나 id값이 같다면 필터링하는 부분을 구현중인데 객체에 넣어서 id기준으로 필터하는게 아닌 객체에 없는 데이터(예를 들어 불린값)이라면 …으로 복사해서 넣는 방법밖에 없을까요???
2022. 5. 27. 오전 11:19, 이병현 : 저도 쓰고 있는데 깃헙 리드미에 나온 방식으로 하면 sls cli 쪽이랑 버전이 안맞아서 노드모듈에서 컴포넘트들 가져와서 쓰고 있어여

https://github.com/depromeet/antoon_web/blob/3e4cb0d7a1bb82657f1ac0005248a5db72b55be1/serverless.yml#L5
2022. 5. 27. 오전 11:20, 이병현 : 저두 블로그들 보고 따라했더니 2 버전이라 안되서 삽질을 좀 했던 기억이...
2022. 5. 27. 오전 11:44, 철진 : 어떤 상황인지 한번만 자세히 설명해주시면 좋을 것 같아요!
2022. 5. 27. 오후 12:21, 애교뿜뿜 어피치 : 헉.. 감사합니다 참고하겠습니다! 
2022. 5. 27. 오후 1:16, 애교뿜뿜 어피치 : 경로를 ./node_modules 추가하시면서 문제가 해결 되셨을까요?
2022. 5. 27. 오후 1:28, 이병현 : 아래 링크처럼 사용하는 리소스를 따로 패키지에 추가해서 해결했습니다!

sls-component cli 에서 제공하는 버전이랑 sls-next 에서 쓰는 컴포넌트 버전이랑 달라서 생기는 문제 였습니다.

전 이 방법이 제일 간단하더라구여

https://github.com/serverless-nextjs/serverless-next.js/issues/2320#issuecomment-1076917817
2022. 5. 27. 오후 2:07: 승훈님이 들어왔습니다.
2022. 5. 27. 오후 2:07, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 27. 오후 2:18, 애교뿜뿜 어피치 : 감사합니다. 참고해서 똑같이 버전이나 패키지구성을 맞췄는데도 여전히 안되네요 deploy.yml이 문제가 있나 싶기도 하고.. ㅎㅎ 무튼 큰 도움이 되었습니다.. 좀 더 보다보면 답이 나오겠죠 ㅠ,ㅠ
2022. 5. 27. 오후 2:44, 애교뿜뿜 어피치 : 로컬환경에서는 되는데, actions에서만 이러니까 참 답답하네요 🥲
2022. 5. 27. 오후 2:50, 파이팅 : 삭제된 메시지입니다. 
2022. 5. 27. 오후 2:54, 파이팅 : 안녕하세요 코어자바스크립트으로 다중 프로토타입 체인 부분을 공부하다가 궁금증이 생겨서 질문드립니다.
책에 따르면 인스턴스 g에서 배열 메서드를 직접 사용하기 위해서는 Grade.prototype이 배열의 인스턴스를 바라보게 하기 위해 Grade.prototype = [ ]; 이라는 명령어를 사용하면 된다고 하는데
해당 명령어를 적용하고나서, g에서 배열메서드 pop과 push를 적용하였는데 g.pop is not a function 이라는 typeError가 뜨는 상태입니다.

어떻게 해야, g에서 배열메서드가 적용이 될까요?
2022. 5. 27. 오후 2:54, 파이팅 : 사진
2022. 5. 27. 오후 2:58, 인성(현파랑) : g를 먼저 선언하면 안됩니다~ 현재 짠 코드에서 var Grade 선언부, Grade.prototype = [] 부분, var g 부분으로 다시 작성해보셔요
2022. 5. 27. 오후 3:02, 파이팅 : 아!!! 그렇군요 
저렇게 해볼 생각을 못했네요!
감사합니다.
2022. 5. 27. 오후 3:15, 동동 : 사진
2022. 5. 27. 오후 3:15, 동동 : 아니면 요렇게 
2022. 5. 27. 오후 3:15, 동동 : Grade.prototype 참조값은 유지한채 하나씩 메서드를 추가하시는 방법도 있씁니다 ㅎㅎ..
2022. 5. 27. 오후 3:18, 승훈 : 안녕하세요 ~ 신입 프론트엔드 개발자입니다. !~ 잘부탁드리겠습니다 
2022. 5. 27. 오후 3:18, 애교뿜뿜 어피치 : 앗,,,,,, 제가 큰 실수를 하고 있었네요…. 흐억,, serverless.yml을 ignore 하고 있었네요… ! 감사합니다. 병현님
2022. 5. 27. 오후 3:22, 파이팅 : 오ㅎㅎㅎ 새로운 방법도 알려주시고 감사합니다~ 여러가지 방법을 알면 이해하는데 더 수월한거같아요! 
2022. 5. 27. 오후 3:30, 초보개발자 : 혹시 알고리즘 코딩테스트가 1주 정도 공부해서 가능한 영역일까요?
2022. 5. 27. 오후 3:30, 좌절하는 프론트 : 코테를 1주만에 준비해서 하시는거라면
2022. 5. 27. 오후 3:30, 좌절하는 프론트 : 벼락치기느낌이나는건데.. 그게 가능할까요? 평소 꾸준히 해오신거아니라면
2022. 5. 27. 오후 3:30, 좌절하는 프론트 : 아니면 자료구조란 알고리즘론 마스터시라면.. ㅎㄸ
2022. 5. 27. 오후 3:36, fefe : 근데 알고리즘 코테 성적이 좋으면 면접을 잘 못봐도 통과할가능성이 높을까요.. 물론 사람바이사람이겠지만.. ㅋㅋ
2022. 5. 27. 오후 3:36, 좌절하는 프론트 : 제 작은 경험으로만 이야기를 하자면, 전직장에서 알고리즘만 진짜 겁나게 준비하면서 이직준비하던 백엔드 친구가
2022. 5. 27. 오후 3:37, 좌절하는 프론트 : 채널 IO 알고리즘 만점 맞아서 면접까지 갔고
2022. 5. 27. 오후 3:37, 좌절하는 프론트 : 채널 코퍼레이션
2022. 5. 27. 오후 3:37, 좌절하는 프론트 : 면접은 좀 절었다고 했는데 붙었답니다
2022. 5. 27. 오후 3:37, 좌절하는 프론트 : 그래서 연봉 5땅 찍고 시작
2022. 5. 27. 오후 3:37, Kani : 호옹
2022. 5. 27. 오후 3:37, Kani : 저는 이번에
2022. 5. 27. 오후 3:37, Kani : 워라밸안좋은
2022. 5. 27. 오후 3:37, Kani : 회사 과제전형하고 면접 보네요
2022. 5. 27. 오후 3:37, 초보개발자 : 홀릭스에서 봤습니다 ㅎㅎ
2022. 5. 27. 오후 3:37, Kani : 엇
2022. 5. 27. 오후 3:37, Kani : 반갑습니다 ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 3:38, 초보개발자 : 꼭 붙으시길
2022. 5. 27. 오후 3:38, 초보개발자 : 바랍니다 ㅎㅎ
2022. 5. 27. 오후 3:38, Kani : 네넵
2022. 5. 27. 오후 3:38, Kani : 감사합니다 ㅋㅋㅋ
2022. 5. 27. 오후 3:38, 좌절하는 프론트 : 파이팅입니다
2022. 5. 27. 오후 3:38, 초보개발자 : 라이브 코테 경험자 있으신가요
2022. 5. 27. 오후 3:38, Kani : 저용
2022. 5. 27. 오후 3:38, 좌절하는 프론트 : 화이트보드에 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 3:38, 좌절하는 프론트 : 쓱쓱...
2022. 5. 27. 오후 3:38, 초보개발자 : 어떤가요
2022. 5. 27. 오후 3:38, Kani : 음 처음에는
2022. 5. 27. 오후 3:38, Kani : 긴장되긴 하더라구요
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 면접관이 더 좋은방법이 없을까요? -> 이 한마디가 라이브코테할때 진짜 긴장감 배로 키움요...
2022. 5. 27. 오후 3:39, 초보개발자 : 알고리즘을 평소에 공부하시나요 ?
2022. 5. 27. 오후 3:39, Kani : ㄹㅇ....
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 저는 leetcode
2022. 5. 27. 오후 3:39, Kani : 이게 진짜 살떨리더라구요
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 1년 결제 해놔서
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 저번달까지는 계속 스터디플랜으로 하루에 2~3개씩 풀고
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 리뷰 했습니다
2022. 5. 27. 오후 3:39, Kani : 크으
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 맞아요 ㅂㄷㅂㄷ ㅠㅠ
2022. 5. 27. 오후 3:39, 곰젤리 : 저해봤어용
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : 근데 지금 또 안하니까 까먹었어요
2022. 5. 27. 오후 3:39, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 3:40, Kani : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 3:40, 좌절하는 프론트 : 진짜 오프라인 학원가서
2022. 5. 27. 오후 3:40, 좌절하는 프론트 : 공무원 준비하듯이 해야할듯..
2022. 5. 27. 오후 3:40, 좌절하는 프론트 : 토익도 이렇게 안했는데 ㅠㅠ
2022. 5. 27. 오후 3:40, Kani : 한동안 안쓰던 프레임워크 다시 공부하는데
2022. 5. 27. 오후 3:40, Kani : 머리가 아프네요 흑흑
2022. 5. 27. 오후 3:40, fefe : 카니님
2022. 5. 27. 오후 3:40, 좌절하는 프론트 : 흑흑 아프시면 곤란 ㅠㅠ
2022. 5. 27. 오후 3:40, Kani : 네네
2022. 5. 27. 오후 3:41, fefe : 과제전형 진행하는 회사는 보통 어떻게 확인하시나요? 
2022. 5. 27. 오후 3:41, fefe : 저도 개인적으로 과제 좋아해서 
2022. 5. 27. 오후 3:41, Kani : 그 써있긴해요
2022. 5. 27. 오후 3:41, Kani : 과제 전형있다고 보통은
2022. 5. 27. 오후 3:41, fefe : 따로 그 정보만 모아놓은곳은 없겠죠? ㅎ
2022. 5. 27. 오후 3:41, Kani : 네네
2022. 5. 27. 오후 3:41, 좌절하는 프론트 : 채용공고에 보통은 안내가 되어있어요
2022. 5. 27. 오후 3:41, Kani : 모아놓은 곳은 없을거에요
2022. 5. 27. 오후 3:41, Kani : 보통은 공고에 있어서...
2022. 5. 27. 오후 3:41, fefe : 각 채용공고 하나씩 보면 오래걸리니까. . 공고 보다가 메모해놓는게 좋겠네요 
2022. 5. 27. 오후 3:41, Kani : 네네
2022. 5. 27. 오후 3:41, fefe : 감사합니다 
2022. 5. 27. 오후 3:42, 좌절하는 프론트 : 공고에는 없지만
2022. 5. 27. 오후 3:42, 좌절하는 프론트 : 채용담당자 통해서 안내가 되는경우도 있네요
2022. 5. 27. 오후 3:42, Kani : 아 그쵸
2022. 5. 27. 오후 3:42, 좌절하는 프론트 : 그럼 솔직히 지원자 입장에서는 음.. 뭐지?
2022. 5. 27. 오후 3:42, 좌절하는 프론트 : 분명 채용 프로세스에는 없었는데 뭐지? 의문이..
2022. 5. 27. 오후 3:43, 좌절하는 프론트 : 근데 그런경우도 있습니다
2022. 5. 27. 오후 3:43, 좌절하는 프론트 : 토이 프로젝트 겁나 잘 만들어놓으면
2022. 5. 27. 오후 3:43, 좌절하는 프론트 : 코딩과제 패스하는경우도 있어요
2022. 5. 27. 오후 3:43, Kani : 아하
2022. 5. 27. 오후 3:43, 좌절하는 프론트 : 면접관들이 그거 확인하고 음 이 지원자는 굳이 코딩과제 패스해도 되겠다하고 바로 기술면접
2022. 5. 27. 오후 3:43, 좌절하는 프론트 : 제가 딱 1번 경험해 봤습니다
2022. 5. 27. 오후 3:43, Kani : 크으
2022. 5. 27. 오후 3:44, 좌절하는 프론트 : 하지만 Vue 라는거 ㅠㅠ..
2022. 5. 27. 오후 3:44, Kani : 아앗...
2022. 5. 27. 오후 3:44, 좌절하는 프론트 : 리액트는 언제나 저에게 검증이 들어옵니다
2022. 5. 27. 오후 3:44, 좌절하는 프론트 : 자 어느정도 하니?
2022. 5. 27. 오후 3:44, 좌절하는 프론트 : 아앗 나의 리액트 지식을 이단심문 으아
2022. 5. 27. 오후 3:45, Kani : ㅋㅋㅋㅋ
2022. 5. 27. 오후 3:47, 좌절하는 프론트 : 알고리즘을 준비하시는분들이라면 개인적으로 백준이나 릿코드 추천 드리고
2022. 5. 27. 오후 3:47, 좌절하는 프론트 : 좀 라이트하게 하고싶으시면 코드워즈도 추천 드려요
2022. 5. 27. 오후 3:47, 좌절하는 프론트 : https://www.codewars.com/
2022. 5. 27. 오후 3:47, 좌절하는 프론트 : https://leetcode.com/
2022. 5. 27. 오후 3:48, 좌절하는 프론트 : 릿코드 프리미엄으로 결제하시면, 솔루션 해금이랑 FANG 회사들 기출 알고리즘만 모아서 볼 수 있어요
2022. 5. 27. 오후 3:49, Kani : 오오
2022. 5. 27. 오후 3:49, 카타나 : 사진
2022. 5. 27. 오후 3:49, Kani : ㅋㅋㅋㅋ
2022. 5. 27. 오후 3:50, 좌절하는 프론트 : zzzzzz
2022. 5. 27. 오후 3:50, 시닙프엔 : 요즘 신입한테 요구하는게 왜 이렇게 많을까요🥹.. 서류 광탈 당하고 울적하네요..
2022. 5. 27. 오후 3:50, 좌절하는 프론트 : 아고 ㅠㅠ 그러면서 성장하시는겁니다 너무 울적해하지마세요 ㅠㅠ
2022. 5. 27. 오후 3:50, 좌절하는 프론트 : 토닥통닥
2022. 5. 27. 오후 3:50, 좌절하는 프론트 : 저 짤을 이길라면 나는 어셈블리를 해야하고
2022. 5. 27. 오후 3:51, 좌절하는 프론트 : 컴파일러론을 들어야할거같은데..?
2022. 5. 27. 오후 3:51, 동동 : 저도 취준때 그생각했습니다... 막상 취직해보니까 주변사람들은 이런걸 다 갖추었나? 라고 돌아보면 또 아닌거 같기도 해서.. 신입이 더 취업이 어렵다는 생각이 드네요..
2022. 5. 27. 오후 3:51, 이영광 : 참새 구이 해먹고 싶네요
2022. 5. 27. 오후 3:51, 이영광 : ㅡㅡ
2022. 5. 27. 오후 3:51, 좌절하는 프론트 : 헐 ㅋㅋㅋ
2022. 5. 27. 오후 3:52, 이영광 : 아 까마귀구나
2022. 5. 27. 오후 3:52, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 3:52, 시닙프엔 : 좋은 말씀 감사드려요
2022. 5. 27. 오후 3:53, 시닙프엔 : ㅜㅜ신입 취업 진짜 어렵네요..
2022. 5. 27. 오후 3:53, 좌절하는 프론트 : 그렇다고 급하다고 아무곳이나 가지마시길
2022. 5. 27. 오후 3:53, 좌절하는 프론트 : 연봉 2300 으로 시작하니까 진짜
2022. 5. 27. 오후 3:53, 좌절하는 프론트 : 년차 쌓여도 갭을 못채워요 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 3:54, 좌절하는 프론트 : 파이팅 입니다
2022. 5. 27. 오후 3:55, 시닙프엔 : 감사합니다💪🏻💪🏻
2022. 5. 27. 오후 3:57, 철진 : 저도 취업한지 1년도 되지 않은 주니어인데요. 준비할 때 정말 이것저것 많이 공부해야 했던 기억이 납니다. 그래도 결국, 가장 중요한 건 문제해결 능력, 소통 능력 등이더라구요. 신입이 모르고 경험이 부족한 건 당연하지만 기업의 입장에서 신입을 알려주면서 프러젝트를 진행할 역량이 부족한 경우가 많은 것이기 때문에. 운이 없었다 생각하시고 자신감 가지고 더 도전하시면 핏 맞는 곳을 잘 만나실 것 같습니다. 화이팅입니다!
2022. 5. 27. 오후 4:01, 썰cho : 요새는 신입연봉도 높아져서 그렇다고 생각해요! ㅠㅠ 그돈 주고 뽑아서 가르치는게 아깝다고 생각하시는분들이 많은거같거든요
그래서 신입이면 성장가능성을 더 많이 보여주시는게 좋다고 생각합니다 화이팅입니다!!
2022. 5. 27. 오후 4:13, 인사하는 제이지 : 혹시 일정 수준 이상을 바라는 프론트 신입 연봉 평균이 어느정도일까요?
2022. 5. 27. 오후 4:13, 좌절하는 프론트 : 제가 알기로는..
2022. 5. 27. 오후 4:13, 좌절하는 프론트 : 3~4
2022. 5. 27. 오후 4:13, 좌절하는 프론트 : 사이로 알고 있습니다.
2022. 5. 27. 오후 4:13, 좌절하는 프론트 : 물론 네카라쿠배당토 제외
2022. 5. 27. 오후 4:13, 인사하는 제이지 : 굉장히 넓은 범위 아닌가요ㅋㅋㅋ
2022. 5. 27. 오후 4:13, 좌절하는 프론트 : 근데 보통 위코드나.. 그런곳에서는
2022. 5. 27. 오후 4:13, 썰cho : 요새 평균이 3300으로 알고있는데
2022. 5. 27. 오후 4:14, 좌절하는 프론트 : 가이드 주는게 4천 이상입니다
2022. 5. 27. 오후 4:14, 썰cho : 개발자를 제외한 나머지는 3000이 안되거든요..
2022. 5. 27. 오후 4:14, 썰cho : 맞아요 4000부르는분들도 있고
2022. 5. 27. 오후 4:14, 썰cho : 그래서
2022. 5. 27. 오후 4:14, 좌절하는 프론트 : 오키에서도 거론하면 안되는..그 팀머시기
2022. 5. 27. 오후 4:14, 좌절하는 프론트 : 저 재직하는 회사에 이력서 들어와서 받아본적 있는데
2022. 5. 27. 오후 4:14, 좌절하는 프론트 : 희망연봉 5500입니다..
2022. 5. 27. 오후 4:14, 초롱초롱 네오 : 혹시 가이드 준다는게 무슨 의미인지
2022. 5. 27. 오후 4:15, 초롱초롱 네오 : 여쭤봐도 될까요
2022. 5. 27. 오후 4:15, 비디오가미래다 : 우와... 신입 5500이면 네카라쿠배 정도 되어야겠네요
2022. 5. 27. 오후 4:15, 초보개발자 : 보통 이직할 때 기존 연봉에서 몇 퍼센트 인상되나요 ?
2022. 5. 27. 오후 4:15, 좌절하는 프론트 : 그런 기관들이 나중에 취업특강같은 시간을 가집니다
2022. 5. 27. 오후 4:15, 인사하는 제이지 : 4천이상으로 갈거아님 가지마라 이런식으로 가이드해주는거아닐까요?
2022. 5. 27. 오후 4:15, 좌절하는 프론트 : 그때 연봉 같은부분도 이렇게 제시해라라고 가이드를 주는거죠
2022. 5. 27. 오후 4:15, 썰cho : 당근이 신입 6500부터라고 못박혀있떤데요
2022. 5. 27. 오후 4:15, 좌절하는 프론트 : 당근.. 신입 전부 6500 아니었던걸로 아는데 흠
2022. 5. 27. 오후 4:16, 좌절하는 프론트 : 5천 이상은 제 주변 지인통해 검증은 끝냈는데 흠;; 그냥 제말 무시하십쇼
2022. 5. 27. 오후 4:16, 델 : 개발자 6500 이상 맞는거같았어요
2022. 5. 27. 오후 4:16, 비디오가미래다 : 전설님 회사가 대충 저정도 급으로 높아서 그렇게 부른게 아닐까 싶습니다.
2022. 5. 27. 오후 4:16, 썰cho : 사진
2022. 5. 27. 오후 4:16, 썰cho : 저도 카더라통신하고 저기 공고보고 한거라
2022. 5. 27. 오후 4:17, 델 : 최근에 지원했는데 맞더라구요
2022. 5. 27. 오후 4:17, 썰cho : 오 경험 공유가능할까요
2022. 5. 27. 오후 4:17, 썰cho : 저도 다음 회사 타겟중 하나라..
2022. 5. 27. 오후 4:17, 델 : 좋은 회사라고 생각합니다
2022. 5. 27. 오후 4:18, 델 : ㅋㅋㅋㅋㅋㅋㅋㅋ 너무 자세히 말하면 특정될 수도 있을 거 같고 괜히 선입견 심어드릴까봐
2022. 5. 27. 오후 4:18, 델 : 암튼 정말 좋은 회사라고 느꼈어요
2022. 5. 27. 오후 4:18, 썰cho : 혹시 개인톡 가능할까요 ㅋㅋ
2022. 5. 27. 오후 4:18, 썰cho : 안되시면
2022. 5. 27. 오후 4:18, 썰cho : 괜찮습니다
2022. 5. 27. 오후 4:18, 델 : 가능해요!
2022. 5. 27. 오후 4:18, O_O : 부트캠프는 취업자 평균연봉을 홍보수단으로 삼아서... 연봉도 가이드 하나보네요
2022. 5. 27. 오후 4:19, 썰cho : 저 터치하면 갠톡 가능합니다 ㅋ
2022. 5. 27. 오후 4:23, 철진 : 이 부분은 정정하고 싶은데, 4000 이상으로 가이드를 제시하지는 않습니다. 제가 경험해보기도 했고 보통 3000~3500 사이로 취업을 하고 있다고 안내 정도만 나옵니다!
2022. 5. 27. 오후 4:24, 철진 : 실제로 회사 같은 곳들 면담 할때 연봉 보다는 성장 가능성을 보고 추천해주시기도 하구요. 예로 들면 주니어 같은 경우에 코드 리뷰 등도 기본적인 것들이 많아서 오히려 사수가 없는 경우도 나쁘지 않을 수 있다는 식으로 추천해주시는 편입니다. 그래서 무조건 4000 이상을 가이드한다고 보긴 어려울 것 같아요
2022. 5. 27. 오후 4:31, 비디오가미래다 : 주니어는 연봉도 중요하지만 그것보다 더 중요한 거는 자기가 좋아하는 분야 그리고 성장할 수 있는 곳으로 취업하는 거 같아요
2022. 5. 27. 오후 4:31, 좌절하는 프론트 : ㄴㄴ 못맞춰줘요 ㅋㅋㅋ
2022. 5. 27. 오후 4:32, 유대형 : 3000~3500도 간다고는 하는데 보통 빠르게 취업하시는 분들 보면 2800~3200 선에서 많이들 취업 하시긴 해요 ㅠㅠ 저도 부트캠프 출신이라... 주변에 물어보니 저정도 선인 것 같아요 대부분
2022. 5. 27. 오후 4:32, 좌절하는 프론트 : 지금 물가가 올라서 2800이면
2022. 5. 27. 오후 4:32, 좌절하는 프론트 : 저 시작할때 1800~2400 따리랑 비슷하네유
2022. 5. 27. 오후 4:32, 썰cho : 위코드 평균이 3300이라고 한다고 하던데
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 위코드 기수마다 좀 다르더라구요
2022. 5. 27. 오후 4:33, 썰cho : 아 그래요?
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 전 직장 위코드 신입분은
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 3500
2022. 5. 27. 오후 4:33, 썰cho : 저희 회사 9명중에 3명빼고 전부 위코드
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 오호?
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 기수마다 분위기가 다르다고 전해들은
2022. 5. 27. 오후 4:33, 썰cho : 아 그렇다고 들어썽요
2022. 5. 27. 오후 4:33, 썰cho : 근데 그건 다 똑같을듯
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 열심히 하는 기수들은 성공하고
2022. 5. 27. 오후 4:33, 썰cho : 공부분위기를 형성하는 기수들이 잘한다고
2022. 5. 27. 오후 4:33, 좌절하는 프론트 : 분위기 안좋은 기수들은 뭐 그냥저냥이라고
2022. 5. 27. 오후 4:34, 좌절하는 프론트 : 여튼 열심히 하는 친구라
2022. 5. 27. 오후 4:34, 좌절하는 프론트 : 3500 으로 이야기해서 채용
2022. 5. 27. 오후 4:34, 좌절하는 프론트 : 입사해서 제일 먼저한게
2022. 5. 27. 오후 4:35, 좌절하는 프론트 : Nest.js 학습 및 문서번역하면서 팀원들 공유
2022. 5. 27. 오후 4:35, 좌절하는 프론트 : 확실히 마인드셋이 된 친구
2022. 5. 27. 오후 4:35, 유대형 : 저도 지금 Next.js 이제 막 공부 시작했어요 ㅠㅠ 회사 들어온지 이제 일주일이라
2022. 5. 27. 오후 4:35, 좌절하는 프론트 : Next.js 잼있겠다
2022. 5. 27. 오후 4:35, 좌절하는 프론트 : Nuxt.js 만 써본 1인
2022. 5. 27. 오후 4:36, 썰cho : 넥스트.. 해야지…
2022. 5. 27. 오후 4:36, 좌절하는 프론트 : 리믹스 쓰는 회사 있나요?
2022. 5. 27. 오후 4:36, 썰cho : 요새 18나왔는데
2022. 5. 27. 오후 4:36, 썰cho : 그걸로 ssr하시는 회사 있나요
2022. 5. 27. 오후 4:36, 설아아빠 : 프론트 할거 넘 많네여...
2022. 5. 27. 오후 4:37, 좌절하는 프론트 : 제이쿼리도 가끔...
2022. 5. 27. 오후 4:37, 좌절하는 프론트 : ~_~…흑
2022. 5. 27. 오후 4:38, 대장 : 윜호드 작년이 3300인데 올해는 모르겠네여
2022. 5. 27. 오후 4:38, 포유 : 18 나왔긴하지만 바로 도입했다간 지옥을 볼수도… 아직 지원 안되는 라이브러리도  많을거구.. 레퍼런스도 별로 없어서 많이 막힐거 같아요 ㅋㅋㅋ
2022. 5. 27. 오후 4:38, 좌절하는 프론트 : 피어디펜던시 때문에
2022. 5. 27. 오후 4:39, 좌절하는 프론트 : 인스톨하다가 으잌 이럴지도..
2022. 5. 27. 오후 4:39, 좌절하는 프론트 : npm i —force
2022. 5. 27. 오후 4:39, 썰cho : 저도 이거때문에 좀 보고는 있느네
2022. 5. 27. 오후 4:39, 썰cho : 레퍼런스 좀만 터짐녀
2022. 5. 27. 오후 4:39, 썰cho : 넥스트보다 많이쓸까도 의문..
2022. 5. 27. 오후 4:40, 비디오가미래다 : ㅋㅋ 18버전 좋다는 말 들리면 그때 써봐야겠네요 ㅋㅋ;;
2022. 5. 27. 오후 4:41, 좌절하는 프론트 : 조금은 기다려보는것도 정답 ㅋㅋㅋ
2022. 5. 27. 오후 4:41, 썰cho : 넥스트보다 좋을까도 의문이라
2022. 5. 27. 오후 4:41, 비디오가미래다 : 삽질은 남이 먼저 해주었으면 좋겠다는 마인드...
2022. 5. 27. 오후 4:41, 좌절하는 프론트 : 삽질을 해준분에 대한 애도와 고마움
2022. 5. 27. 오후 4:42, 좌절하는 프론트 : 그걸 발판삼아 빠른 팔로잉
2022. 5. 27. 오후 4:45, 포유 : 뭐 Remix도 뜨는거 같던데요 허허 넘나 많은게 나오는..
2022. 5. 27. 오후 4:45, 썰cho : 리믹스가 유료였다
2022. 5. 27. 오후 4:45, 썰cho : 무료돼서 뜨는거 맞죠?
2022. 5. 27. 오후 4:47, 비디오가미래다 : react-router-dom이 remix 썻던 reach router 랑 인터페이스 비슷하게 가져갈라고 v6부터 인터페이스 바꼈다는 이야기 있던데
2022. 5. 27. 오후 4:47, 포유 : 그렇다고 듣긴했는데.. 아직 뭐 인기가 그렇게 많은가 싶긴하지만
https://velog.io/@velopert/learn-remix

벨로퍼트님이 좋은거 같다고 리다기 다음 버전 책에 넣으실거라고 하네요
2022. 5. 27. 오후 4:48, 비디오가미래다 : 5일전에 올리신 따끈따끈한 블로깅이네요 ㅎ
2022. 5. 27. 오후 4:48, 포유 : 원래 Next 안 쓰시고 그냥 직접 SSR 하신다고 하셨느넫.. 얼마나 좋길래 싶기도 하네요 ㅋㅋㅋ
2022. 5. 27. 오후 4:48, 철진 : 기술들은 정말 빠르게 많이 나오고
2022. 5. 27. 오후 4:48, 철진 : 봐볼 것들이 많네요!!
2022. 5. 27. 오후 4:49, hustle-dev : 저.. 혹시 여기에 회사명을 적어도될지 모르겠지만 두회사중 정말 고민이되는데 상담을 받을수있을까요
2022. 5. 27. 오후 4:49, 그레이 : 넵
2022. 5. 27. 오후 4:50, hustle-dev : 이번에 신입으로 오늘의집 커머스팀과 네웹에 붙어 선택을하게되었는데 정말 둘다 너무 좋은거같아 신입의입장에서 잘 못고르겠더라구여..
2022. 5. 27. 오후 4:51, 비디오가미래다 : 벨로퍼트님 올리신 블로깅 보니까 Remix가 편하게 제공하는 기능들이 많네요
2022. 5. 27. 오후 4:51, 대장 : 와 ....
2022. 5. 27. 오후 4:51, 대장 : 멋지네요
2022. 5. 27. 오후 4:51, hustle-dev : 면접분위기도 너무 다들좋았어서
2022. 5. 27. 오후 4:51, 음악듣는 어피치 : 오 축하드려요!! 네웹은 어딘가욮
2022. 5. 27. 오후 4:51, 썰cho : 월급이랑
2022. 5. 27. 오후 4:51, 썰cho : 두회사에서 기대하고 있는게
2022. 5. 27. 오후 4:51, 썰cho : 다른가요
2022. 5. 27. 오후 4:51, 썰cho : 웹툰?
2022. 5. 27. 오후 4:51, hustle-dev : 네네
2022. 5. 27. 오후 4:52, hustle-dev : 기대하는거는 음 모르겠어요 커머스면 그래도 프론트엔드에서 중요한부분이니까 여러가지 많이배울수있을거같은데
2022. 5. 27. 오후 4:52, hustle-dev : 웹툰은 아직 잘 모르겠네요
2022. 5. 27. 오후 4:52, hustle-dev : 네이버웹툰
2022. 5. 27. 오후 4:52, hustle-dev : 이에요
2022. 5. 27. 오후 4:52, 썰cho : 연봉이 비슷하다면
2022. 5. 27. 오후 4:53, 썰cho : 저는 그럼 오늘의집 가는거 추천드려요
2022. 5. 27. 오후 4:53, 좌절하는 프론트 : 오늘의집에 유명한분 계시지 않나요?
2022. 5. 27. 오후 4:53, 철진 : 저도 둘 중에서는 오늘의 집이 더 재밌는 일을 많이 해볼 수 있을 것 같아보여요! 
2022. 5. 27. 오후 4:53, hustle-dev : 그렇군요..
2022. 5. 27. 오후 4:54, Hardy : 네웹이면 https://www.youtube.com/channel/UCFX3BESorGd53Bye5og1rHA/featured 이거 생각나네요
2022. 5. 27. 오후 4:54, 좌절하는 프론트 : 은혼 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 4:54, Hardy : 썸네일이 왜 저렇지 ㅋㅋ;;;
2022. 5. 27. 오후 4:54, 비디오가미래다 : 왘ㅋㅋㅋㅋ
2022. 5. 27. 오후 4:54, hustle-dev : ㅋㅋㅋㅋㅋ 맞아요 면접때 저런 이야기도 해주시더라구요
2022. 5. 27. 오후 4:54, 포유 : 네웹 추천합니더 ㅋㅋㅋ
2022. 5. 27. 오후 4:54, hustle-dev : 근데 뭔가 네카라쿠배라는 타이틀과 부모님이 it쪽이아니어서 왜 고민하냐? 이런식으로
2022. 5. 27. 오후 4:54, hustle-dev : 말하셔서
2022. 5. 27. 오후 4:55, hustle-dev : 개발자 입장에선 또 둘다 너무 좋은곳이어서
2022. 5. 27. 오후 4:55, 개발잘하고싶 : 직장과 집 거리는 고려 안하시나요?
2022. 5. 27. 오후 4:55, 포유 : 일단, 네이버라는 타이틀을 한번 찍는 것도 크구여, 복지에서도 차이가 꽤 많이 날꺼구
2022. 5. 27. 오후 4:55, hustle-dev : 둘이 비슷해서 큰 차이는 없습니다
2022. 5. 27. 오후 4:55, 포유 : 네이버쪽은 수습만 지나면 풀재택 할 수 있구여
2022. 5. 27. 오후 4:55, hustle-dev : 그쵸..
2022. 5. 27. 오후 4:56, 포유 : 반기마다 주식도 주고 성과금도 있어서 계약은 같아도 차이 꽤 클거에요
2022. 5. 27. 오후 4:56, 론트리니 : 저 질문이 있습니다만, 수습 정규직 전환이 안될시 인식이 안좋은 편인가요??
2022. 5. 27. 오후 4:56, Hardy : 네이버 재택이 어떻게 될진 모르겠지만 재택 좋아하시면 저는 네웹 고를거 같아요 재택 너무 좋습니다 ㅋㅋ
2022. 5. 27. 오후 4:57, hustle-dev : 재택제도는 정말 좋은거같아요 ㅋㅋㅋ
2022. 5. 27. 오후 4:57, 포유 : 오늘의 집 보다 많은 트래픽도 경험할 수 있을거 같고, 블라인드 보면 프론트팀장님? 안 좋은 글도 몇개 봐서
2022. 5. 27. 오후 4:58, 썰cho : 솔직히 네웹이랑 오늘의 집 자체는 둘다 모르지만 허슬님이 기대하는게
2022. 5. 27. 오후 4:58, 썰cho : 오늘의 집이라서
2022. 5. 27. 오후 4:58, 썰cho : 저는 추천드렸습니다
2022. 5. 27. 오후 4:58, hustle-dev : 그렇군요… 감사합니다
2022. 5. 27. 오후 4:59, 썰cho : 그럼 다른회사 가면 되지 않나요
2022. 5. 27. 오후 4:59, 초롱초롱 네오 : 다른 회사 가서 면접 보거나 할때의 경우를 물어보시는거 같습니다
2022. 5. 27. 오후 4:59, 그레이 : 저라면 네웹 갈듯합니다 이유:
협업 체계 체득
이직 시 용이
2022. 5. 27. 오후 5:00, 썰cho : 다른회사갈때는 잘 포장만하면 될거같아요
2022. 5. 27. 오후 5:00, hustle-dev : 의견 감사합니다
2022. 5. 27. 오후 5:00, 그레이 : 물론 오늘의집이 체계없다 이런 뜻은 아니고용
2022. 5. 27. 오후 5:00, 비디오가미래다 : 저도 네이버 웹툰 한표 드립니다 ㅎㅎ
2022. 5. 27. 오후 5:01, 포유 : 오늘의집도 좋죠 엄청나게 성장하고 있꾸
2022. 5. 27. 오후 5:01, hustle-dev : 맞아요.. 선택을 하나만 해야한다는게 정말 아쉽더라구요
2022. 5. 27. 오후 5:01, 포유 : 분신술을...
2022. 5. 27. 오후 5:01, hustle-dev : 두군데 모두 경험하고싶은 그런욕심도
2022. 5. 27. 오후 5:02, hustle-dev : 있지만 ㅜ
2022. 5. 27. 오후 5:02, 동동 : 조은님 퇴사하셨지 않나요?
2022. 5. 27. 오후 5:02, 썰cho : 저도 그 기대 하시는게 아니면
2022. 5. 27. 오후 5:02, 동동 : 네이버웹툰 근데 렌더링은 네이티브앱인지 웹뷰인지 궁금하긴 하네요 ㅎㅎ..
2022. 5. 27. 오후 5:02, 썰cho : 결국에는 큰 기업 커리어 하나쯤은 있으면 좋겠다라고 생각하는주의라
2022. 5. 27. 오후 5:02, 동동 : 아 그 웹툰 렌더링하는 지면이... 라는 뜻입니다 
2022. 5. 27. 오후 5:02, 포유 : 입사한지 1년 정도 되신거 같은데 벌써 퇴사하셨나요?
2022. 5. 27. 오후 5:02, 썰cho : 미리 한번 갔다오는거도추천
2022. 5. 27. 오후 5:02, hustle-dev : 감사합니다
2022. 5. 27. 오후 5:02, 하트어피치 : 신입으로 붙으실 정도면.. 어딜가도 또 이직 잘하실거같아요
2022. 5. 27. 오후 5:02, hustle-dev : 저도 정확하게는 모르겠는데 밑미? 라는 곳으로 가신거같아요
2022. 5. 27. 오후 5:03, 썰cho : 근데 웹툰은 공채로 들어가신건가요
2022. 5. 27. 오후 5:03, hustle-dev : 운이 좋았던것 같아요.. 제가 다른분들보다 잘하기보다
2022. 5. 27. 오후 5:03, hustle-dev : 네네
2022. 5. 27. 오후 5:03, 썰cho : 오 합격발표 늦게나는거같네요
2022. 5. 27. 오후 5:03, 썰cho : 오래전에 공고 본거같은데
2022. 5. 27. 오후 5:03, hustle-dev : 맞아요 이번에 코테를 안보고
2022. 5. 27. 오후 5:03, hustle-dev : 서류 -> 프리인터뷰 -> 기술 -> 임원 이런식으로 했는데
2022. 5. 27. 오후 5:04, 포유 : 계약 연봉 같으면 오늘의집 성과급이나 포괄 비포괄 여부를 잘모르겟는데 없으면 원천 2000 + 야근비 차이 날거라..
2022. 5. 27. 오후 5:04, hustle-dev : 비용이 만만치않았는데 코테안보고 뽑는게 개인적으ㅗㄹ 대단한거같아요
2022. 5. 27. 오후 5:04, 비디오가미래다 : 오옹!! 허슬님이 기본기가 탄탄하신가 봐요 면접 힘든데
2022. 5. 27. 오후 5:04, 썰cho : 나중에 회고글 한번 작성해서 공유한번해주세요 ㅎㅎ 이직하시거나 취업하시는분들 도움 많이되실거에요
2022. 5. 27. 오후 5:04, hustle-dev : 그만큼 오래걸리긴했찌만
2022. 5. 27. 오후 5:04, Hardy : 오호 코테를 안봤군요
2022. 5. 27. 오후 5:04, 하트어피치 : 어떤 스토리로 기술면접 통과했는지 궁금하네요 
2022. 5. 27. 오후 5:04, hustle-dev : 네네 지금 작성중이기도 하고
2022. 5. 27. 오후 5:04, 비디오가미래다 : 저도 회고 한번 듣고 싶네요 ㅎㅎ
2022. 5. 27. 오후 5:04, hustle-dev : 그 혹시 면접 질문같은거
2022. 5. 27. 오후 5:04, hustle-dev : 공유해도되나요?
2022. 5. 27. 오후 5:04, 썰cho : 거의 비슷한거면
2022. 5. 27. 오후 5:04, 썰cho : 해도 될거에요
2022. 5. 27. 오후 5:04, hustle-dev : 그
2022. 5. 27. 오후 5:04, hustle-dev : 회사마다
2022. 5. 27. 오후 5:04, 포유 : 연봉 포괄인지 비포괄인지도 확인하셔요.. 허허
2022. 5. 27. 오후 5:04, hustle-dev : 정리한게 있는데
2022. 5. 27. 오후 5:05, hustle-dev : 이거를
2022. 5. 27. 오후 5:05, hustle-dev : 공유해도되는지 아니면
2022. 5. 27. 오후 5:05, hustle-dev : 안되는지 잘 모르겠어서…
2022. 5. 27. 오후 5:05, hustle-dev : 네네 감사합니다
2022. 5. 27. 오후 5:05, hustle-dev : https://hustle-dev.notion.site/29016e5eb9b34bbb8edd4f89e7539139?v=f74e56ea9a4e4bc985cbc731cef0979e
2022. 5. 27. 오후 5:05, 포유 : 어떤 회사: 어떤 질문 이런식으로 특정하면 안될거에요
2022. 5. 27. 오후 5:05, hustle-dev : 이거이긴 한데 혹시 잠깐 보시고 안될거같으면
2022. 5. 27. 오후 5:05, hustle-dev : 바로 내릴게요
2022. 5. 27. 오후 5:06, 포유 : 엄청 많이 보셧네요
2022. 5. 27. 오후 5:06, hustle-dev : 네네 거의 한 25개정도 본거같아요
2022. 5. 27. 오후 5:06, hustle-dev : 저기에 나와있는 정도면 공유를 해도 될까요?
2022. 5. 27. 오후 5:07, 하트어피치 : 와… 감사합니다… 언젠간 저도 꿈의 기업인 네이버로!!!!
2022. 5. 27. 오후 5:08, 호잇 : 면접 준비하는데 참고하면 정말 좋을 것 같네요 감사합니다.
2022. 5. 27. 오후 5:09, hustle-dev : 네네 일단 저거는 요기에만 공유하고 회고에는 넣지 않을게여
2022. 5. 27. 오후 5:09, 포유 : 음 근데 블로그 같은데 특정해서 넣으면 문제 될 수 잇을거 같아요
2022. 5. 27. 오후 5:09, 하트어피치 : 좋은 곳가셔서 적응 잘하세요!!
2022. 5. 27. 오후 5:09, 포유 : 그냥 어느기업인지 모르게 섞어 적으면 문제 없을거 같은데
2022. 5. 27. 오후 5:09, hustle-dev : 넵넵 회고에선 빼야겠네요
2022. 5. 27. 오후 5:10, 비디오가미래다 : 멋져요 ㅎㅎ 좋은 곳 가셔서 잘 적응하시고 회고도 꼭 듣고 싶네요 ㅎㅎ 
2022. 5. 27. 오후 5:11, hustle-dev : 감사합니다
2022. 5. 27. 오후 5:11, hustle-dev : 다들 의견 주신것도 너무 감사합니다
2022. 5. 27. 오후 5:12, 승훈 : 갓 허슬님!
2022. 5. 27. 오후 5:12, 승훈 : 멋져요~ 
2022. 5. 27. 오후 5:16, 로투스 : 하반기 신입 준비하고 있는데 감사합니다!!
2022. 5. 27. 오후 5:18, 좌절하는 프론트 : 아 잘 모르겠어요 궁금하네요 조은님 안계신가보구낭 ㅠ
2022. 5. 27. 오후 5:19, 좌절하는 프론트 : JS 에서 Moment, Dayjs 안쓰고 Date 객체로 시간을 통일하는 방법은 무엇일까요?
2022. 5. 27. 오후 5:19, 좌절하는 프론트 : 제가 생각나는방법은 UTC 타임으로 변환한다인데.. 방법이 있나요?
2022. 5. 27. 오후 5:20, 좌절하는 프론트 : 안그러면 타임존 오프셋으로 노가다..?
2022. 5. 27. 오후 5:20, 승훈 : 조은님 퇴사하셨다고 
2022. 5. 27. 오후 5:20, 승훈 : 블로그에 올라와있다라구옃
2022. 5. 27. 오후 5:20, 좌절하는 프론트 : 아하 떠나셨구나..
2022. 5. 27. 오후 5:20, 승훈 : 스타트업
2022. 5. 27. 오후 5:20, 승훈 : 씨티오로 
2022. 5. 27. 오후 5:20, 승훈 : 가셨대요 
2022. 5. 27. 오후 5:24: 프론트는 잼있어님이 들어왔습니다.
2022. 5. 27. 오후 5:24, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 27. 오후 5:24, 좌절하는 프론트 : 안녕하세요..
2022. 5. 27. 오후 5:25, 프론트는 잼있어 : '네 안녕하세요'
2022. 5. 27. 오후 5:25, 프론트는 잼있어 : 인사해주셔서 감사해요
2022. 5. 27. 오후 5:25, 좌절하는 프론트 : ㅋㅋㅋㅋ 넵
2022. 5. 27. 오후 5:25, 프론트는 잼있어 : 반갑읍니다
2022. 5. 27. 오후 5:25, 진현 : 안녕하세요~!!
2022. 5. 27. 오후 5:25, 프론트는 잼있어 : 진현님 '안녕하세요'
2022. 5. 27. 오후 5:25, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 5:25, 좌절하는 프론트 : System.out.println('ㅋㅋㅋㅋㅋㅋ');
2022. 5. 27. 오후 5:26, 프론트는 잼있어 : console.log('ㅋㅋㅋㅋㅋㅋ');
2022. 5. 27. 오후 5:39, 이영광 : print('hi')
2022. 5. 27. 오후 5:45, 벙찐 튜브 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 재밌네요
2022. 5. 27. 오후 5:50, 프엔공부중 : 이제 봤네요 죄송합니다 ㅠ 제가 잘 못 이해했던것 같아요 답변 감사합니다!
2022. 5. 27. 오후 5:51, 좌절하는 프론트 : 이야 제 지인
2022. 5. 27. 오후 5:51, 좌절하는 프론트 : 오늘 면접 보고 바로 오퍼받고왔네요
2022. 5. 27. 오후 5:51, 좌절하는 프론트 : 나중에 술이나 사주면서 축하해줘야겠다
2022. 5. 27. 오후 5:59, 설아아빠 : 우왕...
2022. 5. 27. 오후 6:00, 좌절하는 프론트 : 우왕 부럽쓰
2022. 5. 27. 오후 6:12, O_O : 리액트 쓰시는 분들 질문이 있습니다!

useCallback, useMemo를 어떨 떄 사용하시나요?!
지금까지 무지성으로 사용하고 온게 아닌가해서... 다른 분들 의견이 궁금합니다!
2022. 5. 27. 오후 6:14, 좌절하는 프론트 : 처음부터 막 사용하지는 않습니다
이유는 성능최적화에는 목적과 범위가 중요하다 생각하고요 오히려 무분별하게
사용하면 코드가 더 복잡해지고 성능이슈 대응이
어려워질수도있습니다
2022. 5. 27. 오후 6:14, O_O : 이모티콘 오늘 코드리뷰하다가 단순 primitive 계산값까지 useMemo로 쓰인 코드를 보고 이건 과한게 아닌가 싶어서 코멘트를 달고 계속 얘기 중인데... 메모이징 비용에 대한 아티클 소개도 환영입니다!  
2022. 5. 27. 오후 6:15, 좌절하는 프론트 : 마치 이전에
디자인패턴이 유행할때
너도나도 사용해서 진짜 개떡같은 코드도 많이봐와서 ㅠ ㅋㅋ 막 남발하면 디자인떡칠과 무엇이 다른건가 오히려 복잡도만 증가하고요 ㅠ
2022. 5. 27. 오후 6:18, 부끄러운 어피치 : 매 번 렌더링 될때마다 계산값이 실행 될 필요가 없으면 usememo를 사용할 수도 있지 않나요 ??
2022. 5. 27. 오후 6:20, 철진 : useMemo나 useCallback 같은 경우 잘못 사용하면 오히려 메모리 낭비가 될 수 있어서, 꼭 필요한 경우에만 사용하려고 하고 있습니다!
2022. 5. 27. 오후 6:21, 이영광 : 꼭 필요한 경우가 뭘까요 ㅠ 저도 고민하고있은데
2022. 5. 27. 오후 6:22, 파이팅 : 저도 리린이인데 고민입니다..
아직 잘 모르겠어요 유즈메모랑 콜백
2022. 5. 27. 오후 6:26, 강승진 : 리렌더가 자주 일어나서 UI 가 버벅일때라고 보심 되겠죠
2022. 5. 27. 오후 6:28, 주니어개발자 : 저는 컴포넌트(캘린더, 툴팁 등)만들때는 보통 memo+useMemo+useCallback 다 쓰는거같아요!
2022. 5. 27. 오후 6:29, 철진 : 디펜던시가 자주 변하지 않고 한번 생성 된 뒤에 계속 사용해도 괜찮은 경우에는 유리하다가 생각해요! 
2022. 5. 27. 오후 6:29, 철진 : 하지만 매번 값이 변경되어서 새로 생성되는 경우에는 오히려 낭비가 되구요.  memo의 경우에도 마찬가지라고 생각하구용
2022. 5. 27. 오후 6:30, 강승진 : https://nanxiaobei.medium.com/whats-react-forget-react-without-memo-e37a75441d9b
이것이 나올때까지 존버!
2022. 5. 27. 오후 6:30, O_O : 일하라 메타....
2022. 5. 27. 오후 6:33, 프론트는 잼있어 : '영광님 인사해주셔서 감사합니다.'
'영광이에요'
2022. 5. 27. 오후 6:34, 이영광 : 근데 오류 인듯요^^ 따옴표
2022. 5. 27. 오후 7:11, 지노 : 사진
2022. 5. 27. 오후 7:11, 지노 : react query로 이렇게 구현하려면 어떻게 해야 할까요?
2022. 5. 27. 오후 7:12, 좌절하는 프론트 : 프라미스 얼..?
2022. 5. 27. 오후 7:12, 지노 : 말로 표현이 힘들어서 그림을 그렸는데, 새로운 결과에 대한 요청이 오기 전까지 이전 결과를 보여주다가 데이터가 완료가 되면 보여주는 것이라고 할 수 있겠네요
2022. 5. 27. 오후 7:12, 좌절하는 프론트 : 그러면 AB 는
2022. 5. 27. 오후 7:12, 좌절하는 프론트 : 전부 페칭이 완료되면
2022. 5. 27. 오후 7:12, 좌절하는 프론트 : 다 같은 그룹에 데이터인거에요?
2022. 5. 27. 오후 7:13, 지노 : 네네 검색 API에 요청하는 것인데
2022. 5. 27. 오후 7:13, 좌절하는 프론트 : 100개를 가져온다하면
2022. 5. 27. 오후 7:13, 좌절하는 프론트 : 10개를 먼저 보여주고 뒤에서 90개 가져오는거 합치는 느낌이네요?
2022. 5. 27. 오후 7:13, 지노 : 앗 그거랑은 다른거 같아요
2022. 5. 27. 오후 7:13, 좌절하는 프론트 : 아 다르군요
2022. 5. 27. 오후 7:13, 지노 : A라는 검색 결과에 filter를 적용해서 다른 데이터를 가져오는거라
2022. 5. 27. 오후 7:14, 좌절하는 프론트 : Promise.race()
2022. 5. 27. 오후 7:14, 지노 : http://prod.danawa.com/list/?cate=112787
2022. 5. 27. 오후 7:14, 좌절하는 프론트 : 아닌데
2022. 5. 27. 오후 7:14, 좌절하는 프론트 : 아 좋은 방법이 생각이안나
2022. 5. 27. 오후 7:14, 지노 : 다나와에서 필터를 적용하면
2022. 5. 27. 오후 7:14, 지노 : 이전 검색 결과는 회색 오버레이로 계속 보여주다가
2022. 5. 27. 오후 7:14, 지노 : 데이터가 왔을 때 교체해서 보여주는데
2022. 5. 27. 오후 7:15, 지노 : 이러한 사용자 경험을 react query로 어떻게 구현할 수 있을까요
2022. 5. 27. 오후 7:15, 지노 : ㅠㅠ 뭘 모르는 지를 모르는 이 답답함..
2022. 5. 27. 오후 7:15, 좌절하는 프론트 : B 를 가지고 올라면
2022. 5. 27. 오후 7:16, 좌절하는 프론트 : A 페칭이 완료가 되야하는거 아닌가요?
2022. 5. 27. 오후 7:16, 좌절하는 프론트 : 아닌가 잘못이해했나
2022. 5. 27. 오후 7:18, 강승진 : {isLoading ? <FullLoadingScreen/> : <DataScreen data={data} />}
{(data && isFetching) && <OverlayLoadingScreen />}

대충이런..?
2022. 5. 27. 오후 7:30, 지노 : 사진
2022. 5. 27. 오후 7:30, 지노 : 이걸로 해결할 수 있을 것 같아요! 감사합니다 👍👍
2022. 5. 27. 오후 7:39, 론트리니 : 다른 곳 면접볼때, 수습 떨어진 것에 대해서 인식이 어떤가 해서 여쭤봤습니다.
2022. 5. 27. 오후 7:45, 헬렌 : 질문있습니다! 시맨틱 태그를 사용해야 하는 이유가 무엇인가요?

제가 찾아본 바로는 (1) SEO 최적화, (2) 웹 접근성 (3) 코드 가독성 때문이라고 정리했습니다. 그런데 의문인 것은 리액트를 쓸 때는 SEO 최적화를 하기 어려운데, 나머지 2가지를 위해 하는 것인지 궁금합니다.
2022. 5. 27. 오후 7:46, 살려줘 네오 : 네 제일 큰 점이 2번입니다. 
2022. 5. 27. 오후 7:46, 살려줘 네오 : 제가 생각하기에는 웹접근성 측면이 가장 크지 않나 싶어요!!
2022. 5. 27. 오후 7:48, 승훈 : 저도 1번과 2번이라고 
2022. 5. 27. 오후 7:48, 승훈 : 생각합니당~
2022. 5. 27. 오후 7:48, 승훈 : 22
2022. 5. 27. 오후 7:53, 헬렌 : 오호~ 웹 접근성에 대해 좀 공부를 해봐야겠네요. 감사합니다!
2022. 5. 27. 오후 8:17, 음악듣는 어피치 : 리액트도 seo 하려면 하죠! ㅋㅋ
2022. 5. 27. 오후 8:20, 지노 : https://react-query-beta.tanstack.com/guides/paginated-queries#better-paginated-queries-with-keeppreviousdata

keepPreviousData가 제가 원하던 작업을 대신 해주는군요ㅎㅎ; 역시 공식 문서에 답이 있습니다... 
2022. 5. 27. 오후 8:31, 프론트는 잼있어 : 👍
2022. 5. 27. 오후 9:32, 여의도개발 : https://www.itworld.co.kr/news/237674
2022. 5. 27. 오후 9:33, 상고펭 : 파티라도 하셔야되는거 아닌가요ㅋㅋㅋㅋ
2022. 5. 27. 오후 9:38, 사수가없어요 : 굿바이..
2022. 5. 27. 오후 9:40, 벙찐 튜브 : 사실 웹개발 공부한지 약 6개월차라 익스플로러의 악명을 간접적으로 듣긴 했지만 말만들어도 악랄하여 한시가 급하게 없어졌으면 하는 바람이 좀 있습니다..
2022. 5. 27. 오후 9:40, 사수가없어요 : https://twojobui.tistory.com/47
2022. 5. 27. 오후 9:40, 웹린이 : 없어지면 공부할게 더 많아질 것 같아서 쫌 무섭네요 ㅎㅎ;
2022. 5. 27. 오후 9:40, 사수가없어요 : 고만거리가 줄어드네요 
2022. 5. 27. 오후 9:40, 웹린이 : 뭔가 편해지긴 하겠지만
2022. 5. 27. 오후 9:40, 사수가없어요 : flex
2022. 5. 27. 오후 9:40, 웹린이 : IE 지원 안해도 되니까 이거저거 다 시도해보게 될 것 같은 느낌???🤔
2022. 5. 27. 오후 9:42, 사수가없어요 : https://caniuse.com/?search=flex
2022. 5. 27. 오후 9:42, 사수가없어요 : I can use..
2022. 5. 27. 오후 9:48, 프론트는 잼있어 : '굿바이, 플로러쿤-'
2022. 5. 27. 오후 9:50, 게으름(lifeisnovel) : 사실 MS가 IE 지원을 끊는 거랑 별개로 사용 자체가 막히지 않는 이상... 국가기관 사이트는 그래도 IE로만 접속 가능하게 된 게 좀 줄어든 것 같은데 금융기관이나 그런 사이트 중에도 아직 IE지원에만 멈춰있는 사이트가 남아있는진 모르겠네요...
그래도.. 이제 vendor prefix 좀 떼고 흑흑
2022. 5. 27. 오후 9:50, 게으름(lifeisnovel) : 유튜브도 접속 못하게 막혔는데 아직도 종종 IE 사용하시는 고객님들 문의가 와서 아직 쓰는 분들이 있구나...하는 걸 체감하긴 하네요
2022. 5. 27. 오후 9:51, 벙찐 튜브 : ㄷㄷ
2022. 5. 27. 오후 9:51, O_O : 아직도 공공기관 사이트는 '익스플로러에 최적화되어있습니다.' 문구 뜨죠 ....ㅎㅎ
2022. 5. 27. 오후 9:51, 벙찐 튜브 : 맞아요 ㅠ
2022. 5. 27. 오후 9:52, O_O : 익스도 익스인데... 사파리도 좀..
2022. 5. 27. 오후 9:53, 웹린이 : 사파리... ㅠㅠ
2022. 5. 27. 오후 9:55, 좌절하는 프론트 : 잘가!
2022. 5. 27. 오후 9:57, 게으름(lifeisnovel) : 사진
2022. 5. 27. 오후 9:59, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 5. 27. 오후 9:59, 유용태 (teo.yu) : 후아!!! 오늘은 역대급으로 많이들 얘기하셨네요 :) 감사합니다 후끈후끈!!
2022. 5. 27. 오후 9:59, 유용태 (teo.yu) : 승훈님 경서김님 어서오세요!! 인사가 늦었습니다 환영합니다 :)
2022. 5. 27. 오후 10:01, 프론트는 잼있어 : '안녕하세요 테오님! 반갑읍니다'
2022. 5. 27. 오후 10:01, 프론트는 잼있어 : '이 방의 분위기가 메테오같이 화끈해서 제 열정이 타오르네요'
2022. 5. 27. 오후 10:02, 웹린이 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 10:02, 유용태 (teo.yu) : 오오!! 멋진 표현이네요~~ 감사합니다 :)
2022. 5. 27. 오후 10:02, 프론트는 잼있어 : '테오님의 닉네임과 연관지어 표현해봤읍니다. 잘 부탁드려요-'
2022. 5. 27. 오후 10:02, 웹린이 : 와 이제 이방도 400명이 훌쩍 넘었군요 ㄷㄷ
2022. 5. 27. 오후 10:04, 유용태 (teo.yu) : 다들 너무너무 감사합니다!! 단순 정보 교환이 아니라 의미있는 개발자 교류가 되길 바랍니다 제가 할 수 있는 것들은 많이 해보려고 해요 ㅎ
2022. 5. 27. 오후 10:05, 헬렌 : 순수 리액트로 가능한가요? 찾아보니까 react- snap 같은 게 뜨긴 하네요. next.js 같은 거 말씀해주시는 건가요? 🤔
2022. 5. 27. 오후 10:09, 유용태 (teo.yu) : 순수리액트로는 seo는 원칙상은 안됩니다 웹사이트들이 크롤링을 할 때에는 미리 렌더링된 HTML을 기준으로 하는데 리액트를 썼다면 접속을 해서 스크립트 동작을 한 후에 데이터를 볼 수 있기 때문이죠 그래서 웹 크롤러믄 그냥 빈 html만 가져갈거에요
2022. 5. 27. 오후 10:10, 유용태 (teo.yu) : 구글의 경우에는 그래서 크롤러에 스크립트 기능까지 달아서 spa의 경우에도 데이터를 수집할 수 있도록 했다 뭐 그런 글도 봤던 기억이 있는데 기본적으로 서버에서 렌더링을 해주는 방식이어야 SEO를 할 수 있다고 보시면 될것 같아요
2022. 5. 27. 오후 10:13, 헬렌 : 오~ 그렇군요 아주 상세한 설명 감사합니다! 억지로라도 가능한 건가… 싶었어요. 그러면 클라이언트의 유입이 중요한 사이트는 SSR로 많이 만드나요?
2022. 5. 27. 오후 10:13, 유용태 (teo.yu) : 그렇죠 검샌엔진에서의 유입이나 로그인 없이 컨텐츠 노출이 중요한 사이트들에세는 SSR이 중요합니다
2022. 5. 27. 오후 10:14, 유용태 (teo.yu) : 일반적으로는 대개 이러한 사이트들은 읽기 전용의 컨텐츠들이 많고 스크립트 기능은 거의 없기 때문에 백엔드에서 HTML을 만들고 소수 기능은 그냥 jQuery로 만드는 편이 나을때가 더 많아요 ㅎ
2022. 5. 27. 오후 10:15, 유용태 (teo.yu) : 많았어요*
2022. 5. 27. 오후 10:16, 좌절하는 프론트 : 맞습니다
2022. 5. 27. 오후 10:16, 좌절하는 프론트 : 바이브가 Vue.js 로 되어있는데
2022. 5. 27. 오후 10:16, 유용태 (teo.yu) : 그렇지만 우리는 배워야 하는 입장이미 next를 해보는
것은 추천입니다 ㅋ
2022. 5. 27. 오후 10:16, 좌절하는 프론트 : Node.js 로 한번 크롤링 해볼려고 하면 빈 HTML 줍니다 ㅋㅋㅋ
2022. 5. 27. 오후 10:17, 좌절하는 프론트 : 그래서 보통 헤드리스 브라우저 써서
2022. 5. 27. 오후 10:17, 좌절하는 프론트 : 백그라운드에서 도는 브라우저로 크롤링 하앜
2022. 5. 27. 오후 10:17, 유용태 (teo.yu) : 라고 얘기하지만 next를 하려면 node서버를 써야 하지만 우리는 자바 서버이기에 ㅋㅋ
2022. 5. 27. 오후 10:17, 좌절하는 프론트 : ㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 10:17, 대장 : Next는 무조건 노드 서버를 써야하나용 ?
2022. 5. 27. 오후 10:17, 유용태 (teo.yu) : 현업에서 그렇게까지 nextjs가 활성화 되어있나? 하면 또 그렇지만은 않습니다 ㅋ
2022. 5. 27. 오후 10:18, 좌절하는 프론트 : 앵귤러는 8부터인가
2022. 5. 27. 오후 10:18, 좌절하는 프론트 : 네스트 들어있을걸요 안에?
2022. 5. 27. 오후 10:18, 좌절하는 프론트 : 8이 아닌가 13부턴가 여튼
2022. 5. 27. 오후 10:18, 좌절하는 프론트 : Nuxt.js 도 한때는 노드기반에 SSR 서버를 선택하게 제공이 되었습니다
2022. 5. 27. 오후 10:19, 좌절하는 프론트 : default, express, koa 등
2022. 5. 27. 오후 10:19, 이영광 : Next는 node를 써야되나요?
2022. 5. 27. 오후 10:19, 좌절하는 프론트 : 아무래도 노드 환경이다보니..그런거 아닐까 생각이 드네요
2022. 5. 27. 오후 10:19, 유용태 (teo.yu) : 그렇죠 무조건이라고 하니까 극단적인 대답을 하시 싫어서 찾아보게 되네요~~ Node기반으로 되어 있는 것은 맞습니다
2022. 5. 27. 오후 10:19, 대장 : 아아
2022. 5. 27. 오후 10:19, 대장 : 백엔드 말씀하시는게 아니구나
2022. 5. 27. 오후 10:20, 좌절하는 프론트 : 문서를 확인해보니
2022. 5. 27. 오후 10:20, 좌절하는 프론트 : 커스텀 서버라는걸 제공을 해주는데
2022. 5. 27. 오후 10:20, 이영광 : 아 ㅎㅎㅎ
2022. 5. 27. 오후 10:20, 이영광 : 백엔드 말씀하시는줄
2022. 5. 27. 오후 10:20, 대장 : 커스텀 서버를 노드로 하는거죠 ???
2022. 5. 27. 오후 10:20, 좌절하는 프론트 : 그쵸 그거도 노드죠 ㅋㅋ
2022. 5. 27. 오후 10:20, 대장 : 보통 express 쓰지않나요
2022. 5. 27. 오후 10:20, 대장 : 네네네
2022. 5. 27. 오후 10:20, 대장 : 마자여 !!
2022. 5. 27. 오후 10:20, 좌절하는 프론트 : 사진
2022. 5. 27. 오후 10:20, 좌절하는 프론트 : https://nextjs.org/docs/advanced-features/custom-server
2022. 5. 27. 오후 10:21, 부끄러운 어피치 : 저 해보고싶은 말이 있었어요 ..
2022. 5. 27. 오후 10:21, 부끄러운 어피치 : 스벨트 만세!!!
2022. 5. 27. 오후 10:21, 더위시러 : 저 익스프레스로 백엔드 개발해보신분 있으신가요???
2022. 5. 27. 오후 10:21, 더위시러 : 저는 넥스트쓰긴하는데
2022. 5. 27. 오후 10:21, 더위시러 : 저 커스텀서버는안써봐서 궁금해요
2022. 5. 27. 오후 10:22, 유용태 (teo.yu) : 만세!!!
2022. 5. 27. 오후 10:22, 부끄러운 어피치 : 리액트로 개발하지만 뭔가 만세 외치고싶었어요
2022. 5. 27. 오후 10:23, 부끄러운 어피치 : 으 속이 후련하다 ~
2022. 5. 27. 오후 10:23, 유용태 (teo.yu) : https://medium.com/daangn/%EB%8B%B9%EA%B7%BC%EB%A7%88%EC%BC%93%EC%97%90-%EC%9B%B9-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0-1-%ED%8C%8C%EC%9D%BC-%EA%B8%B0%EB%B0%98-%EC%9B%B9%EB%B7%B0-d312b17e697c
2022. 5. 27. 오후 10:24, 부끄러운 어피치 : 이젠 웹뷰의 시대군요
2022. 5. 27. 오후 10:24, 부끄러운 어피치 : 한창 느리다고 안쓸때가 있었는데요
2022. 5. 27. 오후 10:24, 유용태 (teo.yu) : 시대라고 하기에는 아직도 문제가 많아서
2022. 5. 27. 오후 10:24, 유용태 (teo.yu) : 문제가 안되는 페이지에만 쓰는 시대는된거 같아요 ㅎ
2022. 5. 27. 오후 10:24, 부끄러운 어피치 : 아하 그렇군요!!
2022. 5. 27. 오후 10:24, 부끄러운 어피치 : 사진
2022. 5. 27. 오후 10:24, 부끄러운 어피치 : 오늘 갑자기 트위터 보는데
2022. 5. 27. 오후 10:25, 부끄러운 어피치 : 저거보고 자세고쳤어요
2022. 5. 27. 오후 10:25, 유용태 (teo.yu) : 아.... 
2022. 5. 27. 오후 10:25, 유용태 (teo.yu) : ㅎ
2022. 5. 27. 오후 10:27, 더위시러 : 흑..
2022. 5. 27. 오후 10:30, arthur :  Next도 어여 vite 지원이 되면 좋겠어요 
2022. 5. 27. 오후 10:32, 꼬북 : 다음 플젝할때는 vite 꼭 써봐야겠어요
2022. 5. 27. 오후 10:32, 꼬북 : 비-트
2022. 5. 27. 오후 10:35, 헬렌 : 테오, 블로그에서 피그마에 있는 디자인을 그대로 코드로 옮겨주는 마법을 봤는데, 이런 거는 회사에서 직접 개발해서 쓰시는 건가요?
2022. 5. 27. 오후 10:35, 유용태 (teo.yu) : 네~ 혼자 쓰고 있어요 ㅎㅎ
2022. 5. 27. 오후 10:35, 헬렌 : 혼자요…? 왜요? 엄청 좋아보이는데요?
2022. 5. 27. 오후 10:35, 헬렌 : 토스에서도 이런 걸 하더라고요
2022. 5. 27. 오후 10:36, 유용태 (teo.yu) : 토스는 그런걸 팀에서 하는 거구요 ㅋㅋ
2022. 5. 27. 오후 10:36, 유용태 (teo.yu) : 저는 adorableCSS 용으로 만들었기 때문이죠 ㅎ
2022. 5. 27. 오후 10:36, 유용태 (teo.yu) : 사진
2022. 5. 27. 오후 10:36, 유용태 (teo.yu) : 회고글을 이제서야 갈무리해서 올리네요!!

https://velog.io/@eamon3481/%ED%85%8C%EC%98%A4%EC%9D%98-%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8-%EC%98%A4%EC%A0%84%EB%B0%98-%ED%9A%8C%EA%B3%A0
2022. 5. 27. 오후 10:37, 유용태 (teo.yu) : 오전반 회고 숙제 해야 하는데 ㅋㅋ 2주치를 정리하려니까 힘드네요 ㅎ
2022. 5. 27. 오후 10:38, 유용태 (teo.yu) : 일단 쓰고 있는 팀이 제가 속한 캘린더에서만 쓰고 있어서 저랑 마크업 2명만 일단 쓰고 있어요 저는 대만족이지만 홍보를 하는 중입니다 ㅎ
2022. 5. 27. 오후 10:39, 헬렌 : 와 저는 있으면 무조건 쓸 거 같은데요
2022. 5. 27. 오후 10:39, 헬렌 : (테오의 회고 기다리는 중 매우 기다리는 중)
2022. 5. 27. 오후 10:39, 헬렌 : 홍보 잘 되시길 바랄게요!!!!
2022. 5. 27. 오후 10:39, 헬렌 : 그러면 그런 거는 피그마 플러그인을 개발하는 건가요?
2022. 5. 27. 오후 10:39, 유용태 (teo.yu) : 라고 말했지만 이번 스프린트 할때 헬렌도 adorableCSS 안썼죠? ㅋㅋ 
2022. 5. 27. 오후 10:40, 유용태 (teo.yu) : 사람들이 쓴던거를 버리고 새로운걸 쓰게 하는 건 참 어려운거 같아요 ㅎ
2022. 5. 27. 오후 10:40, 헬렌 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 27. 오후 10:40, 헬렌 : 맞아요 그래서
2022. 5. 27. 오후 10:40, 헬렌 : 이번에 css하면서 공식 문서도 봤다구요~
2022. 5. 27. 오후 10:41, 헬렌 : 아토믹 css랑 css in js랑 다르다! 까지 봤어요
2022. 5. 27. 오후 10:41, 헬렌 : 아직 블로그를 읽는 중이랍니다 하하
2022. 5. 27. 오후 10:43, 모승 : 저두 테오의 회고 궁금해요 ㅋㅋㅋㅋ
2022. 5. 27. 오후 10:44, 유용태 (teo.yu) : 제가 이번주에 회사 마감이 있어서 음청 바빠요 ㅋㅋ 이번 주말쯤에 공유해볼게요~~ ㅎ
2022. 5. 27. 오후 10:52: 퇴근하자님이 들어왔습니다.
2022. 5. 27. 오후 10:52, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 27. 오후 10:52, 유용태 (teo.yu) : 안녕하세요 퇴근하자님~~ 반갑습니다 :)
2022. 5. 27. 오후 10:53, 퇴근하자 : 안녕하세요~
2022. 5. 27. 오후 10:54, 유용태 (teo.yu) : 안녕하세요!! 여기는 프론트엔드와 개발에 대해 궁금한 것들을 공유 하고 대답하면서 함께 성장하고 부족한 개발자 교류를 해보고자 하는 공간입니다 ㅎ 편하게 글 남겨주세요!!
2022. 5. 27. 오후 10:55, 퇴근하자 : 넵 인사말 감사합니다 😃
2022. 5. 27. 오후 11:45, 시닙프엔 : 다들 리액트로 개발하실 때 컴포넌트별로 css파일을 따로 만들어 관리하시나요?
postCss로 컴포넌트별 css파일 모듈화해서 사용하는데 가독성이 좋지 않다고 해서 고민이에요.. postcss 장점이 클래스이름 중복이어도 오류 안 나는건데 이름을 독창적으로 지으면 굳이 사용할 의미가 없어보여서요
2022. 5. 27. 오후 11:45, 시닙프엔 : 배울때 저걸로 배워서 sass 적용해서 쓸 때도 컴포넌트별로 css파일 하나씩 만들어서 쓰고 있어요ㅎ..
2022. 5. 27. 오후 11:52, 김동현 : css 를 쓰지않고, style로 관리합니다
2022. 5. 27. 오후 11:53, 김동현 : mobily stacks + antd 를 이용하니깐 style을 쓰지않아도 충분히 가능합니다
2022. 5. 27. 오후 11:55, 델 : css-in-js 씁니다 :) 유지보수성에 있어서는 css-in-js 가 경험상 제일 좋았어요
2022. 5. 27. 오후 11:55, 델 : 스타일은 항상 컴포넌트별로 따로 만들어요!

2022년 5월 28일 토요일
2022. 5. 28. 오전 9:18, 여의도개발 : 리액트컴포넌트.tsx
리액트컴포넌트.styled.tsx
2022. 5. 28. 오전 9:46, 곰젤리 : 퍼블리셔분이 tsx파일 마다 scss 하나씩 만들어주십니다
2022. 5. 28. 오전 10:39, 유용태 (teo.yu) : 🔵 CSS Tip 🔵:

Make Taps On Mobile 300ms faster with 1 line of CSS:

𝐭𝐨𝐮𝐜𝐡-𝐚𝐜𝐭𝐢𝐨𝐧: 𝐦𝐚𝐧𝐢𝐩𝐮𝐥𝐚𝐭𝐢𝐨𝐧;


More Details:https://lnkd.in/dcPVuxME

Browser Support : https://lnkd.in/dNtisqCY
2022. 5. 28. 오전 10:39, 헬렌 : 와우
2022. 5. 28. 오전 10:39, 유용태 (teo.yu) : 사진
2022. 5. 28. 오전 10:40, 유용태 (teo.yu) : 예전에 모바일에서 클릭을 빨리 했으면 좋겠다고 하셨던분이 계셨었는데 참고가 되셨으면 좋겠습니다~
2022. 5. 28. 오후 12:25, 얌얌냥이 : 이모티콘 
2022. 5. 28. 오후 12:25, 카타나 : 이모티콘 
2022. 5. 28. 오후 12:28: 떨고있는 어피치님이 나갔습니다.
2022. 5. 28. 오후 12:30, 좌절하는 프론트 : 회사를 선택할때 다들 기준이 어떻게 되실까요 ?
2022. 5. 28. 오후 12:31, 좌절하는 프론트 : 예시
출퇴근거리
연봉
성장
업무 분위기 및 리드 오나 마인드
2022. 5. 28. 오후 12:31, 하트어피치 : 성장할수 있는 환경
연봉
도메인
동료
출퇴근거리
2022. 5. 28. 오후 12:34, 여의도개발 : 연봉
문화
동료
출퇴근거리
2022. 5. 28. 오후 12:35, 하트어피치 : 성장할수있는 환경 (가서 하게 될 업무, 개발 문화, 앞으로 회사가 할 비지니스)
2022. 5. 28. 오후 12:35, 김동현 : 0순위 연봉
1순위 R&R
2순위 협업방식/협업문화/사내문화
3순위 기술 스택
2022. 5. 28. 오후 12:58, 델 : 0순위 성장문화
1순위 오너 마인드
2순위 도메인
3순위 연봉

2022. 5. 28. 오후 1:00, 프로로 : 연봉/ 사내문화 및 개발문화 / 성장 가능성 
2022. 5. 28. 오후 1:01, 프론트 지키미 : 얻을수 있는것(개발외적인것이라도)/ 연봉 / 부여되는 책임감(주니어에게 책임감이 부여되는 상황에서 성장할 수 있다고 생각해요)
2022. 5. 28. 오후 1:03, 사수가없어요 : 연봉 = 안정성
2022. 5. 28. 오후 1:05, 부탁하는 무지 : 사진
2022. 5. 28. 오후 1:05, 부탁하는 무지 : 혹시 위 사진 react-query에서 useQuery 안에 인수를 넘길 때 꼭 화살표 함수로 넘겨야 하는 이유가 뭔지 알 수 있을까요..? Docs에서도 인수 넘길 때 화살표 함수를 써서 넘기는데 이유가 궁금해서요!  화살표 함수로 넘기지 않으면 에러가 뜨네요..

2022. 5. 28. 오후 1:13, 설아아빠 : 위에는 getPostById함수를 인자로 넘기고 아래는 getPostById결과를 인자로 넘긴거니 결과가 달라진것 같아요 
2022. 5. 28. 오후 1:15, 철진 : onClick에 콜백 함수를 전달할 때 이벤트 이외의 인자가 필요할 때 화살표 함수로 전달하는 것과 마찬가지입니다. 바로 전달하게 되면 함수의 실행 값이 인자로 들어가게 되어서 콜백함수가 아니게 됩니다. 그래서 화살표 함수로 감싼 후에 콜백함수로 전달하는 것이죵 
2022. 5. 28. 오후 1:18, 부탁하는 무지 : 되게 간단한 부분을 놓치고 있었네요,, 순간 이해가 안됐는데 한번 더 깨닫게 됩니다. 감사드려요!!!!
2022. 5. 28. 오후 2:32, 헬렌 : 어떻게 하면 타입스크립트 제너릭과 친해질 수 있을까요? 왜 항상 <T>만 보면 겁을 먹는지...
2022. 5. 28. 오후 2:33, 헬렌 : 이모티콘 
2022. 5. 28. 오후 2:38, 웹린이 : 그냥 함수 매개변수라고 생각하세용 ㅎㅎ
2022. 5. 28. 오후 2:39, 웹린이 : https://github.com/type-challenges/type-challenges
2022. 5. 28. 오후 2:40, 헬렌 : 와우
2022. 5. 28. 오후 2:40, 헬렌 : 감사합니다!!!
2022. 5. 28. 오후 2:40, 웹린이 : 그리고 요거 좀 풀다보면 익숙해지고 감도 잘 옵니당
2022. 5. 28. 오후 2:40, 헬렌 : 당장 시작하러 가겠습니다
2022. 5. 28. 오후 2:40, 좌절하는 프론트 : 위에 제 질문 답해주신 모든분들 감사함다
2022. 5. 28. 오후 2:40, 웹린이 : https://www.typescriptlang.org/docs/handbook/intro.html
2022. 5. 28. 오후 2:41, 좌절하는 프론트 : 바람쐬러 퇴촌와서 동치미 국수 공략준비중
2022. 5. 28. 오후 2:41, 웹린이 : 공식 핸드북 아직 안읽어보셨으면 추천드리고, 꾸준히 쓰다보면 익숙해지실꺼에요~
2022. 5. 28. 오후 4:54, 이영광 : 혹시 유즈이펙트 위치는 어디쪽에 위치하는게 좋을까요?
2022. 5. 28. 오후 4:55, 부끄러운 어피치 : 아마 사람마다 다를건데, 사용하는 곳 근처에 두라는 곳도 있고, 상황에 따라 훅으로 빼고요, 회사 컨벤션에 따라 특정 위치에 두기도 하는 것 같아요~
2022. 5. 28. 오후 4:55, 좌절하는 프론트 : 회사 컨벤선 따라
또는
같은 기능끼리
2022. 5. 28. 오후 4:58, 이영광 : 감사합니당 ㅎㅎ
2022. 5. 28. 오후 10:40, 기뻐하는 라이언 : 안녕하세요 타입스크립트에 대해 공부하고 싶은데 추천할 만한 사이트 알려 주시면 감사하겠습니다.
2022. 5. 28. 오후 10:42, 포유 : 구글에 타입스크립트 핸드북 쳐보셔요
2022. 5. 28. 오후 10:44, 기뻐하는 라이언 : 네 추천해주셔서 감사합니다.
2022. 5. 28. 오후 10:52, O_O : 기초 다진 이후에는 이펙티브 타입스크립트 책 추천 드려요!
2022. 5. 28. 오후 11:03, 기뻐하는 라이언 : 책 추천해주셔서 감사합니다.

2022년 5월 29일 일요일
2022. 5. 29. 오전 12:15, 엄지척 제이지 : 리액트에서 map으로 배열 출력할 때 [a,b,c] 라고 하면 마지막요소나 요소가 하나 있을 때 뒤에 쉼표 안붙게 하는 함수가 있을까요? 요소 끝마나 다 쉼표 붙이고 마지막 요소의 ,를 삭제하는 방법으로 구현헸는데 더 깔끔한 방법이 있는지 궁금한데 검색해도 안나와서 여쭤봅니다
2022. 5. 29. 오전 12:16, 민석 : 배열을 문자열로 바꾸고 싶으신건가요?
2022. 5. 29. 오전 12:16, 엄지척 제이지 : 네 맞습니다!
2022. 5. 29. 오전 12:16, 엄지척 튜브 : index으로 조건 걸면 되지않을까요?
2022. 5. 29. 오전 12:16, 민석 : Join함수 써보셔요
2022. 5. 29. 오전 12:17, 철진 : 배열을 문자열로 바꾸면 join 쓰시먄 될것 같아여
2022. 5. 29. 오전 12:17, 민석 : '[1,2,3].join(',')
2022. 5. 29. 오전 12:17, 엄지척 제이지 : 감사합니다!
2022. 5. 29. 오전 12:17, 민석 : 이모티콘 
2022. 5. 29. 오전 12:18, 부끄러운 어피치 : toString() 써도 되지않나요 ?!
2022. 5. 29. 오전 12:19, 부끄러운 어피치 : arr.toString();
2022. 5. 29. 오전 12:36, 아이스크림 : 삭제된 메시지입니다. 
2022. 5. 29. 오전 11:54: 프론트엔드🐶님이 들어왔습니다.
2022. 5. 29. 오전 11:54, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 29. 오후 12:17, somedaycode : 이전에 해당 문제와 관련해서 질문 드린 적이 있는데요
번들 사이즈를 줄이는 과정에서 중복된 패키지를 제거하면서 삽질을 하게 되어 블로그에 정리를 해보았습니다
다른 분들도 번들 사이즈를 줄일 때 조금이나마 도움이 되었으면 좋겠습니다 ㅎㅎ
https://somedaycode.tistory.com/m/20
2022. 5. 29. 오후 1:40, 유용태 (teo.yu) : 취준생들의 테오의 스프린트: 오전반 회고
https://velog.io/@teo/google-sprint-8

드디어 숙제(?)를 끝내고 회고글을 공유합니다. 2팀과 2주간의 내용을 다 넣으려다 보니 넣어야 할 내용이 너무 많아지네요. ㅠㅠ 앞으로는 어떤식으로 회고글을 적으면 좋을지 고민이 많이 됩니다. 다들 너무 너무 즐거웠어요!!! 그때를 기억하며 즐거운 주말 되기를 바래요 :)
2022. 5. 29. 오후 1:41, 유용태 (teo.yu) : 프론트엔드🐶 님 반갑습니다 :) 어서오세요. ㅎ
2022. 5. 29. 오후 1:48, 기뻐하는 라이언 : 안녕하세요 타입스크립트 제네릭을 공부하고 있는데 

function sum2(a:number,b:number):number{
  return a + b;
}

console.log(sum2(1,2))

에서 sum2 함수를 제네릭으로  바꿀 수 있을까요?
2022. 5. 29. 오후 1:49, 유용태 (teo.yu) : 네~
2022. 5. 29. 오후 1:50, 유용태 (teo.yu) : 사진
2022. 5. 29. 오후 1:50, 유용태 (teo.yu) : function sum2<T>(a:T, b:T):T {
    return a + b
  }

  sum2<number>(1, 2)
2022. 5. 29. 오후 1:51, 기뻐하는 라이언 : T가 number이기에 같이 맞춰야 되는거죠?
2022. 5. 29. 오후 1:51, 유용태 (teo.yu) : 질문 의도파악을 못했어요. 조금더 구체적으로 물어볼수 있어요? +_+
2022. 5. 29. 오후 1:52, 기뻐하는 라이언 : function identity<T>(arg:T):T{
  return arg;
}


console.log(identity(12));

매개변수를 하나만 할 경우 이렇게 구성하면 되는데 매개변수가 두개 이상일 경우에 어떻게 선언해야 할지 잘 몰라서 질문 드렸습니다.
2022. 5. 29. 오후 1:53, 유용태 (teo.yu) : 꼭 맞춰야 하는 것은 아니지만 지금과 같은 경우에는 맞출것을 기대할것 같네요~ 더해서 같은 타입이 나와야 될테니까요 ㅎ
2022. 5. 29. 오후 1:54, 유용태 (teo.yu) : 사진
2022. 5. 29. 오후 1:54, 유용태 (teo.yu) : function sum2<T, R>(a:T, b:R):R {
    return a + b
  }

  sum2<number, string>(1, 'string')
2022. 5. 29. 오후 1:54, 유용태 (teo.yu) : 얼마든지 타입은 늘릴 수 있어요~ 필요하다면
2022. 5. 29. 오후 1:54, 기뻐하는 라이언 : number 타입을 더할때는 안되는거죠?
2022. 5. 29. 오후 1:55, 유용태 (teo.yu) : sum2<number, number>(1, 10)
2022. 5. 29. 오후 1:55, 유용태 (teo.yu) : sum2(1, 50) 그냥 이렇게 써도 자동 추론을 해줘요
2022. 5. 29. 오후 1:56, 유용태 (teo.yu) : 제네릭은 이렇게 인자에 타입이 꼭 정해진것만 오지 않을 수 있는 것을 표현하는 방법인것이고
2022. 5. 29. 오후 1:56, 유용태 (teo.yu) : 함수의 요구사항에 따라서 제네릭을 어떻게 활용하는지가 결정된다고 보면 될 것 같아요
2022. 5. 29. 오후 1:58, 유용태 (teo.yu) : 변수가 두개 이상일 경우 어떻께 할지 몰라서의 경우를 예시를 들어줄 수 있나요?
2022. 5. 29. 오후 2:01, 기뻐하는 라이언 : 아까 sum2에서 sum2(a:number,b:number)로 선언 할 경우에는 에러 없이 잘 작동했는데 제네릭 배운 내용으로 함수 파라미터를 수정 해보았는데 에러가 발생해서 질문을 드린것입니다.
2022. 5. 29. 오후 2:02, 유용태 (teo.yu) : 어떤 에러였나요? 제가 캡쳐했던 에러가 동일한가요? 제니릭 타입은 +를 할 수 없다는 건가요? 아님 다른 에러인가요?
2022. 5. 29. 오후 2:03, 기뻐하는 라이언 : 같은 에러 였습니다.
2022. 5. 29. 오후 2:03, 기뻐하는 라이언 : Operator '+' cannot be applied to types 'T' and 'R'.
2022. 5. 29. 오후 2:04, 유용태 (teo.yu) : 그렇군요. 그건 제네릭의 에러라기 보다는 지정되지 않은 타입에서 +를 할 수 없다는 의미였으니 제네릭의 문제는 아니었을 거게요 ㅎ
2022. 5. 29. 오후 2:05, 론트리니 : 테오님! 혹시 다음 스프린트는 언제쯤 모집하시는지 알 수 있을까요~?
2022. 5. 29. 오후 2:06, 유용태 (teo.yu) : 6월을 생각하고 있지만 날짜는 미정입니다. 아직 제 프로젝트 릴리즈가 끝나지 않았어요ㅠㅠ 지금 완전 크런치 모드 상태랍니다. ㅋㅋ
2022. 5. 29. 오후 2:06, 론트리니 : 아하 ! 넵! 답변 감사합니다 ㅎㅎ
2022. 5. 29. 오후 2:07, 기뻐하는 라이언 : 그래서 검색 해서

function sum2<S,T>(a:S,b:T){
  return Number(a) + Number(b);
}

console.log(sum2(1,2))
와 같이 수정하니 에러가 없어졌습니다.
2022. 5. 29. 오후 2:08, 기뻐하는 라이언 : 어떤 이유때문에 에러가 없어졌을까요?
2022. 5. 29. 오후 2:09, 그레이 : number 타입은 + 연산에 대한 정의가 되어있기 때문입니다
2022. 5. 29. 오후 2:09, 철진 : Number을 통해서 
2022. 5. 29. 오후 2:09, 철진 : number로 타입이 지정되었기 때문입니다.
2022. 5. 29. 오후 2:11, 기뻐하는 라이언 : number 타입은 + 연산에 대한 정의가 되어 있는것을 제가 몰랐네요..
2022. 5. 29. 오후 2:15, 기뻐하는 라이언 : 답변 감사합니다.
2022. 5. 29. 오후 2:17, 머리 빗는 네오 : 저 고민이 있는데요, 스타트업에서 일하고 있습니다
2022. 5. 29. 오후 2:18, 머리 빗는 네오 : 알고리즘이나 기능붙이는건 다들 적당히 잘하는데, 커밋메세지를 작성을 안하거나 엉망으로 올리고, 펑션명이나 변수이름을 button1 button2 이런식으로 작성하고 중요하지 않다고 생각하는 팀원들때문에 스트레스입니다 
2022. 5. 29. 오후 2:18, 머리 빗는 네오 : 어떻게 보면 진짜 사소한 것들이고 기본적인 것들인데 지켜지지 않는데 어떻게 이야기하면 좋을까요…
2022. 5. 29. 오후 2:25, 유용태 (teo.yu) : 페어프로그래밍을 하면서 몸소 보여주시는게 맞는것 같아요 자연스럽게
2022. 5. 29. 오후 2:27, 유용태 (teo.yu) : 그리고 지적을 하기 보다는 공감대를 먼저 확보해보시는 건 어떨까요? 모든 개발자들에게 이름짓기는 어려운 일이라서
2022. 5. 29. 오후 2:27, 유용태 (teo.yu) : 다 같이 모여서 리팩토링 + 이름짓기를 해보는 것도 추천합니다
2022. 5. 29. 오후 2:27, 유용태 (teo.yu) : 본인도 그렇게 이름을 짓는 것이 그렇게 좋지는 않았을거에요 ㅎ
2022. 5. 29. 오후 2:31, 핸디(강경석) : 저도 한가지 첨언해드리고 싶은데,
공감대를 얻지 못한거나 문화가 정착이 안되더라고 실망하거나 공격적으로 되지 말라고 말씀드리고 싶어요.
페어 프로그래밍도 좋고 컨벤션 자동화 도구를 도입해보는 시도를 해보는 것도 좋아요. ( 대부분 귀찮은 것들을 자동화해주면 도입하는데 거부감이 덜 할 거에요)
네오님은 꾸준히 멋진 코드를 작성하시길 바랍니다!!

2022. 5. 29. 오후 2:32, 카타나 : 코드리뷰를 하면서 말이 혹시 안나올까용?
2022. 5. 29. 오후 2:32, 카타나 : 저희는 코드리뷰도 안해서 뭔가 기회도없는
2022. 5. 29. 오후 2:32, 머리 빗는 네오 : 코드리뷰 서로 할 기회도 없이 기능붙이기에 바쁜 분위기고
2022. 5. 29. 오후 2:32, 머리 빗는 네오 : 아뇨.. 사실 그렇게 바쁜것도 아니고 
2022. 5. 29. 오후 2:32, 머리 빗는 네오 : 그냥 안중요하다고 생각하는것같아요… 
2022. 5. 29. 오후 2:32, 머리 빗는 네오 : 여러번 얘기했는데도 
2022. 5. 29. 오후 2:32, 카타나 : 근데 애초에 그런 마인드가 고착화돼있으면 
2022. 5. 29. 오후 2:34, 카타나 : 저도 비슷한느낌인데 저는 나중에 몇번 트라이해보고 안바뀌는 분위기면 떠날생각하고있습니다 ㅜ 
2022. 5. 29. 오후 2:34, 프론트 공부 : 설득이 가능할까요..?
2022. 5. 29. 오후 2:34, 머리 빗는 네오 : 저도 제가 떠나는게 맞나 싶을정도에요
2022. 5. 29. 오후 2:34, 유용태 (teo.yu) : 그쵸 모두가 성장을 바라는 건 아니니까요 ㅠ
2022. 5. 29. 오후 2:35, 유용태 (teo.yu) : 그냥 돈을 버는 수단인 사람들도 많죠
2022. 5. 29. 오후 2:35, 카타나 : 마장ㅅ
2022. 5. 29. 오후 2:35, 카타나 : 이거진짜 공감됩니다
2022. 5. 29. 오후 2:35, 머리 빗는 네오 : 아니… 진짜 사실 진짜 기본적인건데 .. 소스트리나 이런것도 못믿는다고 안쓰는 사람이라서 커밋메세지 보기 어렵다고 자주 커밋하고 자세히 쓰는 제가 웃음거리가 되는 기분이에요..
2022. 5. 29. 오후 2:35, 카타나 : 공감…
2022. 5. 29. 오후 2:36, 핸디(강경석) : 허 참 어려운 환경에 있으시군요.
다만 그래도 꾸준히 노력해보세요. 지금은 안먹히더라도 이직할때 혹은 다음 회사에서 지금 도입해보려는 노력과 경험이 큰 자산으로 돌아올겁니다
2022. 5. 29. 오후 2:37, 머리 빗는 네오 : 감사합니다… 이런 말도 진짜 위안이 되네요 하....
2022. 5. 29. 오후 2:37, 머리 빗는 네오 : 말씀 위안이 되네요*
2022. 5. 29. 오후 2:37, 머리 빗는 네오 : 진짜 너무 스트레스받아서 어지러워요 ㅋㅋㅋㅋㅋ
2022. 5. 29. 오후 2:37, 유용태 (teo.yu) : 맞아요! 여기서 포기하면 편해~ 해버리면 무력감에 계속 힘들거에요! 방법을 찾고자하고 계속 시도하는 사람이 되길 바래요!
2022. 5. 29. 오후 2:37, 머리 빗는 네오 : 네 ㅠㅠ ㅠ감사합니다..
2022. 5. 29. 오후 2:38, 유용태 (teo.yu) : 적극적인 이직도 답입니다! ㅋ
2022. 5. 29. 오후 2:38, 좌절하는 프론트 : 저도 공격형이
되어버리고는 했는데
2022. 5. 29. 오후 2:38, 유용태 (teo.yu) : 대신 이직이 회피용이 되어서는 안된다고 생각해요. 이직은 이직이고 도전은 도전이죠 ㅎ
2022. 5. 29. 오후 2:38, 좌절하는 프론트 : 옆에서 아무리 좋게 이야기해도 안듣는 사람은 어쩔수가없어요
2022. 5. 29. 오후 2:38, 머리 빗는 네오 : 저진ㅉ ㅏ이 회사와서 쌈닭.. 그자체..
2022. 5. 29. 오후 2:38, 머리 빗는 네오 : 된 기분
2022. 5. 29. 오후 2:38, 좌절하는 프론트 : 그부분도 내가 어떻게 소통을해야하는걸까
2022. 5. 29. 오후 2:39, 좌절하는 프론트 : 레벨링하는거라 생각하시면 조금은 편해요
2022. 5. 29. 오후 2:39, 좌절하는 프론트 : 저도 어제 깨닫...!
2022. 5. 29. 오후 2:39, 유용태 (teo.yu) : 하지만 쌈닭이 되는것은 장기적으로 그렇게 좋지는 않아요. 부정적인 감정을 섞어서 대화를 해버릇하면 나중에 고치기가 너무 힘들어요
2022. 5. 29. 오후 2:39, 머리 빗는 네오 : 맞아요
2022. 5. 29. 오후 2:39, 머리 빗는 네오 : 그래서 부탁드려요 하고 메세지로 요즘은 전하고 있답니다..
2022. 5. 29. 오후 2:40, 그레이 : 제가 이름난 쌈닭이었었는데, 이게 단점인게 상대방이 항상 방어적 태도를 취하게 되더라구요
2022. 5. 29. 오후 2:40, 유용태 (teo.yu) : 맞아요
2022. 5. 29. 오후 2:40, 유용태 (teo.yu) : 내 편 만들기도 좋은데 적 만들기도 좋아요
2022. 5. 29. 오후 2:41, 그레이 : 맞는 얘기를 해도 방어적이게 되고 상처받게 되고
2022. 5. 29. 오후 2:41, 유용태 (teo.yu) : 그쵸 그쵸 ㅠ
2022. 5. 29. 오후 2:41, 머리 빗는 네오 : 맞아요 
2022. 5. 29. 오후 2:41, 머리 빗는 네오 : 삭제된 메시지입니다. 
2022. 5. 29. 오후 2:41, 머리 빗는 네오 : 진~~~ 짜 어려운일같네요
2022. 5. 29. 오후 2:41, 핸디(강경석) : 특히 프론트엔드 직무의 경우 많은 사람들고 소통을 해야하다 보니 공격적일수록 더욱 타격받는 업종이라
2022. 5. 29. 오후 2:41, 핸디(강경석) : 항상 말걸기 쉬운 사람이 되도록 의식적으로 노력하고 있습니다
2022. 5. 29. 오후 2:42, 머리 빗는 네오 : 소통하는게
2022. 5. 29. 오후 2:42, 핸디(강경석) : 최근에 면접을 3곳정도 봤는데 소통에 관한 본인만의 노하우를 다 여쭤보시더라구요.
2022. 5. 29. 오후 2:43, 그레이 : 좋네요 ㅎㅎ
2022. 5. 29. 오후 2:43, 유용태 (teo.yu) : 맞아요~ 연차가 쌓이면 개발스킬보다도 소통쪽에 더 무게를 싣고 물어보게 되는거 같아요
2022. 5. 29. 오후 2:44, 핸디(강경석) : 제가 어디서 글을 봤는데, 이어폰을 끼고 노래를 듣더라고 한쪽귀는 열어두라고 하신 글을 봤습니다. 그래야 누가 불렀을때 바로 답할수 있다고.
또 다른 글에서는 가장 쉽게 접근할수 있도록 방 입구쪽에 앉아계시는 시니어 개발자님의 글도 감명깊게 봤어요.
2022. 5. 29. 오후 2:44, 카타나 : 이어폰을낄…
2022. 5. 29. 오후 2:45, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 5. 29. 오후 2:45, 카타나 : 끼고근무해도 상관이없나용?
2022. 5. 29. 오후 2:46, 철진 : 이어폰 끼는건 자유로운 것 같아요 보통?
2022. 5. 29. 오후 2:46, 유용태 (teo.yu) : 저희는 자리에서도 화상회의를 많이 해서도 있고 이어폰은 딱히 지적하는 것 같지는 않아요
2022. 5. 29. 오후 2:46, 핸디(강경석) : 네 저도 이때까진 자유로웠습니다.
2022. 5. 29. 오후 2:47, 뮤츠 : 이모티콘 
2022. 5. 29. 오후 2:47, 유용태 (teo.yu) : 말보다는 슬랙이나 메신저를 답을 빨리 해주는게 ㅎ
2022. 5. 29. 오후 2:47, 인사하는 제이지 : 저도 한달찬데 눈치껏 협업분위기나면 빼고, 각자 개발하는 상황에서는 끼고 합니다 ㅎㅎ
2022. 5. 29. 오후 2:47, 응원하는 튜브 : 반대로 이어폰 끼고 있을때만이라도 말걸지말아주십사.... 하는 점도  
2022. 5. 29. 오후 2:49, 유용태 (teo.yu) : 저는 소통이 비정기적으로 자주 발생하는 것보다 정기적으로 발생하는게 더 낫다고 생각을 하는 편이라서
2022. 5. 29. 오후 2:50, 유용태 (teo.yu) : 다같이 모이는 정해진 시간을 두고 자주 만나려고 하고 나머지는 자율로 해서 컨텍스트 스위칭 긴장 상태를 많이 안 만드는게 좋다고 생각ㅇ해요 ㅎ
2022. 5. 29. 오후 2:54, 유용태 (teo.yu) : 네오님도 일단 자리랑 분위기 부터 한번 만들어보심이 어떤가 생각해봅니다
2022. 5. 29. 오후 3:00, 좌절하는 프론트 : 히히 울회사 사람들은 젯브레인즈 스페이스알람도 안보는데
2022. 5. 29. 오후 3:01, 좌절하는 프론트 : 다들 좋은 사람들이다 으오아아아아
2022. 5. 29. 오후 3:02, 카타나 : ㅋㅋㅋㅋ
2022. 5. 29. 오후 4:18, 헬렌 : 이거 해보려고 했는데 Hello World 이후로 못 풀겠어요… 허허허허허허
2022. 5. 29. 오후 8:21, 곰젤리 : 저 타입챌린지 엄청 많이 풀었는데 혹시 풀다가 막히면 여기 저 태그해서 물어보시면 답변드릴게요 ㅎㅎ
2022. 5. 29. 오후 8:22, 헬렌 : 와우! 감사합니다 근데 진짜 너무 어려워요
2022. 5. 29. 오후 8:22, 웹린이 : 너무 모르겠다 싶으시면
2022. 5. 29. 오후 8:22, 헬렌 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 29. 오후 8:22, 웹린이 : 타입스크립트 핸드북 한번 쭉 읽어보시고
2022. 5. 29. 오후 8:23, 웹린이 : 일정 시간 이상 걸리면 다른분들이 푼 내용 이슈탭에서 볼 수 있으니 참고해보세요~
2022. 5. 29. 오후 8:23, 웹린이 : 기본적인 문제 몇개 보다보면 어떻게 해야할지 어느정도 감이 옵니다 ㅎㅎ
2022. 5. 29. 오후 8:23, 곰젤리 : 마자용 ㅎㅎ
2022. 5. 29. 오후 8:23, 헬렌 : 핸드북을 한 번 읽어보고 하면 괜찮겠죠? 쓰던 걸 알아서 정의해보라고 하니까 너무 어렵더라고요.. 답변 감사합니당
2022. 5. 29. 오후 8:23, 헬렌 : 👍👍👍
2022. 5. 29. 오후 8:25, 유용태 (teo.yu) : 개발이라는 행위는 퀴즈가 아니라 오픈북이니까 하면서 필요한걸 찾아서 하는것도 능력이에요! 검증이라고 생각지 말고 어떻게든 해내면 되죠!! 화이팅 화이팅!! ㅋ
2022. 5. 29. 오후 8:41, 티비보는 무지 : 해외에서 한국으로 휴가를 잠시 와서.. 좋은책좀 사가려고 합니다.. 혹시 추천해주실만한 개발서적 있을까요?
2022. 5. 29. 오후 8:41, 헬렌 : 테오랑 저번에 피그마 디자인을 코드로 변환해주는 거에 대해서 이야기했늗네 CopyCat이라고 있더라고요. 이거 신청했는데 대기번호가 1500번 넘었어요 ㅋㅋㅋㅋㅋ

https://www.copycat.dev/
2022. 5. 29. 오후 8:45, 유용태 (teo.yu) : 와!! AI를 이용한 auto group이라니
멋지네요!!
2022. 5. 29. 오후 8:46, 모승 : 와 디게 좋은데용 ㄲㄱㄱㅋㄱㄱㅋ
2022. 5. 29. 오후 8:46, 헬렌 : 언제 될지는 모르겠어요. 지금 베타버전이라고 테스트하고 있는 거 같아요
2022. 5. 29. 오후 8:47, 헬렌 : 쓸수만 있다면 당장 달려가서 쓰겠어요 하하하하하
2022. 5. 29. 오후 9:09, 신입생 : 혹시 한 가지 css에 대해 질문드려도 될까요?

홀로 진행중인 토이 프로젝트에서 로컬스토리지를 이용해 다크 모드를 적용 해보고 있습니다.

기능까지는 구현이 되었는데, 트랜지션을 사용하다보니 종종 새로고침 또는 페이지 로딩 시에도 해당 애니메이션?트랜지션?을 불러와서 짧은 시간 동안 동작하는 것을 확인하였습니다.

어제자 부터 해결해보려 하는데, 지금까지 막막하다 보니.. 혹 페이지 로딩 시, 해당 효과를 막는 처리 방법이 있을지 여쭤뵙고 싶습니다 ㅜ
2022. 5. 29. 오후 9:13, 벙찐 튜브 : 샵검색 : #preventdefault
2022. 5. 29. 오후 9:14, 벙찐 튜브 : 이게 맞을지 모르겠네용..
2022. 5. 29. 오후 9:18, 신입생 : 우선 이야기 주셔서 감사합니다! 
preventdefault 메서드가 기본 이벤트가 동작하지 못하도록 하는 것으로 알고 있긴 한데, 트랜지션의 경우에도 적용이 가능한가요..? 해보지 않은 부분이라, 시도해보겠습니다 !
2022. 5. 29. 오후 9:21, 게으름(lifeisnovel) : 색상에 트랜지션이 들어가는 거면 다크모드 적용이 스타일이 아니라 스크립트로 들어가는 걸까요?
예를 들어 OS가 다크모드일 때 미디어쿼리가 아니라 스크립트에서 확인해서 다크모드로 바꿔주는 방식일까요?
2022. 5. 29. 오후 9:23, 게으름(lifeisnovel) : 앗 로컬스토리지를 체크해서 스크립트로 변경해주나보군용
2022. 5. 29. 오후 9:24, 벙찐 튜브 : 정확하지않을수도있습니다 참고 부탁드립니다
2022. 5. 29. 오후 9:25, 게으름(lifeisnovel) : 처음 로컬스토리지를 체크하면서 다크모드 여부 클래스를 추가할 때 트랜지션 css이 들어가있는 클래스를 같이 추가하는 방법은 좀 지저분할까요?
다른 방식이지만 만약 OS 기준으로 판단한다면 prefers-color-scheme 미디어쿼리를 사용할 수 있어요.
2022. 5. 29. 오후 9:25, 신입생 : 넵, 이야기 주신 것이 맞습니다 !
다크모드를 사용해보기만 하고, 처음 만드는 것이다 보니, 더 좋은 방법도 있겠지만,
스크립트에서 로컬스토리지를 확인하여 도큐먼트에 어트리뷰트를 세팅해주면, 그것을 css에 미디어쿼리에서 동작하도록 작업해보고 있습니다.!
2022. 5. 29. 오후 9:25, 신입생 : 사진
2022. 5. 29. 오후 9:26, 신입생 : 답변 주신 것 만으로도 가능성이 생긴 것 같아서 기쁩니다 ! 감사합니다 !
2022. 5. 29. 오후 9:26, 신입생 : 헉.. 이것도 전혀 생각을 못했던 방법인 것 같습니다 ! 감사합니다 !
2022. 5. 29. 오후 9:28, 프론트 지키미 : 트랜지션이 어떤 트랜지션이에요??
2022. 5. 29. 오후 9:32, 신입생 : 지금 하는 것은 모드로 넣은 텍스트를 확인하고, 배경색과 글자색을 바꾸려는 것이 첫 시도이다 보니, 배경색과 글자색이 바뀔 때 0.3초 정도에 걸쳐 변경하도록 넣어두었습니다 !
다만 js에서 스토리지를 확인하고, 처리하는 과정이서인지.. 새로고침 시, 잠깐 동안 색이 반짝반짝 하는 정도로 변화가 있어서 그렇습니다 !
2022. 5. 29. 오후 9:32, 신입생 : 사진 2장
2022. 5. 29. 오후 9:35, 신입생 : 아무래도 js에서 속성을 설정해주다 보니, 처음에 null인 상태에서 css가 적용되고, 이후 색이 변경되며 발생한 것 같아서, 잘못 생각한 것 같기는 합니다..!
2022. 5. 29. 오후 9:35, 신입생 : 사진
2022. 5. 29. 오후 9:39, 게으름(lifeisnovel) : modeChange가 처음 실행된 이후부터(color-theme attr이 추가된 다음에) 해당 요소에 트랜지션을 추가하거나 트랜지션과 연관된 클래스 등을 넣어주면 될 것 같은데 트랜지션과 별개로 해당 부분이 실행되기 전에 한 번은 깜빡일 수 있겠네요.
DOM에서 뿌려줄 때부터 color-theme 값을 지정해서 줄 수 있는 환경이라면 그 방법이 좋겠지만 이건 환경에 따라 다를 것 같긴 하네요.
2022. 5. 29. 오후 9:45, 신입생 : 사진
2022. 5. 29. 오후 9:47, 신입생 : 우선 다들 감사합니다 ! 
처음 화면을 로드할 때, 스토리지 정보를 확인하고 속성을 삽입해주는 함수에서 클래스를 삽입하였고, 새로 고침 시 약간의 짧은 깜빡임이 남아 있어서, 타임아웃을 사용해서 적용하였더니,
원하는 바를 이룰 수 있었습니다 !

다들 주말 저녁에도 신경 써주셔서 다시 한 번 감사드립니다 !
2022. 5. 29. 오후 9:51, 게으름(lifeisnovel) : https://web.dev/i18n/ko/prefers-color-scheme/

구글 개발자 게시물 중에 다크모드에 관한 글이 있네요! 이미 보셨을 수도 있지만 같이 읽어보시면 좋을 것 같아요!
2022. 5. 29. 오후 9:58, 신입생 : 감사합니다 ! 
문제를 해결해보려 찾던 중 잠깐 확인만 해보고, 커스텀을 해보고 싶다는 생각에, 제대로 완독은 못했던 것 같습니다.
덕분에 남은 주말은, 주신 글의 완독과 함께 해보고 싶던 기능을 보완하며, 마무리 해보려 합니다.

주말 저녁에 신경써주셔서, 덕분에 고민 거리로 있던 것이 해결된 것 같습니다. 모두 감사드리며, 좋은 주말 보내시길 ! 합니다 !

2022. 5. 29. 오후 9:58, 신입생 : 이모티콘 
2022. 5. 29. 오후 10:12, 인사하는 프로도 : 사진
2022. 5. 29. 오후 10:12, 인사하는 프로도 : 혹시 vscode에서 위 사진처럼 타입 ... 줄임 처리된거 전체 다 볼 수 있는 방법 아시는 분 있을까요??
2022. 5. 29. 오후 10:13, 곰젤리 : https://stackoverflow.com/questions/53113031/how-to-see-a-fully-expanded-typescript-type-without-n-more-and/53131824#53131824
2022. 5. 29. 오후 10:13, 곰젤리 : tsconfig 설정 noErrorTruncation: true 한번 해보세요
2022. 5. 29. 오후 10:14, 인사하는 프로도 : 오 감사합니다! 한번 해볼게요!!!
2022. 5. 29. 오후 10:16, 인사하는 프로도 : 오 됩니다!!!! 대박ㅜㅜ 감사합니다!!!!
2022. 5. 29. 오후 10:17, 곰젤리 : type Vision<T> = T extends unknown ?  { [k in keyof T]: T[k] } : never 

2022. 5. 29. 오후 10:18, 곰젤리 : 이렇게 만들어놓고 Vision<Props> 해주시면
2022. 5. 29. 오후 10:18, 곰젤리 : Props 만들때 쓴 &나 | 없이 타입이 맵으로 깔끔하게 나와요
2022. 5. 29. 오후 10:19, 인사하는 프로도 : 오 꿀팁 대박이네요👍👍👍
2022. 5. 29. 오후 10:19, 곰젤리 : 이모티콘 
2022. 5. 29. 오후 10:19, 인사하는 프로도 : 감사합니다!! 🙇‍♀️🙇‍♀️
2022. 5. 29. 오후 10:28, 꼬북 : 다들 이거 보셨나용
https://www.youtube.com/watch?v=kkiLBF_YerM
2022. 5. 29. 오후 10:28, 꼬북 : 놀랬습니당...
2022. 5. 29. 오후 10:34, 유용태 (teo.yu) : css가 이제서야 표준들을 정비하는 느낌이네요 ㅋ 이러한 요구들은 오래전부터 있었던것들인데 이제 css도 발전을 하려나봅니다 부릉부릉!
2022. 5. 29. 오후 10:38, 룰루 : 오…nest 기능을 이용한다면 scss를 다시 대체하게 되는건가요?
2022. 5. 29. 오후 10:44, 유용태 (teo.yu) : 기존껄 굳이 바꾸지는 않겠지만 scss의 효용성은 이제 점점 떨어질거라고 생각합니다
2022. 5. 29. 오후 10:49, 인사하는 프로도 : 궁금한 점이 있는데요, 혹시 이런 타입 작성은 어디서 인사인트를 얻은 것인지 알 수 있을까요? 🙏
2022. 5. 29. 오후 10:49, 더위시러 : 혹시 현업에서 css 최적화해서 로딩속도 개선해보신분 있으신가요??
2022. 5. 29. 오후 10:49, 더위시러 : 먼가 이론은 아는데,,막상 실제로 적용하자니 어려운 느낌이 드네요 ㅜ
2022. 5. 29. 오후 10:53, 곰젤리 : 타입챌린지 하면서 배운것들 하나씩 리액트 코딩할때 써보려고 하다보니 만들게 되었어요 ㅎㅎ
2022. 5. 29. 오후 10:54, 인사하는 프로도 : 오 혹시 타입챌린지가 이거 말씀하시는거 맞을까요?
2022. 5. 29. 오후 10:54, 곰젤리 : 넹 ㅎㅎ
2022. 5. 29. 오후 10:55, 곰젤리 : 처음에 하다보면 이런걸 어따 써먹지 싶은데 참고 하다보면 현업에서도 써먹을곳이 보이더라구요
2022. 5. 29. 오후 10:55, 인사하는 프로도 : 그렇군요 감사합니다 ㅎㅎ 저도 시작해봐야겠네요!
2022. 5. 29. 오후 11:05, hustle-dev : 안녕하세요 지난번 회사선택에 있어 많은 분들에게 도움을 받았었는데요, 이후 신입으로 프론트엔드 개발 취업을 준비하시는 분들에게 도움이 될만한(도움이 되실지 모르겠지만..) 이력서와 포폴을 첨부한 상반기 회고를 완성하여 공유 합니다. 감사합니다.
2022. 5. 29. 오후 11:05, hustle-dev : https://velog.io/@hustle-dev/2022-%EC%83%81%EB%B0%98%EA%B8%B0-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%EC%B7%A8%EC%97%85-%ED%9A%8C%EA%B3%A0
2022. 5. 29. 오후 11:14, 유용태 (teo.yu) : 글 엄청 잘 적으셨네요!! 좋은데
합격 축하 드려요+_+ 많은 도움과 자극이 될것 같아요 
2022. 5. 29. 오후 11:15, hustle-dev : 감사합니다 테오님 덕분에 방에서 여러가지로 많이 도움받고 있습니다😊
2022. 5. 29. 오후 11:15, 프론트는 잼있어 : '합격 축하드립니다'
2022. 5. 29. 오후 11:24, 엔 : 축하드립니다!
2022. 5. 29. 오후 11:30, 현수 : 합격 축하드립니다!!
2022. 5. 29. 오후 11:31, 철진 : 글이 정말 좋네요!! 합격 축하드려요!!
2022. 5. 29. 오후 11:32, hustle-dev : 감사합니다👍
2022. 5. 29. 오후 11:32, 더위시러 : ㅎㅎ 같은 취준생으로 많은 자극이되네요 합격축하드립니다!!
2022. 5. 29. 오후 11:32, 더위시러 :  혹시 코테준비는 어떻게하셨나요??
2022. 5. 29. 오후 11:36, hustle-dev : 전 사실 코테를 잘하는편은 아니었는데, 그래도 프로그래머스랑 리트코드위주로 풀면서 준비했었어요
2022. 5. 29. 오후 11:37, hustle-dev : Js로 하다보니 백준 입출력이 귀찮아서 안했는데 백준에 좋은문제가 많은거같더라구요
2022. 5. 29. 오후 11:39, 치맥하는 제이지 : 이모티콘 축하드려요~!! 좋은글 공유해주셔서 감사합니다 :)))
2022. 5. 29. 오후 11:40, 더위시러 : 그쵸 ㅠㅠㅠ그래도 꾹참고 풀어봐야겠네요..답변감사합니다 :) 
2022. 5. 29. 오후 11:41, hustle-dev : 넵넵ㅜㅜ 파이팅!!✊️✊️

2022년 5월 30일 월요일
2022. 5. 30. 오전 12:12: 코린이이이(dev)님이 들어왔습니다.
2022. 5. 30. 오전 12:12, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오전 12:14: 코린이이이(dev)님이 나갔습니다.
2022. 5. 30. 오전 12:19, A대 4-1(진) : 좋은글 감사합니다 ! 참고해서 취준 해야겠네요 ! 축하드립니다
2022. 5. 30. 오전 12:31, 웹린이 : 글 정말 잘쓰시네요! 고생 많으셨습니다 ㅎㅎ 취뽀 축하드려요!🎉🎉🎉🎉🎉
2022. 5. 30. 오전 12:32, 웹린이 : hustle-dev님 글 솜씨랑 꾸준함이 굉장히 탐나네용 ㅋㅋ
2022. 5. 30. 오전 12:40, hustle-dev : 항상 쓰고나면 뭔가 몇프로 부족한거 같은데.. 그렇게 말씀해주셔서 감사합니다 ㅎㅎ 
2022. 5. 30. 오전 12:44, O_O : 이제 곧 유투브에서 뵐 수 있는건가요 ㅎㅎㅎㅎ
2022. 5. 30. 오전 12:48, hustle-dev : 아뇨… ㅋㅋㅋ 원래 아싸라 지금 주신 관심으로도 너무 과분합니다
2022. 5. 30. 오전 1:11: 감자코딩님이 들어왔습니다.
2022. 5. 30. 오전 1:11, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오전 6:21: 아이뽀송님이 들어왔습니다.
2022. 5. 30. 오전 6:21, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오전 8:29, 유용태 (teo.yu) : 안녕하세요 감자코딩님 이용욱님 반갑습니다 어서오세요 ㅎㅎ
2022. 5. 30. 오전 8:30, 유용태 (teo.yu) : 타입스크립트의 Never 타입 완벽 가이드
https://ui.toast.com/weekly-pick/ko_20220323
2022. 5. 30. 오전 8:36, 유용태 (teo.yu) : 프론트엔드에서 자주쓰이는 61가지 용어 정리
https://tapajyoti-bose.medium.com/61-frontend-web-development-buzz-words-every-developer-should-have-in-their-vocabulary-8054e484875?source=email-e012841b24ec-1653844971105-digest.reader--8054e484875----0-96------------------2a14fe9e_a9bb_414e_b559_4577a6142379-1-
2022. 5. 30. 오전 9:05, 아이뽀송 : 반겨주셔서 감사합니다 ㅎㅎ
2022. 5. 30. 오전 9:06, Herb : 《함수형 코딩》 책 진짜 좋네요
추천해주셔서 감사합니다
2022. 5. 30. 오전 9:07, 유용태 (teo.yu) : 맞아요 ㅋㅋ 함수형 코딩을 하지 않더라고 관점을 알게 해줘서 시야가 커질 수 있는 좋은 책이라고 생각해요 ㅎ
2022. 5. 30. 오전 9:08, 유용태 (teo.yu) : 저도 감사합니다 여기는 프론트엔드 혹은 개발을 하면서 궁금한것들을 같이 공유 하고 답하면서 함께 성장하고자 하는 공간입니다 ㅎ 글 편하게 남겨주시고 하고 싶은게 있다면 얼마든지 제안 주세요 ㅎ
2022. 5. 30. 오전 9:12, 이프노즈 : 테오님 블로그의 테오님 글 어떻게 보나요? ㅜㅜ 링크들어가보니 채팅하고 링크모음으로 바뀌었네요
2022. 5. 30. 오전 9:12, 유용태 (teo.yu) : https://velog.io/@teo
2022. 5. 30. 오전 9:13, 이프노즈 : 감사합니다~!
2022. 5. 30. 오전 9:13, 유용태 (teo.yu) : 입니다
2022. 5. 30. 오전 9:22, 아이스크림 : CSSOM 이거 어떻게 읽나요~~??ㅎ…
2022. 5. 30. 오전 9:23, 여의도개발 : CSS 옴?
2022. 5. 30. 오전 9:24, 아이스크림 : '씨에스에스옴'이요.......??
2022. 5. 30. 오전 9:33, 프론트 공부 : CSS Object model?
2022. 5. 30. 오전 9:38, 사수가없어요 : 저 근데 다른 질문인데여..
2022. 5. 30. 오전 9:38, 사수가없어요 : 데이터베이스 표준 SQL문 공부하려면
2022. 5. 30. 오전 9:38, 사수가없어요 : 어떤거부터 보는게 좋나요? 
2022. 5. 30. 오전 9:38, 사수가없어요 : 기본으로..
2022. 5. 30. 오전 9:42, 안녕하세요 : 씨쏨
2022. 5. 30. 오전 9:42, 안녕하세요 : 이라고 주로 읽더라고요
2022. 5. 30. 오전 11:07, 프엔공부중 : react-query 쓰다가 특정 부분은react-query를 안쓰고 axios만 이용해서 api 호출해서 받아와도 괜찮을까요..?

react-query의 옵션이나 기능들을 쓰지 않을것 같은데 커스텀훅까지 작성하고 하기에는 불필요해보이는데 또 통일성이나 유지보수를 위해서는 아예 모두 리액트 쿼리를 써야하나 싶네요.. ㅠ 
2022. 5. 30. 오전 11:07, 웹린이 : react-query 기능이 필요 없는 경우에는
2022. 5. 30. 오전 11:07, 꽐 : 상관없을거 같은데요
2022. 5. 30. 오전 11:07, 웹린이 : 굳이 사용하지 않아도 된다고 생각합니다
2022. 5. 30. 오전 11:08, 프엔공부중 : 오 넵! 통일해야 하나 고민했는데 감사합니다!
2022. 5. 30. 오전 11:22, 델 : 굳이 안 써도 되는데, 저라면 파일 분리는 안 하더라도 리액트쿼리는 썼을 거 같아요
2022. 5. 30. 오전 11:23, 델 : 쓰는 게 코드 줄 수가 더 적어서..
2022. 5. 30. 오전 11:24, 프엔공부중 : 오 좋은 의견 감사합니다!
2022. 5. 30. 오후 12:15: 인사하는 프로도님이 들어왔습니다.
2022. 5. 30. 오후 12:15, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오후 12:34, 여의도개발 : https://youtu.be/kkiLBF_YerM

정말 오래기다렸던 기능들이 다수있네요~ 10분컷이라 한번쯤 보시면 좋을긋합니다
2022. 5. 30. 오후 1:46, 철진 : 안녕하세요. 질문을 드리고 싶은데요. react-query를 사용하실 때 커스텀 훅을 어떤 기준으로 생성하시는지 궁금합니다! 

1. 한 페이지에서 사용하는 API가 무척 많은데, 대부분 mutation 관련이고 query가 2개 정도 일때 API는 여러개지만 한 개의 커스텀 훅으로 묶으시는지 궁금합니다. 
2022. 5. 30. 오후 1:55, 까루 : 알고리즘 문제를 풀다가 궁금한게 생겨서 여쭤보려고 합니다
함수에 인자로 
1. count++ 
2. count + 1 또는 count +=1 
을 넘기는 것에 값의 차이가 있던데 count++은 이전 값이 기억이 안되는 것 이라고 보면 될까요?
2022. 5. 30. 오후 1:55, 까루 : 사진
2022. 5. 30. 오후 1:55, 까루 : 대충 이런 함수 입니다
2022. 5. 30. 오후 1:57, 동동 : count++ 은, count 값을 평가한 뒤에 count += 1 을 하는 것입니다!
그래서 만약에 
DFS(rdx,cdx,idx,count++) 은, DFS 함수에 넘어가는 인자는 기존의 count값과 동일하고, 그 이후에 count += 1을 수행합니다
2022. 5. 30. 오후 1:58, 승훈 : 값을 사용해 코드 실행 후에 증가 시키는 연산자로 알고 있습니다.
2022. 5. 30. 오후 1:58, 하자코딩 : ++count 라고 넣어보시면 값이 잘 나올까요?
2022. 5. 30. 오후 1:58, 동동 : 유사한 연산자로 ++count 가 있는데, 요건 count +=1 을 하고 난뒤에 count를 평가하기 때문에, DFS(rdx,cdx,idx,++count)는 count+=1 을 한 뒤에 DFS 함수에 count를 전달합니당
2022. 5. 30. 오후 1:58, 까루 : 아 ++count는 잘 나오네요!
2022. 5. 30. 오후 1:58, 동동 : 헷갈리시면 그냥 ++ 연산자는 안쓰시면 됩니다 ㅎㅎ 요즘 린트에서는 쓰지말라고 에러도 많이 나와요
2022. 5. 30. 오후 1:59, 까루 : 넵 감사합니다
2022. 5. 30. 오후 1:59, 하자코딩 : 알고리즘 화이팅입니다 💪🏻
2022. 5. 30. 오후 1:59, 델 : 저는 query는 무조건 각각 하나씩 생성합니다! mutation 은 꼭 필요한 거 아니면 커스텀훅으로 잘 안 빼는 거 같아요
2022. 5. 30. 오후 1:59, 까루 : 정말 하기 싫은데 포기할수가 없네요 ㅠㅠ
2022. 5. 30. 오후 2:08, 프론트 지키미 : 프론트에서 보통 코테는 js로 풀어야 하나요???
2022. 5. 30. 오후 2:08, 까루 : 네 보통 JS로 언어 제한 시키는 곳도 많더라고요
2022. 5. 30. 오후 2:14, 프론트 지키미 : 답변 감사합니다!
2022. 5. 30. 오후 2:16: 사랑하긴했었나요스쳐가는인연이었나요짧지님이 들어왔습니다.
2022. 5. 30. 오후 2:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오후 2:17, 프론트는 잼있어 : '안녕하세요'
2022. 5. 30. 오후 2:17, 유용태 (teo.yu) : 인사하는 프로도님~ 사랑하긴했나요스쳐가는인연이었나요짧지님 반갑습니다. 다시 오셨네요 ㅎ
2022. 5. 30. 오후 2:21, DARTZ : 카톡알림만 보고 놀랐네요 갑자기 저런 문구가 나와서..
2022. 5. 30. 오후 2:21, 철진 : 답변 감사합니다! 그럼 mutation 같은 경우에는 컴포넌트에서 바로 사용하시나요?? 
2022. 5. 30. 오후 2:23, 델 : 그냥 useMutation 자체를 별로 적극적으로 안 쓰는 거 같아요! 오래 걸리는 api라거나 그런 게 아니면 메리트를 잘 못 느끼겠더라구요
2022. 5. 30. 오후 2:25, 철진 : 질문이 많아서 죄송합니다! 그렇다면 서버 데이터가 변경 된 후에 다시 fetch 하는 부분은 useQuery를 따로 다시 호출하시는 걸까용??
2022. 5. 30. 오후 2:26, 델 : 음 useQuery 말고 invalidateQueries 아니면 refetch를 호출하긴 합니다!
2022. 5. 30. 오후 2:27, 철진 : 아하 이해됐습니다!! 감사합니다!!!
2022. 5. 30. 오후 2:27, 철진 : 한가지 더 궁금한점은 react query를 쓰면 따로 state를 통해 데이터를 관리할 필요는 없다고 느껴지는데, 몇몇 자료 같은 경우에는 state에 따로 넣어주는 경우도 있어서 그렇게 하는 이유가 특별히 있는지 궁금합니다! 
2022. 5. 30. 오후 2:30, 델 : 혹시 자료 공유해주실 수 있나요??
2022. 5. 30. 오후 2:31, 철진 : https://ji5485.github.io/post/2022-04-24/use-react-query/ 
이 자료였습니다! 
2022. 5. 30. 오후 2:32, 철진 : 공식문서 등에서는 따로 상태로 관리 하지는 않는 모습이 보였는데, 이 자료에서 '클라이언트 상태와 동기화 시켜줄 필요가 있는 부분' 이 무엇이 있는지 궁금했습니다!
2022. 5. 30. 오후 2:38, Hardy : 기존 코드 구조가 서버 상태로만 관리할 수 없는 부분이 있으셨던거 아닐까요 
2022. 5. 30. 오후 2:39, Hardy : 제가 보기엔 정상적이지 않은 상황이지 않을까 싶네요
2022. 5. 30. 오후 2:44, 퇴근하는 프로도 : 안녕하세요 위에서 추천하신 함수형코딩 책 링크가 있으시다면 공유 부탁드립니다~~
2022. 5. 30. 오후 2:45, 유용태 (teo.yu) : http://www.yes24.com/Product/Goods/108748841
2022. 5. 30. 오후 2:47, 퇴근하는 프로도 : 오 감사합니다!!
2022. 5. 30. 오후 2:50, 델 : react-query 의 철학은 서버에 저장되어 있는 정보를 선언적으로 가져온다는 데에 초점이 맞춰져 있는데

이 때문에 언제 데이터를 가져오는지 언제 캐시를 날리는지 이런 명령적인 부분들은 전부다 라이브러리가 담당해요

그러다 보니 '서버 데이터를 가져오는 것' 이 아닌, api 콜이 클라이언트 로직과 조금이라도 관련이 있는 아이들은 react-query 로 관리하기에는 무리가 있는데 아마 그런 부분을 말씀하신 거 아닐까 싶어요!
2022. 5. 30. 오후 2:52, 델 : 가령 로그인 상태 같은 걸 생각해보면 api 콜을 통해서 로그인되었는지 체크하긴 하지만 react-query로 관리할 만한 서버 데이터라고 보기는 어렵죠
2022. 5. 30. 오후 2:53: MK님이 들어왔습니다.
2022. 5. 30. 오후 2:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오후 2:54, MK : 안녕하세요 테오님 벨로그 보고 들어왔네요~
2022. 5. 30. 오후 2:54, 유용태 (teo.yu) : 안녕하세요~~ MK님 감사합니다 :) 어서오세요. ㅎㅎㅎ
2022. 5. 30. 오후 2:55, 철진 : 예시를 통해서 설명해주셔서 이해가 잘 되었습니다!! 정말 감사합니다!!!!!! 
2022. 5. 30. 오후 3:22, 퉁이리 : 삭제된 메시지입니다. 
2022. 5. 30. 오후 3:22, 퉁이리 : 사진
2022. 5. 30. 오후 4:54, O_O : it 3대장(네카라) 다 풀재택하는군요...

2022. 5. 30. 오후 4:54, O_O : https://www.techm.kr/news/articleView.html?idxno=97952
2022. 5. 30. 오후 4:55, O_O : 아이패드에 애플펜슬이라니...!
2022. 5. 30. 오후 5:31, 포유 : 코어 타임 있고 디코 접속해있어야한다고 블라인드에서 난리네요
2022. 5. 30. 오후 5:32, MK : 그래도 출퇴근보단 낫지않나요?
2022. 5. 30. 오후 5:32, 포유 : 디코 접속해서 이어폰 항상 끼고 대기 타고 있어야 한다고 뭐.. 난리입니다. 출근해도 끼고 있어야한다고
2022. 5. 30. 오후 5:33, 포유 : 네이버 근무제랑 비교되는 것도 있을거구여
2022. 5. 30. 오후 5:33, 프론돌이 : 포유님도 노란집이신가보군요!
2022. 5. 30. 오후 5:37, O_O : 건너건너 들었는데 진짠가보네요... 
2022. 5. 30. 오후 5:37, O_O : 이러면 재택하는 이유가... cctv도 아니고 ㅠ
2022. 5. 30. 오후 5:37, 좌절하는 프론트 : 어디요..??
2022. 5. 30. 오후 5:38, 포유 : 노란집은 아닌데… 그냥 블라인드 IT라운지에서 그러더라구여 ㅎㅎ
2022. 5. 30. 오후 5:38, 좌절하는 프론트 : 아하?
2022. 5. 30. 오후 6:04, 프론돌이 : 재택 = 유연근무제는 아니니까요
2022. 5. 30. 오후 6:04, 썰cho : 아 궁금한게 재택이면 무조건 집에서 일해야된다는 말이
2022. 5. 30. 오후 6:04, 썰cho : 맞는건가요
2022. 5. 30. 오후 6:04, 썰cho : 카페에서 일했다고
2022. 5. 30. 오후 6:04, 썰cho : 뭐라 들었네요
2022. 5. 30. 오후 6:05, 엔 : 재택하면서 디스코드로 상시대기 해야해요
2022. 5. 30. 오후 6:05, 엔 : 부르면 바로 대답해야
2022. 5. 30. 오후 6:05, O_O : 아뇽...보통은 근무지에 제한을 안 둔다는 의미로 쓰여요
2022. 5. 30. 오후 6:05, 썰cho : 저 카페에서 일하면서 다른작업도 하면서
2022. 5. 30. 오후 6:05, 프론돌이 : 카카오는 기존에 유연근무제 하고 있었는데, 풀재택 하게 되면서, 
그거 대신 코어타임에는 무조건 있어라 하게 되서 반발이 있는듯. 

애초에 다른 회사는 이미 다 그러고 있는거구요. 유연근무제가 아닌 이상 ㅋ
2022. 5. 30. 오후 6:05, 썰cho : 계속 컴퓨터 앞에 있긴했는데
2022. 5. 30. 오후 6:05, 썰cho : 재택이 집에서 근무하는게 아니냐고
2022. 5. 30. 오후 6:05, 썰cho : 혼났었어요
2022. 5. 30. 오후 6:05, 썰cho : 말이야 방구야
2022. 5. 30. 오후 6:05, 여의도개발 : 전 적당히 번갈아가면서하는게 좋아요
2022. 5. 30. 오후 6:06, O_O : 가끔 진짜 근무지를 집으로 제한하는 '재택' 근무르 한다고 ㄴ하던데,, 실제로 있나보네요
2022. 5. 30. 오후 6:06, 썰cho : 저희 고양이 있어서 집에서 노트북열면 노트북위에 올라가서
2022. 5. 30. 오후 6:06, 썰cho : 절대 집에서 집중을 못하는 구조라서
2022. 5. 30. 오후 6:06, 썰cho : 집 옆에 카페로 가는데
2022. 5. 30. 오후 6:06, 썰cho : 고양이 키우는걸 모르는거도 아니고
2022. 5. 30. 오후 6:06, 프론돌이 : 일반적인 재택 근무는 그런 리모트 근무가 맞긴 한데, 

코로나가 심해졌으니까, 코로나 예방을 위해서 재택하자 라는 취지에서는, 
사람 많은 카페도 취지에 맞지는 않죠 ㅋ 

그래서 상황이 중요하다고 생각합니다
2022. 5. 30. 오후 6:07, 썰cho : 코로나 걸렸을때는 당연히 집에서 했었고, 집중을 위한 개발팀 재택 근무 매주 2회 있거든요
2022. 5. 30. 오후 6:07, 프론돌이 : 애초에 집중을 위한 개발팀 재택 근무라면, 
집중만 잘 할 수 있으면, 그게 어디든 상관안하는게 맞을 것 같은데, 윗분들은 다르게 생각하나보군요
2022. 5. 30. 오후 6:07, 썰cho : 개발팀 팀장이 그말해서
2022. 5. 30. 오후 6:07, 프론돌이 : 저희팀 분들은 한달간 제주도 가셔서 하시기도 하고 그러던데 !  부러웠음
2022. 5. 30. 오후 6:08, 썰cho : 어
2022. 5. 30. 오후 6:08, 썰cho : 제 아는분이
2022. 5. 30. 오후 6:08, 썰cho : 회사에서 여성분 4명
2022. 5. 30. 오후 6:08, 썰cho : 제주도 갈 계획 세우고 계시던데
2022. 5. 30. 오후 6:08, 썰cho : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 30. 오후 6:08, 프론돌이 : 업무시간에 일 하고, 퇴근하고 나서, 맛있는거 먹고, 여행하고. 힐링하고! 좋죠
2022. 5. 30. 오후 6:08, 썰cho : 저는 강원도로 가고싶어요
2022. 5. 30. 오후 6:09, 포유 : 카페에서 하면 회사 코드나 작업하는거 다른 사람이 볼 수도 있으니
2022. 5. 30. 오후 6:09, 포유 : 보안 차원에서 그럴 수도 있지 않을까요
2022. 5. 30. 오후 6:09, 설아아빠 : 저는 제주도라 서울가고 싶어요 
2022. 5. 30. 오후 6:09, 포유 : 와이파이도 공용으로 쓸꺼구
2022. 5. 30. 오후 6:09, 썰cho : 보안차원이었으면 애초에 노트북 분출이 안되는게 맞는건데
2022. 5. 30. 오후 6:10, 썰cho : 내부망도 아니고
2022. 5. 30. 오후 6:10, 썰cho : 애초에 보안이라는게 없어요 회사 유저정보도 다 암호화도 안되어있는걸요
2022. 5. 30. 오후 6:11, 썰cho : 회사 내부아무나 쿼리 치고 데이터 조회함..
2022. 5. 30. 오후 6:12, 포유 : 그런 문제가 아니라면 고양이 때문에 집에서 일을 못한다고 설득을 해봐야하지 않을까요 ㅋㅋㅋ
2022. 5. 30. 오후 6:23, 초롱초롱 네오 : webGL 사용해보신 분 있으실까요,, xml파일 리액트 프로젝트에 읽을 수 있도록 해야되는데 잘 안되네요,,
2022. 5. 30. 오후 6:23, 좌절하는 프론트 : 냐옹아 ㅋㅋㅋㅋ
2022. 5. 30. 오후 7:22: 곰곰님이 들어왔습니다.
2022. 5. 30. 오후 7:22, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 30. 오후 7:26, 곰곰 : 안녕하세요. 아직 많이 부족한 프론트엔드 주니어 개발자입니다. 잘부탁드립니다.
2022. 5. 30. 오후 7:51, 그레이 : 사진
2022. 5. 30. 오후 7:52, 그레이 : @hustle-dev 구글 피드에 블로그 글이 뜨네용 ㅎ
2022. 5. 30. 오후 7:54, hustle-dev : 우와~ 신기하네요.. 처음봤어요
2022. 5. 30. 오후 7:56, 대장 : 역시 허슬 ..
2022. 5. 30. 오후 11:01, 이영광 : 안뇽하세용

2022년 5월 31일 화요일
2022. 5. 31. 오전 12:27, 웅세 : 혹시 dvh, lvh, svh가 css에서 지금 사용이 가능한걸까요?
2022. 5. 31. 오전 12:27, 웅세 : https://youtu.be/kkiLBF_YerM
2022. 5. 31. 오전 12:28, 웅세 : 이영상에 나오는거요!
2022. 5. 31. 오전 12:30, 강승진 : https://caniuse.com/?search=dvh
매우제한적입니다
2022. 5. 31. 오전 12:31, 웅세 : 정말 제한적이네요 ㅋㅋㅋㅋㅋㅋ
2022. 5. 31. 오전 12:31, 웅세 : caniuse라는 사이트 처음알았습니다 감사합니다!!
2022. 5. 31. 오전 3:49, 어핏 : IntersectionObserver로 무한 스크롤 구현중에 질문 드립니다. 

단순한 문제인 것 같은데 어딘가에 말려버린 것 같아서요🤪

pageEnd Element에 도달할 때마다 handleLoadMore 함수를 실행 시켜서 
page + 1 씩 올려주고 있는데요. 

15번째 줄 콘솔에서는 카운트가 1씩 잘 올라가는데 
18번째 줄 콘솔에 page는  왜 '1' 만 카운트가 되는지 모르겠습니다. 

도저히 감이 안잡혀서 글 남겨봅니다 😞


2022. 5. 31. 오전 3:50, 어핏 : 사진
2022. 5. 31. 오전 4:30, 여의도개발 : 현재는 대부분 사용불가입니다
2022. 5. 31. 오전 7:02, 베르캄프 : fetchProducts를 setPage의 콜백함수로 호출해보면 어때요?
2022. 5. 31. 오전 7:09, 베르캄프 : 계속 1이면 이건 아니겠네요.😬
2022. 5. 31. 오전 7:10, 프론트 공부 : setPage로 재 할당되기전에 fetchProducts 가 호출되어서 그런거같아요,, 
2022. 5. 31. 오전 7:15, 프론트 : 옵저버에서 호출하는 fetchProducts는 page가 1일 때 생성된 함수라 항상 page가 1일 거에요 page가 바뀔 때마다 함수가 재정의될 텐데 옵저버에는 해당 내용을 반영해주지 않고 있네요
2022. 5. 31. 오전 7:35, 여의도개발 : 영상 보구 정리해봤습니다.
https://blog.naver.com/minhyupp/222752527293
2022. 5. 31. 오전 7:39, 여의도개발 : 가장 인상깊었던건 @scope와 :has() 였네용
2022. 5. 31. 오전 7:39, 취미는개발 : 깔끔하게 정리 잘 해주셨네요 ㅎㅎ
2022. 5. 31. 오전 7:39, 취미는개발 : 감사합니다 :)
2022. 5. 31. 오전 7:39, 취미는개발 : 근데 읽어보니까 중복 카운팅이 있는 것 같아요 !
2022. 5. 31. 오전 7:40, 취미는개발 : 사진
2022. 5. 31. 오전 7:40, 취미는개발 : 14번 스코프 밑에
2022. 5. 31. 오전 7:40, 취미는개발 : 사진
2022. 5. 31. 오전 7:40, 취미는개발 : 9번 컨테이너가 오네요
2022. 5. 31. 오전 7:40, 여의도개발 : ㅋㅋ;;; 네네
2022. 5. 31. 오전 7:40, 취미는개발 : 너무 잘 읽었습니다 감사합니다 :)
2022. 5. 31. 오전 8:03, 꼬북 : 저두 has랑 & 너무 좋더라구요!!
2022. 5. 31. 오전 8:04, 꼬북 : Sass scss 안쓰는날이 왔으면!
2022. 5. 31. 오전 8:21, 유용태 (teo.yu) : document.querySelectorAll 결과에 타입을 제대로 반영해주는 타입스크립트 라이브러리!!
https://github.com/g-plane/typed-query-selector
2022. 5. 31. 오전 8:25: 메멘토모리님이 들어왔습니다.
2022. 5. 31. 오전 8:25, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오전 8:25, 어핏 : 생성자 함수 문제였다니 ㅠㅠㅠㅠ 감사합니다. 새벽까지 삽질하구 있었는데 덕분에 영구지식 하나 생겼네요👍🏻
2022. 5. 31. 오전 8:26, 유용태 (teo.yu) : 안녕하세요 메멘토모리님~~ 반갑습니다 :)
2022. 5. 31. 오전 8:38: 流浪狗님이 들어왔습니다.
2022. 5. 31. 오전 8:38, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오전 8:39, 유용태 (teo.yu) : 流浪狗님 반갑습니다. 어서오세요. 뭐라고 읽어야 하나요? +_+ ㅋ
2022. 5. 31. 오전 8:39: 流浪狗님이 나갔습니다.
2022. 5. 31. 오전 8:39, Kani : 나갓....
2022. 5. 31. 오전 11:05, 퉁이리 : https://youtu.be/By49qqkzmzA
2022. 5. 31. 오전 11:13, 좌절하는 프론트 : 퉁이님이
썬글라스 쓴거에용?
2022. 5. 31. 오전 11:21, 퉁이리 : 저처럼 잘생기시긴하셨네요(크크)
2022. 5. 31. 오전 11:21, 카타나 : ?
2022. 5. 31. 오전 11:21, 설아아빠 : 저도 얼빠라 썸네일보고 어제 영상 봤는데
2022. 5. 31. 오전 11:25, 철진 : 안녕하세요. 질문 하나 드리고 싶습니다. 현재 회사에 리액트 쿼리를 도입해보는 중인데요!! 세션 만료가 된 경우에 서버에서 200에 리다이렉트(html)을 던지는 상황인데... 이를 핸들링 하기가 난해한 상황입니다. 리액트 쿼리 select 옵션에서 따로 에러로 강제로 보내는 방법이 있을까요? 
2022. 5. 31. 오전 11:47, 델 : axios interceptor 에서 처리하는 건 어떨까요?
2022. 5. 31. 오전 11:49, 훌온텐드 : 무조건 서버수정해야합니다. 클라에서 처리 ㄴㄴ
2022. 5. 31. 오전 11:52, 델 : 저도 웬만하면 서버를 고치는 게 좋아 보여요
2022. 5. 31. 오후 12:01, 엔 : 저도 서버에서 처리가 불가피하면 이 방법이 좋을 것 같습니다
2022. 5. 31. 오후 1:03, 철진 : 얽힌 코드들이 너무 많아서 ㅠㅠ 서버에서 당장 수정하기는 어려우니 이쪽 방향으로 고민해봐야겠네요! 답장 감사합니다! 기존에도 AxiosResponse 받아서 가공해서 처리 중이긴 했는데 분기처리를 잘 해봐야겠네요!! 감사합니다!! 
2022. 5. 31. 오후 1:03, 철진 : 다들 답변 감사합니다!!
2022. 5. 31. 오후 1:11, 핸디(강경석) : [홍보주의]
이번에 react-i18next를 적용한 글을 작성해봤습니다. ㅎㅎ
https://all-dev-kang.tistory.com/entry/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EA%B8%80%EB%A1%9C%EB%B2%8C%ED%95%9C-%EC%9B%B9%EC%9D%84-%ED%96%A5%ED%95%98%EC%97%AC-react-i18n-%EB%8B%A4%EA%B5%AD%EC%96%B4%EC%A7%80%EC%9B%90?category=952649
한번씩 읽어보시고 더 좋은 방법이 있다면 알려주시면 개선해보겠습니다.
추가로 이 방에 계신 분들은 어떤 방식으로 i18n을 대응하고 계신지도 궁금합니다.
2022. 5. 31. 오후 1:19, 철진 : 저희는 react-localization과 ts 파일을 이용해서 다국어 지원을 하고 있습니다! script를 통해서 번역을 해서 지원하는중이에요…
2022. 5. 31. 오후 1:23, 핸디(강경석) : react-localzation을 한번 살펴봐야겠습니다. 
여력이 된다면 이 내용도 추가해봐야겠습니다. ^^
2022. 5. 31. 오후 1:28, 파이팅 : 보통 html 마크업에 스크린 리더를 적용하려고 구글링을 해보니 wai-aria 또는 alt를 쓰는 것 같은데, 현업분들은 주로 어떤식으로 사용하시는지 궁금합니다
2022. 5. 31. 오후 1:32, 핸디(강경석) : 제가 직접 해본지 않았지만 인상깊게 봤던 발표가 있어서 공유드립니다.
https://www.youtube.com/watch?v=tKj3xsXy9KM
2022. 5. 31. 오후 1:43, 훌온텐드 : 그런데 다국어 관련해서 굳이 i18n과 같은 모듈을 쓰면 편한점이 무엇인가요? 언어세팅에 따라서 json이든 코드든 번역키 - 밸류로 스트링만 가지고 있으면 되지않나요? 큰 장점을 모르겟네요.
2022. 5. 31. 오후 1:50, 유용태 (teo.yu) : 그걸 하기 귀찮다? ㅋ
2022. 5. 31. 오후 1:50, 유지남 : 맞습니다. i18n과 같은 방법으로 관리하면 좋다는거지 그걸 꼭 써야한다는 아니예요. 
2022. 5. 31. 오후 1:51, 유용태 (teo.yu) : 그렇게 중요한게 아닌데 별도로 만들어서 쓰면 인수인계 할때마다 얘기를 해줘야 되서...
2022. 5. 31. 오후 1:51, 유용태 (teo.yu) : 그냥 이거썼어요가 편하더라구요...
2022. 5. 31. 오후 1:53, 유지남 : 맞아요. 라이브러리를 만들어 인계할 때 문서를 만들어야 하니 커뮤니티가 잘 활성화 되어 있는 라이브러리를 사용하는 것 처럼, i18n도 비슷한 맥락으로 몇개국어 구현하지 않는다면 간단하게 만들어서 공유하고, 더 크다면 그만드는 방법보다는 관리 방법에 포커싱이 되니 자연스레 i18n 으로 넘어오게 되겠죠
2022. 5. 31. 오후 1:55, 유지남 : 기승전 문서화죠 ㅎㅎ
2022. 5. 31. 오후 1:56, 훌온텐드 : 오 답변들 감사합니다. 저는 npm에 모듈 이것저것 설치하면 용량만 커지고 별 이점이 없는거 같아 직접 구현하는 편이거든요. 말씀해주신 내용들이 맞는거 같네요.
2022. 5. 31. 오후 1:56, 유용태 (teo.yu) : 직접 구현한것을 npm에 올리신 다음에 '이거 썼어요~' 하시는것은 어떨까요? ㅋㅋ
2022. 5. 31. 오후 1:57, 유용태 (teo.yu) : 문서화 넘나 귀찮은것 ㅠ
2022. 5. 31. 오후 1:57, 멀기트 : ㅠㅠ
2022. 5. 31. 오후 1:57, 훌온텐드 : ㅋㅋㅋ 그정돈 아닙니다. 대부분 회사플젝에 최적화 되잇어서... 퍼블릭으로 만들려면 일이 커집니다 ㅋㅋㅋ
2022. 5. 31. 오후 1:57, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 31. 오후 2:10: 아이스크림 든 네오님이 들어왔습니다.
2022. 5. 31. 오후 2:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 2:10, 유용태 (teo.yu) : 아이스크림을 든 네오님~~ 반갑습니다 :)
2022. 5. 31. 오후 2:11, 좌절하는 프론트 : 아이스크림의 계절 🍦 
2022. 5. 31. 오후 2:12, 아이스크림 든 네오 : 안녕하세요! 벨로그 글보다가 오픈채팅방이라는게 있길래 들어왔습니다 잘부탁드립니다 =) !! 
2022. 5. 31. 오후 2:13, 유용태 (teo.yu) : 감사합니다!! 여기는 프론트엔드를 하다가  아니면 개발이나 협업 회사 생활 취준등을 하면서 다른 개발자들에게 궁금한게 생겼을때 서로 물어보고 공유하고자 하는 공간입니다 ㅋ 맘편하게 관심있는 주제나 질문 남겨주세요~~
2022. 5. 31. 오후 2:23, 메멘토모리 : 회사 내부에서 사용할 웹페이지를 만드려 하는데, 프론트를 리액트로 하려 합니다.
리액트 개발환경을 구성하려 하는데, next.js와 create-react-app 둘 중 하나를 고민하고 있습니다.
사내 인원들만 사용하는 것이니 SEO나 서버사이드 렌더링을 안해도 될 것 같아서 create-react-app을 이용할까 하는데 괜찮을까요?
2022. 5. 31. 오후 2:27, 델 : 넵
2022. 5. 31. 오후 2:28, 유용태 (teo.yu) : 네~
2022. 5. 31. 오후 2:28, 유용태 (teo.yu) : SSR은 필요없을 것 같구요. vite 한번 써보세요 +_+
2022. 5. 31. 오후 2:28, 부끄러운 어피치 : 스벨트 만세~!!!
2022. 5. 31. 오후 2:28, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 31. 오후 2:31, 메멘토모리 : vite전에 한 번 맛봤었는데, eslint 설정을 따로 해주어야 하지요??
2022. 5. 31. 오후 2:32, 프론트 지키미 : 커스텀훅에서 컴포넌트를 렌더링 하는 방식으로도 많이들 사용하시나요???
(사실 상황에 따라 다른거겠죠????)

저는 비즈니스 로직을 주로 커스텀 훅 으로 관리, 
컴포넌트는 사용하는 쪽에서 노출 하는 방식을 주로 사용합니다.
노출 하는 방식이 코드의 파악에 좀 더 직관적이지 않을까 싶은 생각에 이 방식을 선호했었습니다.
물론 커스텀 훅에서 추상화가 잘 함수가 컴포넌트를 반환해 준다면 문제는 없다고 생각해요
2022. 5. 31. 오후 2:32, 프론트 지키미 : 사진
2022. 5. 31. 오후 2:32, 프론트 지키미 : https://engineering.linecorp.com/ko/blog/line-securities-frontend-3/
2022. 5. 31. 오후 2:34, 델 : 확실하진 않은데 vite가 얀베리 지원을 안해주는 거 같더라고요ㅜㅜ
2022. 5. 31. 오후 2:35, 델 : 사진
2022. 5. 31. 오후 2:36, 메멘토모리 : 감사합니다~
2022. 5. 31. 오후 2:36, 델 : 린트 설정은 웹팩이어도 따로 해줘야 하지 않나요..?
2022. 5. 31. 오후 2:37, O_O : 제가 예전에 이글 저희회사에 전파 시켰습니당....
2022. 5. 31. 오후 2:39, 프론트 지키미 : 답변 감사합니다!

전파 후에 어떤 의견이 오고 갔는지 대략적으로 알 수 있나요??
2022. 5. 31. 오후 2:46, 프론트 지키미 : 자답입니다.
2022. 5. 31. 오후 2:46, 김동현 : 비슷하게 가고 있는데 isAllChecked 같은 Controller 요소만 hook으로부터 전달받고 렌더링 자체는 hook에서 받은 요소로 직접합니다. 

깔끔한 VC패턴을 유지할 수 있습니다.
2022. 5. 31. 오후 2:46, 프론트 지키미 : 사진
2022. 5. 31. 오후 2:46, 프론트 지키미 : 낯설지만 의도가 명확하다면 괜찮다는 것이 제 생각이 되엇어요1
2022. 5. 31. 오후 2:46, 프론트 지키미 : 답변 감사합니다11
2022. 5. 31. 오후 2:48, 김동현 : MVC 패턴을 적용한다는 것이 정말 애매모호하고 잘하고 있나 의심이 들때가 많았는데, 커스텀훅을 정말 잘 사용하면 MVC를 제대로 구현할 수 있습니다
2022. 5. 31. 오후 2:48, 살려줘 네오 : Vite로 개발해도 기존의 리액트 개발 방식과 동일 한가요?  차이라고 하면 무엇이 있을까요?
2022. 5. 31. 오후 2:48, O_O : 좀 예전이라 거기까진 기억이 안나는데...
제가 저 글 읽기 전부터 저런 패턴을 종종 썼는데 알고보니 정리가 잘된 저 글이 있더라구요. 그래서 저희팀이 리액트를 주제로 스터디할 때 아티클로 선정해서 팀원분들께 소개했습니다. 

renderChecks처럼 함수로는 사용 안하고  컴포넌트를 변수에 담아서(파스칼케이스로 작성해서 컴포넌트라는걸 알 수 있게 해서, 아티클 경우라면 const Checks = ~) 리턴하고 있어요.
2022. 5. 31. 오후 2:49, 살려줘 네오 : 혹시 라이브러리 사용 관련해서 vite사용시 좀 제한적이지 않나요?
2022. 5. 31. 오후 2:49, 프론트 지키미 : 렌더함수를 사용하지 않은 이유는 팀 컨벤션이나 가독성과 같은 이유가 될까요?
2022. 5. 31. 오후 2:50, O_O : 넵 그런 이유에서 파스칼케이스로 컴포넌트인것만 알 수 있게 하고 있어요
2022. 5. 31. 오후 2:51, 프론트 지키미 : 의견 감사합니다!!!
2022. 5. 31. 오후 2:56, 설아아빠 : https://www.youtube.com/watch?v=1V6mQom0paI

react oop 진짜 공감가고 잼있네요 ㅎㅎ 
2022. 5. 31. 오후 3:01, 메멘토모리 : create react app은 린트 설정을 품고 있는 것 같습니다~
2022. 5. 31. 오후 3:02, 지노 : 사진
2022. 5. 31. 오후 3:02, 좌절하는 프론트 : 용량이 ?
2022. 5. 31. 오후 3:03, 지노 : 제가 맡고 있는 프로젝트인데 외부 사이트 크롤링으로 이미지의 링크만 전달해줘서.. 이런 사태가 벌어졌는데
2022. 5. 31. 오후 3:03, 살려줘 네오 : 안녕하세요?
프로젝트 초기 단계에서 보통 회사에서 초기셋팅하실때 cra없이 웹팩으로 번들링 하시고 셋팅하시나요? 어떤 식으로 하시는지 궁금합니다 ㅠㅠ
2022. 5. 31. 오후 3:03, 지노 : 클라이언트에서는 해결할 수 있는게 없겠죠ㅋㅋㅋ큐ㅠㅠㅠㅠㅠ
2022. 5. 31. 오후 3:03, 퇴근하는 프로도 : 안녕하세요.. 고민이 있어 조언을 구하고자 합니다. 저는 아직 주니어이지만 어쩌다보니 소규모 프론트엔드 팀을 이끌게 되었는데요.. 개발자로 강제전환된 퍼블리셔 2명과 주니어 1명 그리고 프론트 경력 이제 갓 1년된 제가 있습니다. (달리 말하자면 시니어가 한명도없습니다)
개발 문화가 제대로 갖춰져있지 않아 페어프로그래밍부터 시작을 해야할 것 같은데, 디버깅 시 자리에서 나누는 이야기를 타 부서에서 떠든다고 싫어하고 인터넷 강의도 사무실 내 시청 금지 처분이 내려왔습니다.
개발문화를 바꾸기 이전에 다른 부서에게 양해부터 구해야하는 상황입니다.
프로젝트 자체는 개인적으로 커리어 가치가 있다고 생각하여 남았는데 점점 압박감이 커집니다. 현실적으로 회사에 남을 가치가 있을지 조언을 구하고 싶습니다..ㅎㅎ
2022. 5. 31. 오후 3:04, 좌절하는 프론트 : 직접 cli만들었다가 구려서 그냥 cra로 사용하고
설정 오버라이드 되는 모듈추가해서 필요하면 커스텀해서써요
2022. 5. 31. 오후 3:06, 좌절하는 프론트 : 일단 페어프로그래밍을 하지말고
코드리뷰를 해서 각자 어떤생각으로 코드를짰고
어떤 이슈 또는 어려움이있었는지 이야기를 회의실같은 공간에서 주기적으로한다면 타부서도 떠든다고 말하기는 어려울거같습니다
2022. 5. 31. 오후 3:06, 설아아빠 : (부르르)
2022. 5. 31. 오후 3:06, 설아아빠 : 진짜 우울하네요 떠든다니 …. 
2022. 5. 31. 오후 3:06, 좌절하는 프론트 : 그리고 해당부분에 대해서 왜 떠든다라고 하느티 모르겠으나
2022. 5. 31. 오후 3:07, 델 : 따로 이유가 없다면 있는 거 쓰는 게 최고더라구요.. 유지보수도 남이 해주고
2022. 5. 31. 오후 3:07, 좌절하는 프론트 : 이부분에 대해 업무를 잘하기위한 협의다라고 이야기를 하심이 좋을듯합니다
2022. 5. 31. 오후 3:07, 유용태 (teo.yu) : 회의실은 있나요? 함께 할 수 있는 공간?
2022. 5. 31. 오후 3:07, 유용태 (teo.yu) : 아니면 재택 근무를 하나요?
2022. 5. 31. 오후 3:08, 살려줘 네오 : 초기 셋팅을 하게 된다면.. cra vs vite(테오 추천) 어떤 것이 좋을까요? ㅠㅠ 사수 없이 홀로 구축할거 같습니다.
스토리북 셋팅도 같이 겸해보면서 여러 시도를 해보려고 합니다
2022. 5. 31. 오후 3:08, 퇴근하는 프로도 : 출근근무이고 회의실이 있습니다만 다들 주니어다보니 이슈가 생겼을 때 자리에 가서 이야기하면서 봐주는 빈도가 잦긴 합니다.ㅠㅠ 코드리뷰 위주로 우선 진행해야겠네요.. 말씀 감사드립니다.
2022. 5. 31. 오후 3:09, 유용태 (teo.yu) : 슬랙이나 메신저류 협업툴은 뭘로 쓰나요?
2022. 5. 31. 오후 3:09, 좌절하는 프론트 : 브라우저 지원정도는 어느정도인가요?모던 브라우저환경이라면 비테
추천드리고 cra는 이후에 커지면 esbuild로 바꿔야할거에요
2022. 5. 31. 오후 3:09, 유용태 (teo.yu) : 우선 사무실에서는 슬랙으로 소통하시고
2022. 5. 31. 오후 3:09, 퇴근하는 프로도 : 매터모스트를 사용하고 있습니다. 코드/스크린샷 수준에서는 첨부가 가능합니다.
2022. 5. 31. 오후 3:10, 퇴근하는 프로도 : 네넵
2022. 5. 31. 오후 3:10, 유용태 (teo.yu) : 아.. 꼭 슬랙일 필요는 없어요
2022. 5. 31. 오후 3:10, 유용태 (teo.yu) : 뭐든... ㅎ
2022. 5. 31. 오후 3:10, 유용태 (teo.yu) : 메터모스트가 메신져형인가요?
2022. 5. 31. 오후 3:10, 엔 : 환경셋팅에 경험이 많지 않으시고 사수도 없으시면 cra + craco로 가시는게 제일 효율적일 것 같네요
2022. 5. 31. 오후 3:10, 썰cho : 저흰 개발팀은 슬랙쓰고 회사는 잔디씁니다
2022. 5. 31. 오후 3:10, 썰cho : 잔디… 불편..
2022. 5. 31. 오후 3:10, 살려줘 네오 : 이후에 커지면 es build로 바꾼다는 말이 무슨 말씀이실까요 ㅜㅜ eject해서 새로 설정해야되다는 것일까요
2022. 5. 31. 오후 3:10, 썰cho : 저도 이거 추천합니다
2022. 5. 31. 오후 3:10, 썰cho : 진짜 깊게 설정하는게 아니면
2022. 5. 31. 오후 3:11, 좌절하는 프론트 : craco 같은걸로 설정을 오버라이딩 해줘야해요
2022. 5. 31. 오후 3:11, 썰cho : craco만으로도 충분한거 같아요
2022. 5. 31. 오후 3:11, 썰cho : eject나 cra없이 구성하는게 제일 최적화하기 좋은데
2022. 5. 31. 오후 3:11, 썰cho : 일어 커질거라서....
2022. 5. 31. 오후 3:11, 퇴근하는 프로도 : 넵 슬랙과 유사하되 화면 공유나 음성공유는 지원하지않는 형태입니다. 텍스트로만 의사소통하는게 쉽지않네요..ㅠㅠ
2022. 5. 31. 오후 3:11, 좌절하는 프론트 : cra는 웹팩 기반으로 구성되기에
웹팩이
번들링이
프로젝트
커지면 빌드가 너무 느려요
2022. 5. 31. 오후 3:11, 그레이 : 여러모로 오래있기 좋은 환경이 아니네요.. 남아있는 것의 장단점을 한번 고려해보시는게 좋을듯
2022. 5. 31. 오후 3:11, 좌절하는 프론트 : 그래서 나중에 또는 초기에 esbuild로 설정을 바꿔요
2022. 5. 31. 오후 3:12, 유용태 (teo.yu) : 사무실에서는 슬랙이나 디코를 이용해서 소통하시고 회의실은 정해진 시간에 오전에 한번 오후에 한번 등으로 시간을 정해보심은 어떨까요?
2022. 5. 31. 오후 3:12, O_O :  디버깅 시 자리에서 나누는 이야기를 타 부서에서 떠든다고 싫어하고 
->....ㅠㅠ 그럼 이회사는 영업팀도 전화통화 안하나요?
2022. 5. 31. 오후 3:12, 좌절하는 프론트 : 이걸 아까 썰님이 이야기하신대고 설정을 eject 하지는 않고 react-scripts 모듈 설정을 재정의 하는 방식으로 처리해요
2022. 5. 31. 오후 3:13, 퇴근하는 프로도 : 말씀 감사합니다.. 남아있는 것의 장점이 단점보다 작으면 결단을 내려야겠습니다.
2022. 5. 31. 오후 3:13, 유용태 (teo.yu) : 결단은 결단이고 하는 것은 하는거지요 ㅎ
2022. 5. 31. 오후 3:13, 살려줘 네오 : 아 cra후 초기에 craco로 설정을 일부를 초기에 바꾸거나 혹은 개발 후 빌드가 좀 커졌을 시, 바꾼다고 이해하면 될까요?
2022. 5. 31. 오후 3:13, 좌절하는 프론트 : eject 을 하지않는 이유는 cra 가 관리해주는 디펜던시와 설정을 개발자가 직접관리해야하는데
이게
좀 힘들어요 ㅋㅋ
2022. 5. 31. 오후 3:13, 썰cho : 저도 그런곳에서 1년정도는 있었는데 힘들긴했지만 기획부터 배포까지 모든 과정을 해봤을때 도움은 되더라고요
2022. 5. 31. 오후 3:13, 좌절하는 프론트 : 네 맞습니다
2022. 5. 31. 오후 3:14, 썰cho : 그래서 프론트중에 저희회사에서도 유일하게 aws만질수도있고
2022. 5. 31. 오후 3:14, 썰cho : 이것저것 다 전반적으로 알수있게된 큰 계기가 되었습니다.
2022. 5. 31. 오후 3:14, 좌절하는 프론트 : 저는 고달프더라고요
2022. 5. 31. 오후 3:14, 썰cho : 그래도 오래있는건 추천드리지 않는건.. 전반적으로 알게되는건 좋지만
2022. 5. 31. 오후 3:14, 퇴근하는 프로도 : CS업무 보시는 분들도 계시고한데 다들 자리가 가깝다보니 전화에 방해되어 싫어하는 것 같습니다. ㅠㅠ
2022. 5. 31. 오후 3:15, 좌절하는 프론트 : 아 유선 ㅠ
2022. 5. 31. 오후 3:15, 썰cho : 체계라던가 협업은 어떻게 해야되는지 등등..
2022. 5. 31. 오후 3:15, 썰cho : 그런 대규모 회사에서 배울수있는걸 못배운다는 느낌이라..
2022. 5. 31. 오후 3:15, 썰cho : 딱 1년 보시고 이직을 추천드립니다
2022. 5. 31. 오후 3:15, 퇴근하는 프로도 : 저희는 온프레미스인지라 ㅋㅋㅋ ㅠㅠ 클라우드는 이용하지 못하지만..그래도 인프라 지식이 약간 늘긴 늘더라구요.
2022. 5. 31. 오후 3:16, 퇴근하는 프로도 : 지금 딱 1년이라 고민이 됩니다. 경험 공유해주셔서 감사드립니다.
2022. 5. 31. 오후 3:16, 썰cho : 그럼 저는 슬슬 이직 준비하셔도 좋을거같아요
2022. 5. 31. 오후 3:16, 콘이 웃긴 무지 : 1년 덜채워도 괜찮을까요?
2022. 5. 31. 오후 3:16, 썰cho : 얼마나 덜채우셨나요
2022. 5. 31. 오후 3:16, 콘이 웃긴 무지 : 지금 7개월입니다
2022. 5. 31. 오후 3:16, 썰cho : 1년은 의미가 좀 있어서
2022. 5. 31. 오후 3:16, 썰cho : 퇴직금도 나오고, 연협 도 하고
2022. 5. 31. 오후 3:16, 살려줘 네오 : 저희랑 정 반대네요 .. 그래도 프론트가 인원이 있으셔서 부럽습니다 ㅜㅜ
2022. 5. 31. 오후 3:16, 썰cho : 그래서 보통 1년을 추천드립니다
2022. 5. 31. 오후 3:16, 썰cho : 정확히는 1년 3개월..
2022. 5. 31. 오후 3:17, 콘이 웃긴 무지 : 그렇군요 연협이나 퇴직금떄문이 아니라면
2022. 5. 31. 오후 3:17, 좌절하는 프론트 : 하지만 php를 시킨다면 도망치세욧
2022. 5. 31. 오후 3:17, 콘이 웃긴 무지 : 1년 덜채워도 상관없는거겠죠 ??
2022. 5. 31. 오후 3:17, 퇴근하는 프로도 : 원래는 저 혼자였는데, 시니어 인원 충원을 요구했더니 이렇게 되었습니다. ㅋㅋㅋ ㅠㅠㅠ
2022. 5. 31. 오후 3:17, 썰cho : 그쵸!
2022. 5. 31. 오후 3:17, 엔 : 그래도 주니어 레벨에서는 어디서든 1~2년은 배울 부분이 많이 있는 것 같아요 물론 더 좋은데에서 배울 수 있으면 좋겠지만…
2022. 5. 31. 오후 3:17, 썰cho : 그거 버리고도
2022. 5. 31. 오후 3:17, 썰cho : 다른데서 더 좋은 조건을제시했다면
2022. 5. 31. 오후 3:17, 썰cho : 가는거죠
2022. 5. 31. 오후 3:17, 콘이 웃긴 무지 : 그렇군요~!
2022. 5. 31. 오후 3:18, 썰cho : 근데 연협을 하고 3개월 월급받는순간에는 원천징수에 찍히기 때문에
2022. 5. 31. 오후 3:18, 썰cho : 다음 회사 연봉협상할때 좋아서
2022. 5. 31. 오후 3:18, 살려줘 네오 : 홀로 프론트엔드 전반을 책임진다면 , TDD는 프로젝트 기간때문에 힘들어도… 스토리북이라도 한번 적용해보면서 하는 것이 좋을까요? 아니면 추후에 e2e 테스트라도 해야할지 ㅜㅜ 프로덕트 출시 앞두고 테스트까지 쓸 여유가 있을진 모르겠지만서도요 
2022. 5. 31. 오후 3:18, 썰cho : 추천드리긴합니다
2022. 5. 31. 오후 3:18, 콘이 웃긴 무지 : 썰님 조언 참고해서 이직준비 잘 해보곘습니다 감사합니다 :)
2022. 5. 31. 오후 3:18, 퇴근하는 프로도 : 귀중한 조언들 감사드립니다. 현명한 판단 할 수 있도록 노력하겠습니다!
2022. 5. 31. 오후 3:19, 델 : 근데 전 면접 보시는거까지는 추천드려요
2022. 5. 31. 오후 3:20, 델 : 요즘 개발자 시장 연봉인상률이 하도 비상식적이라 지금 거품꼈을 때 탑승하는 게 오히려 더 이득일 수도 있어서..
2022. 5. 31. 오후 3:20, 엔 : 테스트는 필수적인건 아니니까요 만약 디자인시스템이 있거나 공통컴포넌트가 많으시면 스토리북 정도는 적용하더라도 테스트는 필수적인 건 아닌 것 같아요 실제로 테스트 제대로 하는 회사 별로 없습니다…
2022. 5. 31. 오후 3:21, 델 : 곧 불경기가 오니까 전세계 스타트업이 긴장하고 움츠리는 중인지라 시기를 놓치면 오히려 연봉 오르고 나서 이직해도 지금 이직하는 거보다 낮을 수도 있기도 하고
2022. 5. 31. 오후 3:21, 좌절하는 프론트 : 스토리북을
추천드리고
싶어요
바로바로 내가만든 컴포넌트
디자인과 인터페이스 확인이 가능해서 문서처럼도 쓰이고 작성한 컴포넌트에
대한 검증도 가능해요
2022. 5. 31. 오후 3:21, 델 : 면접 보면 힘들지만 배우는 게 많기도 하니까요!
2022. 5. 31. 오후 3:21, 살려줘 네오 : 프로도님 저도 조언을 하나 구해도 될까요ㅜ ㅜ?
2022. 5. 31. 오후 3:22, 좌절하는 프론트 : E2E는 좀 어려운부분이 많지만 qa 인력이 없다면 테스트 자동화 관점에서 편하지만 리소스로 인해 지치실거같아 비추
2022. 5. 31. 오후 3:22, O_O : ㅠㅠ 힘내세요..!
같은 업무 얘기인데 못하게 하는 회사라니 ㅠㅠ
2022. 5. 31. 오후 3:23, 곰곰 : 저도 프론트 시니어없는 회사에서 재직중인데. 제 코드에 확신이없어요.. 참 힘든거같아요.. 시니어없는 환경은..
2022. 5. 31. 오후 3:23, 좌절하는 프론트 : 이길이 맞는건가
2022. 5. 31. 오후 3:23, 좌절하는 프론트 : ㅠ ㅠ
2022. 5. 31. 오후 3:23, 철진 : 공감합니다… ㅠㅠㅠ 이게 맞는지.. 싶어요 
연차는 저보다 많은 팀원분들이지만 react 리드는 제가 하고 있어서… 이상한 기분
2022. 5. 31. 오후 3:23, 썰cho : 큰회사 아닌이상 중니어들을 뽑을수 없는거같아요
2022. 5. 31. 오후 3:24, 썰cho : 큰회사에서 돈주고 싹쓸어가서
2022. 5. 31. 오후 3:24, 살려줘 네오 : 그러게요… 시니어가 없는 것은 감안하더라도 개발 문화를 직접 만들어가야한다는 점도 어렵네요 ㅜ
2022. 5. 31. 오후 3:24, 썰cho : 그래서 보통 주니어들이 스타트업에 요새는 많은거같아요 ㅠㅠ
2022. 5. 31. 오후 3:24, 썰cho : 저도 다음 이직이나 다다음 이직은 무조건 대기업 생각하고 있어서 ㅠㅠ
2022. 5. 31. 오후 3:25, 곰곰 : 조그만 회사라서 제가 사내 개발자 모임도 만들고 리드하고있는데.. 여러모로 참 힘드네요. 제가 쌓고있는 경력이 제대로된 경력인지도 모르겠어요 ㅋㅋ..
2022. 5. 31. 오후 3:25, 좌절하는 프론트 : 다 좋은 경험과 성장으로 돌아올거에욧
2022. 5. 31. 오후 3:25, 좌절하는 프론트 : ㅇㅈ
2022. 5. 31. 오후 3:25, 살려줘 네오 : 그래도 사내 개발자 모임까지 하실 수 있으시면 그 자체가 좋은거 아닐까요 ㅜㅜ 부럽습니다 ㅜㅜ
2022. 5. 31. 오후 3:25, 철진 : 안에서 적극적으로 개발자 모임도 만들고 하시는 부분은 큰 도움이 될 것 같아요ㅈ!! 정말로! 
2022. 5. 31. 오후 3:26, 좌절하는 프론트 : 여긴 할려고해도 공감대가없어서 ㅋㅋㅋㅋ
2022. 5. 31. 오후 3:27, 곰곰 : 저희회사도 몇명 안되요 ㅎㅎ 저포함해서 4명정도.. 조촐하게 2주간격으로 모여서 개인프로젝트 진행하고, 배운거 공유하고 모각코하고 그럽니당…
2022. 5. 31. 오후 3:27, 살려줘 네오 : 혹시 프론트엔드는 몇명 되시나요 
2022. 5. 31. 오후 3:28, 곰곰 : 저포함해서 두명인거같아요
2022. 5. 31. 오후 3:29, 곰곰 : 정확히는 리액트 개발이라할수있겠네요
2022. 5. 31. 오후 3:29, 썰cho : 리액트로 프론트 개발하는거 아닌가요 ㅋㅋ
2022. 5. 31. 오후 3:30, 곰곰 : 넵 ㅎㅎ 근데 회사내에서 다른팀들은 자바로 개발하는 팀도있어서요
2022. 5. 31. 오후 3:34, 살려줘 네오 : 부럽습니다 !!
2022. 5. 31. 오후 3:34, 살려줘 네오 : 답변주신 @엔 @전설의die 감사합니다.  craco도 공부해봐야 겠네요
2022. 5. 31. 오후 3:35, 설아아빠 : 혹시 리엑트에서 비지니스로직은 클래스로 만들게되면 상태관리는 어떻게 하나요…?
2022. 5. 31. 오후 3:35, 썰cho : 리액트하면 거의 훅으로 관리하는게 좋지 않을까요
2022. 5. 31. 오후 3:36, 곰곰 : 저는 보통 훅으로 만들어서 관리하거나 비동기관련해서는 redux saga를 쓰고있어요
2022. 5. 31. 오후 3:36, 썰cho : 비즈니스로직을 커스텀훅으로 감싸는방향을 리액트에서는 많이 쓰더라고요
2022. 5. 31. 오후 3:38, 설아아빠 : props나 contextapi나 redux로 객체를 통으로 넘기는거에요~?
2022. 5. 31. 오후 3:38, 엔 : 클래스로 만든다는게 클래스 컴포넌트를 말씀하시는 걸까요?
2022. 5. 31. 오후 3:39, 설아아빠 : 아니요 그냥 객체 자체용 
2022. 5. 31. 오후 3:44, 엔 : 비즈니스 로직을 클래스로 만든다는게 어떤 말씀인지 잘 모르겠네요 ㅠ hoc의 형태로 만들어서 넘기신다는 이야기인지
2022. 5. 31. 오후 3:46, 설아아빠 : class TodoList{
   todos = [];

   addTodo(todo){
       this.todos = […this.todos, todo];
   }
}

const todoList = new TodoList();
2022. 5. 31. 오후 3:46, 설아아빠 : 제가 요런 클래스를 만들었다고 치면 이걸 어떻게 관리할수 있는지가 궁금해요 …
2022. 5. 31. 오후 3:48, 엔 : 아하…
2022. 5. 31. 오후 3:49, 엔 : 그냥 객체라 생각하고 컨텍스트나 리덕스로 관리할 수는 있을텐데 저렇게 할 일이 없었던 것 같네요 윗분들 말씀하신 것처럼 커스텀훅으로 만들면 만들어도...
2022. 5. 31. 오후 3:53, 퇴근하는 프로도 : ㅠ ㅠ 어떤 부분 말씀이실까요 닉네임이 마음아프네요
2022. 5. 31. 오후 3:54, 살려줘 네오 : 아 오픈 톡 있으시면 하나 여쭤보고 싶었습니다. 기술스택이라든가 쓰시는 초기셋팅이나 테스트 이런 부분이요!
2022. 5. 31. 오후 3:57, 엉망장자 : 완전 뉴비 질문이 있습니다!
https://~~~~.json 형태의 경우에는 어떻게 읽어야 하나요?

https://www.coingecko.com/price_charts/16724/usd/14_days.json

위의 예시와 같은 케이슨데 axios get 요청으로는 잘 안받아와 지는 것 같아서요 ㅜㅜ
2022. 5. 31. 오후 3:59, 델 : 엥 axios.get 으로 안되나요?
2022. 5. 31. 오후 3:59, 곰곰 : 데이터 파싱하는부분에서 문제가 있는게아닐까요....?
2022. 5. 31. 오후 3:59, 이영광 : 그냥 그대로 하면 나오실텐데
2022. 5. 31. 오후 4:01, 엉망장자 : 아 그런가요? 제가 뭔가 잘못했나보네요 으억
2022. 5. 31. 오후 4:01, 엉망장자 : 감사합니다
2022. 5. 31. 오후 4:03, 이영광 : axios.get('https://coingecko.com/price_charts/16724/usd/14_days.json').then((res)=>console.log(res)) 하면되지 않을까요 ㅎㅎㅎㅎ;
2022. 5. 31. 오후 4:03, 델 : Cors 뜰수도 있을 거 같긴 하네요 👀
2022. 5. 31. 오후 4:05, 퇴근하는 프로도 : 저에게 여쭤보신 거 맞으실까요?! 저는 vue/nuxt/안드로이드 네이티브 앱 개발하고 있고, 서비스 자체는 웹소켓/HLS이 핵심 기술(?)입니다. 초기세팅은.. 그냥 제가 직접 플러그인, 미들웨어, UI컴포넌트들을 선작업해서 보일러플레이트로 올려두면 다같이 조금씩 살을 덧붙이는 형태네요 ㅠ.ㅠ 테스트는 서비스 부하 테스트만 진행하고 있어요.. jest와 cypress를 설치만 해놓고 사용해보질 못하고 있습니다.흑흑 도움 드릴만한 내용은 많지 않네요..
2022. 5. 31. 오후 4:14: 프론트.누리님이 들어왔습니다.
2022. 5. 31. 오후 4:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 4:16, 프론트.누리 : 안녕하세요!
2022. 5. 31. 오후 4:17, 엔 : 안녕하세요~!
2022. 5. 31. 오후 4:18, 엔 : 어서오세요!! 이곳은 프론트엔드나 웹 개발에 대해 궁금하거나 나 말고 다른 개발자들은 어떻게 생각할지 궁금했던 내용들을 묻고 또 답하면서 성장하는 공간입니다~ 이곳에서 좋은 사람에 대한 교류가 일어나길 바래요 ㅎ
2022. 5. 31. 오후 4:18, 엔 : 테오 대신에 전달드립니ㅏㄷ
2022. 5. 31. 오후 4:23, 그레이 : 멘트가 테오 님인줄 알았네요
2022. 5. 31. 오후 4:26: 세이지님이 들어왔습니다.
2022. 5. 31. 오후 4:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 4:29, 유용태 (teo.yu) : 프론트 누리님~~ 세이지님!! 반갑습니다 :) 인사가 늦었네요~
2022. 5. 31. 오후 4:29, 유용태 (teo.yu) : 엔!! 너무너무 감사합니다. ㅎㅎ
2022. 5. 31. 오후 4:34, 세이지 : 안녕하세용!!
2022. 5. 31. 오후 4:34, 유용태 (teo.yu) : 네~ 안녕하세요. ㅎ
2022. 5. 31. 오후 4:58, 시닙프엔 : 리액트 개발할 때 컴포넌트 파일 대문자로 시작하시나요 아니면 소문자로 시작하시나요??
예를 들면 Main.jsx로 하시는지 main.jsx로 하시는지 궁금합니다!
2022. 5. 31. 오후 4:59, 엔 : 컴포넌트 파일만 대문자로 시작하게 맞춰서 쓰고있습니다
2022. 5. 31. 오후 4:59, 여의도개발 : 파스칼 케이스
2022. 5. 31. 오후 5:00, 여의도개발 : 폴더.. 케밥 케이스..
변수 까멜 케이스
2022. 5. 31. 오후 5:00, 그레이 : 파일명은 모든 파일이 대해 소문자만 쓰고 있습니다
2022. 5. 31. 오후 5:00, 그레이 : 케밥으로
2022. 5. 31. 오후 5:01, 여의도개발 : 상수 스네이크
2022. 5. 31. 오후 5:01, 철진 : 컴포넌트 파일은 대문자로 파스칼케이스로 작성하고 있습니다! 
2022. 5. 31. 오후 5:02, 델 : 파일명 폴더명은 케밥케이스만 써요!
2022. 5. 31. 오후 5:07, 시닙프엔 : 다들 감사드려요!! 이런 것도 용어가 있는건줄 지금 알았네요ㅎㅎ😓
2022. 5. 31. 오후 5:16: 이준호님이 들어왔습니다.
2022. 5. 31. 오후 5:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 5:48, 유용태 (teo.yu) : 괴끈해님~~ 반갑습니다 :)
2022. 5. 31. 오후 5:50, O_O : 컴포넌트 파스칼케이스인거 말곤 다 다르군요...
2022. 5. 31. 오후 6:01, 파이팅 : 답변이 조금 늦었네요 죄송해요
덕분에 영상보고 리팩토링 진행 하였습니다😊 감사합니다!
2022. 5. 31. 오후 6:17, 엉망장자 : cors 이슈였어요! 에러로 cors 띄워주지 않아도 cors인 경우가 있군요
2022. 5. 31. 오후 6:39, 초롱초롱 네오 : 삭제된 메시지입니다. 
2022. 5. 31. 오후 6:39, 초롱초롱 네오 : 삭제된 메시지입니다. 
2022. 5. 31. 오후 6:44, 초롱초롱 네오 : 질문이 있습니다!
콜스택에는 원시형 타입의 변수와 함수 실행문이 등록되는것으로 알고있고, setTimeout에 등록된 콜백함수는 콜스택이 비워져있어야 태스크 큐에서 콜스택으로 옮겨지는것으로 알고있는데 이코드가 정상적으로 동작하는 이유가 궁금합니다..!
2022. 5. 31. 오후 6:44, 초롱초롱 네오 : 사진
2022. 5. 31. 오후 6:44, 초롱초롱 네오 : 아 원시형 타입의 변수가아닌 값입니다..!
2022. 5. 31. 오후 6:45, 프론트 지키미 : 실행컨텍스트가 생성될때 정적인 스코프를 기반으로 생성이 되기 때문에
콜백함수에는 a가 없으므로 스코프체인을 타고 올라가 a를 찾아 출력해주는 것 아닐까요???
2022. 5. 31. 오후 6:48, 초롱초롱 네오 : 흠..근데 저 콜백함수가 실행됬다라는 의미는 콜스택이 비워져 있어야하지않나요?
2022. 5. 31. 오후 6:51, 프론트 지키미 : 콜스택이 비워진 이후에 콜백함수가 콜스택에 올라갈때 혹시 어떻게 올라가서 실행되는지 여쭤볼수 있을까요??!!
2022. 5. 31. 오후 6:55, 초롱초롱 네오 : 우선 전역 실행컨텍스트가 종료된 이후에 저 콜백함수의 실행컨텍스트가 생성후 올라갈 것같습니다!
2022. 5. 31. 오후 6:56, 초롱초롱 네오 : 전역 실행 컨텍스트가 종료되는 시점에서 콜스택에 등록된 1또한 사라지기때문에 저 콜백함수는 실행될 수 없어야된다고 생각합니다.
2022. 5. 31. 오후 6:56, 초롱초롱 네오 : 아 실행은 되고 에러가 발생해야한다고 생각합니다!
2022. 5. 31. 오후 6:56, 더위시러 : 렉시컬 스코프를 참조할수 있는 클로저때문이 아닐까요
2022. 5. 31. 오후 6:56, 초롱초롱 네오 : 그러면 1이 콜스택에 남아있다라는 의미인데
2022. 5. 31. 오후 6:56, 프론트 지키미 : 아 네오님이 궁금하신 사항은 클로저나 스코프가 아니었네요
2022. 5. 31. 오후 6:56, 웹린이 : https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures
2022. 5. 31. 오후 6:57: 잉여개발자님이 들어왔습니다.
2022. 5. 31. 오후 6:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 6:57, 햄햄 : 메모리에 남아있게 됩니다
2022. 5. 31. 오후 6:57, 프론트 지키미 : 전역컨텍스트가 없고 콜스택이 전부비어있는데
2022. 5. 31. 오후 6:57, 초롱초롱 네오 : 그렇게되면 콜백함수가 콜스택으로 이동이되나요?
2022. 5. 31. 오후 6:57, 웹린이 : 콜백이 클로저로 가져가서 참조가 유지되고
2022. 5. 31. 오후 6:58, 웹린이 : gc에서 수거해가지 않아요!
2022. 5. 31. 오후 6:58, 프론트 지키미 : 여기 1이 a 변수 1인가요??
2022. 5. 31. 오후 6:58, 초롱초롱 네오 : 맞습니다!
2022. 5. 31. 오후 6:59, 초롱초롱 네오 : 그 원시형데이터는 콜스택에서 저장되어 관리되는걸로 알고있는데요! 그렇게되면 콜스택이 비워져있지않아 콜백함수가 콜스택으로 이동이되나요??
2022. 5. 31. 오후 6:59, 프론트 지키미 : 웹린이님이 말씀하신대로 gc에서 수거해가지 않을거에요!!
2022. 5. 31. 오후 6:59, 프론트 지키미 : 따로 null로 설정해주지 않는이상 참조되고 있으면 메모리영역에 남아있는걸로 알고있어요
2022. 5. 31. 오후 6:59, 초롱초롱 네오 : 그 메모리영역이 원시형데이터는 콜스택으로 알고있는데
2022. 5. 31. 오후 7:00, 초롱초롱 네오 : 제가 잘못알고있는걸까요
2022. 5. 31. 오후 7:00, A대 4-1(진) : 전역컨텍스트는 종료가 되기 때문에 콜백함수가 콜스택으로 이동하고

 gc에서 수거해가지 않기때문에 참조를 할 수 있다 이건가요??
2022. 5. 31. 오후 7:02, 웹린이 : 전역이 종료되고 콜스택이 비면 콜백이 올라가고 콜백은 클로저로 a의 참조를 갖고 있어서
2022. 5. 31. 오후 7:02, 웹린이 : 계속 참조할 수 있어요
2022. 5. 31. 오후 7:02, 웹린이 : 유효한 참조가 존재하니 gc에서는 수거해가지 않고요
2022. 5. 31. 오후 7:03, 초롱초롱 네오 : 그렇게해서 1이 저장되어있는 공간이 콜스택 아닌가요!?
2022. 5. 31. 오후 7:04, 웹린이 : https://poiemaweb.com/js-closure
2022. 5. 31. 오후 7:05, 웹린이 : 설명이 잘 되어있어서 읽어보시면 좋을 것 같아요
2022. 5. 31. 오후 7:05, 웹린이 : 관련해서 더 궁금하시면
2022. 5. 31. 오후 7:05, 프론트 지키미 : 1. 전역컨텍스트 생성
2. setTimeout 실행
3. webApi에 의해 100ms뒤에 태스크 큐 로 이동
4. 이벤트 루프에서 콜스택이 비어있는지 확인
5. 콜스택이 비어있으면 태스크 큐에 있는 태스크가 콜스택으로 올라가서 실행됨

1에 대한 정보는 실행컨텍스트의 변수객체에 정보가 저장되어있을거에요


전역함수
변수객체 : { a }
스코프체인 : []
this : window

콜백함수
변수객체 :
스코프체인 :  [전역컨텍스트]
this 

콜백함수 내에서 a를 참조해야하는데 없기때문에 스코프 체인을 타고 올라가서 전역컨텍스트의 a를 참조하게 되여 (클로저로 알고있어요)
(this 값은 동적으로 할당)
2022. 5. 31. 오후 7:05, 웹린이 : 샵검색 : #코어자바스크립트
2022. 5. 31. 오후 7:05, 웹린이 : 이책에 쉽고 자세하게 설명되어 있고 분량도 부담없어서 한번 읽어보시면
2022. 5. 31. 오후 7:05, 웹린이 : 도움 많이 되실 것 같네용
2022. 5. 31. 오후 7:07, 초롱초롱 네오 : 제가 질문을 잘못한것같네요.. 제가 궁금한건 함수가 실행되는 콜스택환경과 원시형데이터가 저장되는 콜스택이 동일한지가.. 궁금한데 한번 천천히 읽어보겠습니다
2022. 5. 31. 오후 7:08, 초롱초롱 네오 : 답변 감사합니다!! 
2022. 5. 31. 오후 7:09, 웹린이 : 기억이 가물가물한데
2022. 5. 31. 오후 7:09, 웹린이 : 선언 당시 참조한 부모 렉시컬을 갖고 있다가
2022. 5. 31. 오후 7:09, 웹린이 : 같이 들고 콜스택에 올라갔었나
2022. 5. 31. 오후 7:09, 웹린이 : 그럴꺼에요
2022. 5. 31. 오후 7:09, 프론트 지키미 : 혹시 프로세스의 스택, js 엔진의 콜스택 이건 아니죠????
2022. 5. 31. 오후 7:09, 웹린이 : 정확하지 않아서 참고만 해주세요 ㅎㅎ;
2022. 5. 31. 오후 7:10, 더위시러 : 콜스택에 담기는 실행컨텍스트에 대해 알아보시면 좋을것같아요!
2022. 5. 31. 오후 7:10, 더위시러 : 사진
2022. 5. 31. 오후 7:11, 초롱초롱 네오 : 사진
2022. 5. 31. 오후 7:12, 초롱초롱 네오 : 사진
2022. 5. 31. 오후 7:12, 초롱초롱 네오 : 원시타입데이터가 콜스택에 저장되는 글을보고
2022. 5. 31. 오후 7:12, 초롱초롱 네오 : 기존에알고있던 개념이랑 충돌이 발생해서요..
2022. 5. 31. 오후 7:12, 초롱초롱 네오 : 사진
2022. 5. 31. 오후 7:13, 초롱초롱 네오 : 정확하게 이해는 못했지만.. 이부분일것같기도하네요.
2022. 5. 31. 오후 7:17, 웹린이 : 삭제된 메시지입니다. 
2022. 5. 31. 오후 7:17, 프론트 지키미 : 흠 제생각엔 네오님이 생각하고 계신 두 콜스택이 같은것 같아요

실행컨텍스트가 생성될때 
1. 변수객체 정보 수집 (원시형이냐 참조형이냐에 따라 주솟값의 목적지가 달라짐)
2. 스코프체인 생성
3. this 할당

이 이루어지는 것으로 알고있어요

js에서 원시값의 경우 메모리에 대한 직접 접근
참조값의 경우 힙 영역의 주소를 변수가 가리키고 있기 때문에
보내주신 사진처럼 표현이 되고 있는 것 같아요
2022. 5. 31. 오후 7:17, 웹린이 : 삭제된 메시지입니다. 
2022. 5. 31. 오후 7:18, 웹린이 : 이모티콘 
2022. 5. 31. 오후 7:20, 웹린이 : https://stackoverflow.com/questions/61859590/javascript-primitives-and-stack
2022. 5. 31. 오후 7:21, 프론트 지키미 : 원시형 데이터가 저장되는 것이 아니라
원시형 데이터가 저장된 목적지를 가리키는 변수정보를 가지고 있다는 어떨까요?
2022. 5. 31. 오후 7:21, 웹린이 : 네오님이 궁금해 하시는 부분에 대한 답이될 것 같네요 ㅎㅎ
2022. 5. 31. 오후 7:21, 웹린이 : 프론트지킴이님이 말씀하신대로
2022. 5. 31. 오후 7:21, 웹린이 : 원시값도 변수에
2022. 5. 31. 오후 7:21, 웹린이 : 값을 직접 저장하지 않고
2022. 5. 31. 오후 7:21, 웹린이 : 주소만 저장하고 있어요
2022. 5. 31. 오후 7:25: 말썽쟁이 네오님이 들어왔습니다.
2022. 5. 31. 오후 7:25, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 7:55: 봄보미님이 들어왔습니다.
2022. 5. 31. 오후 7:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 7:56: 콘솔님이 나갔습니다.
2022. 5. 31. 오후 8:37, 초롱초롱 네오 : 흠.. 그러면 이벤트 루프에 의해 태스크큐에 등록된 콜백함수가 콜스택으로 옮겨지는 조건(콜스택이 비어져있을때 옮겨진다)에서 변수정보는 제외된다라고 이해하면 되겠죠..??
2022. 5. 31. 오후 8:47, 프론트 지키미 : ㅎㅎ 실행컨텍스트가 생성되는 부분 같이 공부해보고 다시한번 이야기 해보는건 어떨까요??
2022. 5. 31. 오후 8:47, 프론트 지키미 : 저도 학습이 필요할것 같아요
2022. 5. 31. 오후 8:49, 초롱초롱 네오 : 넵 알겠습니다 답변 감사합니다!
2022. 5. 31. 오후 8:52: 아이디어 프로도님이 들어왔습니다.
2022. 5. 31. 오후 8:52, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 8:53: 초롱초롱 무지님이 들어왔습니다.
2022. 5. 31. 오후 8:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 9:05: 진현우님이 들어왔습니다.
2022. 5. 31. 오후 9:05, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 5. 31. 오후 9:25, O_O : 개발바닥 이번주 주제가 프론트군요...
2022. 5. 31. 오후 9:26, 유용태 (teo.yu) : 아이디어 프로도님 초롱초롱 무지님 진현우님~~ 모두 모두 반갑습니다 :)
2022. 5. 31. 오후 9:28, 진현우 : 안녕하세요..프론트엔드 공부 중입니다. 잘부탁드립니다~~~(__) 
2022. 5. 31. 오후 9:28, 아이디어 프로도 : 안녕하세요~!! 잘 부탁드립니다!!:)
2022. 5. 31. 오후 9:28: 봄보미님이 나갔습니다.
2022. 5. 31. 오후 9:28, 초롱초롱 무지 : 안녕하세요!! 잘 부탁드립니다~!😺😺
2022. 5. 31. 오후 9:29, 유용태 (teo.yu) : 음...OOP 관점으로 프론트를 바라보는 관점이네요.... 흐음...
2022. 5. 31. 오후 9:30, 애교뿜뿜 어피치 : 왜 저렇게 클래스 클래스 그러는건가요..? 
2022. 5. 31. 오후 9:30, 유용태 (teo.yu) : JAVA에게는 OOP가 핵심이니까요~
2022. 5. 31. 오후 9:31, 애교뿜뿜 어피치 : 음…. 자바관점 이군요.. 
2022. 5. 31. 오후 9:31, 좌절하는 프론트 : 빙글빙글 돌아가는 클래스세상
2022. 5. 31. 오후 9:32, O_O : 음 쪼랩이라 ... 구체적인 예시로 어떤건지 보고싶네요. OOP 프론트라
2022. 5. 31. 오후 9:32, 즐거운 네오 : 뷰하시는 분들은 영상에 공감하셨는지 궁금하네요 저는 뷰를 써본적이 없어서 무슨 말인지도 잘 모르겠어서...
2022. 5. 31. 오후 9:32, 유용태 (teo.yu) : 둘다 백엔드시니까 FE의 관점과는 다른데... 음... 시긴하지만 살짝 불편.. 음.. 불편보다는 어 그건 아닌데 이런 느낌이네요. ㅋ
2022. 5. 31. 오후 9:35, 애교뿜뿜 어피치 : 같은 마음입니다 🥲
2022. 5. 31. 오후 9:40, O_O : 반대쪽 댓글이 거의 없다보니... ㅋㅋㅋ 궁금하네용
2022. 5. 31. 오후 9:49, hustle-dev : 삭제된 메시지입니다. 
2022. 5. 31. 오후 9:50, hustle-dev : 저도 저 영상보면서 프론트에서 OOP가 궁금하더라구요. 

그리고 처음 자바스크립트를 배울때 자바스크립트라는 언어가 아래링크에 나와있듯이
class와 같은 분류의 개념이아닌 프로토타입을 선택했는데 꼭 객체지향적인 OOP를 사용하는 것이 JS언어 철학과도 맞을까라는 생각이 들었어요 JS 컨퍼런스에서도 JS에 class를 넣는게 가장 큰 실수였다고도 말하는것도 보았어서..

그런데 우테코 같은 교육기관에서는 클래스를 활용한 코드를 작성하도록 배우는것 같아서 
주니어 입장에서는 뭐가 더 좋은지 많이 경험하면서 점점 알아가고싶네요..
2022. 5. 31. 오후 9:50, hustle-dev : https://medium.com/@limsungmook/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8A%94-%EC%99%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%84-%EC%84%A0%ED%83%9D%ED%96%88%EC%9D%84%EA%B9%8C-997f985adb42
2022. 5. 31. 오후 9:59, 설아아빠 : 객체지향에도 장점이있고 함수형에도 장점이있는데 저분들은 객체지향에 익숙한 분들이고 객체지향을 자바스크립트코드에 녹이고 싶은데 레퍼런스가 너무 적고 트렌드(리엑트)가 함수형이라 그런거 같아용 
2022. 5. 31. 오후 10:01, 유용태 (teo.yu) : 그쵸 하지만 OOP는 앵귤러만 봐도
2022. 5. 31. 오후 10:01, 유용태 (teo.yu) : 아니지 앵귤러가 좀 심한거니까
2022. 5. 31. 오후 10:01, 유용태 (teo.yu) : 잘 모르곘네요. OOP로 FE를 개발하면 더 쉬워지나?
2022. 5. 31. 오후 10:01, 유용태 (teo.yu) : 왜냐하면 안드로이드나 iOS의 경우 OOP로 개발을 하게 되는데
2022. 5. 31. 오후 10:02, 유용태 (teo.yu) : 그런 언어들 조차 지금 웹에서 개발하는 방식을 벤치마킹하면서 발전을 하고 있고
2022. 5. 31. 오후 10:02, 유용태 (teo.yu) : 현재 웹에서 쓰는 이 방식들이 생산성이 높은것은 확실하니까
2022. 5. 31. 오후 10:02, 프론돌이 : 서버를 주로 하시는 분들이거나, 
BE, FE 가림없이 하시는분들 입장에서는 OOP로 하는게, 일관성 있고, 좋을 수도 있다고 생각은 하는데, 
FE만 따로 딱 떼고 봤을 때, OOP만이 정답이 아닌데
그것만이 정답인 것처럼 여기시는 분들도 좀 되시는듯 ㅜ
2022. 5. 31. 오후 10:03, 유용태 (teo.yu) : 맞는것 같아요. 그래서 오히려 궁금하기는 합니다. 어떤식으로 코드를 짜셨을지
2022. 5. 31. 오후 10:03, 벙찐 튜브 : 오호
2022. 5. 31. 오후 10:04, 엉망장자 : 궁금한 점이 객체지향과 함수형이 탑다운과 바텀업 방식과 매칭된다고 생각해도 되려나요?

어떤점이 좋고 나쁜지 확실하게 판단이 안되서요
2022. 5. 31. 오후 10:04, 프론돌이 : 전 리덕스를 OOP 방식으로 짜여진 프로젝트를 봤었는데... 보기가 많이 힘들었어요ㅠ
2022. 5. 31. 오후 10:04, 프론돌이 : 그렇게 무자르듯이 나눠지지는 않는 것 같아요
2022. 5. 31. 오후 10:05, 프론돌이 : 서로의 장단점이 있는거니까
2022. 5. 31. 오후 10:05, 설아아빠 : 저는 백엔드라 그런지 두분 말하는게 정말 공감가더라구요 ㅋㅋㅋ 클래스형으로 되있는걸 보면 심신이 안정되는 느낌...?
2022. 5. 31. 오후 10:05, 설아아빠 : 익숙해서 보기가 편하니깐... 
2022. 5. 31. 오후 10:05, 유용태 (teo.yu) : 지향하는 바가 다른데 제가 추구하는 것은 Date나 axios등 유틸성 라이브러리는 객체를 지향하되
2022. 5. 31. 오후 10:05, 프론돌이 : FE만 한사람 입장에서는 오히려 더 거부감이 들어요 ㅠ
2022. 5. 31. 오후 10:06, 프론돌이 : 모든걸 클래스화 시키려고 하는 그런거에...
2022. 5. 31. 오후 10:06, 설아아빠 : 그럴거 같아요
2022. 5. 31. 오후 10:06, 유용태 (teo.yu) : 비지니스로직은 함수형으로 짜는게 더 낫다고 생각하고 있어요. 이것도 정답은 아니겠지만
2022. 5. 31. 오후 10:07, 애교뿜뿜 어피치 : 음 .. 뭔가 갑자기 mobX를 배워봐야겠다 라는 생각이 들었습니다. 
2022. 5. 31. 오후 10:07, 프론돌이 : mobx가 그나마 OOP에 잘어울리긴 하죠
2022. 5. 31. 오후 10:07, 애교뿜뿜 어피치 : 그럼 조금 공감이 될까해서.. 
2022. 5. 31. 오후 10:07, 엉망장자 : 자주 쓰이는 비즈니스 로직 같은 경우에 함수형인 경우에 함수로 빼서 사용하는건 자연스러운데 

이게 객체지향으로 가면 매번 그 함수를 메서드로 지정해주는 방식으로 가는건가요?
2022. 5. 31. 오후 10:08, 유용태 (teo.yu) : 객체지향으로 가면 데이터를 중심으로 클래스를 작성하게 됩니다. 그리고 데이터의 변경을 클래스 메소드로 다루는 식으로 주로 만들게 되요
2022. 5. 31. 오후 10:09, 유용태 (teo.yu) : 가령 카톡이라고 하면 Chat {} chat.send() chat.remove() chat.reply()
2022. 5. 31. 오후 10:09, 유용태 (teo.yu) : 이런식으로
2022. 5. 31. 오후 10:09, 유용태 (teo.yu) : 그리고 컴포너트를 클래스로 하는것은 너무 당연하고... 둘을 결합하는 방향으로
2022. 5. 31. 오후 10:10, 유용태 (teo.yu) : FE는 그냥 데이터는 하나의 큰 데이터 덩어리로 보죠
2022. 5. 31. 오후 10:10, 햄햄 : 아직 개발바닥은 못봤지만 객체지향 예제는 클래스가 많이사 어떻게 fe에 객체지향을 접목시켜야할까 고민이 많았는데 생각해볼만한 주제인것 같아여 
2022. 5. 31. 오후 10:11, 유용태 (teo.yu) : 그쵸. FP는 개발에서 주류가 아니었는데 프론트를 하면 일단 OOP를 하지는 않는데 FP를 하는것도 아니다 보니. ㅋㅋ
2022. 5. 31. 오후 10:12, 햄햄 : 그쵸...
2022. 5. 31. 오후 10:14, 유용태 (teo.yu) : 일단 문제인식에는 공감을 하고 뭔가 구체적인 것들이 후속편으로 나오면 재밌겠네요~ 이번편은 으음?? 이정도의 느낌이었는데 뭔가를 보면 진짜 인사이트가 될것 같아서 기대가 됩니다. ㅋ
2022. 5. 31. 오후 10:16, 엉망장자 : 뭔가 사족이긴 한데 프론트에서 FP나 OOP에 따로 묶이지 않고 생산성을 쫓아가는 상황과 다르게 백엔드에서는 OOP를 반드시 알아야 한다고 하게 된 배경도 궁금해지네요.

결국에는 프론트엔드 개발자라는게 생기기 전 개발자들 대부분은 백엔드를 하고 있었을텐데도 그 흐름이 이어져 오지 않은거잖아요?!..
2022. 5. 31. 오후 10:16, 벙찐 튜브 : 혹시 FP는 무엇을 뜻하는건가요..?
2022. 5. 31. 오후 10:16, 엉망장자 : Functional Programming
2022. 5. 31. 오후 10:17, 엉망장자 : 함수형 프로그래밍입니당
2022. 5. 31. 오후 10:17, 벙찐 튜브 : 감사합니다 취준생이다보니 용어에 익숙치않아서요..
2022. 5. 31. 오후 10:17, 유용태 (teo.yu) : 그것은 JAVA가 백엔드의 바이블이자 객체지향언어의 교과서이기 때문이지요. ㅋ
2022. 5. 31. 오후 10:18, 설아아빠 : 일단 붕어빵틀부터 배우고 시작함...
2022. 5. 31. 오후 10:18, 유용태 (teo.yu) : 20년전만 하더라도 개발을 한다 = OOP로 개발한다 였으니까요
2022. 5. 31. 오후 10:18, 벙찐 튜브 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 5. 31. 오후 10:18, 엉망장자 : 아하.. ㅋㅋㅋㅋ
2022. 5. 31. 오후 10:18, 동동 : 저 우테코 나왔는데 클래스로 코드 짜라고 배우지 않았습니다 ㅎㅎ(OOP 배울 시간도 없어요..)
2022. 5. 31. 오후 10:19, 유용태 (teo.yu) : 리액트가 2014년에 나왔고 FP React가 2016년 (맞나?) 이러한 기조가 얼마 되지 않았죠
2022. 5. 31. 오후 10:19, 벙찐 튜브 : 편견을 가지면 안될것같궁요
2022. 5. 31. 오후 10:19, 햄햄 : 개인적으로는 개발자들 사이에서 공유되는 거대한 담론에 소외되는 기분이 있어서 좀 잘 알고싶은 생각이 드는 것 같아요 뭐 암튼 중요하다고 하는데 실질적으로 와닿는 부분은 적어서 이유를 파헤쳐보고싶은..
2022. 5. 31. 오후 10:19: 리듬타는 제이지님이 나갔습니다.
2022. 5. 31. 오후 10:19, 콘이 웃긴 무지 : 프론트분들에게 궁금한점이 하나 있습니다.
프론트와 백엔드가 API를 협의하고 개발하는 과정에서 백엔드 개발자가 API 를 만들어서 줄때까지 중간 공백이 생기잖아요??
그때 api 모킹 서버를 어떤식으로 구성하는지 궁금합니다
2022. 5. 31. 오후 10:20, 유용태 (teo.yu) : https://mswjs.io/
2022. 5. 31. 오후 10:20, 유용태 (teo.yu) : https://miragejs.com/
2022. 5. 31. 오후 10:20, 동동 : 저도 저 영상봤는데, 뭔가 이벤트 기반으로 데이터가 실시간으로 변화하는 FE 특성을 어떻게 OOP로 짜며, 어떻게 단위테스트를 하는걸 원하시는걸까 궁금하긴 했어요. 마이웨이 코드를 한번 보고 싶다고나 할까..
2022. 5. 31. 오후 10:20, O_O : msw두번쓰세요!
2022. 5. 31. 오후 10:20, 유용태 (teo.yu) : 저거 2개 많이 쓰더라구요~
2022. 5. 31. 오후 10:21, 유용태 (teo.yu) : 카더라 입니다... 아직 제가 하고 있는 프로젝트에는 mocking을 제대로 해보지는 못했어요 ㅠ
2022. 5. 31. 오후 10:21, 유용태 (teo.yu) : 저도요! 공감합니다
2022. 5. 31. 오후 10:21, 유용태 (teo.yu) : 인사이트를 얻고 싶네요~
2022. 5. 31. 오후 10:21, 콘이 웃긴 무지 : 감사합니다!
2022. 5. 31. 오후 10:21, 설아아빠 : 저는 궁금한게 도메인로직은 거즘 백엔드에서 다 처리해서 넘겨주지 않나요..? 프론트에서 다시 도메인로직을 구현하기 보단 제가 작업한 영역은 그냥 데이터 받아서 인터렉션 구현하는정도 말곤 없었어서 ...
2022. 5. 31. 오후 10:22, hustle-dev : 아 그렇군요 몇몇 레포지토리 코드리뷰에서 class 관련 리뷰를 보았던 것 같은데 잘못 알았던것 같네요 죄송합니다.
2022. 5. 31. 오후 10:22, 콘이 웃긴 무지 : 개발바닥 영상도 보고 여기 프론트분들 이야기하는걸 항상 염탐하는데요
프론트쪽은 항상 테스트가 고민인것같아요
2022. 5. 31. 오후 10:23, 햄햄 : 테스트가 어떻게 고민이신건가요? 저도 테스트 고민이 많아서.. 다른 분들 이야기도 궁금하네요!
2022. 5. 31. 오후 10:23, 프론트 공부 : 테스트를 어디까지 짜야하는가...?
2022. 5. 31. 오후 10:25, 동동 :  첨에 리액트를 클래스 컴포넌트부터 배워서 그렇게 보셨을수도 있을거 같아요~ 아니면 리뷰이나 리뷰어의 성향일수도 있구요
(씨익)
2022. 5. 31. 오후 10:26, 햄햄 : 모두싸인은 통합테스트를 우선으로 해서 필요하면 유닛테스트를 작성한다고 하더라고요

https://team.modusign.co.kr/프론트엔드에서-의미있는-테스트-코드-작성하기-4992409c7f2d
2022. 5. 31. 오후 10:26, 햄햄 : 저도 유닛테스트를 우선으로 작성하다가 좀 의미가 없게 느껴져서 페이지 단위로 통합테스트를 작성하고 있어요
2022. 5. 31. 오후 10:29, 살려줘 네오 : 앗 저도 안 그래듀 hls에 쓰는데 ,  클라에서는 주로 뭐 플러그인이나 라이브러리 등 사용하시는게 있으실까요
2022. 5. 31. 오후 10:55, 까루 : useState, useEffect 테스트 관련해서 여쭤보려고 합니다 
react testing library + jest 환경에서 테스트를 하고 있는데 사진과 같이 useState, useEffect를 모킹을 해주고 render를 이용해서 페이지를 렌더링 하면 초기 값을 제외하고는 페이지 내부 변화가 일어나지 않아 다른 테스트 진행이 불가능 하던데 이게 원래 이런건가요? 아니면 둘의 모킹을 해제하고 페이지 내부 변화를 가지고 테스트를 하는게 맞는건가요? 잘 모르겠어서 여쭤 봅니다 🥲
2022. 5. 31. 오후 10:55, 까루 : 사진
2022. 5. 31. 오후 11:23, 동동 : RTL의 기본기조는 각각의 함수 모킹이 아니라, DOM에 실제로 적용해보고 DOM의 결과물을 테스트하라는 거라서, useState, useEffect 를 모킹하지 않고 실제로 상태가 변경되었을때 원하는 값으로 DOM에 반영되었는지를 테스트하시는게 좋지 않을까 싶습니다..
2022. 5. 31. 오후 11:34, 까루 : 아 혹시 그러면 다른 테스팅 라이브러리는 useState의 값 트레킹이 가능할까요? 
recoil의 경우도 공식문서에 테스팅을 진행할 때toBeCalledWith 와 같이 안의 값 변화를 체크하는 식으로 테스트를 진행하는 것 같아서 헷갈리더라고요... 
일단 말씀해주신대로 테스트 진행해 보겠습니다! 감사합니다!!!
2022. 5. 31. 오후 11:43: 말썽쟁이 네오님이 나갔습니다.
2022. 5. 31. 오후 11:55, 동동 : recoil은 상태관리 라이브러리라서 상태만 테스트한다면 그렇게 하는게 좋은거 같아요
리덕스 같은것도 모킹해서 액션이 호출되었는지, 리듀서 호출되면 상태가 어떻게 변경되었는지 이렇게 끊어서 테스트 많이 하는것처럼요... 

근데 컴포넌트 테스트라면 그런 상태관리랑 유저 이벤트를 다 묶어서 테스트해야되기 때문에 RTL 이 권장하는 대로 함수를 모킹하는게 아니라 유저의 행동을 흉내낸 다음에 DOM을 테스트하는게 좋다고 생각합니다!
다른 리액트 컴포넌트 테스팅 툴로는 enzyme 정도 들어본거 같은데 enzyme 의 단점을 보완하기 나오기 위해 만들어진게 RTL 이라서요  ㅎㅎ 
(Enzyme 이 좀더 순수하게 함수 호출 테스트하는 느낌인 것으로 알고 있어요!)
2022. 5. 31. 오후 11:56, 동동 : 컴포넌트가 너무 비대해서 컴포넌트 테스트가 어렵다고 하시면, 훅 테스트 같은것도 좋았던거 같아요~
2022. 5. 31. 오후 11:57, 동동 : 저는 이런 FE 테스트의 특성이 있는데 요런걸 개발바닥분들은 어떻게 생각하시는거지? 라는게 영상 보면서 궁금했어요 

2022년 6월 1일 수요일
2022. 6. 1. 오전 12:01, 까루 : 네 답변 정말 감사드립니다! 테스트 코드 작성하는걸 공부하고 있는데 처음 해보는거라 어떻게 테스트를 해야하나 고민이 많이 되더라고요 답변 감사드립니다 😃
2022. 6. 1. 오전 5:16, 서경 : https://youtu.be/9oHlYsllZLQ
2022. 6. 1. 오전 5:17, 서경 : 흥미로운 주제네요
2022. 6. 1. 오전 5:22, 프론트는 잼있어 : '흥미롭네요'
2022. 6. 1. 오전 5:26, 서경 : 영상 내용을 요약하자면 눈 깜빡이는 빈도가 집중력을 좌우하는 도파민 분비량이랑 직접적으로 관계가 있는데
2022. 6. 1. 오전 5:29, 서경 : 카페인을 복용하면 집중력이 높아지는 이유가 도파민을 더 많이 분비하게 하고 눈을 덜 깜빡이게 해서 집중력을 높인다고 하네요
2022. 6. 1. 오전 5:30, 서경 : 눈 깜빡이는 훈련을 제어하는 훈련을 통해 자의적으로 집중 상태로 만들 수 있다고 하는데
2022. 6. 1. 오전 5:30, 서경 : 정확한 근거가 있는 사실인지는 모르겠는데 흥미로운 주제라서 공유해 봅니다 ㅎ
2022. 6. 1. 오전 9:32: 기뻐하는 라이언님이 들어왔습니다.
2022. 6. 1. 오전 9:32, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오전 10:28: 째려보는 어피치님이 들어왔습니다.
2022. 6. 1. 오전 10:28, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오전 10:29, 유용태 (teo.yu) : 기뻐라는 라이언님~ 째려보는 어피치님~~ 반갑습니다 :) 어서오세요!!
2022. 6. 1. 오전 11:09, 유용태 (teo.yu) : 보물같은 블로그를 찾게되어 공유해봅니다. 무엇을 공부해야할지가 아니라 개발자 전반에 관한 통찰을 바탕으로 얘기를 하고 있네요 :) 이해가 되지 않더라도 그냥 일어봐두면 그냥 넓은 시각을 가지는데 도움이 될 것 같아요 https://subokim.wordpress.com/
2022. 6. 1. 오전 11:10, 유용태 (teo.yu) : 읽어
2022. 6. 1. 오전 11:11, 아이뽀송 : Emoticon
2022. 6. 1. 오전 11:11, 유용태 (teo.yu) : 아;; 카톡 오타 수정 기능은 왜 없는걸까요 ㅠㅠ
2022. 6. 1. 오전 11:11, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 1. 오전 11:11, 아이뽀송 : ㅎㅎㅎㅎㅎ
2022. 6. 1. 오전 11:11, 대장 : 넵
2022. 6. 1. 오전 11:22, 유용태 (teo.yu) : 이 방에는 주니어나 취준생분들 비중이 낮지 않는 것으로 알고 있습니다. 제가 강조하는 부분이긴 한데 기술을 배우는 것은 너무 당연한거고 일을 잘하기 위해서는 다른게 필요한데 문제는 그건 아무도 안 가르쳐준다는건데 그게 엄청 중요합니다 ㅠㅠ 글로 배울 수 있는 것은 아니니까요 그렇지만 관점이나 통찰을 미리 배워볼수 있는 거니까 특히 이제 막 신입이 되었거나 곧 취업이 되실 분들은 꼭 한번 읽어보면 좋을 글입니다 https://subokim.wordpress.com/2021/09/15/why_dont_intern/
2022. 6. 1. 오전 11:26, 조조 : 감사합니다~~
2022. 6. 1. 오전 11:27, 조조 : 어제 개발바닥 영상에 댓글 남겨주신것도 봐서 반가웠습니다 ㅎㅎ
2022. 6. 1. 오전 11:29, 햄햄 : 감사합니다!
2022. 6. 1. 오후 12:05, 그레이 :  정신이 번쩍 드네요 좋네요
2022. 6. 1. 오후 12:07, 음악듣는 어피치 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 1. 오후 12:10, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ
2022. 6. 1. 오후 12:11, 하자코딩 : 넵 !!
2022. 6. 1. 오후 12:12, 모승 : ㅋㅋㅋㅋㅋㅋ
2022. 6. 1. 오후 12:16, 빠밤 : 와진짜 좋은내용이네요
2022. 6. 1. 오후 12:26: 스베루토님이 들어왔습니다.
2022. 6. 1. 오후 12:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 12:39, 유용태 (teo.yu) : 샤벨트님 반갑습니다~~ 어서오세요 :)
2022. 6. 1. 오후 12:41, 스베루토 : 안녕하세요!
2022. 6. 1. 오후 12:42, 유용태 (teo.yu) : 네~ 안녕하세요 ㅎㅎ
2022. 6. 1. 오후 12:42, 스베루토 : 블로그 읽다가 왔습니다..ㅎ
2022. 6. 1. 오후 12:42, 스베루토 : 스벨트로 이직하고 싶은데 회사가 없네요 흑흑
2022. 6. 1. 오후 12:43, 유용태 (teo.yu) : https://job.incruit.com/jobdb_info/jobpost.asp?job=2203230000276
2022. 6. 1. 오후 12:44, 유용태 (teo.yu) : 사진
2022. 6. 1. 오후 12:45, 유용태 (teo.yu) : 한번 도전해보심이~~ ㅋㅋ 공고에 svelte를 보니까 반갑긴 하더라구요
2022. 6. 1. 오후 12:45, 유용태 (teo.yu) : 확실히 아직은 svelte를 공고에서 보기 힘든것 같아요 ㅎ
2022. 6. 1. 오후 12:46, 유용태 (teo.yu) : https://careers.kakaoenterprise.com/job/%EA%B2%BD%EA%B8%B0%EB%8F%84-%EC%B9%B4%EC%B9%B4%EC%98%A4i%EC%BB%A4%EB%84%A5%ED%8A%B8-%EC%9B%B9%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EA%B2%BD%EA%B8%B0%EB%8F%84/6480744/
2022. 6. 1. 오후 12:46, 유용태 (teo.yu) : 사진
2022. 6. 1. 오후 12:50, 스베루토 : 카카오갈 실력은 못돼서...ㅎ
2022. 6. 1. 오후 12:50, 스베루토 : 힠
2022. 6. 1. 오후 12:50, 스베루토 : 그래도 준비를해보겠습니다!
2022. 6. 1. 오후 12:56, 호호 부는 튜브 : 태오님 댓글을 보고 왔는데 그러면 앵귤러 같은 경우는 oop형식으로 사용되고 있는데 번들사이즈에서 타 프레임워크랑 차이가 있나용
2022. 6. 1. 오후 12:57, 유용태 (teo.yu) : https://medium.com/dailyjs/a-realworld-comparison-of-front-end-frameworks-2020-4e50655fe4c1
2022. 6. 1. 오후 12:57, 유용태 (teo.yu) : https://miro.medium.com/max/1400/1*6HK361f-UDqNpWuTA68jHw.png
2022. 6. 1. 오후 12:57, 유용태 (teo.yu) : 사진
2022. 6. 1. 오후 12:57, 여의도개발 : 👍
2022. 6. 1. 오후 12:58, 유용태 (teo.yu) : 참고로 저희 파트는 아닙니다 ㅋ
2022. 6. 1. 오후 12:59, 유용태 (teo.yu) : 위에 링크 드렸는데 angaulr가 절대로 가볍지는 않아요. 그렇지만 이게 꼭 OOP라서는 아닙니다.
2022. 6. 1. 오후 12:59, 서경 : 와 스벨트...ㄷ
2022. 6. 1. 오후 1:01, 유용태 (teo.yu) : class가 번들 사이즈에 영향을 미치는 이유는 트리세이킹과 난독화 때문인데 가령
2022. 6. 1. 오후 1:01, 유용태 (teo.yu) : a.longlongMethodName 과
2022. 6. 1. 오후 1:01, 유용태 (teo.yu) : longlongFunctionName() 이 있을 경우
2022. 6. 1. 오후 1:02, 유용태 (teo.yu) : 메소드명은 곧 필드명이기 때문에 함부러 축약을 할수가 없어요 예시를 다시 들게요
2022. 6. 1. 오후 1:02, 유용태 (teo.yu) : longlongNamedObject.longlongMethod()
2022. 6. 1. 오후 1:03, 유용태 (teo.yu) : 를 미니파이를 시키면 객체이름은 let a = lonlongNamedObject a.longlongMethod() 처럼 객체이름은 축약을 해도 문제가 안되지만 메소드 명은 String을 기반으로 하기때문에 함부러 줄일수가 없어요 외부에서 그 메소드 이름으로 접근을 할수도 있으니까요
2022. 6. 1. 오후 1:04, 유용태 (teo.yu) : 그래서 class로 만들게 되면 난독화 과정에서 손해를 봅니다. (물론 이것마저도 의존성을 다 추려내서 난독화를 할수는 있지만 에러가 날 확률이 높아서...)
2022. 6. 1. 오후 1:05, 유용태 (teo.yu) : 그리고 트리세이킹의 경우 import {a,b,c} from 'libs' 에서 실제로 libs에 a,b,c,d,e,f,g 여러개의 함수들이나 객체들이 있는데 실제로 import한건은 a,b,c 뿐이라면 나머지 e,f,g는 굳이 번들에 포함을 시키지 않는 것을 말합니다
2022. 6. 1. 오후 1:05, 유용태 (teo.yu) : 하지만 OOP의 경우 특정 메소드만 안쓴다고 해서 객체를 쪼개서 import를 할 수가 없어요
2022. 6. 1. 오후 1:07, 유용태 (teo.yu) : 그래서 대형 객체의 경우 그 메소드를 쓰는지 안쓰는지에 따라서 트리세이킹을 할수는 없습니다. 그래서 예전에는 모듈별로 쪼개서 필요한 모듈단위로 import를 하도록 만들곤 했었는데 FP를 기반으로 한다면 그냥 자동으로 할수가 있는 부분이에요
2022. 6. 1. 오후 1:07, 유용태 (teo.yu) : https://firebase.google.com/docs/web/modular-upgrade
2022. 6. 1. 오후 1:07, 유용태 (teo.yu) : 최근에 firebase SDK도 그래서 대대적으로 FP 방식으로 변경을 하였습니다. FP의 모든 기능을 다 쓰는건 아니지만 일단 모듈은 전부 로딩을 했어야 하니까요
2022. 6. 1. 오후 1:08, 유용태 (teo.yu) : 그렇지만 FP > class 라고만 말할수는 없는 것이 유틸성 API의 경우 사용법이 class방식이 훨씬 더 편합니다.
2022. 6. 1. 오후 1:09, 유용태 (teo.yu) : jQuery가 객체가 아니었다면. axios에서 axios.get axios.post 처럼 method구분이 없으면 매번 필요한 fn을 import하고 조립하고 해서 썼을거라서...
2022. 6. 1. 오후 1:12, 유용태 (teo.yu) : 결론은 잘 알고 적당히 잘 쓰자? 거창하게 이게 좋니 저게 좋니 하고 있지만 크게 상관없더라 DX가 좋고 유명하면 잘 쓰게 되는거라서... 그냥 알고 있으면 좋은 면접지식 정도로만 소비해주세요
2022. 6. 1. 오후 1:13, 부끄러운 어피치 : 고맙습니다!
2022. 6. 1. 오후 1:14, 호호 부는 튜브 : 감사합니다!!
2022. 6. 1. 오후 1:17, 흔들 : 여기는 똑똑하신분들이 너무 많은거 같습니다.
2022. 6. 1. 오후 1:17, 흔들 : 전 열심히 지식도둑하고 있습니다. 감사합니다.
2022. 6. 1. 오후 1:28, O_O : 이모티콘 
2022. 6. 1. 오후 1:34, 치맥하는 제이지 : 다들 개발자로서 어떤 목표를 갖고 계시나요?
저는 스타트업에 입사 한달차 신입개발자인데 '개발자로서의 목표와 그 목표를 이루기 위해 어떻게 해야할지?' 를 작성해오라는 과제를 받았어요.
취업 전까지는 어떻게든 취업하는 걸 목표로 삼고 공부했던터라 ㅠㅠ 
앞으로 어떤 개발자가 되어야겠다거나 개발자로서의 구체적인 목표가 잘 그려지지 않아서 다들 어떤 목표를 갖고 계신지 여쭤보고 싶어요!
2022. 6. 1. 오후 1:36, 초보개발자 : 저도 이 주제에 대해서 많이 생각해보았는데요. 제 개인적인 목표는 '스타트업에 어울리는 개발자' 인 것 같아요.
개발만 잘하는 게 아니라 기획, 디자인 등 다른 분야에도 관심갖고 도움을 줄 수 있는 개발자가 되는 게 목표입니다
2022. 6. 1. 오후 1:41, 모승 : 비록 아직 개발자는 아닌 취업준비생이지만 내가 왜 개발자를 하고 있고 내가 뭘 하고싶은지이 회사에서 뭘 배울지를 선정하시면 그뒤에는 잘 그려지지 않을까요? 저는 최근에 테오 스프린트 하면서 생긴 목표는 소통잘하는 개발자가 되자이구 제 개인적 목표는 사람들이 정말 많이쓰는 웹이나 앱을 개발해보자 라는게 목표입니다!
2022. 6. 1. 오후 1:51, 현수 : 저도 아직 취직은 하지 못했지만, 인턴이나 프로젝트를 하면서 느낀 것은 “같이 일하고 싶은 개발자'가 되고 싶다는 생각을 많이 했어요. 제가 생각했을 때 같이 무언가를 하고 싶으면 만족해야 하는 여러가지 조건들이 있을텐데, 예를들어 그냥 개인적인 성격이 좋다던지, 코딩을  잘한다던지, 지금 처해있는 상황을 잘 설명해주고 소통을 잘 한다던지, 적극적인 태도를 가지고 프로젝트에 참여한다던지와 같은 여러가지 덕목이 있을텐데 저는 그런 것을 정말 모두 갖출 수는 없겠지만 여러 프로젝트를 하면서 제가 느꼈을 때 다른 사람한테서 좋은 부분을 느꼈다면 저도 그 부분을 닮아가려고 노력하는 것 같아요.

그래서 최종적으로는 저도 정말 같이 일하고 싶은 개발자가 되어서 나중에 어떤 모임에 속해있어도 “아 그 분 있는 회사면 믿고 들어가도 되겠다.” 스타트업에 좋은 시니어분 한 분만 있어도 성장할 수 있다고 하잖아요? 그런 것 처럼 저도 그런 사람이 되고 싶습니다.

저도 최종적으로는 사람들이 많이 사용하고, 좋은 영향을 줄 수 있는 프로덕트를 만들고 싶습니다.
2022. 6. 1. 오후 1:52, 음악듣는 어피치 : 회사에서 이런 과제를 받은거면 생각이 많아질 수 밖에 없겠네요.. 
전 늘 추상적으로 생각하는 편인거 같네요.

재미있게 개발하자.
그러려면 어떤 개발을 해야하나?
내가 흥미를 가지고 진짜 공감가고 잘 되길 바라는 서비스를 만들면 되지 않을까?
그런 서비스를 하는 회사는 어디일까.
그런 곳에 들어가기 위해 어떤 능력을 갖춰야하나.

이런식으로 사고확장하면서 목표 세우는데 일한지 1년 넘었는데도 계속 이렇게 일하고 있어요. 이직할때도 아마 같은 생각일거 같아요.
2022. 6. 1. 오후 1:53: Lofo님이 들어왔습니다.
2022. 6. 1. 오후 1:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 1:54, 유용태 (teo.yu) : Lofo님 어서오세요~
2022. 6. 1. 오후 1:54, 유용태 (teo.yu) : 톡게시판 '공지': 다들 개발자로서 어떤 목표를 갖고 계시나요?
저는 스타트업에 입사 한달차 신입개발자인데 '개발자로서의 목표와 그 목표를 이루기 위해 어떻게 해야할지?' 를 작성해오라는 과제를 받았어요.
취업 전까지는 어떻게든 취업하는 걸 목표로 삼고 공부했던터라 ㅠㅠ 
앞으로 어떤 개발자가 되어야겠다거나 개발자로서의 구체적인 목표가 잘 그려지지 않아서 다들 어떤 목표를 갖고 계신지 여쭤보고 싶어요!
2022. 6. 1. 오후 1:54, Lofo : 안녕하세요 Velog에서 알고리즘 관련 글 보고 들어오게됬습니다. 잘부탁드립니다!
2022. 6. 1. 오후 1:55, 유용태 (teo.yu) : 감사합니다>_< 여기는 프론트엔드 하면서 궁금한것들은 서로 묻고 답하며 함께 성장하고자 하는 공간입니다~ 편하게 질문 남겨주세요 ㅎ
2022. 6. 1. 오후 1:56, Lofo : 넵넵!! ㅎㅎㅎ
2022. 6. 1. 오후 1:59, 치맥하는 제이지 : 헉 공지까지..!ㅎㅎ 답글 주신 분들 모두 감사합니다! 답글 보면서 생각이 더 많아지네요! 보내주신 이야기들을 기반으로 좀 더 구체적인 목표를 생각해봐겠어요! 감사합니다 :)
2022. 6. 1. 오후 2:01, 유용태 (teo.yu) : 내가 뭔가를 만들고 그것을 써본 사람들이 잘했다 좋다 편하다 이런 피드백을 들었을때의 짜릿함(?) 그리고 다 같이 새로운 것을 생각하고 고민하고 괜찮은 방법이 떠올라 그걸 구현하고 서로 의기양양하며 으쌰으쌰하는 그 과정이 너무 즐겁습니다. 그런데 그걸 지속하기 위해서는 좋은(이라고 하고 돈이 되는...) 서비스를 하고 있어야 되더라구요~ 

저는 천성이 개발자다 보니 딱히 다른 서비스들을 별로 쓰고 있지 않다보니 자연스럽게 개발도구 업부도구 도메인이 제일 재밌어어요 내가 일을 하기 위해서 쓰는 도구를 잘 만들어보고 싶다!! 그러다 보니 최근에 협업에 대한 생각 그리고 협업도구에 많은 생각들을 하곤 합니다
2022. 6. 1. 오후 2:08, 음악듣는 어피치 : 저도 테오랑 같은 맥락으로
개발할때 어떻게하면 조금 더 편하게 할 수 있을까? 하는 생각이 들더라고요.
나아가 개발뿐 아니라 평상시 업무할때도 자동화에 관심이 가요.

예로 팀에서 사용하는 스프레드 시트 특정 열이 업데이트되면 앱스크립트 사용해서 슬랙으로 특정 팀원 태깅해서 알람할 수 있도록 간단히 짠거부터.. 그냥 뭐하면 조금 덜 생각하고 자동으로 알림/처리할 수 있게 할깤ㅋㅋㅋ고민하는 중이에요
2022. 6. 1. 오후 2:08, 음악듣는 어피치 : 아까는 산책하면서 개발자도구로 수정한 스타일들(우리 이렇게 많이 개발하잖아요^^????) 한번에 옮겨올 수 잇는 방법 없을까 혼자 고민하다가 머리를 절레절레..ㅋㅋㅋㅋㅋ
2022. 6. 1. 오후 2:09, Herb : 도구를 만드는 데에 관심을 가지고 있는 학생으로서 따봉 하나 누르고 갑니다! 아직 걸음마 단계지만 테오쌤께 많이 배울 수 있을 것 같아 기뻐요 ㅎㅎ 앞으로도 눈팅 잘 하겠습니다!!
2022. 6. 1. 오후 2:09, 음악듣는 어피치 : 혹시 있다면 추천해주세요🙏🏻ㅋㅋ
2022. 6. 1. 오후 2:38, 흔들 : 여기분들은 마인드도 너무 멋지십니다. 반할려고하네요.
2022. 6. 1. 오후 2:42, 흔들 : 자기의 회사에 맞는 역할과 수행능력을 보여주는 개발자가 전 가장 현실적이고 멋진거 같습니다.
회사마다 기준도 다르고 개발도 다른데 정답은 없겠지만, 그 회사안에서 꼭 필요한 나사가 되어 같이 잘 돌아간다면 어디가서든 환영받을꺼 같아요.
2022. 6. 1. 오후 2:49, 흔들 : 방장님 여긴 꼭 개발관련 질문만해야 하나요?
2022. 6. 1. 오후 2:50, 흔들 : 여기 계신분들은 스트레스 푸는 취미나 방법 같은거 여쭈어보고 싶어서요.
2022. 6. 1. 오후 2:51, 유용태 (teo.yu) : 꼭 그렇지는 않아요~ 대신 400명이 넘는 사람에게 알림이 가는데 대부분이 개발과 관련된 일을 하는 만큼 너무 공감대가 없을 얘기만 아니면 괜찮다고 생각합니다 ㅎ
2022. 6. 1. 오후 2:51, 부끄러운 어피치 : 저는 개발 안하면 그냥 스트레스 풀리더라고요 ㅋㅋ
2022. 6. 1. 오후 2:52, 흔들 : 네 알겠습니다. 죄송합니다.
2022. 6. 1. 오후 2:52, 유용태 (teo.yu) : 아뇨~ 스트레스 푸는 질문 같은거 좋아요 ㅎ
2022. 6. 1. 오후 2:52, 유용태 (teo.yu) : 의도없이 그냥 질문에 대한 답변이었어요~~ 죄송해하지말아요^^;;
2022. 6. 1. 오후 2:53, 흔들 : 요즘 제가 정신병원으로 가야할꺼같아서......   소리지를곳이 없어요. ㅡㅜ
2022. 6. 1. 오후 2:53, 프론트 지키미 : 가보는것도 추천드려요 정신의학과나 이런곳 가서 누군가에게 자신의 얘기를 한다는게 치료가 되더라구요
2022. 6. 1. 오후 2:54, 프론트 지키미 : 저도 주기적으로 방문해서 치료받고 있어요
2022. 6. 1. 오후 2:55, 유용태 (teo.yu) : 지금은 안되지만 디코로 DM주시면 같이 얘기해봐요
2022. 6. 1. 오후 2:56, 유용태 (teo.yu) : 저는 스트레스를 받으면 달리기를 하면서 녹음기를 켜고 나랑 대화(?)를 하고나서 다시 들어봅니다
2022. 6. 1. 오후 2:57, 흔들 : 네 감사합니다. 주로 전 취미로 당구를 쳤는데 이걸로는 도저히 감당이 안되서 고민이었습니다..
2022. 6. 1. 오후 3:05, 게으름(lifeisnovel) : 저도 방향은 다르지만 개발 공부에 대한 압박 같은 걸 좀 받는 느낌이라 종종 고민하고 있어요.
저번 달에 거의 크런치 정도로 하던 일이 끝나서 이제 그나마 휴일에는 회사 밖에서 보낼 수 있게 됐는데, 휴일에도 회사 일은 아니더라도 개발 공부에 대한 압박이 계속 느껴져서 오늘도 일단 노트북 들고 나오긴 했네용... 계속되는 공부는 개발자로서 숙명이긴 한 것 같지만
2022. 6. 1. 오후 3:08, 진현우 : 와우..스트레스 받긴싫지만 해보고싶은 방법이네요..
2022. 6. 1. 오후 3:14, 모승 : 비록 개발자는 아니지만 혹시 테오 디스코드 들어와 계시거나 들어오실 예정이면 저녁에 잠시 음성채널 들어오세용 이야기 들어드릴게여
2022. 6. 1. 오후 3:39, 좌절하는 프론트 : 홀
2022. 6. 1. 오후 3:48, 피카츄돈까스/React,RN : 가볍게 상담받는다는 생각으로 다녀오세요! 저도 1년전부터 꾸준히 다니고 있는데 저는 저를 좀 더 잘 이해 할 수있는 계기가 돼서 좋았어요!
2022. 6. 1. 오후 3:49, 피카츄돈까스/React,RN : 이모티콘 상담센터들도 좋긴 한데 좋은 상담사 만나기가 쉽지 않아서 병원도 약처방보다 상담을 비중있게 해주는 곳 찾아보시면 좋을거에요! 필요하면 약의 도움을 받아야 하기도 하구요! 힘냅시다
2022. 6. 1. 오후 3:59, 흔들 : 감사합니다!
2022. 6. 1. 오후 4:11, 임세원 : 코인노래방은 어때요
2022. 6. 1. 오후 4:13, 좌절하는 프론트 : 같이 북한산가서 무얏호 하시지요
2022. 6. 1. 오후 4:13, 좌절하는 프론트 : 세상아 덤벼랏!!!!으아닛
2022. 6. 1. 오후 4:56, 프론트 지키미 : React 웹에서 네이티브의 페이지 전환처럼 stack 형태로 되게 할때 (좌우로 smooth 이동)
사용하는 라이브러리가 혹시 있나요??? (RN은 아닙니다. 모바일 웹뷰 입니다!!)
2022. 6. 1. 오후 4:57, 주니어개발자 : https://reactcommunity.org/react-transition-group/ 저는 이걸로 페이지 이동 애니메이션 줬었어요!
2022. 6. 1. 오후 4:59, 프론트 지키미 : 감사합니다 살펴볼게요!
2022. 6. 1. 오후 5:57: 눈물 흘리는 제이지님이 들어왔습니다.
2022. 6. 1. 오후 5:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 5:59, 벙찐 튜브 : 질문있습니다..!
브라우저가 제공하는 전역객체 window가 최상위 객체인가요?
2022. 6. 1. 오후 6:00, 벙찐 튜브 : 그 윗단계의 객체 또는 형제객체는 없는건가요?
2022. 6. 1. 오후 6:01, 유용태 (teo.yu) : 네~ 윈도우 창을 열어준 윈도우인 opener 정도가 있겠네요
2022. 6. 1. 오후 6:01, 유용태 (teo.yu) : 어떤 것 때문에 궁금하신 거에요?
2022. 6. 1. 오후 6:02, 유용태 (teo.yu) : 눈물 흘리는
제이지님~~ 반갑습니다 :)
2022. 6. 1. 오후 6:03, 벙찐 튜브 : 브라우저가 제공하는 객체에 대해 알고싶은데 너무 헷갈리는 글들이 많은것같아요 ㅠㅠ
2022. 6. 1. 오후 6:04, 벙찐 튜브 : window에 관한글들은 많지만 단순히 '브라우저가 제공하는 전역객체다.'라는 글들이 대부분입니다
2022. 6. 1. 오후 6:05, 론트리니 : mdn 공식문서를 보시는게 좋지 않을까요?
2022. 6. 1. 오후 6:08, 유용태 (teo.yu) : 음... 그렇긴 하죠 ㅋ window도 파면 팔수는 있는데 그다지 쓸모가 없으니.. 론트리니님이 말한대로 mdn에서 opener self postMessage storageEvent iframe.coentntWindow 정도 키워드를 가지고 한번 보시면 좋을것 같아요 
2022. 6. 1. 오후 6:09, 벙찐 튜브 : 넵 감사합니다
2022. 6. 1. 오후 6:09, 벙찐 튜브 : 답변감사합니다
2022. 6. 1. 오후 6:15, A대 4-1(진) : 사진
2022. 6. 1. 오후 6:15, A대 4-1(진) : ㅜㅜ 
2022. 6. 1. 오후 6:16, A대 4-1(진) : 위 fn2에서는 T형식은 queueItemType에 할당할수없다고 합니다,,
2022. 6. 1. 오후 6:16, A대 4-1(진) : 혹시 어떻게 넣어줘야하는지 알 수 있을까요..?
2022. 6. 1. 오후 6:17, 동동 : const fn2: FunctionType<queueItemType> = (edge1, edge2) => .,.. 
요렇게 한번 해보실 수 있을까요?
2022. 6. 1. 오후 6:20, A대 4-1(진) : FunctionTpye이 제네릭이 아니라네요,, 제네릭으로 만들려고 저렇게 해본건데,, ㅎㅎ 감사합니다
2022. 6. 1. 오후 6:22, 곰젤리 : type FunctionType<T> = ...
2022. 6. 1. 오후 6:22, 곰젤리 : 으로 바꾸시고
2022. 6. 1. 오후 6:23, 곰젤리 : 해보세요
2022. 6. 1. 오후 6:26, A대 4-1(진) : 사진
2022. 6. 1. 오후 6:26, A대 4-1(진) : 감사합니다!
2022. 6. 1. 오후 6:48, 좌절하는 프론트 : 렌더링 성능 개선할때
2022. 6. 1. 오후 6:48, 좌절하는 프론트 : GPU 가속 다들 어떻게들 사용하시나요
2022. 6. 1. 오후 7:05, 유용태 (teo.yu) : 딱히 신경을 안쓰는 거 같아요 margin이나 absolute 대신 transform으로 에니메이션을 처리하려고 한다 정도?
2022. 6. 1. 오후 7:06, 좌절하는 프론트 : 아하 넵
2022. 6. 1. 오후 7:06, 유용태 (teo.yu) : 눈에띄게 성능개선이 그렇게 된다고 보기 어려워서요
2022. 6. 1. 오후 8:10, 엉망장자 : 1653643800 와 같이 10자리의 time 표현 방식이 무엇인지 아시는 분 있을까요? ㅠㅠ
2022. 6. 1. 오후 8:10, 최민석 : timestamp 인거같아요
2022. 6. 1. 오후 8:10, 게으름(lifeisnovel) : unix timestamp 말씀이실까요!
2022. 6. 1. 오후 8:11, 엉망장자 : 오 맞는 것 같아요! 감사합니다
2022. 6. 1. 오후 8:55: 벙찐 튜브님이 나갔습니다.
2022. 6. 1. 오후 9:20: 초롱초롱 튜브님이 들어왔습니다.
2022. 6. 1. 오후 9:20, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 9:21, 좌절하는 프론트 : 안녕하세요
2022. 6. 1. 오후 9:31: 제이님이 들어왔습니다.
2022. 6. 1. 오후 9:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 9:33, 좌절하는 프론트 : 안녕하세요
2022. 6. 1. 오후 9:33, Vintz : 와…언제 440명이 되었죠
2022. 6. 1. 오후 9:34, 제이 : 안녕하세요~ 벨로그에서 테오의 스프린트 회고를 읽다가 알게되어서 들어왔어요
반갑습니다 :) 
2022. 6. 1. 오후 10:08, 유용태 (teo.yu) : 어서오세요 제이! 반갑습니다 :)
2022. 6. 1. 오후 10:30: 모랑님이 들어왔습니다.
2022. 6. 1. 오후 10:30, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 10:31, 유용태 (teo.yu) : 안녕하세요 모랑님~~ 반갑습니다 ;)
2022. 6. 1. 오후 10:31, 모랑 : 안녕하세요! 주니오 프론트엔드 개발자입니다~ 잘부탁드립니다
2022. 6. 1. 오후 10:32, 유용태 (teo.yu) : 네 저도 잘 부탁드려요~ 이곳은 서로 궁금한것들을 질문하고 답하면서 같이 성장하고자 하는 곳입니다 뭐든 상관없으니 언제든 궁금한게 생기면 글 남겨주세요~ 본인이 작성한 블로그나 어디서 본 좋은 자료등의 공유 대환영입니다 :)
2022. 6. 1. 오후 10:33, 부끄러운 어피치 : 인원 444명이네여
2022. 6. 1. 오후 10:35: 빈털터리 제이지님이 들어왔습니다.
2022. 6. 1. 오후 10:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 10:35, 유용태 (teo.yu) : 빈털터리 제이지님~ 반갑습니다 :)
2022. 6. 1. 오후 10:36, 빈털터리 제이지 : 안녕하세요!
2022. 6. 1. 오후 11:30: 쥬드님이 들어왔습니다.
2022. 6. 1. 오후 11:30, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 11:35, O_O : 유료 부트캠프 경험하신 분들께 궁금한게 있는데, 학원에서 프로젝트에 어느정도로 개입하나요...? 혹시 수료생 계시면... 1:1채팅으로 질문 좀 드릴 수 있을까요..?
2022. 6. 1. 오후 11:36, Hardy : 부캠마다 다른걸로 알고 있어요 제가 다닌 곳은 개입 일절 없었어요
2022. 6. 1. 오후 11:42, O_O : 이력서 보는 입장에서는 학원 포폴로 지원자를 평가하기 되게 어렵네요...
팀프로젝트인 점도 있고, 학원에서 얼마나 서포트해준 것인지도 모르겠고... 
지원자의 실력이 여기에 얼마나 녹아 있는지 알 방법이 되게 애매하군요 ㅠ
2022. 6. 1. 오후 11:45, 유대형 : 저도 부캠 나왔는데 개입 하나도 없었어요 !! 
2022. 6. 1. 오후 11:45, 좌절하는 프론트 : 진짜 학원출신에게 들으면 크로스체크 가능하니다
2022. 6. 1. 오후 11:46, 좌절하는 프론트 : 근데 그게 기수마다 또 감정들이나 느낌들이 다르시더라구요
2022. 6. 1. 오후 11:46, O_O : 그쵸 ㅠ 그게 학원에서도 기수마다 또 분위기가 아예 다른가보더라구요 ...ㅋㅋㅋ
2022. 6. 1. 오후 11:47, 좌절하는 프론트 : 열심히하는 기수일수록
2022. 6. 1. 오후 11:47, 좌절하는 프론트 : 불만이 많더라
2022. 6. 1. 오후 11:47, 좌절하는 프론트 : 가 제 결론입니다
2022. 6. 1. 오후 11:47, 좌절하는 프론트 : 여기에는 팀읍읍출신이 없으신거같지만..거기는..개인 포폴 프로젝트 링크 걸어놨는데..내가 코드를 못봐.......
2022. 6. 1. 오후 11:48, O_O : ㅋㅋㅋㅋㅋ
2022. 6. 1. 오후 11:48, O_O : 거기는 뭐.. 언급을 하면 혼나니 조용하겠습니다
2022. 6. 1. 오후 11:48, 좌절하는 프론트 : 그럼 대체 이력서에 왜 링크걸어둔거지..? 그생각뿐...넵
2022. 6. 1. 오후 11:48, 벙찐 튜브 : 국비학원 다니고있는 취준생이에요.. 저는 혼자 html css js web-API 로 수료포폴 진행하는데 저희학원에서는 문서관련해서는 좀 빡세게 관리하시는것같고 훈련생이 직접 질문하지 않는이상 강사님이 터치는 하지 않으세요
2022. 6. 1. 오후 11:49, 벙찐 튜브 : 이거 진짜 맞는거같아요 ㅋㅋ
2022. 6. 1. 오후 11:49, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 1. 오후 11:49, 좌절하는 프론트 : 실제 아는분이 책도쓰셨고 비트에서 강의하시는데
2022. 6. 1. 오후 11:49, 좌절하는 프론트 : 갈때마다 제가 이야기도 듣고 분위기보면...ㅎㄷㄷ
2022. 6. 1. 오후 11:50, 좌절하는 프론트 : 그리고 책에있는 예제코드로 복붙해서 포폴이에요!
2022. 6. 1. 오후 11:50, 좌절하는 프론트 : 근데 이걸 하도받은 업체에서 이거 만든사람 대체 누구인지 연락까지 받았었다고...
2022. 6. 1. 오후 11:50, 벙찐 튜브 : 오우.. 엄청 위험한 분들이 많으시군요
2022. 6. 1. 오후 11:50, 좌절하는 프론트 : 그 이후로 책 소스코드 공개하시는게
2022. 6. 1. 오후 11:50, 좌절하는 프론트 : 두려워졌다고...
2022. 6. 1. 오후 11:50, 좌절하는 프론트 : 뭐 그러셨습니다 ㅠㅠ
2022. 6. 1. 오후 11:51, 벙찐 튜브 : 학원들이 너무 쉽게 코딩배울수있다고 광고하는것이랑 관련있다고 봐요..
2022. 6. 1. 오후 11:51, O_O : 그 스프링책 아닌가요?
2022. 6. 1. 오후 11:51, 좌절하는 프론트 : 헠 ㅋㅋㅋㅋㅋㅋㅋㅋ 맞아요
2022. 6. 1. 오후 11:51, O_O : 어디 커뮤니티에서 본듯한대
2022. 6. 1. 오후 11:51, 벙찐 튜브 : 헐 뭔가 감이 잡히는군요
2022. 6. 1. 오후 11:52, 좌절하는 프론트 : 아시는분들 있구나 ㅋㅋㅋ 조용해야지 ㅋㅋ
2022. 6. 1. 오후 11:52, 철진 : 부캠마다 다르겠지만 저는 개입 전혀 없었습니다. 코드 리뷰 등은 있는데 지켜야 할 컨벤션이나, 알아먹기 힘든 코드 등 알려주는 정도였어요. 
2022. 6. 1. 오후 11:53, 좌절하는 프론트 : 요즘은 자생테마군요
2022. 6. 1. 오후 11:53, 좌절하는 프론트 : 조교들이 많이 피드백 해줬다고도 들었는데
2022. 6. 1. 오후 11:53, O_O : 음 그럼 부트캠프 가격이 거의 천만원가까이하던데... 그 비용은 어떤데 사용되는 비용인가요? 
2022. 6. 1. 오후 11:53, 철진 : 비교적 힘들어하시는 분들에게는 빡세게 케어하시긴 하더라구요 
2022. 6. 1. 오후 11:54, lucky.jun : 빡쎼게 케어라면 어떤 건가요?
2022. 6. 1. 오후 11:54, 철진 : 오프라인 같은 경우에는 대부분이 시설비용인 듯 싶어요. 
2022. 6. 1. 오후 11:54, O_O : 최근은 코로나라 오프라인으로 진행 못된 걸로 알고 있어서.. 그게 궁금하더라구요
2022. 6. 1. 오후 11:54, 철진 : 질문이나 이런 것들을 더 잘 설명해주시는 느낌입니다! 
2022. 6. 1. 오후 11:55, 철진 : 평소 질문 -> 고민은 해보셨나요? 가 당연한 패턴이라면 
2022. 6. 1. 오후 11:55, 좌절하는 프론트 : O_O 톡 드림 ㅋㅋ
2022. 6. 1. 오후 11:55: 프론트신입생존기님이 들어왔습니다.
2022. 6. 1. 오후 11:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 1. 오후 11:55, 철진 : 어려워 하시는 분들에게는 근본적으로 조금 더 당장 필요한 것들을 챙길 수 있도옥 케어하시는 느낌이었어요
2022. 6. 1. 오후 11:55, O_O : 아하 답변감사합니당!
2022. 6. 1. 오후 11:56, 철진 : 근데 기수마다 분위기가 천차만별이고 담당 하시는 분들마다 달라서... 
2022. 6. 1. 오후 11:56, 설아아빠 : 진짜 궁금한게... 부트캠프 1780~2000만원의 가치가 있나요...?
2022. 6. 1. 오후 11:56, 철진 : 그정도로 비싼 부트캠프가 있나요...?
2022. 6. 1. 오후 11:57, 즐거운 네오 : 2천이요..?
2022. 6. 1. 오후 11:57, 즐거운 네오 : 와우
2022. 6. 1. 오후 11:58, 설아아빠 : 너무 도둥놈들 아닌가 싶네요 .. ㅋㅋㅋ 

2022년 6월 2일 목요일
2022. 6. 2. 오전 12:01, 제이 : 저는 봤던 부트캠프 비용 중 가장 비쌌던게 후불제로 내는 형태였던 것 같아요! 

대신 취업 못하거나 다른분야가면 안받고 일정 연봉이상 받는 곳으로 가면 2년치 연봉의 20퍼를 받는다고 적혀있었어요~ 
2022. 6. 2. 오전 12:02, 제이 : 연봉이 얼마더라도 비싼 금액이라는 생각이 들어서 실제 수강하신 분들 후기가 궁금하더라구요..!
2022. 6. 2. 오전 12:02, 프론트신입생존기 : 4500 으로 취업하면 2년간 1800만원 내는거네요???
2022. 6. 2. 오전 12:02, 설아아빠 : 저두 ... 궁금... ㅎㅎ
2022. 6. 2. 오전 12:02, 프론트신입생존기 : 짱비싸디
2022. 6. 2. 오전 12:02, 서경 : 와우…
2022. 6. 2. 오전 12:02, 설아아빠 : 1년7개월 교육 후불 2760만원이라구 되있네여...
2022. 6. 2. 오전 12:03, 제이 : 아아 2년치 연봉의 10퍼였네요! 정정합니다
2022. 6. 2. 오전 12:03, 프론트신입생존기 : 2760만원 혹시 팀노바?
2022. 6. 2. 오전 12:03, 설아아빠 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 2. 오전 12:03, 설아아빠 : 커리큘럼을 봐도 어떻게 저 금액이 나오는지 이해가 안되는데...
2022. 6. 2. 오전 12:03, 프론트신입생존기 : 업체명이 뭐져?
2022. 6. 2. 오전 12:04, 설아아빠 : 말씀하신곳이요
2022. 6. 2. 오전 12:04, 프론트신입생존기 : 아.... 역시
2022. 6. 2. 오전 12:04, 즐거운 네오 : 대학 등록금보다 비싼거같은데..
2022. 6. 2. 오전 12:04, O_O : 그정도면 진짜 대학을 가는게...
2022. 6. 2. 오전 12:04, 즐거운 네오 : 진짜 후기가 궁금하긴 하네요
2022. 6. 2. 오전 12:04, 프론트신입생존기 : 여기 테오님도 자주오시나요?
2022. 6. 2. 오전 12:04, 엔 : 그 이름을 말해선 안돼요
2022. 6. 2. 오전 12:04, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 2. 오전 12:04, 엔 : 볼드모트입니다
2022. 6. 2. 오전 12:05, 좌절하는 프론트 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 2. 오전 12:05, 프론트신입생존기 : ????
2022. 6. 2. 오전 12:05, 부끄러운 어피치 : 고소먹을수 있어요
2022. 6. 2. 오전 12:05, 엔 : 아 테오 말고요
2022. 6. 2. 오전 12:05, 엔 : 그 팀모시기...
2022. 6. 2. 오전 12:05, 프론트신입생존기 : 방금 테오님 객체지향 글보고 좋아서 들어왔는데
2022. 6. 2. 오전 12:05, 좌절하는 프론트 : 읍읍!!!
2022. 6. 2. 오전 12:05, 프론트신입생존기 : 테오님 넘 설명 잘하는거 같아여
2022. 6. 2. 오전 12:17, 웹린이 : 2700이요? ㄷㄷㄷㄷㄷ
2022. 6. 2. 오전 12:17, 웹린이 : 엄청나네요;;
2022. 6. 2. 오전 1:34, 살려줘 네오 : 아바다 케다브라? ㅋㅋㅋㅋ
2022. 6. 2. 오전 1:35, 살려줘 네오 : 완전 쌩 야생입니다. 
2022. 6. 2. 오전 1:56, 좌절하는 프론트 : 흐오아앙
2022. 6. 2. 오전 1:57, 좌절하는 프론트 : 디스코드에서 커피톡하실분 놀러오세욤 ㅋㅋㅋ
2022. 6. 2. 오전 6:47, 여의도개발 : ㄷ ㄷ ㄷ
2022. 6. 2. 오전 7:43, 박사장 : 노예계약서 낄낄
2022. 6. 2. 오전 7:46, 이프노즈 : 해외 부트캠프 가격이네요…
2022. 6. 2. 오전 8:01, 유용태 (teo.yu) : 프론트신입생존기님 어서오세요 :) 반갑습니다. 저 여기 거의 상주하고 있어요 ㅋ 밤이라서 자고 있었나보네요 ㅎ 감사합니다 ㅎㅎ
2022. 6. 2. 오전 8:03, 유용태 (teo.yu) : 쥬드님도 반갑습니다!! ;)
2022. 6. 2. 오전 8:50: 돈다발 들고 좋아하는 무지님이 들어왔습니다.
2022. 6. 2. 오전 8:50, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오전 8:51: 돈다발 들고 좋아하는 무지님이 나갔습니다.
2022. 6. 2. 오전 11:25: 초롱초롱 네오님이 들어왔습니다.
2022. 6. 2. 오전 11:25, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오전 11:37: 은결님이 들어왔습니다.
2022. 6. 2. 오전 11:37, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오전 11:53, 유용태 (teo.yu) : 초롱초롱 네오님~~ 은결님!! 반갑습니다 ;)
2022. 6. 2. 오후 12:11, 은결 : 안녕하세요 🎉 주니어 개발자 안은결이라고 합니다 만나서 반가워요!!!!!!!!
2022. 6. 2. 오후 12:15, Vintz : 안녕하세요~ :)!!
2022. 6. 2. 오후 12:16, 유용태 (teo.yu) : 네!! 반갑습니다 :) 어서오세요 ㅎㅎ
2022. 6. 2. 오후 12:16: 허브의 개발 일지님이 들어왔습니다.
2022. 6. 2. 오후 12:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오후 12:16: MK님이 나갔습니다.
2022. 6. 2. 오후 12:17, 유용태 (teo.yu) : 허민님~~ 반갑습니다 ;)
2022. 6. 2. 오후 12:18, 허브의 개발 일지 : 이모티콘 안녕하세요~~ 호기심대마왕입니다~~ 잘부탁드려요~~
2022. 6. 2. 오후 12:18, 유용태 (teo.yu) : 개발자는 호기심이 많으면 좋죠!! 환영합니다~~
2022. 6. 2. 오후 12:19, 유용태 (teo.yu) : 이곳은 프론트엔드나 개발이 궁금할때 물어보고 또 다같이 대답을 하면서 함께 성장하고자 하는 공간입니다~ 편하게 궁금한 점 올려주시거나 좋다고 생각하는 글 자료 관심사를 올려주시면 함께 이야기를 해보면 좋을 것 같아요
2022. 6. 2. 오후 12:20, 유용태 (teo.yu) : 고민상담이나 실무에서 어려운 점을 겪고 있는 문제들 공유나 본인이 잘한 일 공부한 블로그 공유도 환영합니다~
2022. 6. 2. 오후 12:24, 허브의 개발 일지 : 이모티콘 대학교에서 프론트 개발자가 한명도 없어서 쭉 혼자 공부했는데 완전 다행이네요~! 자주 놀러올게요~~!
2022. 6. 2. 오후 12:24, 유용태 (teo.yu) : 좋아요!! 언젠든 놀러오세요~
2022. 6. 2. 오후 12:24, 유용태 (teo.yu) : 제든*
2022. 6. 2. 오후 12:27, 쥬드 : 넵 반갑습니다 ㅎㅎ
2022. 6. 2. 오후 1:45, 프론트신입생존기 : 허민님 제 중 고등학교 동창이랑 이름이 같네요. 전주 였는데
2022. 6. 2. 오후 1:54, 실무뿌론트 : 샵검색 : #허민
2022. 6. 2. 오후 1:54, 실무뿌론트 : 어디서 많이들어본거같았는데
2022. 6. 2. 오후 2:18, 엄지척 튜브 : 캐러셀을 만들고있는데 el마다 5초간격으로 요청을 받아서 이미지를 계속 새로고침을 해주고있습니다 맵을 돌릴때 50개의 정도가 화면에서 보이지않음에도 요청을계속보내는데 효율적으로 바꿀수있는 방법이있을까요?
2022. 6. 2. 오후 2:20, 곰곰 : 화면에 중앙에 보이는 인덱스 기준으로 +- 2 정도일때만 기준으로 요청을 보내도록 하면 좋지않을까요?
2022. 6. 2. 오후 2:20, 좌절하는 프론트 : 매번 요청을
보내지마시고 배치형식으로 개선해보시면 어떨까요 ?
2022. 6. 2. 오후 2:26: 링링님이 들어왔습니다.
2022. 6. 2. 오후 2:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오후 2:33, 혜심 : 혹시 gitbook 이나, postman 등으로 API문서를 만들어보신 분 계실까요?
 가격을 보니깐 운영인원에 따른 금액 차이가 있더라구요. 트래픽 제한은 없어보여서 무료 플랜으로도 충분해 보이던데 API Docs를 유료 플랜으로 운영해보신 분들도 있으실까요?
2022. 6. 2. 오후 2:43, 이준호 : https://velog.io/@grinding_hannah/JavaScript-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%BA%90%EB%9F%AC%EC%85%80Carousel-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0
2022. 6. 2. 오후 2:43, 이준호 : 이 방식으로 캐러셀 구현하면 여러번 호출 안해도 되지 않을까요!
2022. 6. 2. 오후 2:44, 이준호 : +) 필요하다면, IntersectionObserver 사용해서 캐러셀이 나타나는 것 기준으로 lazy-loading을 시켜도 될 것 같아요
2022. 6. 2. 오후 2:44, 이준호 : 한번 불러온 이미지는 캐시로 로딩하고..?
2022. 6. 2. 오후 2:44, 이준호 : 최선의 방법인지는 모르겠어요!
2022. 6. 2. 오후 2:57, 엄지척 튜브 : @괴끈해 감사합니다!!
react slick 사용해서 만들었는데 벨로그 처럼 되어있기는해요 
근데 hidden해도 브라우저에서 안보여도 계속 요청을 보내더라구요
캐싱이 안되는게 이미지가 계속 바뀌는걸 받아야해서 브라우저에서 안보이면 요청을 끄는 로직을 만들어야할거같습니다 ㅜㅜ
2022. 6. 2. 오후 3:11: 신난 어피치님이 들어왔습니다.
2022. 6. 2. 오후 3:11, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오후 3:11: 신난 어피치님이 나갔습니다.
2022. 6. 2. 오후 3:11, 유용태 (teo.yu) : 링링님~ 신남 어피치님 반갑습니다 :)
2022. 6. 2. 오후 3:14, 허브의 개발 일지 : react-query나 swr을 사용하시면 옵션에 Window Focus Refatching이란게 있습니다 해당 사용자가 브라우저에 마운트 한 순간에만 server state를 변경하는데요. 
이런식으로 개발하시면 network cost를 줄여줄 수 있지 않을까요?

사용자에게 보여지는 렌더링이 느려져서 걱정이시면 패치 이후IntersectionObserver활용하는게 좋을 것 같습니다 ㅎㅎ
2022. 6. 2. 오후 3:26: 튜튜님이 나갔습니다.
2022. 6. 2. 오후 3:40, 마이크를 든 라이언 : radio와 select는 각각 어떨 때 써야하는지 정의 해주실 수 있으신가요!??! 
2022. 6. 2. 오후 3:45, 벙찐 튜브 : https://developer.mozilla.org/ko/docs/Web/HTML/Element/Input/radio
2022. 6. 2. 오후 3:45, 벙찐 튜브 : 라디오관련 사이트입니다
2022. 6. 2. 오후 3:45, 벙찐 튜브 : https://developer.mozilla.org/ko/docs/Web/HTML/Element/select
2022. 6. 2. 오후 3:46, 벙찐 튜브 : 셀렉트관련 사이트입니다
2022. 6. 2. 오후 3:46, 벙찐 튜브 : 처음 링크들어갔을때 예시만 보아도 이해되시리라 믿습니당
2022. 6. 2. 오후 4:00, 스타트업개발자 : 다들 master 브랜치에만 적용되는 경우에는 hotfix 형식으로 브랜치 따서 개발하고 적용시키시나요?
2022. 6. 2. 오후 4:02, 눈빛 애교 어피치 : 네 그렇습니다
2022. 6. 2. 오후 4:04, 곰곰 : 마스터는 소중합니당…. 함부로 건드리면 위험…
2022. 6. 2. 오후 4:05, 쥬아~ : 안녕하세요! css 관련 질문이 있습니다!! word-break 속성에서 break-word 값처럼 사용하고싶은데 break-word 가 deprecated 가 되었더라구요! MDN에서 말하는데로 overflow-wrap:anywhere과 word-break:normal 속성을 함께 썻는데 사파리브라우저에서는 원하는대로 적용이 안되서요
혹시 크로스브라우징문제도 해결하고 word-break 대체 css를 아시는 분있을까요..!

https://developer.mozilla.org/en-US/docs/Web/CSS/word-break
2022. 6. 2. 오후 4:08: FE개발자님이 들어왔습니다.
2022. 6. 2. 오후 4:08, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오후 4:50, 스타트업개발자 : 네이버 측에 스크립트 설치대행을 문의하려고 하는데 일반웹사이트를 선택하면 ftp 주소 및 접속 정보들을 달라고합니다. 근데 현재 저희는 next.js로 개발 후 vercel 로 배포해서 운영중인데 이런 경우에는 어떻게 해야할까요?
2022. 6. 2. 오후 5:38, 시닙프엔 : 리액트에 json 파일로 데이터를 넣어놓고 다른 파일에서 axios fetch 이런걸로 불러올 수는 없나요?
보통 axios.get 할 때 http로 시작하는 링크로 하던데 같은 리액트 파일에 있는 json 데이터를 불러오고 싶어서요🥹
2022. 6. 2. 오후 5:39, 철진 : 가능합니다
2022. 6. 2. 오후 5:39, 유용태 (teo.yu) : :root{overflow-wrap:break-word;word-break:break-word;}

이렇게 하는 거 추천 드립니다.
2022. 6. 2. 오후 5:40, 유용태 (teo.yu) : 프앤프님 반갑습니다~ 어서오세요 :)
2022. 6. 2. 오후 5:41, 철진 : public에 data 폴더를 만들고 그 안에 json 파일을 넣으신 다음에 '/data/파일.json' 형식의 url로 호출하시면 됩니다! 
2022. 6. 2. 오후 5:42, 시닙프엔 : 다른 위치말고 public/data 위치여야 하나요?
2022. 6. 2. 오후 5:42, 유용태 (teo.yu) : 대부분의 경우 work-break가 안되는것이 버그처럼 보여서 global에 걸어 두는게 편한데 overflow-wrap은 사파리에서 버그가 있어서 :root에 걸면 universal하게 동작을 해요~
2022. 6. 2. 오후 5:43, 철진 : data로 꼭 정하실 필요는 없습니다! public에 있을 때 경로 설정이 편하기 때문에 그렇게 사용하는 것으로 알고 있어요!
2022. 6. 2. 오후 5:45, 시닙프엔 : 철진님 덕분에 해결했습니다!! 감사해요!! 다른 루트로 했었는데 왜 안 됐었는지는 연구해보겠습니다🙂
2022. 6. 2. 오후 5:50, 철진 : 넵!! 다행입니다!! 
2022. 6. 2. 오후 6:01, team_smalt 성석원 : 안녕하세요 리액트 공부하다가 질문이 있어서 글을 남겨봅니다. 
 컴포넌트 생성과 관련된 질문인데요,
 예를 들어 버튼을 컴포넌트화 시킨다고 했을때 기존 버튼을 사용하는거에 비해 어떤 이점이 있을까요 ??
2022. 6. 2. 오후 6:02, 초보개발자 : 컴포넌트화의 목적은 반복되는 구조의 코드를 매번 직접 작성하는 것이 아니라 필요에 따라 import하여 사용하는 데에 있습니다
2022. 6. 2. 오후 6:02, 프론돌이 : 빨간색이면서 그림자 버튼을 만들어서 쓴다고 했을 때, 
여기서만 쓸게 아니라, 다른데서도 그 버튼을 쓴다고 하면
두번 만들지 않고, 한번 만든 것을 두곳에서 쓸 수 있겠죠? 

실제로는 저런 간단한걸로 나누기보다는
색깔이나 theme을 주어서 그것에 따라 모양이 다르게 만들겠지만요
2022. 6. 2. 오후 6:05, team_smalt 성석원 : 답변 감사합니다 좀 더 나누는이유에 대해서 공부해봐야겠네요 
2022. 6. 2. 오후 6:19, 기뻐하는 라이언 : 안녕하세요 리액트에서 공부하다가 질문이 있어서 
2022. 6. 2. 오후 6:19, 기뻐하는 라이언 : 남깁니다.
2022. 6. 2. 오후 6:19, 기뻐하는 라이언 : 사진
2022. 6. 2. 오후 6:19, 기뻐하는 라이언 : 제가 위와 같이 Confirm 창을 만들었고
2022. 6. 2. 오후 6:19, 기뻐하는 라이언 : 사진
2022. 6. 2. 오후 6:19, 기뻐하는 라이언 : 이렇게 해서 cAlert 로해서 사용하려고 하는데
2022. 6. 2. 오후 6:20, 기뻐하는 라이언 : 저기서는 확인을 눌렀는지 취소를 눌렀는지에 대한 리턴값을 받을수가 없나요?
2022. 6. 2. 오후 6:20, 기뻐하는 라이언 : 감사합니다!
2022. 6. 2. 오후 6:35, 쥬아~ : 감사합니다  (touched)  갓테오 👍👍
2022. 6. 2. 오후 6:38, 허브의 개발 일지 : 전역상태하나를 추가해서 개발하면 되지 않을까요~~?
2022. 6. 2. 오후 6:56, 엄지척 튜브 : 라이브러리옶이 map index와 settimeout으로 무한 캐러셀을 구현할수있나요??
2022. 6. 2. 오후 6:58, 프론트 지키미 : 이 방에 RN 하시는 분들도 많이 계신가요???
2022. 6. 2. 오후 6:58, 멀기트 : 쫌 있으신듯 합니다
2022. 6. 2. 오후 6:59, 썰cho : 현재 저는 RN으로 프로젝트 중입니다
2022. 6. 2. 오후 7:00, 프론트 지키미 : 웹으로 시작하셨다가 RN으로 진행중이신건가요???
2022. 6. 2. 오후 7:01, Hardy : 저도 웹으로 회사 들어와서 RN도 겸사겸사하고 있어요
2022. 6. 2. 오후 7:01, 썰cho : 넵!
2022. 6. 2. 오후 7:01, 썰cho : RN경험자는 저뿐이고 앱이 필요해서 진행하고 있습니다.
2022. 6. 2. 오후 7:01, 멀기트 : 그럼 혹시 svg 파일 설정할 때  react-native-svg-transformer 사용하시나요?
2022. 6. 2. 오후 7:05, 프론트 지키미 : 웹개발 앱개발의 영역이라 건너다니기가 쉽지 않다고 생각했었는데 잘 못 생각하고 있는 것일까요??
2022. 6. 2. 오후 7:05, 프론트 지키미 : 이 건너다니는 것은 채용시장에서의 이야기 일수도 있고 회사 내의 이동일수도 있어요
2022. 6. 2. 오후 7:06, 썰cho : 애매한게 웹개발자도 웹뷰를 만드는 사람들은
2022. 6. 2. 오후 7:06, 썰cho : 웹인지 앱인지 애매하거든요
2022. 6. 2. 오후 7:06, 썰cho : 분명히 앱에서 동작하지만 웹개발이니까요
2022. 6. 2. 오후 7:07, 썰cho : 그리고 언어가 다른거지 클라이언트 개발이라는 큰 측면에서 보면 똑같은 일을 하는거니까요
2022. 6. 2. 오후 7:07, 썰cho : 자바백앤드랑 파이썬 백앤드랑 결국 하는일은 같은거처럼요
2022. 6. 2. 오후 7:09, 프론트 지키미 : 맞는 말씀이십니다!!
그런 측면에서 React 웹 -> RN은 js,React는 그대로 쓴다는 측면에서 이점은 가져갈 수 있겟네요
2022. 6. 2. 오후 7:09, Hardy : 처음이라면 건너기가 쉽진 않겠지만 RN이기 때문에 React를 어느정도만 알아도 코드 짜는덴 문제는 없어요 다만 앱의 이해도를 낮기 때문에 그 부분에선 노력해야죠
2022. 6. 2. 오후 7:10, 제게 힘을주세요.. : React-rn 사용하시면서 웹뷰로 개발하시는 분들 많으신가요?
2022. 6. 2. 오후 7:10, 썰cho : 웹뷰가 유지보수하기도 편해서
2022. 6. 2. 오후 7:10, Hardy : 저흰 웹뷰가 아니긴 해요
2022. 6. 2. 오후 7:10, 썰cho : 하는게 좋다고 생각은합니다.. 토스가 거의 웹뷰이니까요
2022. 6. 2. 오후 7:10, 제게 힘을주세요.. : 토스는 Rn은 아니겠져?
2022. 6. 2. 오후 7:11, 썰cho : 토스 글로벌은
2022. 6. 2. 오후 7:11, 썰cho : RN으로 알고있어요
2022. 6. 2. 오후 7:11, 제게 힘을주세요.. : 오호라
2022. 6. 2. 오후 7:11, 썰cho : RN의 장점이 리액트 개발자에서 넘어오기 편하고 한명의 개발리소스로 두개의 디바이스 대응이 가능해서
2022. 6. 2. 오후 7:11, 썰cho : 회사 입장에서 이득이거든요
2022. 6. 2. 오후 7:11, 제게 힘을주세요.. : 경제적이긴하네여
2022. 6. 2. 오후 7:11, 허브의 개발 일지 : 이번 슬래쉬22에서 토스 글로벌팀이 RN 설명하니 한번 들어보셔도 괜찮을 것 같아요
2022. 6. 2. 오후 7:11, 썰cho : 어짜피 큰 앱이아닌이상
2022. 6. 2. 오후 7:12, Hardy : 맞아요 저희 회사도 저런 이유로 rn을 채택했어요
2022. 6. 2. 오후 7:12, 썰cho : 저도 기대중입니닼ㅋ
2022. 6. 2. 오후 7:12, Hardy : 제가 알기론 ㅋㅋ
2022. 6. 2. 오후 7:12, 프론트 지키미 : 채용시장에서 rn은 어떠한가요??? 
2022. 6. 2. 오후 7:12, 프론트 지키미 : 웹에 비해서는 작겠지만
2022. 6. 2. 오후 7:12, 썰cho : 플러터 3.0이 더 좋아보이긴해서
2022. 6. 2. 오후 7:12, 썰cho : 죽어가는 시장이라고 듣긴했는데
2022. 6. 2. 오후 7:12, 썰cho : 아직까진 많이쓰이긴 하는거같아요
2022. 6. 2. 오후 7:13, Hardy : 솔직히 rn 맘에 안들긴해요 ㅋㅋㅋㅋ
2022. 6. 2. 오후 7:13, 프론트 지키미 : 큰회사는 and,ios 따로 개발하지 않을까 싶었는데  죽어가는 시장이군요
2022. 6. 2. 오후 7:13, 썰cho : 큰회사는 따로 개발하죠
2022. 6. 2. 오후 7:13, 썰cho : 근데 작은 회사에서는 두명의 개발자를 두기가 부담스러우니..
2022. 6. 2. 오후 7:13, 제게 힘을주세요.. : React로 앱개발하는게 여간 애로사항이 많은게 아니네여
2022. 6. 2. 오후 7:13, 허브의 개발 일지 : 개인적으로 저도 Rn하고 있긴한데 하이브리드 앱으로 개발하고 안에 필요한 부분은 웹뷰로 가는게 가장 괜찮아보였어요
2022. 6. 2. 오후 7:14, 허브의 개발 일지 : 심사도 안받아도 되고 ui도입이나 신사업 도입에선 이런쪽이 더 편하더라구요
2022. 6. 2. 오후 7:14, 프론트 지키미 : Rn하면서 웹 사이드로 계속 하는게 나중을 위해서도 좋겠네요 
2022. 6. 2. 오후 7:14, 허브의 개발 일지 : 보통 rn개발자 웹 개발자 나누진 않고
2022. 6. 2. 오후 7:14, 살려줘 네오 : 이게 빠르게 크로스 플랫폼 개발은 좋은데 서비스 안정성에서 유지, 보수 측면에서 좋은 편은 아니라 그래도 ios and 개발자는 따로 선호하긴 하더라구요.
2022. 6. 2. 오후 7:15, 허브의 개발 일지 : 웹 개발자들이 본인 기술스택중 하나로 rn을 가져가는 편이에요
2022. 6. 2. 오후 7:15, Hardy : RN만할 수 있는 앱 개발자가 앱 개발자가 맞을지 생각이 들긴하네요
2022. 6. 2. 오후 7:15, 프론트 지키미 : 아 기술스택중 하나로 rn을 가져가는군요
2022. 6. 2. 오후 7:16, 썰cho : 흠 RN하면 오브젝티브씨랑 자바 다 건드려야돼서..
2022. 6. 2. 오후 7:16, 썰cho : 그거때문에 머리아픕니다.. .
2022. 6. 2. 오후 7:17, 좌절하는 프론트 : 리액트의 탈을쓴 알엔은 안하는걸로 끄적 
2022. 6. 2. 오후 7:17, 프론돌이 : RN만 메인으로 하는건 별로일 수 있고, RN을 서브로 하는건 괜찮아요 ㅋ
2022. 6. 2. 오후 7:17, 허브의 개발 일지 : 다 한번씩 해보셔요
2022. 6. 2. 오후 7:17, 썰cho : 인정합니다 RN까지할수있는 웹개발자면
2022. 6. 2. 오후 7:18, 썰cho : 좋습니다
2022. 6. 2. 오후 7:18, 썰cho : 빠르게 앱도 만들수 있고
2022. 6. 2. 오후 7:18, 허브의 개발 일지 : 사실 쓰고 싶은 서비스는 웹보단 앱이 많아서 ㅋㅋㅋㅋ
2022. 6. 2. 오후 7:18, 허브의 개발 일지 : 폰에서 돌아가는거보면 웹이랑 또 다르더라구요
2022. 6. 2. 오후 7:19, 프론돌이 : 그걸, 토스가 전 깨줬다고 생각해요. 

예전에는 웹뷰고 뭐고, 순수 네이티브로만 만든게 최고라고 생각했는데, 

웹뷰로도 충분히 예쁘고 빠르고 잘 만들어서 !
2022. 6. 2. 오후 7:19, 프론돌이 : 배포도 마켓 배포가 아니라 자체 배포로 해결되니까, 대응도 빠르게 되고
2022. 6. 2. 오후 7:20, 썰cho : 궁금한게 위치정보를 웹뷰로 받으면
2022. 6. 2. 오후 7:20, 프론돌이 : 예전에는 별로 안중요한 지면 같은 곳을 웹뷰로 임시로 썼던걸 좀 봤었지만, 요샌 그런게 좀 깨진 ? 
결제쪽에도 웹뷰를 쓰니까 이젠...
2022. 6. 2. 오후 7:20, 썰cho : 휴대폰 위치정보 권한은 필요없나요
2022. 6. 2. 오후 7:21, 프론트 지키미 : 필요해요 그래서 네이티브에서 설정해주어야 해요 
2022. 6. 2. 오후 7:21, 썰cho : 지금 위치정보권한때문에 골치를 썩고있어서
2022. 6. 2. 오후 7:21, 프론돌이 : 그런 지면은 그냥 네이티브로 -_-?   카메라 필요한거라거나 ?
2022. 6. 2. 오후 7:21, 썰cho : 웹으로만하다 앱으로 하려니...
2022. 6. 2. 오후 7:22, 멀기트 : 필요하지 않을까요 휴대폰 위치권한으로 위치 받아서 그 데이터 웹뷰쪽에 넘겨야할 거 같은뎁.... 
2022. 6. 2. 오후 7:22, 스타트업개발자 : 카메라 블루투스 등등 하드웨어적인 부분은 그냥 네이티브 껍데기에서 관리하시는게 편합니다
2022. 6. 2. 오후 7:22, 썰cho : 흠.. 넵!!
2022. 6. 2. 오후 7:22, 썰cho : 다른권한과는 다르게 위치권한 있는 앱을 만들려면
2022. 6. 2. 오후 7:22, 썰cho : 그걸 스토어 등록심사 하려면.. 까다롭더라고요
2022. 6. 2. 오후 7:49, 벙찐 튜브 : 현재 조작하는 js파일이 아닌 다른 js파일에 addEventListener로 이벤트함수에다가 classList를 이용하여 css 클래스를 넣고빼고 했습니다 

현재 작업중인 js파일로 다른 js파일 조작할수있나요..?
2022. 6. 2. 오후 7:49, 제이 : 안녕하세요 Nextjs 공부겸 개인 블로그를 만드려고 하는데 UI 레이아웃을 고민하다가 의견을 구하고 싶어서 글 남겨봅니다! 

Posts페이지에서 Tags로 글을 필터링해서 볼 수 있게 만들건데, 만약 블로그에 방문해주신 사용자라면 아래 이미지 속 3가지 방식 중 어떤 Tags 방식이 보기와 사용하기에 편하다고 느끼시나요?
2022. 6. 2. 오후 7:49, 제이 : 사진
2022. 6. 2. 오후 7:50, 박용준 : 파일을 다 script로 로딩하고 값이 글로벌에 선언되어 있다면 조작할수는 있습니다
2022. 6. 2. 오후 7:54, 벙찐 튜브 : script로 로딩한다는건 html 파일에 script태그로 선언하는걸 말씀하시는건가요?
2022. 6. 2. 오후 7:54, 벙찐 튜브 : 저는 1또는 3입니다
2022. 6. 2. 오후 7:59, 잉여개발자 : 전 1, 2번이영
2022. 6. 2. 오후 9:28, 곰곰 : 저도 블로그관련 질문하나 있습니다. gatsby 안쓰고 nextjs와 toast markup editor를 이용해서 블로그를 만드려고 하는데요, 마크업 데이터는 어떻게 저장하는게 좋을까요? 처음에는 db에 저장하려했으나 이미지 같은건 db에 저장하지 않는게 좋다고 들어서요..
2022. 6. 2. 오후 9:31, 유용태 (teo.yu) : 보통은 이미지는 cdn에 올리고 링크만 이용해서 문서형태만 db에 보관 하는 방식을 택합니다
2022. 6. 2. 오후 9:33, 현수 : 저도 nextjs로 블로그를 만들어서 사용하고 있는데, 마크다운으로 블로그 포스팅을 하고 이미지 같은 경우에는 로컬에 저장합니다! public 폴더에요!

그리고 마크다운에서 ![alt](src) 이런식으로 불러오는 방식을 사용하고 있습니다
2022. 6. 2. 오후 9:33, 곰곰 : 그렇군요. 혹시 public 폴더에 관리하는건 별로 좋지 않을까요?
2022. 6. 2. 오후 9:34, 곰곰 : 앗 public으로도 관리하는방법도 있군요. 좋은 의견 감사드립니다!
2022. 6. 2. 오후 9:41, 제이 : 감자님 잉여개발자님 답변 감사합니다! :) 
2022. 6. 2. 오후 9:41, 제이 : 곰곰님 질문 덕에 저도 새로운 정보를 얻었네요 감사합니다~
2022. 6. 2. 오후 9:54, 김미준 : 오늘 제주 웹 컨퍼런스 왔는데 좋네요 :)
2022. 6. 2. 오후 10:01, 웹린이 : 와 제주도요?
2022. 6. 2. 오후 10:01, 웹린이 : 멋지네요!
2022. 6. 2. 오후 10:01, 썰cho : 아 제주도 웹 컨퍼런스 있다고는 들었어요
2022. 6. 2. 오후 10:11, 벙찐 튜브 : 삭제된 메시지입니다. 
2022. 6. 2. 오후 10:15: cadenzah님이 들어왔습니다.
2022. 6. 2. 오후 10:15, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 2. 오후 10:16, 머리 빗는 네오 : 안녕하세요 zsh 제거가 안되는데ㅠ
2022. 6. 2. 오후 10:16, 머리 빗는 네오 : 왜 그럴까요?
2022. 6. 2. 오후 10:17, 설아아빠 : 우왕 저도 갔다왔는데 사람 많드라구욤
2022. 6. 2. 오후 11:15, 벙찐 튜브 : 사진
2022. 6. 2. 오후 11:16, 벙찐 튜브 : 개발자도구 > computed 에서 해당 css가 적용됬는데 정렬이 되지 않아요
2022. 6. 2. 오후 11:17, 벙찐 튜브 : 요소가 왼쪽에 붙어있네요.. 원인이 뭘까요..
2022. 6. 2. 오후 11:26, 철진 : width를 확인해보셨을까요? 그런 경우 보통 요소의 크기만큼민 width가 적용되서 그렇습니다. 
2022. 6. 2. 오후 11:28, 철진 : display:flex를 사용하는 경우에는 특성상 요소의 width가 맞춰지기도 하다보니 오른쪽이든 가운데든 왼쪽이든 똑같은 상황도 생깁니다. width 100%를 이용해서 정렬이 유효하도록 해주시면 될 것 같아요!
2022. 6. 2. 오후 11:28, 벙찐 튜브 : 사진
2022. 6. 2. 오후 11:29, 벙찐 튜브 : 넵 :) 알겠습니다 늦은시간에 답변감사합니다~

2022년 6월 3일 금요일
2022. 6. 3. 오전 12:08, 엉망장자 : vite로 만든 react app netlify에 배포해 보신 분 계실까요? CRA로 만들었을 때와 똑같이 하면 안되는걸까요?! ㅜㅜ
2022. 6. 3. 오전 12:23, 성석민 : vite로 할 때 build폴더가 생기는 게 아니라 dist폴더에 생겨서 안되는 걸 꺼에여!!
2022. 6. 3. 오전 12:24, 성석민 : 사진
2022. 6. 3. 오전 12:25, 성석민 : 그래서 저는 이런 식으로 설정해서 사용하고 있습니다 !!
2022. 6. 3. 오전 12:32, 엉망장자 : 아 이거 맞네요! ㅎㅎ
2022. 6. 3. 오전 12:33, 엉망장자 : 저는 netlify에서 폴더 dist로 바꿔서 해결했습니다 ㅎㅎ
2022. 6. 3. 오전 12:36, 허브의 개발 일지 : https://velog.io/@hhhminme/Serverless-API%EC%99%80-React-Query%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9CCRUD-%EB%A7%8C%EB%93%A4%EA%B8%B0
2022. 6. 3. 오전 12:37, 허브의 개발 일지 : 동아리 내 세미나가 있어서 발표자료와 예제를 함께 열심히 만들어봤는데 한번씩 읽어봐주시고 부족한점이나 궁금한점 있으시면 마음껏 댓글 달아주세요~!
2022. 6. 3. 오전 12:37, 웅세 : 잘읽겠습니다 감사합니다!!
2022. 6. 3. 오전 12:38, 허브의 개발 일지 : 사실 많이 혼나면서 배울려고 올려봤습니닿ㅎㅎ 부족하지만 잘 읽어주시면 감사하죠 ㅎㅎㅎ~
2022. 6. 3. 오전 10:51, 마이크를 든 라이언 : 안녕하세요! vuex  상태관리에서 this.$store.commit('addCounter') 방법과 / import { mapMutations } form 'vuex' 해서 ..mapMutations(['addCounter'] 방법 중에 어느 방법이 많이 쓰이나요!?!?
2022. 6. 3. 오전 10:52, 조조 : 기능적으로 동일해서 취향 아닐까요? ㅎㅎ
2022. 6. 3. 오전 10:52, 조조 : 저라면 더 간단한 map으로...
2022. 6. 3. 오전 10:52, fefe : 저는 mapmutations이나 mapgetters는 한 컴포넌트에서 2~3개 이상 쓸 때 .. 쓰는거같아요 
2022. 6. 3. 오전 10:53, fefe : 컴포넌트 사이즈 커지면 스크립트 태그까지 올라가서 임포트하고 컴퓨티드에 또 적고.. 하는게 귀찮아서 ..ㅋㅋㅋ일정개수 이상일때만..!! 
2022. 6. 3. 오전 10:54, 마이크를 든 라이언 : 아하 !!  일정갯수랑 취향차이군영ㅎㅎㅎ
2022. 6. 3. 오후 12:19, 승훈 : 사진
2022. 6. 3. 오후 12:19, 승훈 : @hustle-dev 
2022. 6. 3. 오후 12:19, 승훈 : 좋은 글 ! 잘읽었습니다 ㅎㅎ 
2022. 6. 3. 오후 12:20, hustle-dev : ㅎㅎ 감사합니다!😀
2022. 6. 3. 오후 12:22, 승훈 : 자극 받고 가겠스빈다 ㅋㅋ
2022. 6. 3. 오후 12:31: 튜브낀 튜브님이 들어왔습니다.
2022. 6. 3. 오후 12:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 12:32, 유용태 (teo.yu) : 튜브낀 튜브님!! 반갑습니다 :)
2022. 6. 3. 오후 12:34, 튜브낀 튜브 : 안녕하세요 벨로그 보고 들어왔어요! 여기서도 많은 공부가 될꺼같아요 ㅎㅎ
2022. 6. 3. 오후 12:35, 유용태 (teo.yu) : 네!! 환영합니다 ;) 적극적으로 물어보고 내가 잘 몰라도 말을 꺼내어 대답을 해보는 게 실전 공부법이죠 ㅎ 여기는 서로 묻고 답하며 같이 성장하고자 하는 곳입니다!! 언제든 편한게 글 남겨주세요~~
2022. 6. 3. 오후 12:43, 벙찐 튜브 : 반갑습니다~
2022. 6. 3. 오후 12:44, Herb : 삭제된 메시지입니다. 
2022. 6. 3. 오후 12:46, Herb : React를 막 공부하기 시작하면서 궁금한 게 생겼습니다!

1. props에 아무 Javascript object나 넘겨줄 수 있는 거지요? child component 자체를 dependency로 넘겨주면 편리할 것 같다 싶었는데 그게 되는 것 같아서 기뻐하는 중입니다.

2. 혹시 현업에서 선호하는 component composition 방법이 따로 있는지요?

3. 강의가 JS로 되어 있어서 아직 확인을 안 해보았는데, 혹시 TypeScript를 쓰면 component에 type annotation을 적용할 수 있나요?

2022. 6. 3. 오후 12:50, Herb : (3번 질문은 component에 type annotation을 적용하면 TypeScript compiler가 type checking도 해주고 잘못 사용하면 경고도 해주는지가 궁금했습니다!)
2022. 6. 3. 오후 12:51, 델 : 1. 넵

2. antd 나 mui 같은 디자인 시스템들 api가 어떻게 구성되어 있는지 참고해보시면 좋을 거 같아요!

3. 타입 어노테이션이 어떤 컴포넌트를 넣어줘야 되는지까지 체크하는 걸 원하시는 건가요?
2022. 6. 3. 오후 12:56, Herb : 흠... 넵넵! Type checking을 해준다면, component도 type이 있어서 어떤 component가 들어가는지도 type checker가 확인해주는 것을 예상했습니다!
2022. 6. 3. 오후 1:06, 초롱초롱 튜브 : 요새 contextapi 로 많이들 상태관리하시나요? 지금 redux thunk로 상태관리중인데 어디 물어볼데가 없어서 여쭤봅니다. 동향을 알고싶어요 !ㅠ 
2022. 6. 3. 오후 1:07, 애교뿜뿜 어피치 : 저는 전역 상태관리는 redux로 하고, thunk 대신 서버 요청쪽은 react-query로 하고 있습니다.
2022. 6. 3. 오후 1:07, 썰cho : 요새는 전역관리는 리덕스를 벗어나려고
2022. 6. 3. 오후 1:08, 썰cho : react query 에  recoil쓰고 있습니다
2022. 6. 3. 오후 1:09, 초롱초롱 튜브 : 주니어 개발자 끼리 프로덕트 개발하니까 어디 물어볼곳이 없었는데
2022. 6. 3. 오후 1:09, 초롱초롱 튜브 : 감사합니다 ㅠ-ㅠ
2022. 6. 3. 오후 1:09, 애교뿜뿜 어피치 : data fetching쪽은 swr, react-query 등 요즘 많이 사용하고 있는 것 같고. 상태관리는 편한걸로 하시면 될듯하네요
2022. 6. 3. 오후 1:10, 초롱초롱 튜브 : 혹시 강의 추천받을수 있을까요?
2022. 6. 3. 오후 1:11, 애교뿜뿜 어피치 : 어떤 강의요~?
2022. 6. 3. 오후 1:12, 초롱초롱 튜브 :  react-query 관련 강의요!
2022. 6. 3. 오후 1:12, 썰cho : 라이브러리인데
2022. 6. 3. 오후 1:12, 썰cho : 강의는 별로 없어요
2022. 6. 3. 오후 1:12, 썰cho : 문서 읽으셔야합니다
2022. 6. 3. 오후 1:12, 썰cho : 공식문서
2022. 6. 3. 오후 1:12, 허브의 개발 일지 : https://velog.io/@hhhminme/Serverless-API%EC%99%80-React-Query%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9CCRUD-%EB%A7%8C%EB%93%A4%EA%B8%B0
2022. 6. 3. 오후 1:12, 허브의 개발 일지 : 그 어제 제가 올리긴 했는데
2022. 6. 3. 오후 1:12, 애교뿜뿜 어피치 : https://www.youtube.com/watch?v=VtWkSCZX0Ec&list=PLC3y8-rFHvwjTELCrPrcZlo6blLBUspd2

영상 보시겠다 하면 이 분 강의 추천합니다.
2022. 6. 3. 오후 1:12, 허브의 개발 일지 : 한번 처음이시면 쭉 따라와 보셔도 좋을 것 같아요
2022. 6. 3. 오후 1:13, 애교뿜뿜 어피치 : 공식문서를 바탕으로 만든 튜토리얼 강의입니다.
2022. 6. 3. 오후 1:13, 초롱초롱 튜브 : 두개다 잘 챙겨보겠습니다. 도움 감사합니다 ^-^
2022. 6. 3. 오후 1:13, 현수 : 저도 공식문서를 우선 추천드리고, 

https://tkdodo.eu/blog/practical-react-query

이분 블로그도 잘 되어있어서 읽어보시면 좋을 것 같네요

그리고 유데미에 강좌도 있습니다!

https://www.udemy.com/course/react-query-react/
2022. 6. 3. 오후 1:16, 현수 : 그리고 https://tkdodo.eu/blog/practical-react-query 해당 블로그 번역을 하신 파랑님 블로그도 추천드립니다! 

https://parang.tech/react/2022-react-01/
2022. 6. 3. 오후 1:17, 초롱초롱 튜브 : 사진
2022. 6. 3. 오후 1:17, 초롱초롱 튜브 : 메모해두고 보겠습니다 감사합니다 ^---^
2022. 6. 3. 오후 1:22, 까루 : https://programming119.tistory.com/263

요즘 recoil 대신 Jotai랑 zustand도 많이 쓴다 하더라고요 recoil 이 좀 무거워서
잘 선택해서 쓰시면 될 것 같습니다!
2022. 6. 3. 오후 1:22, 허브의 개발 일지 : 사진
2022. 6. 3. 오후 1:23, 허브의 개발 일지 : 이모티콘 블로그 데모에 장난 치지 말아주세요...!!! 
2022. 6. 3. 오후 1:23, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 3. 오후 1:23, 진현우 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 3. 오후 1:23, 프로로 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 3. 오후 1:23, 유용태 (teo.yu) : 웃으면 안되는데 피식했습니다 죄송해요 
2022. 6. 3. 오후 1:23, 이영광 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 3. 오후 1:23, 진현우 : 육성으로 터져버렸네요..
2022. 6. 3. 오후 1:23, 허브의 개발 일지 : 람다랑 다이나모 DB 연결되어있어서 진짜 되는겁니다 흑흑
2022. 6. 3. 오후 1:23, j : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 3. 오후 1:23, 선풍기 바람 쐬는 어피치 : ㅋㅋㅋ ㅋㅋㅋ
2022. 6. 3. 오후 1:23, j : 아 너무 귀엽네옄ㅋㅋㅋㅋㅋㅋ
2022. 6. 3. 오후 1:24, 프론돌이 : 하지 말라고 하면 더 하실텐데 ㅠㅠ
2022. 6. 3. 오후 1:24, j : 장난치지 말아달래ㅠㅠㅠㅠㅠㅠㅠ
2022. 6. 3. 오후 1:24, 프로로 : 카페에서 보다가 터졌습니닼ㅋㅋㅋ
2022. 6. 3. 오후 1:24, j : 저도 일하다가
2022. 6. 3. 오후 1:24, j : 웃고있는데
2022. 6. 3. 오후 1:24, j : 다른팀 대리님 오셔가지고 급하게 껏네요
2022. 6. 3. 오후 1:25: FE개발자님이 나갔습니다.
2022. 6. 3. 오후 1:25, 썰cho : 주스탄드는 레퍼런스가 없어서 ㅠㅠ
2022. 6. 3. 오후 1:30, 까루 : 저는 토이 프로젝트 도입이라 너무 편해 보이긴 하더라고요 devTools 지원도 그렇고 
아직 사용을 제대로 안해봐서 레퍼런스 유무까지는 몰랐네요 😂
2022. 6. 3. 오후 1:30, 썰cho : 저희 회사 간단한 프로젝트로 리액트쿼리에 주스탄드 썼는데
2022. 6. 3. 오후 1:30, 썰cho : 레퍼런스가 없어서 주니어들만 있는 회사인데
2022. 6. 3. 오후 1:30, 썰cho : 문제생기면 찾을수도 없어서 리코일로 바꿨습니다
2022. 6. 3. 오후 1:31, 까루 : 혹시 어떤 문제 있으셨나요?
2022. 6. 3. 오후 1:31, hyeoki : [질문] Svelte와 Solidjs 비교하면 어떤가용?
2022. 6. 3. 오후 1:31, 썰cho : 제가 사용한건아니라서 ㅋㅋㅋㅋ
2022. 6. 3. 오후 1:31, j : 혹시 nextjs에서 refresh 상황에서 url query 값 undefined 문제 있으셨던 분 있으신가요?ㅠㅠ
2022. 6. 3. 오후 1:32, 까루 : 앗 아쉽네요 ㅋㅋ... 도입 해보고 문제 생기면 말씀 드리겠습니다
2022. 6. 3. 오후 1:33, 썰cho : 넵넵!!
2022. 6. 3. 오후 1:33, 썰cho : 도입해서 사용한 회사를 알긴하는데
2022. 6. 3. 오후 1:33, 썰cho : 잘 사용하고 있다고 하긴합니다
2022. 6. 3. 오후 1:36, 썰cho : 메뉴명이 계속 늘어나네요
2022. 6. 3. 오후 1:38, j : 아 실시간 구경중이신가요?ㅋㅋㅋ
2022. 6. 3. 오후 1:39, 썰cho : 켜놨었는데
2022. 6. 3. 오후 1:39, 썰cho : 늘어나더라고요
2022. 6. 3. 오후 1:39: 프프론님이 들어왔습니다.
2022. 6. 3. 오후 1:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 1:43, 허브의 개발 일지 : const [ownerId, setOwnerId] = useState<string | string[]>([]);
  const router = useRouter();
  useEffect(() => {
    setOwnerId(router.query.ownerid || []);
  }, [router.query.ownerid]);

2022. 6. 3. 오후 1:43, 허브의 개발 일지 : 예전에 썻던 프로젝트에 동적 라우팅 쿼리값 받아올때 썼던 코드인데
2022. 6. 3. 오후 1:43, 허브의 개발 일지 : 의존성에 해당 쿼리 넣어보셨나요?
2022. 6. 3. 오후 1:43, j : 클래스 형이라 withRouter를 썼는데도
2022. 6. 3. 오후 1:44, j : server.js에서 찍히질 않더라구요..
2022. 6. 3. 오후 1:44, 허브의 개발 일지 : 아아 비즈니스 로직을 따로 빼셨군요
2022. 6. 3. 오후 1:44, j : 네넵..
2022. 6. 3. 오후 1:44, 허브의 개발 일지 : 그건 저도 ㅎㅎ.. 펑셔널로 사용해서 잘 모르겠슴당
2022. 6. 3. 오후 1:44, j : getInitialProps에서 받아와서 데이터 페칭을 해야하는데 그 부분에서 오류가 나서..
2022. 6. 3. 오후 1:44, j : 글로벌 state로 관리를 해야하나..
2022. 6. 3. 오후 1:45, 허브의 개발 일지 : getServerSideProps로 받아와보셨나요?
2022. 6. 3. 오후 1:45, j : 넵..둘다 같은 에러를 뱉습니다
2022. 6. 3. 오후 1:46, 허브의 개발 일지 : pre-render할때 동적으로 라우팅이 생성되어서 쿼리가 안찍힐수도
2022. 6. 3. 오후 1:46, 허브의 개발 일지 : 아아
2022. 6. 3. 오후 1:46, 허브의 개발 일지 : ㅜㅜ
2022. 6. 3. 오후 1:46, j : 해당 문제인가 해서 고쳐봤는데도 같은 에러를 뱉어서 고민중이에요..
2022. 6. 3. 오후 1:47, 허브의 개발 일지 : https://velog.io/@hhhminme/Next.js%EC%97%90%EC%84%9C-SSR%EB%A1%9C-url-query-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0feat.-typescript
2022. 6. 3. 오후 1:47, 허브의 개발 일지 : 저도 예전에 한번 억까당해서
2022. 6. 3. 오후 1:47, 허브의 개발 일지 : 정리해놨던 블로그인데
2022. 6. 3. 오후 1:47, 허브의 개발 일지 : 혹시 모르니 부족한 코드이지만 남겨드려요ㅜㅜ
2022. 6. 3. 오후 1:48, j : 앗 감사합니다!!
2022. 6. 3. 오후 2:28, 스타트업개발자 : 현재 axios 와 react query 로 서버와 통신을 하고 있는데 토큰이 만료되었거나 서버에러인 경우 에러페이지나 로그인 페이지로 redirect를 하려고하는데 이런 경우에는 axios intercepter에서 하는게 맞을까요 아니면 react query useerrorboundary를 true로 주고 errorboundary에서 보내는게 맞을까요?
2022. 6. 3. 오후 2:35, 델 : 인터셉터 한표입니다
2022. 6. 3. 오후 2:36, 델 : 모든 서버 통신마다 작동해야 하는 기능일 텐데 react-query 를 안 통하는 api는 있을 수 있지만 axios 를 안 통하는 api는 없을 거 같아서요!
2022. 6. 3. 오후 2:36, 유용태 (teo.yu) : 프프론님 어서오세요 :)
2022. 6. 3. 오후 2:37, 웹린이 : 라우팅 어떻게 하시나요
2022. 6. 3. 오후 2:38, 웹린이 : react-router-dom 쓰시면 개인적으로는 에러바운더리에서 하는게 좋을 것 같아요.
2022. 6. 3. 오후 2:39, 웹린이 : axios에서 redirection하게 하면 결국 useNavigate 반환값을 외부로 빼서 쓰거나 HistoryRouter 써야하는데 정말 이 방법을 꼭 써야하는 경우 아니면 안쓰는게 좋다고 생각해서요
2022. 6. 3. 오후 2:40, 스타트업개발자 : react router dom 으로 기본적인 라우팅 중입니다
2022. 6. 3. 오후 2:40, 스타트업개발자 : 오호!? 그럴 수도 있겠네요!
2022. 6. 3. 오후 2:41, 웹린이 : 그리고 axios에서 redirection 해주면 라우팅해주는 코드가 컴포넌트쪽과 axios 인터셉터 함수 양쪽으로 나뉘어서
2022. 6. 3. 오후 2:41, 웹린이 : 관리하기도 번거로울 것 같다고 생각합니다
2022. 6. 3. 오후 2:43, 웹린이 : 두 방법중에 특히 HistoryRouter의 경우 패키지 의존성 관련 문제 때문에 prefix로 unstable 붙어있는게 영 찝찝하기도 하구요 ㅋㅋ
2022. 6. 3. 오후 2:50, 웹린이 : https://github.com/remix-run/react-router/blob/931cf23a54373485607b3727dbd5f9575fe58ebe/docs/routers/history-router.md
2022. 6. 3. 오후 2:50, 웹린이 : 관련 내용은 여기 참고하시면 될 것 같습니다!
2022. 6. 3. 오후 2:52, 스타트업개발자 : 감사합니다!!
2022. 6. 3. 오후 2:52, 웹린이 : 물론 에러바운더리를 쓰면 짜요짜요님께서 말씀하신 요청을 놓칠 수 있는 문제가 있기는 합니다 ㅎㅎ;
2022. 6. 3. 오후 2:56, 웹린이 : 인터셉터 쓰시게 된다면 요기 참고하시면 될 것 같아요~
https://stackoverflow.com/questions/68399876/how-to-navigate-outside-of-react-component-using-react-router-6
2022. 6. 3. 오후 3:11, 벙찐 튜브 : 개인프로젝트 진행중입니다..
js파일에 다음과 같이 작성하고
2022. 6. 3. 오후 3:11, 벙찐 튜브 : 사진
2022. 6. 3. 오후 3:11, 벙찐 튜브 : 콘솔로그 결과는 이렇게 되었습니다
2022. 6. 3. 오후 3:12, 벙찐 튜브 : 사진
2022. 6. 3. 오후 3:13, 벙찐 튜브 : 제가 원하는것은 iframe > document > html > body에 요소를 추가하는 겁니다..
어떻게 접근하여 createElement하면 될까요 ㅠㅠ🙏
2022. 6. 3. 오후 3:17, 벙찐 튜브 : 자바스크립트만으로는 해결이 안되는걸까요?
2022. 6. 3. 오후 3:19, 웹린이 : iframe은 window, document객체를 별도로 가져서 iframe.contentDocument.querySelector('body') 해서 body 가져오셔야 할 것 같네요~
2022. 6. 3. 오후 3:19, 웹린이 : https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/contentDocument
2022. 6. 3. 오후 3:19, 벙찐 튜브 : 허어
2022. 6. 3. 오후 3:20, 벙찐 튜브 : 빠른답변 감사합니다.. 노션에 바로 정리할게요 ㅠㅠ
2022. 6. 3. 오후 3:21, 벙찐 튜브 : 까먹기 전에...
2022. 6. 3. 오후 4:02: 만두님이 들어왔습니다.
2022. 6. 3. 오후 4:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 4:17, 유지남 : postmessage를 이용하는 방법도 있습니다.
2022. 6. 3. 오후 4:17, 벙찐 튜브 : 넵 이것도 공부해보겠습니당
처음들어보는거네요 ㅋ큐ㅠㅠ
2022. 6. 3. 오후 4:18, 벙찐 튜브 : 감사합니당!
2022. 6. 3. 오후 4:21, 살려줘 네오 : 혹시나 아실 분들이 있을까해서 여쭤봅니다. 
presignedUrl로 s3에 upload 시 자꾸 403 나는데 아시는 분 있으실까요?
2022. 6. 3. 오후 4:21, 델 : cors 확인해보셨나요?
2022. 6. 3. 오후 4:24, 살려줘 네오 : cors 정책 분명히 넣어줬는데도 그러네요 .. Put forbidden입니다 ㅜ
2022. 6. 3. 오후 4:26, 델 : 네트워크탭에서 어떻게 뜨나요?
2022. 6. 3. 오후 4:28, 살려줘 네오 : 사진
2022. 6. 3. 오후 4:28, 살려줘 네오 : cors 걸리긴 하는데,, http 로컬이라서 그런걸까요 흠 .. cors 노드도 그렇고 aws도 뚫어줬는데
2022. 6. 3. 오후 4:29, 델 : aws 에서 버킷 cors 정책 보여주실래요?
2022. 6. 3. 오후 4:31, 살려줘 네오 : 사진
2022. 6. 3. 오후 4:34: 엄지척 어피치님이 들어왔습니다.
2022. 6. 3. 오후 4:34, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 4:37, 스타트업개발자 : 깃헙 flow 전략관련해서 궁금한게 있습니다.
현재는 dev, main 두개의 브랜치를 사용중인데 개발자들이 기능이 완료되면 dev에 올려서 테스트를 하고 있는데 어떤 기능은 main 에 반영해야하고 아닌 것들도 존재를 할 때가 있더라구요? 이런 경우에는 release 브랜치를 따로두고 dev에 올렸어도 각 기능별 브랜치를 가지고 있다가 main에 올릴 것들은 release 에 올려서 테스트를 하고 main에 반영하는게 맞을까요?
2022. 6. 3. 오후 4:40, 살려줘 네오 : 문제 없어보이나요 ㅜㅜ
2022. 6. 3. 오후 4:44, 델 : 음 넵 일단 제눈엔 문제없어보이긴 해요
2022. 6. 3. 오후 4:44, 델 : 확실하진 않습니다..!
2022. 6. 3. 오후 5:43: 김주영님이 들어왔습니다.
2022. 6. 3. 오후 5:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 5:44, 유용태 (teo.yu) : 안녕하세요~ 김주영님~~ 반갑습니다 :)
2022. 6. 3. 오후 5:44, 김주영 : 예! 반가워요! 웹 개발자인 김주영입니다. 블로그 보고 찾아왔습니다. 잘 부탁드립니다.
2022. 6. 3. 오후 5:56, 유용태 (teo.yu) : 감사합니다~! 여기는 개발하다가 궁금한게 생겼을때 서로 묻고 답하면서 함께 하고자 하는 공간입니다. 한국에 개발자가 그렇게 많지만 막상 내 주위에는 없잖아요 ㅋㅋ 뭐든 편하게 글 남겨주세요~~ +_+
2022. 6. 3. 오후 5:57, 프엔공부중 : githut action, codeDeploy로 배포를 하려고 하는데 codeDeploy에서 실행하는 스크립트는 appsepe 에서 지정한 위치에서 실행되는게 아닌건가요..? ㅠㅠ
2022. 6. 3. 오후 5:57, 김주영 : 예 알겠습니다 :D 잘 소개해주셔서 감사합니다. 개발 문제 생겼을 때 자연스럽게 글 올려보겠습니다.
2022. 6. 3. 오후 6:15, 살려줘 네오 : 그렇군요... 혹시 input file보내실때 주로 뭘로 보내시나요? Formdata?
2022. 6. 3. 오후 6:23, 승훈 : 폼데이터~!
2022. 6. 3. 오후 6:27, 살려줘 네오 : 그거 안 먹어서 열받아서요 ㅠㅠ
2022. 6. 3. 오후 6:30, 델 : 그냥 공식문서가 하라는 대로 했는데 폼데이터 아니었던 거 같아요
2022. 6. 3. 오후 6:34, 엉망장자 : 저도 RN 개발할때 폼데이터 안먹어서 완전 애먹었었는데.. ㅋㅋㅋ
2022. 6. 3. 오후 6:36, 살려줘 네오 : Rn은 아니고  node.js인데 혹시 form제출시 post로 presigned 받고 다시 put으로 요청으로 s3버킷 넣기 한 번에 잘 되시나요?
2022. 6. 3. 오후 7:11, 유용태 (teo.yu) : 부스트캠프 웹 모바일 7기 모집 공고가 떴네요!! 관심있는 분들은 많이 많이 참가해보시기 바랍니다 +_+bbb https://boostcamp.connect.or.kr/program_wm.html
2022. 6. 3. 오후 7:14, 웅세 : 졸업 앞둔 4학년인데 부스트캠프랑 다른 기업 인턴중 어떤게 더 좋은 선택일까요...?
2022. 6. 3. 오후 7:15, 프론트 지키미 : 웅세님이 추구하시는 가치가 무엇인가요?
2022. 6. 3. 오후 7:16, 유용태 (teo.yu) : 상당히 주관적인 의견입니자만 어느급의 회사 인턴인지에 따라서 조금 다르겠지만 대기업급 인턴이 아니라면 저는 부스트캠프쪽이 좀 더...
2022. 6. 3. 오후 7:16, 유용태 (teo.yu) : 케바케니까 딱 잘라 말할수는 없지만...
2022. 6. 3. 오후 7:16, 웅세 : 솔직히 지금 제 실력에 만족하지 못해서 더 많이 배우고싶은데 졸업과 동시에 취업을 바로 하고싶은 욕심은 있네요..
2022. 6. 3. 오후 7:18, 프론트 지키미 : 뭐가 되었든 후회를 적게할 선택이면 좋지 않을까요 ㅎㅎ
2022. 6. 3. 오후 7:18, 나정 : 참여하시면 많이 배울 수 있어요 ㅎㅎㅎ 물론 취업을 바로 하셔도!
2022. 6. 3. 오후 7:20, 웅세 : 하긴 어디든 하기 나름대로 배울 수 있겠죠...? 우문현답이었네요
2022. 6. 3. 오후 7:20, 허브의 개발 일지 : 제가 느낀건 어딜가든 물론 많이 배우겠지만 조직문화도 무시 못하더라구요
2022. 6. 3. 오후 7:21, 허브의 개발 일지 : 저도 계속 저런 캠프 도전중인데 코테에서 늘 미끌어져서ㅜㅜ 좋은 사람들도 많이 만나고 성장하고 싶더라구요
2022. 6. 3. 오후 7:26, 나정 : 핫 혹시 궁금한거 있으시다면 디스코드에서 알려드려도될까요 저도 도움을 많이 받아서 도와드리고싶네요(방긋)
2022. 6. 3. 오후 7:29, 포유 : 부캠 좋습니다! 수료하면 네카라도 꽤 많이가구여!
2022. 6. 3. 오후 7:29, 핑구는뮉뮉 : 각잡고 배우고싶다면 부캠 추천 드리고, 실무 경험하고 싶으시다면 인턴 추천드려요!

인턴십에서도 많은 걸 배울 순 있지만...! 막상 인턴했을때 되돌아보면, 전환 되고싶다는 마음 && 짧은 인턴기간때문에 차근차근 배운다기보다는 급한 불 끄듯이 코딩하게 되더라구요...ㅎㅎ
2022. 6. 3. 오후 7:32: .님이 들어왔습니다.
2022. 6. 3. 오후 7:32, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 7:33, 유용태 (teo.yu) : .님 반갑습니다 :)
2022. 6. 3. 오후 7:33, 유용태 (teo.yu) : 톡게시판 '공지': 부스트캠프 웹 모바일 7기 모집 공고가 떴네요!! 관심있는 분들은 많이 많이 참가해보시기 바랍니다 +_+bbb https://boostcamp.connect.or.kr/program_wm.html
2022. 6. 3. 오후 7:33, . : 반갑습니다😄
2022. 6. 3. 오후 7:34, 웅세 : 다들 친절한 답변 감사합니다 일단 합격을 목표로 코테공부해야겠어요...ㅋㅋㅋㅋ
2022. 6. 3. 오후 7:35, 웅세 : 디스코드는 링크타고들어가면되나요?
2022. 6. 3. 오후 7:38, 나정 : 네네 테오님 디스코드용ㅎㅎㅎ 제가 지금은 밖이라 디엠보내주세요 닉네임 나동<< 이거예요!!
2022. 6. 3. 오후 7:40, 웅세 : 앗 네 디엠 남겨두겠습니다 감사합니다~
2022. 6. 3. 오후 7:43, 김주영 : 게임 회사 다니시는 분이 있는지 궁금합니다! 혹시 다니시는 분은 게임이 좋아서 들어가셨나요? 저는 지금은 웹 개발자인데 게임 업계에 흥미가 있어서, 서버 개발자로 가면 게임 툴과 API 연결을 하는지, 게임 도메인 지식을 많이 활용하는지 궁금하네요. 또 그런 게임회사는 어떤 스펙을 많이 보는지도 궁금하구요!
2022. 6. 3. 오후 7:52, 모승 : 저도 게임 개발자 하려는건 아닌데 게임을 좋아해서 게임 회사에서 프론트엔드 개발자는 어떤지 수요가 많은지 이런점이 궁금합니다
2022. 6. 3. 오후 7:53, 유용태 (teo.yu) : 둘다 생태계는 아직 없지만 solidjs쪽이 아직 더 없기는 합니다~ solidjs의 경우 jsx 문법을 기반으로 하면서 제일 빠른 퍼포먼스를 기반으로 아이덴티티가 있어요~ jsx를 쓴다고 하나 react와는 다른 방식이기 때문에 코드가 호환된다거나 react같은 사용성은 아닙니다. 퍼포먼스가 정말 중요한 조그만한 독립적인 모바일 웹뷰 같은게 아니라면 인사이트 목적으로는 해봄직하나 아직 실무에는 좀... 이런 느낌입니다. 스벨트의 경우 인지도가 생겨가고는 있고 solidjs만큼의 퍼포먼스가 아니라고는 하지만 현존하는 react vue보다는 충분히 빠르고 무엇보다 깔끔한 문법과 적은 코드량 그리고 배우기 쉽다라는게 장점입니다. 둘다 지켜봄직하나 게임체인저가 되기에는 아직 끗발이 조금 모자란데 svetle능 svetlekit 흥행여부에 따라서 또 어떻게 될런지 기대중입니다
2022. 6. 3. 오후 7:56, 유용태 (teo.yu) : 게임 개발자 프론트의 경우 회사 홈페이지 작업도 만만찮은 기술이 필요하고 내부 게임데이터와 연동해서 화면에 그래픽으로 뿌려주기 배그같은 경우에는 실제 게임 인벤토리와 홈페이지와 연동해서 작업하고 그런것들을 한다고 들었습니다
2022. 6. 3. 오후 7:57, 유용태 (teo.yu) : 로그를 뽑아주거나 사용자 통계와 같은 대시보드류의 인프라 작업도 상당히 많은 편이고 프론트엔드 업무는 꽤 있는 편이라고 들었습니다
2022. 6. 3. 오후 7:58, 유용태 (teo.yu) : 다시 보니 서버 개발자를 물어보셨네요;;; 게임쪽 서버 개발자는 워낙 직군도 다양하고 잘 모르는 쪽이라 아시는 분이 있다면 저도 궁금하네요~~ 알려주세요 ㅎ
2022. 6. 3. 오후 7:59, 좌절하는 프론트 : 게임서버 개발 하실라면
2022. 6. 3. 오후 7:59, 좌절하는 프론트 : 빅쓰리는 go 랭 공부하셔야할테고..
2022. 6. 3. 오후 7:59, 좌절하는 프론트 : C/C++ C# 같은거는 기본이셔야할테고
2022. 6. 3. 오후 7:59, 좌절하는 프론트 : 코어단 갈수록 로우레벨 언어를 하셔야하고
2022. 6. 3. 오후 8:00, 좌절하는 프론트 : 코어단이랑 조금 멀어지면 엔진을 기반으로 응용하는걸 아마 하시는걸로 들었습니다
2022. 6. 3. 오후 8:00, 좌절하는 프론트 : 그리고 크런치 모드..뭐 이건 워낙 유명하니..
2022. 6. 3. 오후 8:00, 좌절하는 프론트 : 넥슨은 해당 게임 접거나 파트 폭파하면 다른팀 면접보고 이동하던가 뭐 그런 제도가 있다고도 들었네요
2022. 6. 3. 오후 8:04, 모승 : 오호 제가 했던 게임도 그렇게 연동했던것 같아요ㅋㅋㅋㅋ 감사합니다 테오
2022. 6. 3. 오후 8:07, 김주영 : 오호 Go lang이 많이 핫한가 보네요. Go를 한번 알아봐야하겠어요!! 서버 개발자인데도 엔진을 많이 다루는걸까요? 아니면 아무래도 팀단위다보니 백엔드 개발자도 그런 파트 구분 없이 일하게 되는 걸까요? 많이 알려주셔서 감사합니다! 알려주신 정보로 검색 많이 해볼게요 ㅎㅎ
2022. 6. 3. 오후 8:07, 김주영 : 답변 감사합니다!! 프론트쪽도 궁금했었어요!! 요즘은 너무 막 섞여있어서 아마 서버개발자도 손볼것 같아서요 ㅋㅋㅋ
2022. 6. 3. 오후 8:19, hyeoki : 친절한 답변 감사드립니다. 도움이 많이 되었습니다 ㅎ;
2022. 6. 3. 오후 9:03, 헬렌 : 제가 예전에 바닐라로 만들어봤던 프로젝트를 리팩토링 해보려고 하는데, 리액트를 써서 바꿔보는 게 좋을까요 아니면 라이브러리 없이 타입스크립트로 모듈화해서 만들어보는 게 좋을까요?
2022. 6. 3. 오후 9:03, 헬렌 : 예전에 했던 게 라이브러리 없이 했던 거였어용
2022. 6. 3. 오후 9:04, 헬렌 : 라이브러리가 있으면 정말 편한데 없이도 할 수 있다는 의지를 보여줘야 할지 (사실 너무 고된 여정이 될 거 같아서 두려운데….) 아니면 비교적 편하게 빨리 리팩토링을 해보는 게 나을지 고민이 됩니다
2022. 6. 3. 오후 9:05, 유용태 (teo.yu) : 빨리 쉽게 완성할수 있는 방법을 먼저 추천드립니다~
2022. 6. 3. 오후 9:05, 헬렌 : 오호… 의견 감사합니다 🙏
2022. 6. 3. 오후 9:15, 프엔공부중 : ec2에서 npm install 을 하면 계속 멈춤 현상이 발생하는데.. 메모리가 작아서 발생하는 현상일까요..? ㅠ
2022. 6. 3. 오후 9:15, 좌절하는 프론트 : 메모리 이슈에요 ㅋㅋㅋㅋ
2022. 6. 3. 오후 9:16, 좌절하는 프론트 : 램 4기가 이송
추천드리고
2022. 6. 3. 오후 9:16, 프엔공부중 : 하.. 그렇군요 ㅋㅋㅋㅋ
2022. 6. 3. 오후 9:16, 좌절하는 프론트 : 이래도 멈추면 NODE_OPTIONS 해서
2022. 6. 3. 오후 9:16, 좌절하는 프론트 : 메모리 늘려서 할당하는 속성있어요
2022. 6. 3. 오후 9:16, 좌절하는 프론트 : 그렇게 진행을 해보세요
2022. 6. 3. 오후 9:17, 프엔공부중 : 지금 메모리가 1gb네요 ㅎ..
2022. 6. 3. 오후 9:17, 좌절하는 프론트 : 아앗,,,,
2022. 6. 3. 오후 9:17, 좌절하는 프론트 : 일기가면 프로젝트 커져서 빌드할때도 죽을거에요 ㅠ 파이팅 하시길 ㅠ
2022. 6. 3. 오후 9:18, 프엔공부중 : 아 그래서 빌드는 예전부터 ec2에서 못하고 있었습니다 ㅠㅠ
2022. 6. 3. 오후 9:18, 좌절하는 프론트 : 헝 ㅠ ㅠ 
2022. 6. 3. 오후 9:18, 프엔공부중 : 답변 감사합니다!!
2022. 6. 3. 오후 9:31, O_O : dayjs 사용하시는 분 중에 tz 메서드 좀 이상하지 않나요...?

공식문서에는 아래 두 가지 방법으로 사용하라고 되어 있는데... 막상 두 값 결과를 보면 값이 다른 듯 한데 제가 설정을 잘못한건지 ... 아래쪽 방법으로 하면 결과가 이상하네요..
dayjs.tz('2014-06-01 12:00', 'America/New_York')
dayjs('2014-06-01 12:00').tz('America/New_York')
2022. 6. 3. 오후 9:36, 링링 : 안녕하세요 첨 글 남깁니다..혹시 DOM 을 공부할만한 교재나 강의 추천해주실 수 있으실까요 
2022. 6. 3. 오후 9:36, 링링 : 사진
2022. 6. 3. 오후 9:36, 링링 : 이건 시간이 생각보다 좀 길어서ㅠ
2022. 6. 3. 오후 9:38, 벙찐 튜브 : https://youtube.com/playlist?list=PLZKTXPmaJk8JVQv3XSNF8yJMdsxbFrO3S
2022. 6. 3. 오후 9:39, 벙찐 튜브 : 넉넉하게 잡아도 1시간일것같습니당
2022. 6. 3. 오후 9:39, 웹린이 : https://developer.mozilla.org/ko/docs/Web/API/Document_Object_Model/Introduction
2022. 6. 3. 오후 9:39, 웹린이 : DOM만 집중적으로 공부해야겠다는 생각을
2022. 6. 3. 오후 9:40, 웹린이 : 저는 해본적이 없던 것 같긴한데요. MDN DOM 가이드 문서들 보시고 필요할 때 마다 찾아보는게 좋을 것 같아요~
2022. 6. 3. 오후 9:40: 유영석(Alvin)님이 들어왔습니다.
2022. 6. 3. 오후 9:40, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 3. 오후 9:41, 유영석(Alvin) : 안녕하세요 태오님 글 보고 정말 많은 공감을 얻고 들어오게 되었습니다 잘 부탁드릴게요!
2022. 6. 3. 오후 9:45, 유용태 (teo.yu) : 감사합니다~ 저도 잘 부탁드립니다 :) 글의 내용도 좋고 기타 프론트엔드에 궁금한게 있을 때 언제든 편하게 글 남겨주세요 ㅎ
2022. 6. 3. 오후 9:45, 링링 : 감사합니다 🙏 
2022. 6. 3. 오후 9:47, 링링 : 저도 필요할 때마다 찾아봤는데 전반적으로 키워드는 한번 훑고 가고 싶다라는 생각이 들어서요 가이드 문서가 젤 좋을 것 같네요 🙏 의견 감사요
2022. 6. 3. 오후 9:53, 유용태 (teo.yu) : https://developer.mozilla.org/ko/docs/Web/API/Element
2022. 6. 3. 오후 9:53, 유용태 (teo.yu) : https://developer.mozilla.org/ko/docs/Web/API/Document
2022. 6. 3. 오후 9:53, 좌절하는 프론트 : 교보문고 검색
DOM을 깨우치다
2022. 6. 3. 오후 9:54, 유용태 (teo.yu) : 훑어볼게 꽤 많아서 실무에서 짚고간다면 Document와 Element의 속성과 이벤트와 메소드는 다 숙지해두면 좋아요 :)
2022. 6. 3. 오후 10:16, 프론트신입생존기 : 김영보님....
2022. 6. 3. 오후 10:16, 프론트신입생존기 : 이번 고소사건 있은후로는 좀 그렇더라구요.
2022. 6. 3. 오후 10:16, O_O : ㅎ... 
2022. 6. 3. 오후 10:37, 좌절하는 프론트 : ㅎ...
2022. 6. 3. 오후 10:37, 실무뿌론트 : 혹시 코딜리티로 코테풀때
2022. 6. 3. 오후 10:37, 실무뿌론트 : 리액트 구현나오는 케이스 
2022. 6. 3. 오후 10:37, 실무뿌론트 : 보신적있으신분 있으신가요~?
2022. 6. 3. 오후 10:43, 조조 : 안녕하세요! 공부중인 취준생인데 질문이 하나 있습니다.
유저가 카테고리를 선택하면 피드에 그 카테고리에 맞는 글 정보를 api로 서버에서 가져와서 화면에 보여주는 기능을 만들고 있습니다.
이럴 때 글 정보들을 어딘가에 전역적으로 저장해놔야 한다고 생각했습니다. 그래서 redux를 공부하던 중 서버쪽 비동기적인 상태를 가져올때는 react query를 쓰는게 낫다는 글을 봤습니다.
둘다 아직 사용해본 적은 없는데 이럴때는 react query를 사용하는게 맞을까요?
2022. 6. 3. 오후 11:01, 프론트신입생존기 : 클래스컴포넌트로 구현하는거 말하시는건가요
2022. 6. 3. 오후 11:01, 프론트신입생존기 : 저 한번 해보긴햇어요...
2022. 6. 3. 오후 11:04, 철진 : 글 정보들을 전역적으로 저장해야한다고 생각하신 이유가 있을까요?? 
2022. 6. 3. 오후 11:09, 조조 : 데이터를 fetch해오는 컴포넌트와 데이터를 render하는 컴포넌트가 좀 떨어져있어서 props 방식으로는 힘들거같아서 그렇게 생각했습니다!
2022. 6. 3. 오후 11:10, 조조 : 그래서 유저 카테고리를 저장하는 컴포넌트에서 데이터를 fetch해서 전역적으로 저장하고, 다른 컴포넌트에서 데이터를 화면에 그려야겠다고 생각했습니다
2022. 6. 3. 오후 11:17, 최민석 : 저요 자동완성 리스트
2022. 6. 3. 오후 11:23, 실무뿌론트 : 채점방식이 구현정도에 따라 다른가요?
2022. 6. 3. 오후 11:26, 허브의 개발 일지 : 탭에대한 상태를 전역으로 관리하시고 데이터를 뿌려주는 컴포넌트에서 해당 탭의 상태가 변할때 useQuery를 사용하시면 더욱 쉽게 개발하실 수 있을 겁니다.
2022. 6. 3. 오후 11:27, 허브의 개발 일지 : 컴포넌트에 종속적으로 보일 수 있으나 저는 client state와 server state의 관심사 분리를 하는게 더 개발하기 편하더라구요
2022. 6. 3. 오후 11:31, 조조 : 아하 이런식으로... 감사합니다!!
2022. 6. 3. 오후 11:31, 조조 : 탭이라는건 어떤걸 말하는걸까요?
2022. 6. 3. 오후 11:33, 허브의 개발 일지 : 아 카테고리를 탭이라고 생각했습니다-> 카테고리입니다!
2022. 6. 3. 오후 11:56, 철진 : 이 상황에서는 react query가 낫긴 한 것 같아요! 사용법이 어렵지는 않으니 한번 적용해보시는 것도 좋을 것 같습니다! 

2022년 6월 4일 토요일
2022. 6. 4. 오전 12:03, 델 : react query 한표요 :)
2022. 6. 4. 오전 1:02, 조조 : 세분 답장 감사합니다!! 적용해 볼게요 🙂
2022. 6. 4. 오전 2:24, 애교뿜뿜 어피치 : JS 책을 보고 있는데, '런타임 이전' 이라는 말이 있습니다. 이 런타임 이전이라는게 어떤 시점을 말하는 걸까요?
2022. 6. 4. 오전 2:25, A대 4-1(진) : js 엔진이 소스코드를 평가하는 시점이 맞나요 ?? 호이스팅 !
2022. 6. 4. 오전 2:26, 애교뿜뿜 어피치 : 런타임이 브라우저라고 한다면, 브라우저에서 JS가 실행되기전.. 제가 코드를 치고 있을 때 일까요?
2022. 6. 4. 오전 2:27, 그레이 : 전체 맥락을 주시면 좋을 듯 합니다
2022. 6. 4. 오전 2:27, 애교뿜뿜 어피치 : 'var, let, const, function ... class 키워드를 사용하여 선언된 모든 식별자는 호이스팅된다. 모든 선언문은 런타임 이전에 먼저 실행되기 때문이다.' 입니다.
2022. 6. 4. 오전 2:29, 그레이 : 컴파일 타임이라고 보셔도 될 것 같습니다
2022. 6. 4. 오전 2:31, 애교뿜뿜 어피치 : babel이나 tsc가 돌아가는 그 순간이겠군요?!
2022. 6. 4. 오전 2:32, 그레이 : 음 정정할께요 작성한 코드를 엔진이 읽어들이는 때라고 보시면 좋을듯
2022. 6. 4. 오전 2:33, 애교뿜뿜 어피치 : 아하.. 조금 더 와닿는 것 같습니다! 감사합니다
2022. 6. 4. 오전 3:37, 뮤츠 : 책으로 공부하시는거면 코드가 실행되기 전에 뭔가를 하는구나 하고 넘어가시면 뒤에서 다 설명합니다
2022. 6. 4. 오전 4:01, 서경 : 혹시 여기서 왜 channel에서 문제가 생기는지 아시는 분 계신가요?
2022. 6. 4. 오전 4:01, 서경 : 사진
2022. 6. 4. 오전 4:02, 서경 : 사진
2022. 6. 4. 오전 4:03, 서경 : 타입스크립트 프로그래밍 p.233 예제 따라해 보는 중인데 여기서는 원래 저 아래 코드가 아니라 주석 코드로 되어있거든요
2022. 6. 4. 오전 4:04, 서경 : 그런데 emitter.emit에 인자값으로 string | symbol 이 들어와야 한다고 해서 업데이트가 되었나? 하고 수정했는데 이러한 에러가 발생하네요
2022. 6. 4. 오전 4:05, 서경 : string | symbol로 받아줬는데도 channel이 string | symbol | number로 넘어가는 것도 이해가 잘 안 가구요…
2022. 6. 4. 오전 7:47, 철진 : channel을 K로 해주신 부분에서 number가 생기는 것 같은데 
2022. 6. 4. 오전 7:57, 서경 : 음 그러면 값으로 들어갈 수 있는 속성을 symbol | string으로 임의로 제한해 줬을 때는 왜 문제가 발생할까요? 잘 이해가 안되네요 ㅠ
2022. 6. 4. 오전 8:05, 철진 : 흠... 제 생각에는 extends를 쓰셨을 때 Events에 Record 된 타입만 적용되지는 않는것으로 알고 있어서, 확장개념이니까요. 그걸 이용한 K도 동일하게 된 것 같아요. 
2022. 6. 4. 오전 8:25, 서경 : 아 상속이니까 그럴 수도 있겠네요 확실히
2022. 6. 4. 오전 8:26, 서경 : 사진
2022. 6. 4. 오전 8:26, 서경 : 음 근데 일일이 찍어보다가 안건데 extends로 가기 전에 아예 Record에서 string | number | symbol이라고 인식하고 있네요
2022. 6. 4. 오전 9:29, 유용태 (teo.yu) : 자바스크립트로 되어있는 자료구조와 알고리즘 모음집 https://github.com/trekhleb/javascript-algorithms/blob/master/README.ko-KR.md
2022. 6. 4. 오전 9:35, 유용태 (teo.yu) : 아이콘이 필요할때 여기서 찾아보세요! 각종 오픈소스 icon 검색 사이트 https://icones.js.org/
2022. 6. 4. 오전 9:55, 세이지 : 우왕!! 감사합니다!
2022. 6. 4. 오전 10:15, 곰젤리 : Record에서 string | number | symbol 로 인식하는것이 아니라 Record타입의 키를 제한시켜놓은것입니다
2022. 6. 4. 오전 10:25, 동동 : 제생각에 요건 아래 제네릭으루 선언한 K가 아니라 그냥 Record 타입 정의를 보여주는게 아닐려나요..?
2022. 6. 4. 오전 10:29, 프엔공부중 : https://www.figma.com/community/plugin/959795830541939498/Figma-to-React-Component
2022. 6. 4. 오전 10:30, 프엔공부중 : 피그마 컴포넌트로 바꿔주는거는 쓸만한가요? 
2022. 6. 4. 오전 10:32, 프론트 공부 : 디자인팀에서 컴포넌트 개념이 있어야지 편하게 쓸수 있을거같은데 궁금하네요..
2022. 6. 4. 오전 10:40, 프엔공부중 : 아 그러면 편하게 쓰려면 피그마로 디자인 작업을 할 때 구조를 리액트 처럼 컴포넌트로 작업을 해야겠군요
2022. 6. 4. 오후 1:37, 허브의 개발 일지 : 피그마로 작업하고 보통 제플린으로 export 합니다
2022. 6. 4. 오후 1:38, 허브의 개발 일지 : 그런데 구조나 상세한 스타일링은 다른점이 많아서 저희는 따로 그렇게 까지 디자인 시스템을 만들진 않고
2022. 6. 4. 오후 1:38, 허브의 개발 일지 : 피그마로 와이어프레임을 상세하게 작성한다음 필요한 요소들의 css나 이미지를 추출하여 쓰는 방식으로 개발하고 있습니다
2022. 6. 4. 오후 1:39, 허브의 개발 일지 : xd같은 툴도 있는데 개발하기에는 피그마가 더 편하더라구요
2022. 6. 4. 오후 1:39, 허브의 개발 일지 : 댓글도 달리고 서로 소통하기도 편해용~.~
2022. 6. 4. 오후 4:50, 알모 : 안녕하세요! 다들 연휴 즐겁게 보내고 계신가요^__^

이번에 회사에서 함수형코딩 스터디를 해보게 됐어요~
톡방에서 많은 분들의 호평을 받은 (책이라 궁금해져서 제가 한번 추진해봤습니다 ㅋㅋ)

기존 스터디는 매주 정해진 분량을  각자 읽어오고 스터디 시간에 랜덤으로 한명을 추첨해서 내용 요약을 해주고 자유롭게 내용에 대해 토론하는? 식이었는데 이 책도 이런 방식이 적절할지..

아직 책을 받지 못한 상태기도 하고 처음 스터디를 리드해보는거라 한번 여쭤보고 싶어요!!
어떤 식으로 스터디를 진행해보면 좋을까요??
2022. 6. 4. 오후 4:52, 유용태 (teo.yu) : 음... 저라면 각자 요약을 해오고 글로 쓴 것을 같이 공유 하고 중복되는 개념이나 내용들을 추려서 저마다의 해석(?)을 함께 논의 해보는 시간을 가지면서 다같이 글을 하나 써보는 식으로 진행해보고
2022. 6. 4. 오후 4:53, 유용태 (teo.yu) : 그때 알게된 개념을 바탕으로 자기가 쓰는 코드에서 이렇게 하는게 좀 더 함수형 이지 않을까 하는 것들을 실전 코드에서 찾아보는 것을 해봤으면 좋겠어요~
2022. 6. 4. 오후 4:55, 엉망장자 : 저는 각자 요약을 해오되 발표자는 미리 정해져 있는 방식으로 했었어요 아무래도 발표할 사람이 정해져 있으면 조금 더 신경써서 작성해오는 것 같더라구요.

그걸 듣다가 각자 궁금한 점이나 소개해주고 싶은게 생기면 끼어들어서 같이 이야기 하고요!
2022. 6. 4. 오후 4:58, 아이뽀송 : 저도 이렇게 해봤는데, 단점이 있다면 발표자가 아니면 준비를 좀 소홀히 하게 되는 것 같아요ㅠㅜ 트레이드오프가 있는거죠  
2022. 6. 4. 오후 5:00, 웅세 : 그래서 저희는 그날 만나서 사다리타기로 발표자를 정합니다! 그러면 모두가 발표준비까지 하게되니까요
2022. 6. 4. 오후 5:32, 설아아빠 : 저희도 사다리타서 걸렸는데 발표 못하면 벌금내는걸로 ㅎ 
2022. 6. 4. 오후 5:40, 유용태 (teo.yu) : npm, yarn, pnpm 비교해보기
https://yceffort.kr/2022/05/npm-vs-yarn-vs-pnpm
2022. 6. 4. 오후 6:44: 으쓱으쓱 어피치님이 들어왔습니다.
2022. 6. 4. 오후 6:44, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 4. 오후 6:44, 유용태 (teo.yu) : 으쓱으쓱 어피치님~~ 반갑습니다 어서오세요 :)
2022. 6. 4. 오후 6:47: 좌절하는 프론트님이 나갔습니다.
2022. 6. 4. 오후 7:43, 기뻐하는 라이언 : 안녕하세요 tailwindcss background color 설정할때 
const color = ['#64C965', '#9DD772', '#FECE15', '#FD8446', '#FD565F'];
<div className={`bg-[${color[1]}]`}>
이렇게 설정했는데 색이 적용이 안됩니다 
어떻게 설정해야 할까요?
2022. 6. 4. 오후 8:01, 초보개발자 : TailwindCSS를 제대로 안써봐서 모르겠지만 bg-${color[1]}로 해야 하는 게 아닌지요?
2022. 6. 4. 오후 8:01: 프론트지망생님이 들어왔습니다.
2022. 6. 4. 오후 8:01, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 4. 오후 8:02, 유용태 (teo.yu) : 안녕하세요 이근휘님~
반갑습니다 :)
2022. 6. 4. 오후 8:04, 프론트지망생 : 안녕하세요! 반갑습니다 :)
2022. 6. 4. 오후 8:05, 기뻐하는 라이언 : 배경색이 적용되면 개발자도구 Styles에 
.bg-\[\#64C964\] {
    —tw-bg-opacity: 1;
    background-color: rgb(100 201 100 / var(—tw-bg-opacity));
}
이렇게 표시되는데 적용되지 않아서 아무것도 뜨지 않네요
2022. 6. 4. 오후 8:07, 훌온텐드 : 클래스명에  특수문자 다 빼세여 [ ]# 특수문자.넣으려고 백슬래시 들어가네
2022. 6. 4. 오후 8:18, 기뻐하는 라이언 : 위에껀 개발자도구 style에 표시되는 것입니다
2022. 6. 4. 오후 8:22, 훌온텐드 : 백그라운드컬라 부분 문법이 좀 이상한거 같음데여 100, 201, 101이렇게 콤마 들어가야되지앟나요?
2022. 6. 4. 오후 8:26, 강승진 : 사진
2022. 6. 4. 오후 8:27, 강승진 : 스샷처럼 동적으로 사용할 수 없고 full classname 으로 작성하셔야 될겁니다
2022. 6. 4. 오후 8:28, 기뻐하는 라이언 : tailwind css가 이렇게 변경하는거 같아요
2022. 6. 4. 오후 8:33, 강승진 : const color = ['bg-[#64C965]', 'bg-[#9DD772]', 'bg-[#FECE15]', 'bg-[#FD8446]', 'bg-[#FD565F]'];
<div className={color[1]}>
2022. 6. 4. 오후 8:33, 기뻐하는 라이언 : 직접 써줘야 하는군요.
2022. 6. 4. 오후 8:34, 강승진 : 코드에서 사용된 classname 을 찾아다가 
빌드로 넣어주는것이라 동적으로 classname 을 생성하면 인식할수 없어요
2022. 6. 4. 오후 8:45, 기뻐하는 라이언 : 답변 해주셔서 감사합니다.
2022. 6. 4. 오후 8:55, 하자코딩 : 안녕하세요!? 이번에 테오님이 소개해주신 부스트 캠프 지원 준비 과정에서 1번 항목이 인상적이어서 우리 테오의 프론트엔드 톡방 사람들에게도 여쭈어보고 싶어서 가져왔습니다.

❓'왜 개발자가 되고 싶나요?'

처음 보는 자소서 항목이었고 내가 왜 개발자가 되고 싶은지 생각하게 되는 의미 있는 시간을 주는 물음이었습니다.
여기에 있는 좋은 개발자분들의 다양한 이유가 궁금하고 저와 같이 의미 있는 시간을 보내셨으면 좋겠네요.
2022. 6. 4. 오후 9:01, 유용태 (teo.yu) : 아주 어렸을때 초등학생이었을때 저 포함 주위 친구들이 컴퓨터 게임을 좋아했습니다. 때 마침(?) 아버지 당시 유행했던 컴퓨터학원을 하셨다 잘 안되셨는데 그 유산으로 집에는 안쓰는 컴퓨터 교재가 많았었어요. 그런 책 내용을 보고 게임을 만들고 주위 반응이 신기해했던 경험이 개발자를 하게 만들어줬어요~ 내가 아무것도 없는데서 뭘 만들었는데 남들이 관심을 가지고 봐주는게 기분이 좋더라구요. 그래서 게임 개발자가 되고 싶었던게 저는 시작이었어요 ㅎ 나이가 먹다보니 나는 게임을 그렇게 좋았했던 사람은 아니었고 개발은 남았더라구요 
2022. 6. 4. 오후 9:04, 포유 : 왜 개발자가 되고 싶나요. 왜 프론트엔드 개발자를 하고 싶나요 등은 많이 나오는 질문 중 하나인거 같아요. 보통 개발이 재밌어서, 문제 해결하는게 좋아서, 내가 만들걸 다른 사람들이 사용하는 걸 보고 싶거나 그런게 기뻐서 등의 글을 많이 쓰고 본거 같네요
2022. 6. 4. 오후 9:09, 즐거운 네오 : 솔직히 거창한 이유는 없고 재밌어서 라고밖에 할 말이 없네요. 작은거라도 내 손으로 만든게 조금이라도 다른 사람들에게 사용되고 도움이되고 그 반응을 보는게 즐겁고...
2022. 6. 4. 오후 9:21, 하자코딩 : 저는 개발을 좋아해서 컴퓨터 전공을 선택한 케이스는 아니에요. 취업과 미래를 위해서 공대를 그 중 컴퓨터공학을 선택했고
그 이후 개발자가 되고 싶은 이유를 찾게 된 것 같아요

직업을 정하는 것은 인생의 목표와 관련성이 있다고 생각하는데
직업은 그래서 내가 이루고자 하는 목표의 수단이 될 수도 있고
내가 사랑하고 좋아하는 그 일 자체가 될 수도 있다고 생각해요 (이게 인생의 목표이면)

저는 개발자가 머물러 있지 않고 늘 도전하고 발전하는 직업이고(도전 발전이 좋으니까)
많은 사람들과 같은 목표를 가지고 동등한 위치에서 끊임없이 소통할 수 있고(동등한 위치, 소통이 좋으니까)
사람과 세상에 이로움을 주고 그래서 내게 보람을 줄 수 있다고 생각해서 개발자가 되고 싶네요
2022. 6. 4. 오후 9:28, 모승 : 저는 개발이 좋아서 시작한 case는 아니구 막연하게 인스타광고 보고 프론트엔드에 입문해서 시작했었는데, 원래 나서는거 좋아하고 보여지는거 좋아하는 관종(?)이라서 점차 흥미를 가지게 됐고 요새 내가 꼭 개발자를 해야겠다는 생각이 든건, 어렸을때부터 상상하는걸 좋아했기도 했것도 한몫했고, 프론트엔드라는 직업상 사람들과의 소통이 정말 중요하다고 생각하는데 제가 사람을 좋아해서 이게 재밌을거라는 생각이 든것도 있습니다. 결국 종합해보면 나서는거 좋아하고 사람들과 이야기하는걸 좋아하면서 창작하는걸 좋아한다인데 이모든게 제 인생모토와도 비슷하고 제 성향과도 매우 비슷해 최근에 개발자를 직업으로 가지면 정말 행복하겠다고 생각한것 같습니다. 그리고 한가지 이유가 더있는데 이 직업을 하면서 내가 게속 개발자로써 더 성장하는 과정이 너무 재밌을거라는 생각을 했습니다.
2022. 6. 4. 오후 11:05, 프론트신입생존기 : 음.... 저만 너무 단순한걸 수도 있는데요. 저는 비전공이었고 개발자에 대해 전혀모르다가 네카라쿠배라는 용어가 뜨기 시작할때 시작했어요. 저는 위의 분들처럼 뭔가 개발자가 맞기 보다는 그냥 개발자를 하면 돈을 많이 버니까? 하는 경우네요. 

제 인생에서 물질적인 가치가 높은데 향후 미래를 봤을때 개발직군의 수요는 죽지 않을거 같고. 타 직군과는 다르게 내가 업무에서 고생하며 쌓는 실력이 그대로 내 연봉상승과 직결되는 돈을 많이버는 직업이라 개발자가 좋아요. 

쓰고보니 너무 속물 인거 같기도 하네요 ㅜㅜ
2022. 6. 4. 오후 11:07, 프론트신입생존기 : 사실 개발자체가 재밌다기보다는 내가 더어려운걸 도전하고 실력이늘수록, 내가 대체 불가능한 사람이 되고 돈을 더 많이 벌수 있어서 그게 계속 공부하게 하는 원동력이 되더라구요.
2022. 6. 4. 오후 11:11, 프론트신입생존기 : TDD라는 용어가 있듯이 저는 MDD 인거같아요. Money Driven Development....
2022. 6. 4. 오후 11:18, 벙찐 튜브 : 호오.. TDD는 뭐죠..?
2022. 6. 4. 오후 11:19, 눈물바다에 빠진 라이언 : 여러분 혹시 의자 방석으로 뭐 쓰세요?
2022. 6. 4. 오후 11:19, 눈물바다에 빠진 라이언 : 개말라인간인데 엉덩이가 너무 아파서 방석을 알아보는데
2022. 6. 4. 오후 11:19, 눈물바다에 빠진 라이언 : 지금 쓰는 방석도 좀 불편하네요 ㅜㅜ
2022. 6. 4. 오후 11:20, 눈물바다에 빠진 라이언 : 꼬리뼈쪽이 너무 자극되서 주기적으로 일어났다 앉았다를 반복하는데 도넛방석같은걸 써야하나 흑
2022. 6. 4. 오후 11:20, 프론트신입생존기 : Test driven development 입니다. 테스트 주도 개발이요.
2022. 6. 4. 오후 11:21, 벙찐 튜브 : 아항 ㅋㅋㅋ
2022. 6. 4. 오후 11:21, 벙찐 튜브 : 감솸다
2022. 6. 4. 오후 11:21, 프론트신입생존기 : Test-driven development - Test-driven development https://g.co/kgs/F294eu
2022. 6. 4. 오후 11:21, 벙찐 튜브 : 재밌네요
2022. 6. 4. 오후 11:22, 벙찐 튜브 : 샵검색 : #푹신한 방석
2022. 6. 4. 오후 11:22, 벙찐 튜브 : 요론건 어떠세요
2022. 6. 4. 오후 11:22, 설아아빠 : 프론트에서 티디디는 어떻게 해요..? 비지니스 로직만 만드는건가여..? UI는 어떻게 하나용
2022. 6. 4. 오후 11:23, 프론트신입생존기 : 저도 참 궁금하긴합니다. 사실 저희 팀도 개발 완료후에 cypress로 e2e 만 하거든요.
2022. 6. 4. 오후 11:25, 철진 : 리액트 테스팅 라이브러리로 컴포넌트도 테스트는 가능한데... 프론트 테스트라는게 참 어려운것 같아요
2022. 6. 4. 오후 11:27, 프론트신입생존기 : 갠적으로 프론트는 unit 테스트를 한다해도 수정사항 같은게 많다보니까 뭔가 유지보수가가능한 테스트를 짜도 가성비가 좀 떨어지는 느낌이더라구요
2022. 6. 4. 오후 11:27, 부끄러운 어피치 : 설아아빠님 간만에 수다타임 가지는거어떠세요
2022. 6. 4. 오후 11:27, 웹린이 : 유틸함수 같은거 말고는 정말
2022. 6. 4. 오후 11:27, 웹린이 : 테스트 하기 까다로운 것 같아요 ㅠㅠ
2022. 6. 4. 오후 11:28, 설아아빠 : 좋아영
2022. 6. 4. 오후 11:29, 초보개발자 : 프론트에서는 BDD(Behavior Driven Development)라는 게 있더라구요. 사용자의 유스케이스 기반으로 테스트를 하는 건데, 자료가 좀 부족한 것 같긴 합니다
2022. 6. 4. 오후 11:30, 웹린이 : 오 키워드 감사합니다
2022. 6. 4. 오후 11:32, 프론트신입생존기 : Kent C dodd가 react testing library에서 원칙으로 말하는 게 이거긴하죠 ㅋㅋㅋ. 근데 말이쉽지 실제로 jsdom에 구현안된 거 모킹하고 하려면 짜증날때가 이만저만이 아니에요. 
2022. 6. 4. 오후 11:33, 프론트신입생존기 : 아 도드형! 가상돔이 왜이레~
2022. 6. 4. 오후 11:37, 웹린이 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 4. 오후 11:40, 나그네 : BDD는 예전부터 있던거에요
프론트 생기면서 생긴 것도 아니고요
2022. 6. 4. 오후 11:41, 나그네 : 백엔드에서도 given when then 과 같은 방법으로 하곤 합니당
2022. 6. 4. 오후 11:44, A대 4-1(진) : 프로젝트를 진행하려하는데요 !

- 컨벤션 정하기 ( + 린트, 프리티어 )
- 깃훅 사용하여 ci 설정
- 스프린트 설정
- msw 사용하여 서버 목킹
- 클라이언트 , 서버 상태관리 필요에 따라 정하기
- jest 유틸함수 테스트
- cypress e2e 테스트
- 사용 도메인 지식 공부 ( 실시간 => 웹소켓 공부 )
- 구현 => 코드리뷰
- 성능 최적화 적용해보기 ( 번들 , 레이지 로드 프리로드 .. )

위 과정을 진행해보려하는데 더 필요한 부분이 있을까요 ??
2022. 6. 4. 오후 11:45, A대 4-1(진) : 위 과정을 진행하는 이유에 대한 정리가 필요할까요 ???
2022. 6. 4. 오후 11:45, 초보개발자 : 아 네네네 말을 잘못 했네요
BDD가 프론트엔드 테스트를 위해서 생긴 개념은 아니지만 프론트엔드의 사용자 유스케이스 단위로 테스트하는 데 TDD보다 더 적합하다는 글을 봤었습니다

아직 제대로 공부해본적은 없지만 해외도서중에 BDD in Action이라는 책이 있는 것 같아서 추후에 한 번 공부해볼 계획입니다
2022. 6. 4. 오후 11:46, 즐거운 네오 : 완전 공감합니다
2022. 6. 4. 오후 11:46, 초보개발자 : BDD in action 책을 번역한 글이 아직 없는 것 같아, 한 번 도전해볼까도 고민중입니다 ㅎㅎ
2022. 6. 4. 오후 11:55, 나그네 : ㄷㄷ 대단하시네요

2022년 6월 5일 일요일
2022. 6. 5. 오전 12:03, 아이스크림 든 네오 : 안녕하세요, 혹시 리액트 오픈소스 프로젝트 중에서 코드 읽으면서 공부해볼만한 프로젝트가 있을까요? 어떤 식으로 구조를 짜면 좋을지나 코드 스타일같은 걸 좋은 사례로 참고해보고 싶은데 추천할만한 자료가 있을지해서요
2022. 6. 5. 오전 7:51: 눈물바다에 빠진 라이언님이 들어왔습니다.
2022. 6. 5. 오전 7:51, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 5. 오전 7:51, 눈물바다에 빠진 라이언 : 안녕하세요
2022. 6. 5. 오전 9:46, 유용태 (teo.yu) : 안녕하세요~~ 졸린 라이언!! 반갑습니다 어서오세요 ㅎ
2022. 6. 5. 오후 12:41, 기뻐하는 라이언 : 안녕하세요 react router에서 location.pathname ==='/'는 사용 가능한데 
location.pathname === '/edit/:id' 이런 형식은 불가능한거죠?
2022. 6. 5. 오후 12:42, 철진 : /edit/1 이런 것이면 가능할텐데, :id라고 쓰시는 건 문자열이라서 조건이 항상 false일듯합니다
2022. 6. 5. 오후 12:51, 기뻐하는 라이언 : 그렇군요 :id를 숫자로 변경해야 되는군요 답변 감사합니다.
2022. 6. 5. 오후 12:54, 철진 : 약간 오해가 있을 것 같아 덧붙여보는데요. 
/edit/a123c2 이런 것도 가능합니다!! 
구체적인 내용이 되어야 조건 성립이 될 것 같다는 이야기였어요!! 
2022. 6. 5. 오후 12:57, 웹린이 : https://reactrouter.com/docs/en/v6/utils/match-path
2022. 6. 5. 오후 12:57, 웹린이 : react router에서 matchPath 유틸함수 지원하는데
2022. 6. 5. 오후 12:58, 웹린이 : 요거 쓰시면 될 것 같아요
2022. 6. 5. 오후 12:59, 기뻐하는 라이언 : 오 mathPath라는것이 있었군요.. 적용해보겠습니다. 감사합니다.
2022. 6. 5. 오후 1:01, 웹린이 : const match = matchPath('/edit/:id', path)

if (match.params.id) 이런식으로 id 있는지 확인하시면 될 것같아여
2022. 6. 5. 오후 1:11, 웹린이 : 패턴 맞는거 없으면 null 반환하니까 id를 확인해야 하시면 match?.param.id === blah 쓰시고 그냥 패턴만 맞는지 확인하시려면 match가 null인지 확인하시면 될 것 같아여!
2022. 6. 5. 오후 1:21, 기뻐하는 라이언 : location.pathname === '/edit/:${match.param.id}' 이렇게 적용하면 될까요?
2022. 6. 5. 오후 1:58, 웹린이 : 이미 패턴 맞는지 확인해서
2022. 6. 5. 오후 1:58, 웹린이 : 안맞으면 null 을 반환하니
2022. 6. 5. 오후 1:59, 웹린이 : location.pathname이랑 비교 안하시고
2022. 6. 5. 오후 1:59, 웹린이 : match가 null 아닌지만 확인하시면 될꺼에요
2022. 6. 5. 오후 2:00, 웹린이 : matchPath 두번째 인자를
2022. 6. 5. 오후 2:00, 웹린이 : 에
2022. 6. 5. 오후 2:00, 웹린이 : pathname을 넘겨주시면 될 것 같아요~
2022. 6. 5. 오후 2:02, 기뻐하는 라이언 : 아 이해했습니다.조건에서 true false만 확인 하면 된다는 말씀이시죠?
2022. 6. 5. 오후 2:02, 웹린이 : 네네 말씀 주신 케이스면 null인지만 확인하시면 될 것 같아요
2022. 6. 5. 오후 2:03, 웹린이 : 패턴에 맞으면 PathMatch 객체를 리턴하고 아니면 null을 리턴하니까요 ㅎㅎ
2022. 6. 5. 오후 2:03, 기뻐하는 라이언 : 덕분에 해결 했습니다 답변 감사합니다
2022. 6. 5. 오후 2:03, 웹린이 : 제가 밖이라 좀 두서가 없네요 죄송해요 ㅎㅎ,
2022. 6. 5. 오후 2:05, 기뻐하는 라이언 : 아니에요 도움 많이 되었습니다 감사합니다
2022. 6. 5. 오후 2:07: 백엔드!님이 들어왔습니다.
2022. 6. 5. 오후 2:07, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 5. 오후 2:07, 초롱초롱 튜브 : 팝업에서 이전페이지, 다음 페이지로 가는거 어떻게 하는게 가장 효율적일까요..??
저는 dialogstep이라는 함수 사용해서 스토어로 관리하는 쪽을 선택했는데
이게 스텝이 꼬이면 답이없다고 하셔서요ㅠㅠ
2022. 6. 5. 오후 2:07, 백엔드! : 안녕하세요 
2022. 6. 5. 오후 2:07, 유용태 (teo.yu) : 프리닝님~~ 안녕하세요 ㅎ 반갑습니다 :)
2022. 6. 5. 오후 2:08, 백엔드! : 반가워용
2022. 6. 5. 오후 2:08, 백엔드! : 혹시 정말 죄송하지만 
2022. 6. 5. 오후 2:08, 백엔드! : 질문 하나만 드려도 될까요 .. ?
2022. 6. 5. 오후 2:09, 유용태 (teo.yu) : 네~
2022. 6. 5. 오후 2:09, 백엔드! : 감사합니다 :)
2022. 6. 5. 오후 2:09, 백엔드! : 제가 video js를 사용하고있는데 프론트로 네트워크 창을 봤을 때 프론트로 데이터를 넘어오는 건 확인했는데 비디오가 표출이 안되네요...
2022. 6. 5. 오후 2:10, 유용태 (teo.yu) : 확인을 해볼 수 있는 수단이 있을까요?
2022. 6. 5. 오후 2:10, 백엔드! : 혹시 소스코드랑 결과창 말씀하시는건가요?
2022. 6. 5. 오후 2:10, 유용태 (teo.yu) : 네~ 그런것들요 질문만 가지고는 이유를 알기 어려울것 같아요
2022. 6. 5. 오후 2:10, 백엔드! : 아하 넵 
2022. 6. 5. 오후 2:10, 백엔드! : <html>
<head>
   <link href='//vjs.zencdn.net/7.10.2/video-js.min.css' rel='stylesheet'>
    <link href='https://vjs.zencdn.net/7.4.1/video-js.css' rel='stylesheet'>
    <script src='//vjs.zencdn.net/7.10.2/video.min.js'></script>
</head>
<body>

    <video id=example-video controls='controls' width=600 height=300 class='video-js vjs-default-skin' controls>
        <source
           src='http://localhost:8080/tutee/video/1'
           type='application/x-mpegURL'>
    
      </video>
</body>
</html>
<script>
    videojs.Hls.xhr.beforeRequest = function(options) {
        options.headers = {
             Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMTM0MjUyODYxOTI2MjQ2OTg1NjQiLCJyb2xlIjoiUk9MRV9VU0VSIiwiZXhwIjoxNjU0NDA0NzkzfQ.j3DIy_pcJZ5K1RqtzG2HLpWGAg0fahdfTmoUAezHPRM'
             };
            
        return options;   
    }
    var player = videojs('example-video');

    player.play(function() {
  this.src({
    src: 'http://localhost:8080/tutee/video/1',
    type: 'application/x-mpegURL'
  });
});
</script>
2022. 6. 5. 오후 2:10, 백엔드! : 소스코드는 현재 이렇게되는데 
2022. 6. 5. 오후 2:11, 백엔드! : 사진
2022. 6. 5. 오후 2:11, 백엔드! : 읽기 힘드실거 같아서 캡쳐도 보내드립니다 :)
2022. 6. 5. 오후 2:11, 백엔드! : 사진
2022. 6. 5. 오후 2:12, 백엔드! : 네트워크 창은 현재 이렇게 왼쪽 처럼 비디오가 무한 로딩이 되네요 ㅠㅠ
2022. 6. 5. 오후 2:12, 백엔드! : 사진
2022. 6. 5. 오후 2:12, 백엔드! : 추가적으로 콘솔창은 현재 이렇습니다
2022. 6. 5. 오후 2:13, 백엔드! : 백엔드 서버는 8080포트로 열려있고 프론트는 3000포트로 열려있습니다 

그리고 http://localhost:8080/tutee/video/1 url을 src에 걸어서 비디오 데이터를 가져옵니다
2022. 6. 5. 오후 2:15, 동동 : script 태그를 html태그 밖에 넣으신건가요?!
2022. 6. 5. 오후 2:15, 백엔드! : 넵 맞습니다 
2022. 6. 5. 오후 2:16, 백엔드! : 혹시 그렇게하면 안되나요 ?.. 작동은 되는거같은데 ..
2022. 6. 5. 오후 2:16, 백엔드! : 제가 사실 프론트엔드를 접한지가 얼마 안되서 지식이 부족합니다 
2022. 6. 5. 오후 2:17, 동동 : body 태그 안에 넣어보시겠어요?
2022. 6. 5. 오후 2:17, 백엔드! : 넵
2022. 6. 5. 오후 2:17, 동동 : Body 태그 젤 아래에
한번 넣어봐쥬세오
2022. 6. 5. 오후 2:17, 백엔드! : 넵! 
2022. 6. 5. 오후 2:27, 모랑 : 음 video.js로 만든 player의 메서드 play에는 따로 인자 받는게 없는거같은데
2022. 6. 5. 오후 2:27, 모랑 : 용법이 조금 잘못되어서 문제 상황이 생기고 있는게 아닌가 싶네요
2022. 6. 5. 오후 2:27, 모랑 : https://docs.videojs.com/html5#play
2022. 6. 5. 오후 2:27, 유용태 (teo.yu) : <html>
<head>
  <link href='https://unpkg.com/video.js@7.10.2/dist/video-js.min.css' rel='stylesheet'>
  <script src='https://unpkg.com/video.js@7.10.2/dist/video.min.js'></script>
</head>
<body>

<video id=example-video controls='controls' width=600 height=300 class='video-js vjs-default-skin'></video>

<script>
videojs.Hls.xhr.beforeRequest = function(options) {
  options.headers = {
    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMTM0MjUyODYxOTI2MjQ2OTg1NjQiLCJyb2xlIjoiUk9MRV9VU0VSIiwiZXhwIjoxNjU0NDA0NzkzfQ.j3DIy_pcJZ5K1RqtzG2HLpWGAg0fahdfTmoUAezHPRM'
  }

  return options
}

var player = videojs('example-video')
player.src({src: '//vjs.zencdn.net/v/oceans.mp4'})
player.play() // 비디오는 유저 클릭이 한번도 없이는 바로 재생을 못해요. 나중에 clickHandler에 넣어야 합니다.
</script>

</body>
</html>
2022. 6. 5. 오후 2:27, 유용태 (teo.yu) : 모랑님이 말씀하신대로 play에 주소를 넣는 방식은 아니에요. src method를 이용해서 주소를 넣어 줄 수 있구요
2022. 6. 5. 오후 2:28, 모랑 : 좀 더 개선하자면
2022. 6. 5. 오후 2:28, 모랑 : videojs 3번째 인자에서 아마 비디오 로드된 이후에 관련된 작업을 할수있는걸로 아는데
2022. 6. 5. 오후 2:28, 모랑 : 그 이후에 플레이를 하게 한다던지?
2022. 6. 5. 오후 2:28, 백엔드! : 헉 .. 다들 너무 감사합니다 지금 백엔드쪽에 뭘 잘못건들여서 확인을 못하는데 후딱 고치고 한번 적용해보겠습니다 너무 감사합니다 
2022. 6. 5. 오후 2:28, 모랑 : 예제 찾아보시고 한번 적용해보시면 좋을것같아요
2022. 6. 5. 오후 2:29, 백엔드! : 넵 감사합니다
2022. 6. 5. 오후 2:29, 모랑 : 사진
2022. 6. 5. 오후 2:29, 백엔드! : 제가 잘 못 사용하고 있어서 안된거군요 ... 
2022. 6. 5. 오후 2:29, 모랑 : 옵션에서 아마 src정보를 넣어줄수있을거고
2022. 6. 5. 오후 2:29, 모랑 : 준비된 이후에 실행할 수있도록 하면 될것같네요
2022. 6. 5. 오후 2:30, 백엔드! : 넵 한번 해보겠습니다
2022. 6. 5. 오후 2:30, 모랑 : 이모티콘 
2022. 6. 5. 오후 2:30, 백엔드! : 모랑님 용태님 신통방통님 너무 감사합니다 
2022. 6. 5. 오후 2:45, 백엔드! : @모랑  모랑님 ... 정말 죄송하지만 질문 하나만 더 드려도 될까요 ?
2022. 6. 5. 오후 2:45, 모랑 : 네네
2022. 6. 5. 오후 2:45, 백엔드! : 감사합니다
2022. 6. 5. 오후 2:45, 백엔드! : 아까전에 방장님이 주신 코드에서
2022. 6. 5. 오후 2:46, 백엔드! : 비디오는 유저 클릭이 한번도 없으면 시작을 못한다고 하셨는데
2022. 6. 5. 오후 2:46, 백엔드! : localhost/:1 Uncaught (in promise) DOMException: play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD
2022. 6. 5. 오후 2:46, 백엔드! : 그게 이거 때문인거 같던데 
2022. 6. 5. 오후 2:46, 백엔드! : 그래서 
2022. 6. 5. 오후 2:46, 백엔드! :    var player = videojs('example-video',options, function onPlayerRead() {
            videojs.log('your player is ready');
            this.play('play', function(){
                videojs.log('playing');
            });
            this.on('end', function() {
                videojs.log('aww.. over so sooon?');
            });
        });
2022. 6. 5. 오후 2:47, 백엔드! : console에 'your player is ready'
2022. 6. 5. 오후 2:47, 백엔드! : 삭제된 메시지입니다. 
2022. 6. 5. 오후 2:47, 백엔드! : 이게 뜨긴하는데
2022. 6. 5. 오후 2:47, 백엔드! : 시작 버튼을 누르면 
2022. 6. 5. 오후 2:48, 백엔드! : playing 이게 안뜨네요 ... 
2022. 6. 5. 오후 2:48, 백엔드! : 제가 이해를 잘 못해서 그런데 한번만 더 설명해주실 수 있을까요 ... 
2022. 6. 5. 오후 2:48, 모랑 : 일단 play 메서드에는
2022. 6. 5. 오후 2:48, 백엔드! : 넵 
2022. 6. 5. 오후 2:48, 모랑 : 저렇게 인자를 넣을수가 없습니다
2022. 6. 5. 오후 2:49, 모랑 : 사진
2022. 6. 5. 오후 2:49, 모랑 : play는 역할 자체가 해당 비디오 태그의 비디오를 실행시키는
2022. 6. 5. 오후 2:49, 모랑 : 역할만 제공하는 터라
2022. 6. 5. 오후 2:49, 백엔드! : 아 ..
2022. 6. 5. 오후 2:49, 백엔드! : 그렇군요 
2022. 6. 5. 오후 2:50, 모랑 : https://docs.videojs.com/html5#play
2022. 6. 5. 오후 2:50, 모랑 : 사진
2022. 6. 5. 오후 2:50, 모랑 : 사진
2022. 6. 5. 오후 2:50, 모랑 : 사진
2022. 6. 5. 오후 2:50, 모랑 : 문서보시면
2022. 6. 5. 오후 2:50, 모랑 : 인자를 받는지 아닌지 명세되어 있어서
2022. 6. 5. 오후 2:51, 백엔드! : 아 ... 맞네요
2022. 6. 5. 오후 2:51, 백엔드! : 없군요 ..
2022. 6. 5. 오후 2:51, 모랑 : 문서 참고해보시면 도움이 될 것 같네요
2022. 6. 5. 오후 2:51, 백엔드! : 넵 감사합니다 
2022. 6. 5. 오후 2:51, 모랑 : 플레이되고 멈추고를
2022. 6. 5. 오후 2:51, 모랑 : 체크해보고 싶으시면
2022. 6. 5. 오후 2:52, 모랑 : 비디오 태그에다가 이벤트 등록해서
2022. 6. 5. 오후 2:52, 모랑 : 플레이 상태가 바뀌면 콘솔을 찍게 하는걸로 볼 수는 있을 것 같네요
2022. 6. 5. 오후 2:52, 모랑 : 아니면 문서에서
2022. 6. 5. 오후 2:53, 모랑 : 플레이 상태가 바뀌면 제공되는 메서드같은게 있는지 찾아보시는 것도 좋을 것 같구요
2022. 6. 5. 오후 2:53, 백엔드! : 넵
2022. 6. 5. 오후 2:53, 백엔드! : 모랑님 혹시 근데 자꾸 물어봐서 정말
2022. 6. 5. 오후 2:53, 백엔드! : 죄송하지만
2022. 6. 5. 오후 2:54, 모랑 : paused가 멈춤 상태인지 불리언값을 반환하니까
2022. 6. 5. 오후 2:54, 모랑 : 이걸로 사용하면 될 것 같네요
2022. 6. 5. 오후 2:55, 백엔드! : 지금 안되는 부분이 
2022. 6. 5. 오후 2:55, 백엔드! :  videojs.Hls.xhr.beforeRequest  이걸 이용해서 비디오 스트리밍할 때 headers에 jwt 토큰을 담아서 가져와야하는데 
2022. 6. 5. 오후 2:57, 백엔드! : 지금 현재 제가 데이터가 프론트로 넘오는건 되는데 표출하는거 자체가 정확히 왜 안되는지 몰라서 그런데 ... 혹시 도움을 조금 구할 수 있을까요 ?
2022. 6. 5. 오후 2:58, 백엔드! : 너무 질문만해서 죄송합니다 일단 다시 공식문서랑 읽어보겠습니다 
2022. 6. 5. 오후 2:58, 백엔드! : 감사합니다 
2022. 6. 5. 오후 3:01, 모랑 : 해당 부분은 저도 처음 보는 부분이라 일단 서칭해보는걸로는 맞게 사용하신거같은데
2022. 6. 5. 오후 3:01, 모랑 : 한번 찾아볼게요
2022. 6. 5. 오후 3:01, 백엔드! : 헉 너무 감사합니다 
2022. 6. 5. 오후 3:08: 겨레의늠름한아들님이 들어왔습니다.
2022. 6. 5. 오후 3:08, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 5. 오후 3:10, 백엔드! : videojs.Vhs.xhr.beforeRequest = function(options) {
  /*
   * Modifications to requests that will affect every player.
   */

  return options;
};

var player = videojs('video-player-id');
player.ready(function() {
  this.src({
    src: 'https://d2zihajmogu5jn.cloudfront.net/bipbop-advanced/bipbop_16x9_variant.m3u8',
    type: 'application/x-mpegURL',
  });
});
2022. 6. 5. 오후 3:10, 백엔드! : 공식문서에서 가져온 예시인데 
2022. 6. 5. 오후 3:10, 모랑 : 해당 영상은
2022. 6. 5. 오후 3:10, 모랑 : 플레이 되나요?
2022. 6. 5. 오후 3:11, 모랑 : 음 hls를
2022. 6. 5. 오후 3:11, 모랑 : 기본적으로 제공하지는 않는걸로 알고 있는데
2022. 6. 5. 오후 3:11, 백엔드! : 플레이가 된다는게 혹시 무슨말인가요 따로 켰을 때 말하는건가요 ?
2022. 6. 5. 오후 3:11, 모랑 : videojs-contrib-hls.js
2022. 6. 5. 오후 3:11, 모랑 : 해당 플러그인도
2022. 6. 5. 오후 3:11, 모랑 : 있어야 hls관련 기능을
2022. 6. 5. 오후 3:11, 모랑 : 제공할 수도 있어요
2022. 6. 5. 오후 3:11: 하양새님이 들어왔습니다.
2022. 6. 5. 오후 3:11, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 5. 오후 3:11, 모랑 : 지금은 헤더에 토큰 안들어간다는 말씀이신거죠?
2022. 6. 5. 오후 3:11, 백엔드! : 아니에요
2022. 6. 5. 오후 3:12, 백엔드! : 헤더에 토큰이 들어가서
2022. 6. 5. 오후 3:12, 백엔드! : 백엔드에서 지금 반응을
2022. 6. 5. 오후 3:12, 백엔드! : 하고있어요
2022. 6. 5. 오후 3:12, 백엔드! : 사진
2022. 6. 5. 오후 3:12, 백엔드! : 비디오 데이터가 디비에서
2022. 6. 5. 오후 3:12, 백엔드! : 가져와지는걸
2022. 6. 5. 오후 3:12, 백엔드! : 확인했습니다 
2022. 6. 5. 오후 3:12, 모랑 : 플레이가
2022. 6. 5. 오후 3:12, 백엔드! : 만약에 토큰이 없다면 에러가 뜨고 디비 select문이 안나옵니다
2022. 6. 5. 오후 3:12, 모랑 : 안되는건가요?
2022. 6. 5. 오후 3:12, 백엔드! : 근데 지금 현재 플레이가
2022. 6. 5. 오후 3:12, 백엔드! : 넵맞습니다
2022. 6. 5. 오후 3:12, 모랑 : 플레이는
2022. 6. 5. 오후 3:12, 모랑 : 플러그인도
2022. 6. 5. 오후 3:12, 모랑 : 추가해보시면
2022. 6. 5. 오후 3:12, 모랑 : 될것같네요
2022. 6. 5. 오후 3:13, 모랑 : videojs에서도 hls는 추가적인 플러그인이 필요합니다
2022. 6. 5. 오후 3:13, 백엔드! : 혹시 플러그인이면 프론트쪾에서
2022. 6. 5. 오후 3:13, 백엔드! : 해줘야하는 거 맞나요 ?
2022. 6. 5. 오후 3:13, 모랑 : 네
2022. 6. 5. 오후 3:13, 모랑 : 위에 videojs 불러오신것처럼
2022. 6. 5. 오후 3:13, 모랑 : 플러그인도
2022. 6. 5. 오후 3:13, 모랑 : 불러와주세요
2022. 6. 5. 오후 3:13, 백엔드! : videojs hls플러그인을
2022. 6. 5. 오후 3:13, 백엔드! : 불러오면 되는건가요 ?
2022. 6. 5. 오후 3:16, 모랑 : 네네
2022. 6. 5. 오후 3:19, 백엔드! : 넵 일단 한번해보겠습니다!
2022. 6. 5. 오후 3:24, 퉁이리 : 사진
2022. 6. 5. 오후 3:24, 퉁이리 : 스터디에서 테오 홍보중
2022. 6. 5. 오후 3:29, 헬렌 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 5. 오후 3:29, 헬렌 : 👍👍👍👍
2022. 6. 5. 오후 4:06, 유용태 (teo.yu) : 겨레의늠름한아들님 하양새님 반갑습니다 어서오세요 :)
2022. 6. 5. 오후 4:36, 모승 : ㅋㄱㅋㄱㄱㅋㅋㄱㅋ
2022. 6. 5. 오후 4:38, 하양새 : 안녕하세요 ~! 반갑습니다. 저도 퉁이리님 홍보에 들어오게 됐습니다 ~! 
2022. 6. 5. 오후 4:38, 겨레의늠름한아들 : 안녕하세여!! 테오님 
충일님 홍보로 들어왔습니다 많이 배워가겠습니다!!!
2022. 6. 5. 오후 4:39, 유용태 (teo.yu) : 감사합니다~~~ 언제든 궁금한것들 개발 이야기 많이 많이 공유 부탁드려요 ㅎ
2022. 6. 5. 오후 4:44, 겨레의늠름한아들 : 넵!! 감사합니당
2022. 6. 5. 오후 5:04, 곰곰 : 안녕하세요. 질문이 있습니다. 서버에서 html코드를 response로 내려줄때, 쓸수있는방법은 dangerouslySetInnerHTML이 있는걸로 알고있는데요, 해당 방법은 스크립트 공격에 취약하다고 알고 있습니다. 혹시 좀더 좋은 방법이 있을까요?
2022. 6. 5. 오후 5:15, 지노 : React.suspense를 사용하면 해당 컴포넌트에서 data 가 <Type | undefined>가 아니라 <Type>이어야 하는데 아직 react-query에서는 지원되지 않는 걸까요.. 분명 suspense: true로 설정해뒀는데
2022. 6. 5. 오후 5:15, 지노 : 사진
2022. 6. 5. 오후 5:18, 지노 : 깃헙 이슈에서 찾은 해결법(?)으로는 enabled:false로 처리하는건데 이게 어떤 효과를 일으키는 건지 잘 모르겠네요
2022. 6. 5. 오후 5:18, 지노 : 사진
2022. 6. 5. 오후 5:36, 빠밤 : 일욜에다들 주로뭐하세요?
2022. 6. 5. 오후 5:36, 빠밤 : 다들빡공하시나...
2022. 6. 5. 오후 5:37, 뮤츠 : 주로 누워있어요
2022. 6. 5. 오후 5:59, 백엔드! : @모랑  모랑님 혹시 잠깐 개인톡 드려도 될까요 ?
2022. 6. 5. 오후 8:04, 모랑 : 제가 밖에 있어서 오늘 저녁엔 좀 힘들거같아요 ㅠ
2022. 6. 5. 오후 8:08, 백엔드! : 넵! 
2022. 6. 5. 오후 8:54, NEXT. : 혹시 스피너나 스켈레톤 UI 버튼 애니메이션 같은거는 왜 쓰는것이고 왜 중요한 것일까요??
2022. 6. 5. 오후 8:55, NEXT. : 단순히 이쁘고 좋은건 알겠는데 왜? 사용하는지 그 이유를 잘모르겠어서 여러분의 고견을 듣고싶어서 질문드렸습니다.. 
2022. 6. 5. 오후 8:55, NEXT. : 이모티콘 
2022. 6. 5. 오후 8:56, 쏠라c : 최근에 봤던 좋은 글인데요
2022. 6. 5. 오후 8:56, 쏠라c : https://brunch.co.kr/@yeon-kim/13
2022. 6. 5. 오후 8:56, 쏠라c : 이 주제랑 연관이 된 질문인것같아서 ㅎㅎ
2022. 6. 5. 오후 8:56, 유용태 (teo.yu) : 사람은 내가 행동을 한 이후 0.2초 까지는 실시간으로 생각하고 1초 미만으로는 느리지만 기다릴수 있고 그 이상인 경우에는 버그 혹은 이상하다고 느낀다고 합니다
2022. 6. 5. 오후 8:57, 유용태 (teo.yu) : 오! 좋은 글 감사합니다 :) 이 글이 더 나을 수 도 있겠네요
2022. 6. 5. 오후 8:59, 벙찐 튜브 : 이 책 진짜 좋은것같아요
2022. 6. 5. 오후 8:59, NEXT. : 이야..정말 좋은글 그리고 답변해주셔서 감사합니다 어피치님 테오님~
2022. 6. 5. 오후 8:59, 유용태 (teo.yu) : 항공사 이야기도 좀 재밌는데 한 항공사에서 항상 착륙 후에 짐을 찾으러 가는 시간이 30분이나 걸려서 클레임이 있었는데 이걸 최적화 해서 10분으로 줄였는데도 클레임은 여전했다고 합니다
2022. 6. 5. 오후 9:00, 유용태 (teo.yu) : 그런게 이 방법(?)을 써서 그 클레임을 현격히 줄이는 방안을 찾아냈는데
2022. 6. 5. 오후 9:00, 유용태 (teo.yu) : 그게 착륙하는 지점과 짐을 찾는 곳을 멀리 떨어 뜨려 놓음으로써 해결을 했데요
2022. 6. 5. 오후 9:01, 유용태 (teo.yu) : 그래서 짐을 찾으러 가는 곳이 7~8분은 걸어야 하는 곳으로 옮겼다고 합니다
2022. 6. 5. 오후 9:01, 유용태 (teo.yu) : 그랬더니 그전에는 그냥 내리지마자 10분간 기다렸다가 가야했던 행동이
2022. 6. 5. 오후 9:02, O_O : 오호 좋네요
2022. 6. 5. 오후 9:02, 유용태 (teo.yu) : 내리자마자 짐을 찾으러 걸어가는 7-8분의 시간은 그냥 행동해야 하는 시간처럼 느껴지고
2022. 6. 5. 오후 9:02, 유용태 (teo.yu) : 실제 짐을 기다리는 시간은 1-2분만에 끝나는 것 처럼 느껴지게 해서 만족도가 올라갔다고 해요
2022. 6. 5. 오후 9:03, 유용태 (teo.yu) : 스켈레톤의 경우가 그에 해당한다고 볼 수 있어요
2022. 6. 5. 오후 9:03, 유용태 (teo.yu) : 스켈레톤이 스피너보다 덜 기다린다는 느낌을 준다는 연구 결과가 있어서 요새는 대부분 스켈레톤을 쓰는데
2022. 6. 5. 오후 9:04, 유용태 (teo.yu) : 사람의 집중을 분산하고 아이캐치할 것들을 주면 기다림을 좀 더 잘 견딜수 있기에 그러한 UI 장치들을 사용하게 됩니다. 지연되는 기간 마다 적정한 UI가 있기 때문에 잘 선택해서 사용하시면 좋아요!
2022. 6. 5. 오후 9:11, NEXT. : 이야..자세항 설명 덕분에 이해가 더잘되능것 같아요 ㅎㅎ! 
2022. 6. 5. 오후 9:11, NEXT. : 이모티콘 
2022. 6. 5. 오후 9:16, 웅세 : 혹시 스크롤없는 spa 페이지를 만들었는데 이를 카카오톡으로 공유하니 카카오 인앱브라우저에서 높이관련으로 레이아웃이 깨지는데 해결방법이있을까요...
2022. 6. 5. 오후 9:16, 웅세 : 구글링해보니 적당한 해결법을 못찾겠네요
2022. 6. 5. 오후 9:20, 웅세 : 네비게이션바가 없어지면서 생기는 문제인데 이거참..
2022. 6. 5. 오후 9:21, 최민석 : vh 단위쓰시나요?
2022. 6. 5. 오후 9:21, 웅세 : 넵!
2022. 6. 5. 오후 9:22, 최민석 : vh 단위말고 % 단위로 해보시겠어요?
2022. 6. 5. 오후 9:24, 웅세 : 똑같아요ㅜㅜ
2022. 6. 5. 오후 9:27, 헬렌 : 레이아웃이 깨진다는 게 어떻게 보인다는 뜻인가요?
2022. 6. 5. 오후 9:28, 웅세 : 카카오 인앱브라우저의 경우 화면을 내리면 네비게이션바가 사라지는데
2022. 6. 5. 오후 9:28, 훌온텐드 : 그거.. vh가 네비게이션 영역 포함할때도 잇더라고요. calc와 window.innerHeight로 직접 계산해야될수도...
2022. 6. 5. 오후 9:28, 웅세 : 그때 화면크기가 재설정되면서 설정해뒀던 vh에 따라 화면이 커져요
2022. 6. 5. 오후 9:29, 웅세 : 사파리브라우저 네비게이션 하단에 뜨는거는 해결을했는데 카카오브라우저만 문제네요
2022. 6. 5. 오후 9:29, 헬렌 : 네비게이션 바가 보였다 안보였다 바뀌면서 문제가 되는 거군요
2022. 6. 5. 오후 9:29, 웅세 : 넵 맞습니다...
2022. 6. 5. 오후 9:30, 헬렌 : vh로 하니까 레이아웃이 변경되는 게 맞지 않나요?
2022. 6. 5. 오후 9:31, 웅세 : 넵 그게맞는데 이제 그 네비게이션바가 사라졌다 나타났다하는거와 관계없이하고싶어서 그렇습니다
2022. 6. 5. 오후 9:47, 게으름(lifeisnovel) : 아 보통 다른 모바일 브라우저는 네비게이션바가 있을 때 기준으로 vh가 고정되는데 인앱 브라우저는 유동적이 되어버리더라구요
2022. 6. 5. 오후 9:52, 게으름(lifeisnovel) : 세로에 가득차야 해서 100vh를 써야한다면 -webkit-fill-available 속성을 한번 찾아보셔도 될 것 같아요.
저 같은 경우 50vh 같은 식으로 사용하다보니 인앱 브라우저는 useragent로 확인해서 따로 리사이징 대응하지 않게 스크립트로 고정해줘야 할 것 같아서 우선은 보류해두었습니다
2022. 6. 5. 오후 9:54, 게으름(lifeisnovel) : 인앱브라우저로 접속 시 다른 브라우저로 강제 연결하는 방법도 있는 것 같은데 이건 iOS15 이후로 막혔다던 것 같네요
2022. 6. 5. 오후 9:55, 웅세 : 그렇다네요 webki 속성도 사파리 네비게이션바 대응할때 사용했었는데 일단 해볼때까지 해봐야겠습니다 ㅋㅋㅋㅋ
2022. 6. 5. 오후 10:16, 진현 : 이모티콘 혹시 다들 눈건강은 어떻게 관리하고 계신가요?? 눈이 점점 나빠지는데 이제는 정말 관리해야겠다고 생각이 들어서요ㅠㅅㅠ
2022. 6. 5. 오후 10:18, SI탈출하는상상하는프로도 : 저도 이제 IDE툴 폰트 크기 작으면 잘 안보이더라구요.........ㅋㅋㅋ 눈 건강 영양제 사먹고있습니다...🥲
2022. 6. 5. 오후 10:39, 헬렌 : 저도 개발할 수록 눈이 안 좋아져서 루테인을 매일 먹고 있어요. 블루라이트 차단 안경을 쓰고…
2022. 6. 5. 오후 10:40, 헬렌 : 안약은 항시 대기
2022. 6. 5. 오후 11:20, 피즈멍 : 안과 정기적으로 다니는거 정말 추천드립니다...
2022. 6. 5. 오후 11:27, 즐거운 네오 : 저도 영양제 먹는데 영양제 먹고 안먹고에 따라 눈시림이라 해야하나 건조함이라 해야하나 그 정도가 확실히 다르더라구요
2022. 6. 5. 오후 11:43: PURPLE님이 들어왔습니다.
2022. 6. 5. 오후 11:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 5. 오후 11:43, 유용태 (teo.yu) : PURPLE님 반갑습니다 ~
2022. 6. 5. 오후 11:43, PURPLE : 안녕하세요 프론트엔드 공부중에 배우님 벨로그글 보고 찾아왔숩니다
2022. 6. 5. 오후 11:43, PURPLE : *teo님
2022. 6. 5. 오후 11:44, PURPLE : 네 안녕하세요~
2022. 6. 5. 오후 11:46, 유용태 (teo.yu) : 감사합니다 ;) 어서오세요 ㅎ 궁금한게 있을때 언제든 질문 남겨주세요~ 좋은 자료나 내가 쓴 글 관심사 고민거리 뭐든 같이 공유해서 같이 얘기하고 함께 성장했으면 좋겠습니다
2022. 6. 5. 오후 11:46, PURPLE : 네 알겠습니다~

2022년 6월 6일 월요일
2022. 6. 6. 오전 2:03, 엄지척 튜브 : 안주무시는 분 있으실까요?
2022. 6. 6. 오전 2:09, 말하는감자 : 어떤 것 때문에 그러세요?
2022. 6. 6. 오전 2:11, 엄지척 튜브 : 45개el이 들어있는 배열이있는데
2022. 6. 6. 오전 2:11, 엄지척 튜브 : 이걸 map으로 돌려서
2022. 6. 6. 오전 2:12, 엄지척 튜브 : 3개씩만 화면에 나와야하고
2022. 6. 6. 오전 2:12, 엄지척 튜브 : 012 (1초후)123 (1초후)234 
2022. 6. 6. 오전 2:12, 엄지척 튜브 : 인덱스로 적은건데
2022. 6. 6. 오전 2:12, 엄지척 튜브 : 저렇게 하나씩 들어오고 앞에는 없어져야하는데
2022. 6. 6. 오전 2:12, 엄지척 튜브 : 구현이 가능할까요?
2022. 6. 6. 오전 2:13, 말하는감자 : 네 가능할 것 같은데요!
2022. 6. 6. 오전 2:13, 엄지척 튜브 : 어떻게 로직을 짜야할까요???
2022. 6. 6. 오전 2:14, 말하는감자 : 방법은 여러가지가 있을 것 같아요
2022. 6. 6. 오전 2:14, 말하는감자 : 1초마다 원본 배열을 shift하고
2022. 6. 6. 오전 2:15, 말하는감자 : Splice로 3번째 까지 보여주면 되겠죠?
2022. 6. 6. 오전 2:15, 말하는감자 : 다른 방법으론 배열의 인덱스를 사용하는 접근도 가능할 것 같구요
2022. 6. 6. 오전 2:17, 말하는감자 : Splice가 아니라 slice..ㅎㅎ
2022. 6. 6. 오전 2:33, 엄지척 튜브 : 감사합니다 구현했습니다 !
2022. 6. 6. 오전 2:33, 엄지척 튜브 : .slice(time, time + 3)
2022. 6. 6. 오전 10:05: hooon님이 들어왔습니다.
2022. 6. 6. 오전 10:05, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 6. 오전 10:06, 유용태 (teo.yu) : hooon님~ 어서오세요 반갑습니다 :)
2022. 6. 6. 오전 10:08, hooon : 네 안녕하세요~ 벨로그 글보고 들어왔네요~
2022. 6. 6. 오전 10:09, 유용태 (teo.yu) : 감사합니다~ 이 곳은 궁금한것들을 서로 물어보고 답하면서 같이 성장하고자 하는 공간입니다~ 언제든 궁금한게 생기면 질문 남겨주세요 제가 아는 내용이면 최대한   답을 남기도록 하겠습니다 ㅎ
2022. 6. 6. 오전 10:13, hooon : 네 감사합니다. 궁금한게 생기면 많이 이용하겠습니다~~
2022. 6. 6. 오후 1:44, 웅세 : 안녕하세요!! 토이 프로젝트로 한반도 지도위에 아이템을 표시하는 프로젝트를 진행하고있는데요, 막 도로나 건물같은 자세한건 필요없고 간단하게 도, 시만 구분해서 보여주는 간단한 디자인의 라이브러리 추천해주실만한 거 있으신가요? 리액트 기반 프로젝트입니다!
2022. 6. 6. 오후 2:10, 귀여운 라이언 : 안녕하세요 신입 프론트엔드 개발자 입니다~~
혹시 외부 컨퍼런스 정보를 알림을 받거나 정보가 한데 모여있는 곳이 있을까요? 다들 어떻게 알아보고 참석을 하실까요?
2022. 6. 6. 오후 2:10, 비디오가미래다 : 반갑습니다 ㅎ
2022. 6. 6. 오후 2:10, 106 : https://github.com/brave-people/Dev-Event
2022. 6. 6. 오후 2:11, 106 : 이 저장소 추천드려요 ~
2022. 6. 6. 오후 2:11, 겨레의늠름한아들 : 저도 메일 알림 설정해놔서 매주 받아보고 있어요!!
2022. 6. 6. 오후 2:13, 귀여운 라이언 : 복 받으실 겁니다 ㅎㅎ 감사합니다!
2022. 6. 6. 오후 3:32, 곰곰 : 안녕하세요. 질문이 있습니다. 혹시 반복된 비즈니스로직을 처리하는데 커스텀훅과 hoc중 어느것을 보통 많이들 사용하세요? 예를들어 데이터를 fetch해와서 props로 넘겨주는 로직이라치면, usefech 커스텀훅을 만들어서 사용하는게 좋을지, withfectch와같이 hoc를 만들어서 props로 넘겨주는것 둘중에 어느방법이 더 좋을까요?
2022. 6. 6. 오후 4:16, 곰젤리 : 저는 훅을 더 선호해요
2022. 6. 6. 오후 4:24, Hardy : 요즘은 훅을 더 선호할거 같은데요
2022. 6. 6. 오후 4:57, 주니어개발자 : 저도 훅이여!!
2022. 6. 6. 오후 5:02, 론트리니 : 커스텀훅 사용을 더 선호해요 ㅋㅋ
2022. 6. 6. 오후 5:08, 곰곰 : 훅이 압도적이네요. 의견 감사드립니다
2022. 6. 6. 오후 5:26: 귀여운 라이언님이 들어왔습니다.
2022. 6. 6. 오후 5:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 6. 오후 5:32, Lofo : 안녕하세요!
라이브코딩 강의를 듣다가 궁금한 것이 생겨서요!

return(
        <div>
            <ul>
                {data ?.map(product => (
                    <ProductItem {…product} key={product.id} />
                ))}
            </ul>
        </div>

위 코드에서 'data ?.map()' 물음표는 왜 작성하는 것인가요??
2022. 6. 6. 오후 5:33, 나그네 : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Optional_chaining
2022. 6. 6. 오후 5:33, Lofo : 구글에 data ?.map() 이렇게 검색하고, typescript map 이렇게 해도 안나와서요
2022. 6. 6. 오후 5:33, 엄지척 튜브 : 옵셔널체이닝 검색하시면 될고같아여ㅔ
2022. 6. 6. 오후 5:33, Lofo : 나그네님 감사합니다!
2022. 6. 6. 오후 5:33, Lofo : 도님 감사합니다!!
2022. 6. 6. 오후 5:50, 유용태 (teo.yu) : 귀여운 라이언님~~ 어서오세요 :)
2022. 6. 6. 오후 6:45, 귀여운 라이언 : 안녕하세요! ㅎㅎ
2022. 6. 6. 오후 8:15, 이준희 : 샵검색 : #구글 엔지니어는 이렇게 일한다
2022. 6. 6. 오후 8:15, 이준희 : 안녕하세요 ~ 혹시 이 책 읽어보신 분 계신가요!
2022. 6. 6. 오후 8:15, 이준희 : 서점에 가니깐 메인 칸을 차지하고 있더라구요! 혹시나 읽은 분들이 계실지 궁금합니다 
2022. 6. 6. 오후 8:15, 이준희 : 사진 2장
2022. 6. 6. 오후 8:16, 이준희 : 내용은 이런 내용입니다!
2022. 6. 6. 오후 8:25, 프론트신입생존기 : 요즘 트위터에서 많이 언급되던데 저도 후기가 궁금하네요
2022. 6. 6. 오후 8:31, 허브의 개발 일지 : 매니징이나 문화적인 이야기가 많은 것 같네요
2022. 6. 6. 오후 8:31: 손흔드는 라이언님이 들어왔습니다.
2022. 6. 6. 오후 8:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 6. 오후 8:32, 손흔드는 라이언 : 안녕하세요~
2022. 6. 6. 오후 9:35: 프론트님이 들어왔습니다.
2022. 6. 6. 오후 9:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 6. 오후 9:36, 유용태 (teo.yu) : 손흔드는 라이언님 반갑습니다. 어서오세요 :)
2022. 6. 6. 오후 9:36, 유용태 (teo.yu) : 프론트님도 환영합니다 +_+
2022. 6. 6. 오후 9:38, 프론트 : 안녕하세요~
2022. 6. 6. 오후 9:38, 프론트 : 테오님 여기저기서 많이보여서 궁금해서 들어와봤습니다!
2022. 6. 6. 오후 9:39, 유용태 (teo.yu) : 안녕하세요~~ 여기는 프론트엔드에 대해서 물어보고 답하고 좋은 자료과 관심하는 공유 하는 곳이랍니다
2022. 6. 6. 오후 9:39, 유용태 (teo.yu) : 오오~ 감사합니다 :)
2022. 6. 6. 오후 9:39, 프론트 : 블로그 글올리신것들도 유용하게 잘 읽었어요!!ㅎㅎ
2022. 6. 6. 오후 9:40, 유용태 (teo.yu) : 고맙습니다. 앞으로도 유용할만한 글 많이 올려보도록 하겠습니다. ㅎ 블로그 관련된 이야기도 좋고 개인적인 궁금함도 언제든 좋으니 편하게 글 남겨주세요. ㅎ
2022. 6. 6. 오후 9:41, 프론트 : 넵 혹시 블로그글 업로드 하실때 이 방에도 공유를 해주시나요?
2022. 6. 6. 오후 9:41, 유용태 (teo.yu) : 제가 알고있는 내용이라면 언제든지 답변하고 호흡이 좀 길게 설명드려야할만한 이야기들은 블로그 글로 또 작성해보고 있습니다. ㅎ
2022. 6. 6. 오후 9:41, 유용태 (teo.yu) : 네~ 항상 공유합니다. ㅎ
2022. 6. 6. 오후 9:41, 프론트 : ㅎㅎ넵
2022. 6. 6. 오후 9:44, 프론트신입생존기 : 언젠간 테오님처럼 글도잘쓰고 개발도 잘하는 시니어가 되고싶네요~
2022. 6. 6. 오후 9:45, 웹린이 : 정말.. 글로 뭔가 남기는게 너무 어려워서
2022. 6. 6. 오후 9:46, 웹린이 : 저도 글 잘 쓰는 사람이 되고 싶네용 ㅠ
2022. 6. 6. 오후 9:47, 이프노즈 : 하으 저도 글쓰는거 너무 힘들어요
2022. 6. 6. 오후 9:48, 프론트신입생존기 : 블로그 써야하는데 주말만 되면 퍼질러 잠만자서 ㅋㅋㅋㅋㅋㅋ
2022. 6. 6. 오후 9:49, 웹린이 : 맞아요 매번 해야지! 하고 못하는 ㅋㅋㅋㅋ
2022. 6. 6. 오후 9:53, 티비보는 무지 : 저는 디코에서 활동 하도록 하겠습니다. 모두 좋은 시간들 되세요~
2022. 6. 6. 오후 9:53: 티비보는 무지님이 나갔습니다.
2022. 6. 6. 오후 10:34, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 6. 오후 10:34, 유용태 (teo.yu) : 그러게요~ 저도 써야지 하는데 안 써질때는 참 안되더라구요 ㅎ
2022. 6. 6. 오후 10:38, 철진 : 혹시, 클린코드 관련 영상을 시청하다 생긴 궁금증인데요! 

const isConfirmed = await openPopup({title: '팝업'}) 
if(isConfirmed) { 다음 로직}
식으로 코드를 작성하려면… 모달에서 어떤 동작을 해줄 수 있는걸까요?? 팝업을 여는 함수를 비동기로 만들고 사용자의 확인 버튼을 누르는 동작을 비동기로 받을 수 있는 방법이 궁금해서 질문드려봅니다! 
2022. 6. 6. 오후 10:45, 유용태 (teo.yu) : openPopup에서 Promise를 생성하고 확인 버튼 핸들러에서 resolve을 걸어주고 promise를 리턴 하면 됩니다
2022. 6. 6. 오후 10:47, 유용태 (teo.yu) : openPopup = (params) => new Promise((resolve) => {

  const onConfirm = () => resolve()

  // 대충 onConfirm을 쓰는 jsx를 포탈을 이용해서 팝업을 띄우는 로직
})
2022. 6. 6. 오후 10:49, 철진 : 답변 감사합니다!!! 보여주신 예시 참고해서 짜볼게요!! 
2022. 6. 6. 오후 11:00, 철진 : 기존에는 모달마다 확인 버튼의 경우 따로 추가 액션에 관한 로직을 props로 전달해주는 방식을 사용했는데, 말씀해주신 방법을 적용해보니 정상적으로 비동기로 confirm을 잘 받아오는 것을 확인했습니다!! 구현 아이디어가 잘 떠오르지 않았는데 큰 도움 얻고 갑니다!! 더 공부해서 다른 분들에게 많은 도움을 줄 수 있는 시니어가 되고 싶네요!! 정말 감사해요 태오님!! 
2022. 6. 6. 오후 11:20, 엄지척 튜브 : 이미지주소가 든 배열이 있고 맵을 사용해서 체크박스를 선택하면 빈배열에 추가해서
화면에 보여주는 코드가 있는데 빈배열(화면에 보여주는 배열)을 추가나 삭제를 하면 전체가 깜빡(리랜더링)이 발생하는데 안되게하려면 리액트메모밖에 답이 없을까요?

2022. 6. 6. 오후 11:26, 웹린이 : 저는 개인적으로는 팝업, 모달 같은 경우에는 <Modal><AModal/></Modal>
2022. 6. 6. 오후 11:26, 웹린이 : 형식으로 쓸 수 있게 만드는걸 선호합니당
2022. 6. 6. 오후 11:29, 철진 : 감사합니다! 저는 modal이라는 공통 레이아웃 컴포넌트를 만들고, 안에는 children으로 다른 내용들을 받을 수 있게 해뒀습니다. context와 portal, useModal을 이용해서 openModal 함수만 호출해서 modal이 열리도록 하고 있구요!! 
2022. 6. 6. 오후 11:29, 웹린이 : 모달로도 쓰이고 모달 아닌 곳에서도 쓰는 ui인 경우
2022. 6. 6. 오후 11:29, 웹린이 : 저런식으로 쓰면
2022. 6. 6. 오후 11:29, 웹린이 : 모달로 쓰이는지 아닌지 jsx에서 파악하기 쉽고
2022. 6. 6. 오후 11:29, 웹린이 : 중복도 줄일 수 있어서요 ㅎㅎ;
2022. 6. 6. 오후 11:30, 웹린이 : 아 저도 요렇게 쓰고 있어요! ㅎㅎ;
2022. 6. 6. 오후 11:30, 철진 : 웹린이님의 주신 아이디어를 추가해서 잘 나눠보면 더 예쁘고 맥락 파악이 쉽게 확인이 될 것 같네요!! 감사합니다!!
2022. 6. 6. 오후 11:30, 웹린이 : children으로 모달로 열릴 컴포넌트를 받고
2022. 6. 6. 오후 11:31, 웹린이 : 관련된 onClick 등등은 props로 받아 전달하게끔요!
2022. 6. 6. 오후 11:31, 철진 : 맞습니다!! ☺️
2022. 6. 6. 오후 11:31, 웹린이 : 훅으로 빼놓으면
2022. 6. 6. 오후 11:31, 웹린이 : 이런 경우 컴포넌트 두개를 만들어야해서
2022. 6. 6. 오후 11:31, 웹린이 : 이모티콘 
2022. 6. 6. 오후 11:32, 프론트 : 혹시 key를 설정해주셨나요?
2022. 6. 6. 오후 11:32, 웹린이 : 범용성이 좀 떨어지드라구요..
2022. 6. 6. 오후 11:33, 엄지척 튜브 : 넵 key는 id값으로 설정했는데 추가 삭제 말고 다른 요소까지 다시 요청을 보내더라구요
2022. 6. 6. 오후 11:36, 까루 : 혹시 모달이 열리고 닫히고를 비동기로 받는게 그냥에 비해 이점이 있나요?
2022. 6. 6. 오후 11:36, 까루 : 예전에 깃헙 모듈 예제에도 비동기로 받아서 이유가 있나 해서요

2022년 6월 7일 화요일
2022. 6. 7. 오전 12:23, 철진 : 깃허브 모듈 예제는 무엇일까요?? 
제 생각에는 '질문하기' 버튼을 예제로 생각해보면 비동기로 받지 않고 로직을 직접 확인 버튼에 달아준다면 실제로는 
질문하기 버튼 -> 모달 열기 
모달의 확인 -> 질문하기가 되는데 

비동기로 받은다면 
질문하기 버튼-> 질문 하기 (모달창이 열리고 확인 버튼이 눌리면 진행) 식이 되어서 맥락 이해가 더 쉬울 수 있을 것 같아요!
2022. 6. 7. 오전 12:31, 철진 : 또 팝업이 비동기적으로 동작하기 때문에 로직 중간에서 사용자의 확인 등이 있는 경우에만 이후 로직이 실행되도록 구현하기더 편하구요! 비동기로 처리하지 않는다면 로직을 단계별로 다 쪼개야 할 것 같습니다. 
2022. 6. 7. 오전 2:12: 퇴근하는 프로도님이 들어왔습니다.
2022. 6. 7. 오전 2:12, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오전 2:30, Hardy : https://www.youtube.com/watch?v=q5D55G7Ejs8
2022. 6. 7. 오전 2:30, Hardy : 애플 컨퍼런스 하네용
2022. 6. 7. 오전 4:41, 조세핀 : 안녕하세요! 먼저 이른 시간 죄송합니다.ㅠㅠ
저는 대학생 코린이이고, 자바스크립트로 간단한 게임을 만들고 있습니다.
객체 관련하여 코드 분리를 시도하였는데, 작동이 되지 않아 몇 시간 째 애를 먹고 있습니다.. 주변에 도움을 청할 사람이 없어 여기에 여쭙니다. 혹시 여유가 되신다면 제 코드를 봐주실 수 있는 분이 계실까요? 400줄짜리 코드입니다!
2022. 6. 7. 오전 4:42, 뮤츠 : 링크를 걸어주시는게 좋을것같아요
2022. 6. 7. 오전 4:46, 조세핀 : 넵!

카카오톡 오픈채팅을 시작해 보세요.
링크를 선택하면 카카오톡이 실행됩니다.

JS
https://open.kakao.com/o/svq5w0je
2022. 6. 7. 오전 4:48, 그레이 : 코드 링크를 걸어달라는 뜻 아니었을까여
2022. 6. 7. 오전 4:49, 조세핀 : 아.. 저도 그렇게 하고 싶은데 따로 업로드 하는 방법을 잘 몰라서 옵챗에서 파일 보내드리려고 했습니다!
2022. 6. 7. 오전 4:50, 그레이 : 옙 github 등을 이용하시면 다른 분들이 도움드리기 좋을 것 같습니다!
2022. 6. 7. 오전 4:59, 조세핀 : https://dainty-zuccutto-bb83b2.netlify.app/
2022. 6. 7. 오전 5:10, 뮤츠 : 어… 지금은 작동이 안되네요 라는 말밖에 할게없는뎅 혹시 코드 공개가 힘드신가요?]
2022. 6. 7. 오전 5:12, 조세핀 : 아니요..! 그 크롬 페이지 보기에 전부 공개되어 있습니다!
2022. 6. 7. 오전 5:19, 조세핀 : https://sunny-yeot-a177cb.netlify.app/

이건 객체 분리 이전 코드입니다!
2022. 6. 7. 오전 5:20, 까루 : 아 이런 편한점이 있었네요!!!
깃허브 모듈 예제는 npm 모달 관련 모듈의 예시를 말씀 드린거 였어요
답변 감사드립니다 😃
2022. 6. 7. 오전 7:40: 알파카 디자인님이 들어왔습니다.
2022. 6. 7. 오전 7:40, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오전 7:41, 유용태 (teo.yu) : 안녕하세요 알파카 디자인님~~ 반갑습니다. :)
2022. 6. 7. 오전 7:42, 알파카 디자인 : 안녕하세요~! 구글 스프린트 벨로그를 보고 찾아보게되었어요!!
2022. 6. 7. 오전 7:47, 유용태 (teo.yu) : 감사합니다! :)
2022. 6. 7. 오전 7:49, 유용태 (teo.yu) : 조만간 6월 중에 또 스프린트를 진행해볼 계획이에요 관심이 있다면 참여해보세요. 아직 일정은 확정되지 않아 공지를 하지 않았는데요 다음주를 예상하고 있습니다.
2022. 6. 7. 오전 8:27, 곰곰 : 혹시 괜찮으시다면 해당 예제 링크 부탁드려도 될까요? 참고해보고 싶어서요.
2022. 6. 7. 오전 8:32, 알파카 디자인 : 네~ 감사합니다!
2022. 6. 7. 오전 8:32, 까루 : 너무 오래전에 본거라 정확히 어떤 모듈이였는지 기억이 안나네요 ㅠㅠ
철진님이 말씀하신대로 await으로 모달에 대한 종료를 받는게 특이해서 이런 사용법도 있구나 하고 넘겼어서 😢
2022. 6. 7. 오전 8:35, 유용태 (teo.yu) : 사진
2022. 6. 7. 오전 8:35, 유용태 (teo.yu) : https://www.linkedin.com/posts/mathew-dony_css-javascript-typescript-activity-6939700361913856000-lpL6?utm_source=linkedin_share&utm_medium=ios_app
2022. 6. 7. 오전 9:12, 허브의 개발 일지 : 사진
2022. 6. 7. 오전 9:13, 허브의 개발 일지 : 아아.. 업데이트 멈춰...
2022. 6. 7. 오전 9:15, 동동 : 와 진짜 대박이네요!! 굿굿굿~
2022. 6. 7. 오전 9:18, 대장 : 이게 어떤건가요 ??
2022. 6. 7. 오전 9:19, 대장 : ios랑 aos랑 web api 같이 사용한다는 뜻인가요 ??
2022. 6. 7. 오전 9:20, 유용태 (teo.yu) : 우리가 보통 링크 공유하기 네이티브 기능이 있는데 브라우저에서도 그걸 쓸수 있는 기능이 생겼다라고 보시면 될것 같아요
2022. 6. 7. 오전 9:20, 대장 : 아하 !! 감사합니다 ! 
2022. 6. 7. 오전 9:26, 살려줘 네오 : 오 그러면 웹에서는 공유하기 기능을 따로 공유 안하고 네이티브를 가져다 사용 가능 한가요? 
2022. 6. 7. 오전 10:01, 유용태 (teo.yu) : 그렇다네요(!) 아직 써보지는 않았는데 흥미로와서 가져와봤어요 ㅋ 
2022. 6. 7. 오전 10:48, 유용태 (teo.yu) : 공식문서를 찾아다니기 힘들때? 한번에 검색해서 모아서 보자! 
개발 문서 통합 검색 사이트 +_+
https://devdocs.io/
2022. 6. 7. 오전 10:50, 프엔공부중 : 웹뷰 개발과 리액트 네이티브로 앱개발은 업무가 많이 다른가요?
2022. 6. 7. 오전 10:52, 썰cho : 넵
2022. 6. 7. 오전 10:53, 썰cho : 웹뷰는 웹이고 리액트네이티브는 앱이에요
2022. 6. 7. 오전 11:04, 웅세 : 네이티브 객체와 빌트인 객체는 같은 말인가요?
2022. 6. 7. 오전 11:05, 썰cho : 사진
2022. 6. 7. 오전 11:05, 썰cho : 빌트인을 포함하는게 네이티브라네요
2022. 6. 7. 오전 11:06, 웅세 : 사진
2022. 6. 7. 오전 11:07, 웅세 : 요런 글을 봐서 or로 연결돼있길래 같은건가...했습니다
2022. 6. 7. 오전 11:15, 허브의 개발 일지 : 사진
2022. 6. 7. 오전 11:16, 허브의 개발 일지 : ॱଳ͘ 저 처음으로 벨로그 트렌딩에 올라가봤네요! 여러분들이 많이 하트 눌러주셔서 그런가봐요ㅜㅜ 감사합니다
2022. 6. 7. 오전 11:23, 대장 : 축하드립니다 ! 
2022. 6. 7. 오후 12:31, 기뻐하는 라이언 : 안녕하세요 현재 맥os big sur를 사용중인데 몬테레이로 업그레이드 해도 호환성 문제라든가 상관 없을까요?
2022. 6. 7. 오후 12:34, 델 : 몇달전에 올리고 아무 문제 없이 잘 쓰고 있습니다 :)
2022. 6. 7. 오후 12:36, 기뻐하는 라이언 : 아 그러시군요. 시간 남을때 업그레이드 해야 겠네요. 답변 감사합니다.
2022. 6. 7. 오후 12:55: 엄지척 프로도님이 들어왔습니다.
2022. 6. 7. 오후 12:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오후 1:02, 유용태 (teo.yu) : 안녕하세요 엄지척 프로도님~~ 반갑습니다 :)
2022. 6. 7. 오후 1:18: 르르님이 들어왔습니다.
2022. 6. 7. 오후 1:18, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오후 1:21, 유용태 (teo.yu) : 안녕하세요 르르님 반갑습니다.
2022. 6. 7. 오후 1:21, 유용태 (teo.yu) : Next, Remix와 같은 또다른 JS Full Stack Framework Redwood 입니다. 
https://www.youtube.com/watch?v=o5Mwa_TJ3HM
2022. 6. 7. 오후 1:26, 부끄러운 어피치 : 정말 프레임워크가 많네요
2022. 6. 7. 오후 2:21: 멋쟁이 프로도님이 들어왔습니다.
2022. 6. 7. 오후 2:21, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오후 2:21, 유용태 (teo.yu) : 멋쟁이 프로도님 반갑습니다 :)
2022. 6. 7. 오후 2:25, 멋쟁이 프로도 : 이모티콘 안녕하세요! 잘부탁드리니다!!
2022. 6. 7. 오후 2:30: 고규식님이 들어왔습니다.
2022. 6. 7. 오후 2:30, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오후 2:31, 유용태 (teo.yu) : 안녕하세요 고규식님~~ 어서소세요 :)
2022. 6. 7. 오후 2:31, 유용태 (teo.yu) : 오세요 :)
2022. 6. 7. 오후 2:32, 고규식 : 안녕하세요! 😉
벨로그에있는 글 너무 잘보고있습니다!
2022. 6. 7. 오후 2:33, Herb : 코린이입니다. 사용한 용어가 잘못되었다면 알려주시면 수정하겠습니다.

0-0. Github 등의 사이트를 이용해서 소스 코드 자체를 읽기 쉽게 보여주시면 읽어보기가 더욱 쉬울 것 같습니다.

0-1. 새로운 코드 읽을 때 관련된 부분을 디버거로 한스텝 한스텝 진행해보는 게 도움이 되었습니다.
디버거가 키보드 이벤트에 멈추도록 브레이크포인트를 걸어놓고 step forward 하였습니다. (저는 파이어폭스 브라우저를 사용하였으나, vscode든 크롬이든 사용하시는 개발환경에서 지원해주는 디버깅 환경을 사용하시면 될 것 같습니다.)

1. 직접 해보시면 방향키를 이동하는 함수를 만나게 되고, step forward하면 플레이어의 위치를 바꾸는 코드가 실행이 되지 않는 것을 관찰할 수 있습니다. 해당 코드가 `for (var i in p.bubbles)` (Line 332) 내에 들어 있어서 `p.bubbles`가 빈 리스트인 경우 실행되지 않기 때문으로 생각됩니다.

좋은 하루 되세요!
2022. 6. 7. 오후 2:34, 유용태 (teo.yu) : 감사합니다~~~~ 여기서 궁금한것 들 많이 물어보시고 함께 이야기를 나누길 바래요. ㅎ
2022. 6. 7. 오후 2:37, Herb : 혹시 잘못 읽은 거면 얘기해주세용!!
2022. 6. 7. 오후 3:31: 떨고있는 어피치님이 들어왔습니다.
2022. 6. 7. 오후 3:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오후 3:59, 철진 : 혹시, 함수형 프로그래밍으로 설계된 리액트 프로젝트를 참고할만한 소스가 있을까요???? 
2022. 6. 7. 오후 4:22, 프론트신입생존기 : 그린랩스?
2022. 6. 7. 오후 4:22, 유용태 (teo.yu) : 떨고있는 어피치님 반갑습니다 :)
2022. 6. 7. 오후 4:22, 프론트신입생존기 : 거기는 애초에 리스크립트라고 들었어요. 함수형의 극치라던데
2022. 6. 7. 오후 4:22, 썰cho : 그린랩스가 함수형 프로그래밍에
2022. 6. 7. 오후 4:22, 썰cho : 진심이라고
2022. 6. 7. 오후 4:23, 썰cho : 저도 들었었어요
2022. 6. 7. 오후 4:25, 개린이 : Uncaught TypeError: Cannot assign to read only property 'InGameInformations' of object '#<Object>'


 const listIdx = list?.Members.findIndex((item) => item.UserId === selectedEdit?.UserId);
      let originList = list;
      if (originList) {
        originList.Members[listIdx]['InGameInformations'] = { …values }
        setList(originList)
      }

      // TODO:: seleted list sync
      let originSeleted = selected;
      if (originSeleted && seletedRole) {
        const selectedIdx = selected?.[seletedRole].findIndex((item) => item.UserId === selectedEdit?.UserId);
        originSeleted[seletedRole][selectedIdx]['InGameInformations'] = { …originSeleted[seletedRole][selectedIdx]['InGameInformations'], …values }
        console.log(originSeleted[seletedRole][selectedIdx]['InGameInformations'], '아아아으우우')
        setSelected(originSeleted)
      }

useState에 저장되어있는 state를 변수에 할당 후 객체를 수정하려고 하면 위의 에러가 뜹니다.

2개의 state를 수정했는데 위에꺼는 되고 아래꺼는 에러메세지가 뜨는데.. 어떤 문제가 있는걸까여? ㅠ
2022. 6. 7. 오후 4:27, 떨고있는 어피치 : teo님 안녕하세요^__^ velog 방문했다 좋은 오픈채팅방이 있는 것을 알게되어 가입하게되었습니다!
모두 반갑습니다~!!
2022. 6. 7. 오후 4:27, 유용태 (teo.yu) : 감사합니다. 환영합니다. +_+ 잘 부탁드려요 ㅎ
2022. 6. 7. 오후 4:35, 진현 : 이모티콘 피그마 접속이 안되네요..
2022. 6. 7. 오후 4:35, 썰cho : 저희도 안된다고
2022. 6. 7. 오후 4:35, 썰cho : 디자이너가 탭 끄지말라고
2022. 6. 7. 오후 4:35, 썰cho : 경고했어요
2022. 6. 7. 오후 4:35, 썰cho : ㅋㅋㅋㅋ
2022. 6. 7. 오후 4:35, 유용태 (teo.yu) : ㅠㅠ
2022. 6. 7. 오후 4:40, 고규식 : 피그마 504에러 뜨는데 서버개발자분들 열일하고있겠네여….
2022. 6. 7. 오후 4:41, 철진 : 사진
2022. 6. 7. 오후 4:41, 철진 : 에러 화면도… 귀엽네요
2022. 6. 7. 오후 4:51, 부탁하는 무지 : 이모티콘 피그마… 일해야 하는데 
2022. 6. 7. 오후 4:55, 애교뿜뿜 어피치 : 복구된것같습니다
2022. 6. 7. 오후 5:11, 으쓱으쓱 어피치 : 혹시 '60fps' 어떻게 읽나요? 그냥 60프레임 인가요..?
2022. 6. 7. 오후 5:11, 비디오가미래다 : 프레임레이트
2022. 6. 7. 오후 5:11, 비디오가미래다 : 에프피에스?
2022. 6. 7. 오후 5:11, 뮤츠 : 프레임퍼세컨트
2022. 6. 7. 오후 5:11, 뮤츠 : 입니다
2022. 6. 7. 오후 5:12, 뮤츠 : 아니세컨드요ㅋㅋㅋ
2022. 6. 7. 오후 5:12, 델 : 60에프피에스
60프레임

전 이런식으로 읽어요
2022. 6. 7. 오후 5:12, 초롱초롱 네오 : 그냥 초당 60프레임 이라고 풀어서 말하는 사람들도 있어요
2022. 6. 7. 오후 5:12, 으쓱으쓱 어피치 : 조금씩 다르군요 감사합니다!!!! 😃👍🏻
2022. 6. 7. 오후 5:25: 봄동님이 들어왔습니다.
2022. 6. 7. 오후 5:25, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 7. 오후 5:25, 유용태 (teo.yu) : 안녕하세요 봄동이님~~ 반갑습니다 :)
2022. 6. 7. 오후 5:27, 봄동 : 안녕하세요~ 반갑습니다!! 🥳
2022. 6. 7. 오후 5:28, 유용태 (teo.yu) : 어서오세요~ 여기는 프론트엔드를 하다가 개발을 하다가 궁금한것들이 생겼을때 물어보고 또 대답하면서 함께 성장하고자 하는 공간입니다. ㅎ 언제든 궁금한게 생겼을 때 편하게 글 남겨주세요~~
2022. 6. 7. 오후 5:46, 마이크를 든 라이언 : 안녕하세요!! 퍼블리셔나 fe분들 중, 타임리프환경에서 html css 작업했던 적있으신 분 있나요??
2022. 6. 7. 오후 6:55, 썰cho : 프론트가 타임리프환경에서 작업할일은 거의 없을거같고..
2022. 6. 7. 오후 6:55, 썰cho : 퍼블리셔 분들은 있을거같네요
2022. 6. 7. 오후 7:25, 유용태 (teo.yu) : 스벨트 샘플 프로젝트 사이트 모음입니다
https://bestofsvelte.com/
2022. 6. 7. 오후 7:27, 아이뽀송 : 저 딱 한번 해보긴 했습니다.
2022. 6. 7. 오후 8:37, 마이크를 든 라이언 : 오!! 혼자서 구글링하면서 해보신건가요??
2022. 6. 7. 오후 8:40, 설아아빠 : 그냥 html 로 만들어서 넘겨주면 백엔드가 알아서 쓰지 않나요..?
2022. 6. 7. 오후 9:11, 마이크를 든 라이언 : html 은 만들더라도 컨트롤러에서 링크 연결해줘야하고 :th 라던지 :layout ? 같은 것 들이 있어서 어떻게 하셨는지 궁금했어요ㅎㅎ!
2022. 6. 7. 오후 11:33, 애교뿜뿜 무지 : 안녕하세요! 혹시 next.js에서 reduce 함수를 썼을 때 자꾸 리턴 값이 이상하게 뒤에 000이 더 붙어서 나오는데 왜 이러는지 아시는 분 계실까요? acc에서는 정상적으로 나오는데 리턴값만 이럽니다..
2022. 6. 7. 오후 11:34, 빠밤 : 삭제된 메시지입니다. 
2022. 6. 7. 오후 11:40, 박용준 : 코드도 같이 올려주실수 있나요?
2022. 6. 7. 오후 11:50, 애교뿜뿜 무지 : 아앗… 제가 초를 밀리세컨으로 바꾼걸 깜빡 했네용…. 감사합니다 헤헤;;

2022년 6월 8일 수요일
2022. 6. 8. 오전 12:41, 애교뿜뿜 어피치 : Next.js 에서 _middleware를 자주 사용하고 계신가요? 
2022. 6. 8. 오전 12:51, 부끄러워하는 라이언 : Redirect 쓸때 사용하고 있습니다..
2022. 6. 8. 오전 12:52, 애교뿜뿜 어피치 : 그러시군요, 배포는 vercel로 하시나요? 배포 플랫폼에 따라 미들웨어가 작동을 하지 않는 경우도 있을까 하는 생각에 ㅎㅎ 
2022. 6. 8. 오전 2:14: 무선충전님이 들어왔습니다.
2022. 6. 8. 오전 2:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 8. 오전 6:18, Herb : 혹시 회사에서는 보통 어떤 OS를 사용하시나요? 맥북을 많이 쓰시면 요즈음은 M1 Mac을 사용하시나요? 중고 맥이라도 하나 구입해서 MacOS에 익숙해져야 하나 고민입니다!
2022. 6. 8. 오전 6:52, 햄햄 : 저희는 윈도우, 맥 중에 선택할 수 있는데 아무래도 맥북이 편해서 대부분 맥북을 씁니다..
2022. 6. 8. 오전 7:09, 퇴근하는 프로도 : 프론트는 맥 추천합니다. 회사에서도 프론트는 전원 맥 사용 중입니다. 정보 찾기도 더 수월합니다
2022. 6. 8. 오전 7:37, 아이뽀송 : 이왕 사신다면 이번에 나온다는 m2도 구경해보셔용
2022. 6. 8. 오전 7:38, 아이뽀송 : 개발 엄청 많이 하신 분중에도 윈도우 쓰시는 분이 가끔 있긴 합니다
2022. 6. 8. 오전 7:41, 브레드 : 맥 추천이여!! 이왕이면 프로나 새로나온 m2가 좋겠지만 ㅎㅎ 혹시 부담이라면 m1에어도 괜찮은것같습니다!! 가격대비라는 표현이 맞나 싶지만 중고사시는거 생각하시는거 같아서 추천드립니다!! ㅎㅎ
2022. 6. 8. 오전 7:42, 아이뽀송 : 모니터랑 키보드 마우스 다 있고 노트북이 이미 있으시면 m1 맥미니도 가성비 좋게 선택하실 수 있어요
2022. 6. 8. 오전 7:43, Herb : 와 좋은 정보들 감사드립니다!!
2022. 6. 8. 오전 7:47, 아이뽀송 : 글구 macos 적응 안될까 걱정은 안하셔도 돼요..! 키보드 배치 말고는 웬만하면 하루안에 적응하실 수 있어요
2022. 6. 8. 오전 7:49, 브레드 : 오 맞아요! 적응 금방가능합니다 ㅎㅎ 
2022. 6. 8. 오전 7:50, 브레드 : https://ndc.nexon.com/session/sessionDay1
2022. 6. 8. 오전 7:50, 브레드 : 오늘부터 넥슨개발자컨퍼런스 하네용.. 이번주엔가? 토스도 있었던거 같은데.. 어제 애플도하고 ㅎㅎ 볼게 너무 많네요 
2022. 6. 8. 오전 8:38, 마이크를 든 라이언 : 안녕하세요! 
리스트버튼 / 취소 버튼 / 등록 버튼이 3개가 나란히 있어야 할때  uiux관점에서 저 순서가 맞나여??
2022. 6. 8. 오전 8:40, 비디오가미래다 : 리스트 버튼은 다른 곳에 두고 등록 -> 취소 순으로 두는게 좋을 거 같은데요?
2022. 6. 8. 오전 8:41, 마이크를 든 라이언 : 음 그러면 list버튼은 왼쪽에 두고 오른쪽에 취소/등록 순으로 해야겠습니다!! 
2022. 6. 8. 오전 8:42, 마이크를 든 라이언 : 브런치에서 보니깐 긍정 action은 오른쪽에 놓아야한다고 하더라구요!
2022. 6. 8. 오전 8:44, 아이뽀송 : https://brunch.co.kr/@chulhochoiucj0/8
이 시리즈가 진짜 야무져요
2022. 6. 8. 오전 8:46, 마이크를 든 라이언 : 저도 이거 봤어요!!! 너무 좋은 내용이에요
2022. 6. 8. 오전 8:48, 유용태 (teo.yu) : 무선충전님~ 반갑습니다 어서오세요 ㅎㅎ
2022. 6. 8. 오전 9:15, 프린이 : 혹시 맥에서 장점이 어떤건지 설명해주실수있나요?? 이번에 맥북받아서 쓰는데 활용을 못하고 있습니다 ㅠ
2022. 6. 8. 오전 9:15, 썰cho : 맥북은 저도 추천하는데
2022. 6. 8. 오전 9:15, 썰cho : 추천하는 이유가
2022. 6. 8. 오전 9:15, 썰cho : 초보들이 개발 들어가기 좋습니다 
환경설정하기가 윈도우보다 맥이 훨씬 좋다고 생각해서에요
2022. 6. 8. 오전 9:16, 썰cho : 잘하는 사람들은 윈도우든 맥이든 환경설정을 마음대로 할수있는데 개발 하다보면 맥에서는 되는데 윈도우에서 안되는게 많아서 많이 힘듭니다.. 
키보드 배열이나 간단한 맥 조작만 익숙해지면 더 편해질거에요
2022. 6. 8. 오전 9:28, 얌얌냥이 : 저는 개발환경설정하는게 맥이 훨씬 수월하더라고요 ㅎㅎ
2022. 6. 8. 오전 9:36, 그레이 : 유닉스 계열 os라는게 장점이 될 수 있을 듯 하네요
2022. 6. 8. 오전 9:39, 유용태 (teo.yu) : 🚀스프린트 9기를 시작해볼까 합니다. 날짜는 6/15(수) ~ 6/20(월) 입니다. 디자이너분들이나 백엔드 개발자분들은 언제나 우대입니다. 가볍게 사이드 프로젝트를 해보고 싶은 현업 개발자분들도 환영합니다. 밤 11시에 모여서 죄송하지만 부담없이 5일간 함께 협업을 경험하실 분들을 모아봅니다.

https://docs.google.com/spreadsheets/d/1mM1oxSCQA-Rptwfpqa815eul9h2yhvdOy9sZ8CDvOIc/edit#gid=0
2022. 6. 8. 오전 9:39, 유용태 (teo.yu) : 톡게시판 '공지': 🚀스프린트 9기를 시작해볼까 합니다. 날짜는 6/15(수) ~ 6/20(월) 입니다. 디자이너분들이나 백엔드 개발자분들은 언제나 우대입니다. 가볍게 사이드 프로젝트를 해보고 싶은 현업 개발자분들도 환영합니다. 밤 11시에 모여서 죄송하지만 부담없이 5일간 함께 협업을 경험하실 분들을 모아봅니다.

https://docs.google.com/spreadsheets/d/1mM1oxSCQA-Rptwfpqa815eul9h2yhvdOy9sZ8CDvOIc/edit#gid=0
2022. 6. 8. 오전 9:39, 철진 : 초보자의 경우에는 맥이 훨씬 편한 것 같습니다. 기본 인터넷에 나와있는 homebrew 설치하고 npm 등만 이용해도 쉽게 환경 설정하고 개발을 진행할 수 있습니다. 하지만 윈도우의 경우에는 리눅스나 터미널 관련해서도 신경써야하는 경우가 많고 특히 노트북으로 접근하면 주로 LG 그램을 쓰는 경우가 많은데 느려요! 정말… 
2022. 6. 8. 오전 9:40, 유용태 (teo.yu) : 맥 추천합니다. ㅋ 개발자라면 언젠가는 쓰게 되어 있는데
2022. 6. 8. 오전 9:40, 유용태 (teo.yu) : 빨리 쓰는 것을 추천드려요
2022. 6. 8. 오전 9:41, 유용태 (teo.yu) : 일단 프론트엔드라면 브라우저 결과물이 이뻐요 ㅎ
2022. 6. 8. 오전 9:41: 레몬님이 들어왔습니다.
2022. 6. 8. 오전 9:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 8. 오전 9:41, 유용태 (teo.yu) : 안녕하세요 신난 어피치님 반갑습니다 :)
2022. 6. 8. 오전 9:41, 레몬 : 안녕하세요!! 반갑습니다
2022. 6. 8. 오전 9:41, 허브의 개발 일지 : 그리고 일단 팀 내 네이티브 환경설정 맞출려면 윈도우.. ㅜ 같이 하면 눈물나와용
2022. 6. 8. 오전 9:42, 유용태 (teo.yu) : ㅋㅋㅋㅋ 요새 윈도우는 좋다고 하는데 저는 옛날시절 윈도우가 마지막이라서 요새 윈도우 궁금하긴 하네요 ㅎ
2022. 6. 8. 오전 9:45, 멀기트 : 질문 있습니다~ 
react-native-web도 많이들 써보셨나요..?
RN 에서 사용할 컴포넌트를 react-native-web 라이브러리를 통해 스토리북 웹 환경에서 보려하고 있습니다.  이 때 이 컴포넌트들은 styled-component를 통해 작성했고 darkmode를 지원하려 합니다.

그런데 앱에서는 theme이 잘 적용되는데...  storybook에서는 먹지를 않더군요 ㅠ   

react-native-web을 사용해서 자료가 많이 없어힘드네요 ㅠ  관련 사례나 유추되는 부분이 생각나시면 말씀 듣고자 합니다.
2022. 6. 8. 오전 9:47, hooon : 스프린트 질문 있습니다~
1. 참가자 실력 기준이 있을까요?
2. 미팅할때 캠이 필요한가요??
2022. 6. 8. 오전 9:48, 유용태 (teo.yu) : 1. 아니오
2. 아니오
2022. 6. 8. 오전 9:48, hooon : 감사합니다~
2022. 6. 8. 오전 9:49, 썰cho : 혹시 이번엔 진짜 백앤드로 현업을 해본적없지만
2022. 6. 8. 오전 9:49, 썰cho : 백앤드로 참여해봐도 될까요
2022. 6. 8. 오전 9:50, 철진 : 혹시 storybook 설정은 제대로 되셨을까요?? 스토리북 preview 설정이 잘 되어있어야 테마 적용이 될 것 같아요!
2022. 6. 8. 오전 9:52, 모승 : 저도 컴퓨터가 윈도우라서 컴퓨터로도 코딩해보고 맥북으로도 코딩해봤는데 맥북이 더 편해서 컴퓨터로는 코딩을 안하게 되는것 같아여
2022. 6. 8. 오전 9:53, 유용태 (teo.yu) : 너무 좋아요!! ㅎ
2022. 6. 8. 오전 9:53, Kani : 저도 백엔드 참여해보고 싶네요 ㅎㅎ
2022. 6. 8. 오전 9:54, 썰cho : 넵 그럼 백앤드로남기겠습니다!
2022. 6. 8. 오전 9:54, 백엔드! : 저요요
2022. 6. 8. 오전 9:54, 파이팅 : 우와 스프린트 모집 떴네요!!
저는 다음달을 노려보겠습니다!!👍
2022. 6. 8. 오전 9:55, 멀기트 : 
const getthemes = () => {
  return [light, dark];
};

addDecorator(withThemesProvider(getthemes(), ThemeProvider));
2022. 6. 8. 오전 9:55, 백엔드! : @유용태 (teo.yu)  용태님 5일간 아주 빠르게 작업하는건가요 ?
2022. 6. 8. 오전 9:55, 멀기트 : 혹시 preview에서 decorator 추가해주는 것 말고 더 할 일이 있을까요?  그정도만 되어있습니다
2022. 6. 8. 오전 9:56, 멀기트 : 사진
2022. 6. 8. 오전 9:57, 멀기트 : 또한 addon에서 제가 설정한 테마의 name은 출력되고 있네요..  이건 동작하고 크게 상관은 없겠지만 그렇습니당
2022. 6. 8. 오전 9:57, 유용태 (teo.yu) : 아니오~ 개발은 주말 2일만 하고 아이디어 기획 서ㄹ계 를 하고 개발 테스트 순으로 진행합니다
2022. 6. 8. 오전 9:58, 백엔드! : 아하 용태님이 봐주시는건가요 ?
2022. 6. 8. 오전 9:58, 유용태 (teo.yu) : 함께하지만 개발은 관여하지 않습니다 ㅎ
2022. 6. 8. 오전 9:58, 백엔드! : 넵! 감사합니다
2022. 6. 8. 오전 10:12, 프린이 : 그건 느꼈습니다 ㅎㅎㅎ
2022. 6. 8. 오전 10:12, 프린이 : 매직패드? 잘쓰시는분들 보면 모니터가 없어도 되드라구요 적응해보겠습니다!
2022. 6. 8. 오전 10:12, 프린이 : 아하 그러고보니 환경변수 이런세팅을 안했던것도 같네요 ㅎㅎ
2022. 6. 8. 오전 10:20, 철진 : 제가 말한 게 decorator가 맞긴한데… 혹시 css 는 뭐사용하시나요? 
2022. 6. 8. 오전 10:24, Kani : 스프린트 등록 완료했네요 두근거립니다 ㅋㅋ
2022. 6. 8. 오전 10:25, 멀기트 : RN 컴포넌트라 css 사용을 못해요 ㅠ styled-component 사용합니다
2022. 6. 8. 오전 10:26, 허브의 개발 일지 : 오잉? styleSheet 사용하면 되지 않나요?
2022. 6. 8. 오전 10:26, 멀기트 : ThemeProvider도 styled-component에서 지원해주는거 사용하구.. addon도 그렇게 했습니다.  

의심되는 부분은 styled-component/native 로 만든 컴포넌트들이라 웹에서 적용이 안되나 싶습니다
2022. 6. 8. 오전 10:26: 선풍기 바람 쐬는 어피치님이 들어왔습니다.
2022. 6. 8. 오전 10:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 8. 오전 10:27, 철진 : Styled-component면 decorator 설정하면 특별히 이슈가 없을텐데… 흠 문제 원인이 쉽게 떠오르진 않네요 ㅠㅠㅠ 
2022. 6. 8. 오전 10:27: sammy님이 들어왔습니다.
2022. 6. 8. 오전 10:39, 멀기트 : 그러게요... 단순하게 props 만들어서 주면 먹는데...

저는 제공해주는 defaultTheme 타입을 쓰고싶은거라 ㅠㅠ   혹시 해결되면 공유하겠습니당 답변해주셔서 감사합니다!
2022. 6. 8. 오전 10:59, 자란다 Recruiter : 이모티콘 출근 잘하셨길 바라고!! 오늘도 적게 일하고 큰 성과 나오는 하루 되셔요!!! 
2022. 6. 8. 오전 11:57, O_O : 선배님들 웹에서 푸쉬 알람 받을 때 어떤 기술로 구현하시나요...?  (웹소켓 제외하구요..!)
2022. 6. 8. 오전 11:57, 프로로 : Styled conponent쓰실때 component안에서 다 styled. 으로 const 만들어서 사용하시나요? 아님 자잘한 부분들은 className으로 처리하시나요?
2022. 6. 8. 오전 11:59, 프론트 : firebase 한번 확인해보세용!
https://firebase.google.com/?hl=ko&gclid=CjwKCAjw7vuUBhBUEiwAEdu2pOz8PmBFmmY1HFjHGagkZnzkdm5Sfu0gAwKJzuVYb4fKdTy2o1ZWKRoCJ3oQAvD_BwE&gclsrc=aw.ds
2022. 6. 8. 오전 11:59, O_O : 감사합니당
2022. 6. 8. 오후 12:00, 얌얌냥이 : 저는 섞어 쓰는 거 같아요!
2022. 6. 8. 오후 12:01, 프로로 : 저도 섞어쓰긴하는데 이쁘게 쓰고있는건지 모르겠어서 ㅋㅋㅋ 감사합니다
2022. 6. 8. 오후 12:05, 머리 빗는 네오 : 사진
2022. 6. 8. 오후 12:05, 머리 빗는 네오 : 혹시 프린트 작업할때 테이블이 이렇게 씹히는 문제 해결해보신분 있으신지요 ㅠ
2022. 6. 8. 오후 12:12, O_O : @media print 에서  margin 조절해서 footer 없앴던 것 같은데... 정확한 방법인진 모르겠네요 ㅠ
2022. 6. 8. 오후 12:32, 아이스크림 : 사진
2022. 6. 8. 오후 12:32, 아이스크림 : init 전에 state는 빈 객체가 출력되어야하는데 왜 init 후랑 같을까요?ㅠㅠ
2022. 6. 8. 오후 12:33, 썰cho : 레퍼런스값이 같아서요
2022. 6. 8. 오후 12:33, 아이스크림 : 사진
2022. 6. 8. 오후 12:34, 아이스크림 : 아!! 그래서 이렇게 하면 되는구나,,
2022. 6. 8. 오후 12:34, 썰cho : 이니셜스테이트를 제이슨으로 바꿔서 콘솔찍어보세요
2022. 6. 8. 오후 12:34, 아이스크림 : 근데 실행 전인데도
2022. 6. 8. 오후 12:34, 썰cho : 그럼 다르게 나와요
2022. 6. 8. 오후 12:35, 아이스크림 : 죄송하지만 이게 어떤걸 말씀하시는걸까요??
2022. 6. 8. 오후 12:35, 썰cho : json 
2022. 6. 8. 오후 12:35, 썰cho : 콘솔 찍을때
2022. 6. 8. 오후 12:35, 썰cho : json으로 찍어보세요
2022. 6. 8. 오후 12:37, 아이스크림 : 헐,,
2022. 6. 8. 오후 12:37, 썰cho : 그럼 바뀌죠
2022. 6. 8. 오후 12:37, 아이스크림 : 네!!!
2022. 6. 8. 오후 12:37, 아이스크림 : 감사합니다.!
2022. 6. 8. 오후 12:38, 썰cho : 근데 그냥 콘솔찍으면
2022. 6. 8. 오후 12:38, 아이스크림 : 혹시 왜그런지 알려면 어떤식으로 검색해야하나요?
2022. 6. 8. 오후 12:38, 썰cho : 왜 안되는지는
2022. 6. 8. 오후 12:38, 썰cho : 레퍼런스 값이 같아서 입니다 ㅋㅋㅋ
2022. 6. 8. 오후 12:38, 아이스크림 : 근데,,, 실행 전인데도 어떻게 같게 뜨죠??
2022. 6. 8. 오후 12:38, 썰cho : 이렇게..?
2022. 6. 8. 오후 12:39, 아이스크림 : 아뇨 요기서 init이 실행되기 전인데 
2022. 6. 8. 오후 12:39, 아이스크림 : 레퍼런스가 같다고 출력되는게 이해가 안가서요ㅠㅠ
2022. 6. 8. 오후 12:39, 썰cho : 레퍼런스가 뭔지는 아시나요??
2022. 6. 8. 오후 12:39, 썰cho : 레퍼런스값
2022. 6. 8. 오후 12:39, 아이스크림 : 참조값아닌가요~?
2022. 6. 8. 오후 12:39, 썰cho : 그건 한국말 번역이잖아요
2022. 6. 8. 오후 12:39, 아이스크림 : 주소
2022. 6. 8. 오후 12:40, 썰cho : 주소에 들어가는 시점이 같아서 그래요
2022. 6. 8. 오후 12:41, 썰cho : 콘솔에는 레퍼런스 값만 넣어놓고
2022. 6. 8. 오후 12:41, 썰cho : 확인할때는 실행 후에 확인하잖아요
2022. 6. 8. 오후 12:41, 썰cho : 그럼 그 주소에는 이미 값이 다 들어있는상태라서 그래요
2022. 6. 8. 오후 12:42, 아이스크림 : 아…………
2022. 6. 8. 오후 12:42, 아이스크림 : 감사합니다!!!
2022. 6. 8. 오후 12:42, 썰cho : 넵넵 ㅎㅎ 화이팅입니다 ㅋㅋ
2022. 6. 8. 오후 12:42, 아이스크림 : 넹 ㅎㅎ 정말 감사해요! 속시원하네요...ㅎㅎ
2022. 6. 8. 오후 12:49, 튭 : 삭제된 메시지입니다. 
2022. 6. 8. 오후 12:54, 자란다 Recruiter : 이모티콘 맛점 하세요!!
2022. 6. 8. 오후 1:18, 살려줘 네오 : 나
2022. 6. 8. 오후 1:18, 초보개발자 : 전에 React 18에서 Strict Mode를 키게 되면 useEffect가 2번 호출된다는 얘기가 나온 적이 있어서 공유해봅니다

https://javascript.plainenglish.io/react-18-useeffect-double-call-for-apis-emergency-fix-724b7ee6a646
2022. 6. 8. 오후 1:44, 허브의 개발 일지 : https://toss.im/slash-22
2022. 6. 8. 오후 1:44, 허브의 개발 일지 : 2시부터 시작된다고 합니다!
2022. 6. 8. 오후 1:49, 비디오가미래다 : 감사해요!!
2022. 6. 8. 오후 1:52, 부끄러운 어피치 : 다시보기 있을까요 ?
2022. 6. 8. 오후 1:54, O_O : 작년 기준으론 다시보기 올라왔던걸로 기억해요! 저걸로 사내 스터디 했었어요
2022. 6. 8. 오후 1:55, 부끄러운 어피치 : 감사합니다!
2022. 6. 8. 오후 1:57, O_O : https://toss.im/slash-21#sessions
작년엔 이렇게 다시보기 + 발표자로까지 올려줬어요!
2022. 6. 8. 오후 1:58, 살려줘 네오 : 아쉬운 점이 선두하고 앞서나가는 토스가 결국 요런 이슈로 좀 그렇네요 ㅜㅜ
https://www.hankyung.com/economy/article/2022060762846
2022. 6. 8. 오후 1:59, 애교뿜뿜 어피치 : react-daum-postcode 라는 라이브러리를 사용하고 있습니다. 다만 해당 라이브러리에서 제거 하고싶은 css 요소가 있는데, 라이브러리 자체에서 css 커스텀을 지원하진 않습니다. 이경우 어떻게 요걸 제거하면 될지요..
2022. 6. 8. 오후 2:01, 애교뿜뿜 어피치 : 아니면, 사실 그 제거 하고싶은 요소가 hover인데요. 모바일 웹에서는 hover가 장애요소가 되어 이걸 제거하고픈데 다른 방법이 있을까요.?
2022. 6. 8. 오후 2:02, 으쓱으쓱 어피치 : 저번에 일했던 곳에서는 신한카드에서 고객 전화번호를 사온다하던데... 그게 합법적인 절차는 아닌가보네요
2022. 6. 8. 오후 2:05, j : 회원가입시
2022. 6. 8. 오후 2:05, 부탁하는 네오 : 감사합니다!! Effective Component 지속 가능한 성장과 컴포넌트라는 주제가 기대되네요!
2022. 6. 8. 오후 2:05, j : 개인정보 제공 동의 항목에 포함되어있을거에요
2022. 6. 8. 오후 2:05, j : 마케팅 및 제3자 제공 동의
2022. 6. 8. 오후 2:05, j : 그래서 현행법상 위법은 아닌데
2022. 6. 8. 오후 2:13, 상고펭 : 헉..
2022. 6. 8. 오후 2:13, 살려줘 네오 : 그렇지만 가입자가 제3자 정보 제공 동의를 했더라도 동의서 내 기재된 제공 목적 등 항목에 구체성이 떨어진다면 불법으로 판단될 수 있다. 제공 목적이 실제 정보 판매 및 이용 목적과 다르거나, 동의 절차에서 고객이 자신의 정보가 어떠한 이유로 판매 또는 제공되는 것인지 인지하기 어려운 경우 위법 행위로 간주될 수 있다고 합니다.  보이지 않게 아주 작게 끼어넣기 판매라고 밖에 안보여서 유저들도 느끼는 것도
2022. 6. 8. 오후 2:16, 호잇 : 이미 무죄로 판결난 판례 몇 있는 걸로 알고 있어요. 다만 개인정보가 판매될 수 있다는 문구가 빠져있는 경우엔 부당이반환청구소송는 가능하지만 6만9천원인지라..
2022. 6. 8. 오후 2:17, j : 토스가 보험 설계 관련 서비스를 제공하고 있기 떄문에 그 쪽으로 관련해서 제공된 정보를 뭐 어떻게 했는가는 토스와 제공받은 설계사들만 알겠죠
2022. 6. 8. 오후 2:17, j : 결과 나와봐야 알듯하네요
2022. 6. 8. 오후 2:20, 살려줘 네오 : 아직 금감원에서 검토중이라고 하네요.  결과가 나와봐야 되지만, 핀테크의 선두를 이끈 토스가 개인정보로 이런 이슈가 제기되는 점이 아쉽더라구요 ㅠㅠ
2022. 6. 8. 오후 2:21, 엄지척 튜브 : 리코일 사용할때 useRecoilvalue로 구독만해도 (값이 안바껴도)리렌더링이 발생하는데 그래서 리액트 memo로 리렌더링을 방지하고있는데 리코일자체적으로 해결할수있는 방법이 있을까요?
2022. 6. 8. 오후 2:23, 허브의 개발 일지 : 혹시 궁금한게 지금 토스에서 Native 프로젝트에 RN 프로젝트를 부분 적용했다고 하는데
2022. 6. 8. 오후 2:24, 허브의 개발 일지 : 이럴땐 웹뷰로 한건가요?
2022. 6. 8. 오후 2:25, 부탁하는 네오 : 그냥 rn을 부분 적용 가능한걸로 알고 있습니다
2022. 6. 8. 오후 2:26, 허브의 개발 일지 : 호옹
2022. 6. 8. 오후 2:26, 허브의 개발 일지 : 신기하네요
2022. 6. 8. 오후 2:26, 부탁하는 네오 : rn으로 만든 프로젝트에 네이티브, 네이티브로 만든 프로젝트에 rn 올리는게 다 가능한거 같아요… 리디인가 하이퍼커넥트 기술 블로그에서 봤던거 같아요
2022. 6. 8. 오후 2:26, 허브의 개발 일지 : 아
2022. 6. 8. 오후 2:26, 허브의 개발 일지 : 뭔지 알았습니다
2022. 6. 8. 오후 2:31, 부탁하는 네오 : https://reactnative.dev/docs/next/integration-with-existing-apps
2022. 6. 8. 오후 2:34, 신나는 프로도 : 혹시 복잡한 컴포넌트로 이루어진 협업 프로젝트 진행할때 그림으로 도식화? 하는 작업을 하시나요? 하신다면 참고할만한 자료 있을까요?
2022. 6. 8. 오후 2:35, 주니어개발자 : 안녕하세요 조언 얻고싶어 질문드립니다!
회사에서 리액트로만 구현을 하고있는데 별도로 리액트 네이티브나 플러터를 사용하지않고 모바일도 고려하여 작업을 하고있습니다.

그런데 혹시 웹환경?에서 크롬 개발자 모드로 말고 모바일환경으로 디자인이나 기능작동을 확인하기 좋은 툴이 있을까요?
2022. 6. 8. 오후 2:37, 썰cho : 모바일에서 로컬 ip로 개발서버 들어가시면..
2022. 6. 8. 오후 2:37, 썰cho : 되지 않을까요
2022. 6. 8. 오후 2:38, 주니어개발자 : 아 네! 그방법도 찾아봤는데 기기가 갤럭시 한대라 다른 환경도 확인해보고싶었습니다
2022. 6. 8. 오후 2:38, 주니어개발자 : 감사합니다!!
2022. 6. 8. 오후 2:38, 썰cho : 시뮬레이터로도 가능하다고 들었는데
2022. 6. 8. 오후 2:38, 주니어개발자 : 한번 더열심히 구글링해보겠습니다 ㅎㅎ
2022. 6. 8. 오후 2:38, 썰cho : 해본적은 없어서 잘모르겠습니다
2022. 6. 8. 오후 2:38, 주니어개발자 : 답변 감사합니다 ㅎㅎ
2022. 6. 8. 오후 2:50, 허브의 개발 일지 : 토스가 디자인 시스템에 진심인게 이번 컨퍼런스에서
2022. 6. 8. 오후 2:50, 허브의 개발 일지 : 여실히 느껴지네요
2022. 6. 8. 오후 2:51, 긱긱 : 그러게요 좀 많이 멋있네요… 나중에 클립으로 나오면 다시 봐야겠어요 
2022. 6. 8. 오후 2:52, 허브의 개발 일지 : 그러니깐요 저도 이번 프로젝트에서 디자인 시스템 기반 npm 모듈로 컴포넌트 관리하는 방법을 좀 알아봐야겠네요
2022. 6. 8. 오후 2:52, 허브의 개발 일지 : 진짜 저렇게 코드 짜면 처음에 시스템 이해가 어렵지 익숙해지기만 하면 유지보수하기 편할 것 같네요
2022. 6. 8. 오후 2:53, j : 오..멋져요..
2022. 6. 8. 오후 2:54, 허브의 개발 일지 : 할 줄 몰라서 알아보는겁니다ㅜ
2022. 6. 8. 오후 2:54, 허브의 개발 일지 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 8. 오후 2:56, O_O : 삭제된 메시지입니다. 
2022. 6. 8. 오후 2:56, O_O : 삭제된 메시지입니다. 
2022. 6. 8. 오후 2:57, j : monorepo로 관리하고있지만..관리가 안되는 현실..ㅠㅠ
2022. 6. 8. 오후 2:57, O_O : 아 아닌거 같군요 ㅠㅠㅠ
2022. 6. 8. 오후 3:00, 핸디(강경석) : 저는 실기기 테스트할때 ngrok로 local 환경 띄우고 실기기에서 해당 url로 직접 접근해서 해봤습니다.
다만 이것도 실제 기기가 필요해서 완벽한 답은 아닌듯 합니다
2022. 6. 8. 오후 3:01, 썰cho : 그래서 저는 해보지 않았지만 들어본
2022. 6. 8. 오후 3:01, 썰cho : simulator로 할수 있다고 알려드리긴 했습니다
2022. 6. 8. 오후 3:01, 썰cho : 저도 들어본거라 확실하지 않아서 알려드리긴 조심하지만..
2022. 6. 8. 오후 3:07, 엄지척 튜브 : 혹시 
<컨테이너>
 <div fixed>
 <div>
<컨테이너>
여기서 두번째 div를 마진을 안쓰고 형제처럼 바로 옆에둘수있는 방법이있을까요,
2022. 6. 8. 오후 3:12, 헬렌 : gap 말씀하시는 건가요?
2022. 6. 8. 오후 3:14, 허브의 개발 일지 : 근데 이번 토스 세미나는 비즈니스 문제를 풀어내기위한 신기술 도입이나 사내 이슈 정리보단
2022. 6. 8. 오후 3:14, 허브의 개발 일지 : 좀 더 제너럴한 이야기를 다루네요
2022. 6. 8. 오후 3:17, O_O : 토스 트위터에 공식입장 나왔군요
2022. 6. 8. 오후 3:17, j : 그리고 직군별 세분화가 되어있네요..
2022. 6. 8. 오후 3:17, j : 신기방기
2022. 6. 8. 오후 3:18, O_O : 단순 프론트가 아니라, 프론트 데브옵스라는 직군이 되게 흥미롭네요
2022. 6. 8. 오후 3:18, 허브의 개발 일지 : 제가 제너럴하다는 말 하자마자
2022. 6. 8. 오후 3:18, 허브의 개발 일지 : 신기방기한 커스텀 훅 소개 해주시네요
2022. 6. 8. 오후 3:19, j : 적용해보고싶다..
2022. 6. 8. 오후 3:19, 허브의 개발 일지 : 그러게요 진짜 저건 빨리 도입해보고싶네요
2022. 6. 8. 오후 3:19, 허브의 개발 일지 : 지금까지 페이지에서 SSR로 데이터 요청하면 해당 내용 전역에 담아서 쓰는 식으로 했는데
2022. 6. 8. 오후 3:19, 허브의 개발 일지 : 진짜 깔끔하네요
2022. 6. 8. 오후 3:19, j : 그러게요..
2022. 6. 8. 오후 3:20, j : 초반에 필요한 resource 설정해주면
2022. 6. 8. 오후 3:20, j : child에서 사용가능하니까
2022. 6. 8. 오후 3:20, 허브의 개발 일지 : 아 진짜 데브옵스의 일인데
2022. 6. 8. 오후 3:20, 허브의 개발 일지 : 프론트 개발자가 배포랑 빌드까지 다루는 직군인가보네요
2022. 6. 8. 오후 3:21, j : 빌드 최적화와 웹페이지 최적화는.프론트가 놓피기 쉬운데
2022. 6. 8. 오후 3:21, j : 그걸 아에 세분화 시켜서 각자 부분에서 집중도를 높이는건 배울 점이네요
2022. 6. 8. 오후 3:21, 허브의 개발 일지 : 사실 어렵죠,, 웹팩 빌드 최적화랑 다커 이미지 빌드 최적화 같은거까지
2022. 6. 8. 오후 3:21, 허브의 개발 일지 : 할려면
2022. 6. 8. 오후 3:21, 허브의 개발 일지 : 머리털 숭숭 빠지죠..
2022. 6. 8. 오후 3:22, j : 웹팩 최적화 건들다가
2022. 6. 8. 오후 3:22, j : 잠시 스탑하고 업무 떨어져서 그거 보다가..
2022. 6. 8. 오후 3:22, j : 안해도 되니까 부럽다..
2022. 6. 8. 오후 3:22, j : 집중도를 높일 수 있는게 부럽다..
2022. 6. 8. 오후 3:28, O_O : 그러게용.. 회사가 크니까 저렇게도 나뉠 수 있군요
2022. 6. 8. 오후 3:34: 눈물바다에 빠진 라이언님이 들어왔습니다.
2022. 6. 8. 오후 3:34, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 8. 오후 3:34: 눈물바다에 빠진 라이언님이 나갔습니다.
2022. 6. 8. 오후 3:43: 토마토님이 들어왔습니다.
2022. 6. 8. 오후 3:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 8. 오후 3:45, 토마토 : 안녕하세요~
2022. 6. 8. 오후 3:48, 김주영 : 안녕하세요~
2022. 6. 8. 오후 3:49, 허브의 개발 일지 : 혹시 Framer 는
2022. 6. 8. 오후 3:49, 허브의 개발 일지 : 뭔가요??
2022. 6. 8. 오후 3:57, 초보개발자 : Figma, Adobe XD 등과 같은 디자인 툴입니다. 근데 제가알기론 추가적으로 Storybook 처럼 React로 개발한 컴포넌트를 Framer에서 디자이너들이 직접 확인할 수 있다고 알고 있습니다
2022. 6. 8. 오후 4:07, 허브의 개발 일지 : 우왕우왕
2022. 6. 8. 오후 4:07, 허브의 개발 일지 : 신기방기하네요
2022. 6. 8. 오후 4:07, 허브의 개발 일지 : storybook이랑 framer랑 다른가요?
2022. 6. 8. 오후 4:19, 까루 : 혹시 인프런 심야 FE 당첨 되신 분 있으신가요?
2022. 6. 8. 오후 4:22, 아이뽀송 : 저 됐어요!!!!
2022. 6. 8. 오후 4:22, hustle-dev : 가고 싶어서 신청했는데 안되었네요 ㅜ
2022. 6. 8. 오후 4:26, 까루 : 저도 여기서 말씀해주셔서 얼떨결에 신청 했는데 됐네요 😆
후기 남기도록 하겠습니다
2022. 6. 8. 오후 4:27, team_smalt 성석원 : 확인은 메일로 하면되나요 ?
2022. 6. 8. 오후 4:28, 까루 : 저는 카톡 메시지로 왔어요!
2022. 6. 8. 오후 4:28, 철진 : 저도 안됐습니다 ㅠㅠ
2022. 6. 8. 오후 4:29, team_smalt 성석원 : 앗 .. 안온거 보면 안됬나보네요  
2022. 6. 8. 오후 4:29, 썰cho : 카톡안오면 안된건가요 ㅠㅠ
2022. 6. 8. 오후 4:29, 까루 : https://www.inflearn.com/pages/midnight-fe-2205
2022. 6. 8. 오후 4:29, 까루 : 여기에도 당첨자 확인할 수 있는거 같아요
2022. 6. 8. 오후 4:30, 썰cho : 없네요 ㅠ
2022. 6. 8. 오후 4:31, team_smalt 성석원 : 아쉽네요 .. 
2022. 6. 8. 오후 4:33, 시무룩한 튜브 : 저도 안된 ㅎㅎ
2022. 6. 8. 오후 4:37, 모랑 : 저도 안됐네요
2022. 6. 8. 오후 4:37, 승훈 : 지원자가 많았나봐요 ㅠㅠ
2022. 6. 8. 오후 4:38, 현수 : 700명 가까이 지원했다네요ㅎ.. 그 중에 60명이래요
2022. 6. 8. 오후 4:39, 승훈 : 헐
2022. 6. 8. 오후 4:42, O_O : 와 ...
2022. 6. 8. 오후 4:42, 까루 : 뽀송님 요번에 참여하시나요?
2022. 6. 8. 오후 4:42, O_O : 경쟁률 엄청나네요ㅠ
2022. 6. 8. 오후 4:44, 아이뽀송 : 네~! ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 승자의 기쁨을 만끽하러..
2022. 6. 8. 오후 4:44, 까루 : 저 아마 닉네임 똑같이 해놔서 마주치면 인사라도 해요 ㅋㅋㅋㅋ
2022. 6. 8. 오후 4:44, 허브의 개발 일지 : 있는지도 몰랐네요~~ 으앙
2022. 6. 8. 오후 4:45, 까루 : 아니 해주세요
2022. 6. 8. 오후 4:46, 아이뽀송 : 앜ㅋㅋㅋㅋㅋㅋㅋㅋㅋ 넵! 저도 아마 이 걸.. 걸요..? 닉네임같은게 있었나.. 가물가물하지만...
2022. 6. 8. 오후 4:56, 브레드 : 안녕하세요 ㅎㅎ 타입스크립트를 공부중인데.. export keyword에 대해서 뭔가 명확하게 설명한 글을 아직 발견 못해서요..ㅠ 혹시 참고할만한 문서 있을까요? 

export class / export interface / export type 을 언제 쓰는지 좀 명확히 알고싶어서요! 
2022. 6. 8. 오후 4:57, 브레드 : 회사에있는 코드들은 거의 다 export class~~ 로 써졌는데, 구글링하면 interface가 자주? 보였던거 같아.. 차이점을 여쭤보니 ㅎㅎ 한번 찾아보라구 하시네여..ㅎ…
2022. 6. 8. 오후 5:00, 아이뽀송 : 이게 class 나 interface 가 export에 종속된 키워드가 아니라 말그대로 class를 export한다. interfacw를 export 한다에요!
2022. 6. 8. 오후 5:02, 브레드 : 아 헉..!! 네..!헐 ㅎㅎ 감사합니다…ㅠ.. 그럼  class, interface, type이 뭔지를 알면 잘 사용 할 수있는것이겠네요 !!! 오오 
2022. 6. 8. 오후 5:20, 살려줘 네오 : 축하드립니다! 로또급 확률을 뚫으시고.
2022. 6. 8. 오후 5:34, Vintz : 저두 당첨 됐습니다! ㅎㅎ 저두 아는 척 해주세요!! 🤩
2022. 6. 8. 오후 5:34, 으쓱으쓱 어피치 : 엇 저도 당첨됐습니다!
2022. 6. 8. 오후 5:35, O_O : 우와 이방에 당첨되신분들 많군요 부러워요 ㅠㅠ
2022. 6. 8. 오후 5:36, 얌얌냥이 : 진짜 부럽당.. 저는 당첨 실패에요ㅠㅠ 흑흑~
2022. 6. 8. 오후 5:53, 철진 : 태오님 이든으로 신청했던 프론트엔드 개발자인데요!! 급한 일정이 주말에 있어서… 토, 일 둘다 빠지는 것은 스프린트에 큰 민폐일 것 같아서… 우선 삭제하였습니다 ㅠㅠ 다음 기회에 도전해보도록 하겠습니다 좋은 기회 감사합니다!! 
2022. 6. 8. 오후 5:58, 주니어개발자 : 안녕하세요 혹시 unload, unbeforeunload 이벤트에서 브라우저 닫기와 새로고침을 구분하는 방법이 있을까요?
2022. 6. 8. 오후 6:11, 애교뿜뿜 어피치 : 없다고 알고 있는데,, 혹시나 있으면 좋겠네요 😢
2022. 6. 8. 오후 6:12, 시닙프엔 : 선배님들 초봉 3천 괜찮은가요.. 작은 스타트업 붙었는데 고민되네요🥲
2022. 6. 8. 오후 6:13, 프론트 공부 : 저듀 3천부터 시작했는데.. 경력먼저 쌓고 이직하자는 생각으로 시작했습니다..
2022. 6. 8. 오후 6:13, 비디오가미래다 : 저도 초봉 3000이었는데ㅠ
2022. 6. 8. 오후 6:13, 프론트 공부 : 근데 작은스타트업에서 성장하기가 힘들더라구욥..
2022. 6. 8. 오후 6:13, fefe : 제가알기론 스타텁은 신입 적게는2800~많으면 3500 으로 알고잇어여 
2022. 6. 8. 오후 6:14, 비디오가미래다 : 8개월 지나니까 앞자리 바꿔주시더라구요 실력있으면 올려주실거에요
2022. 6. 8. 오후 6:14, 철진 : 신입 초봉은 다 비슷비슷하고 올려도 큰차이는 없어서 성장 가능성이나 이런 것 보시면 좋을 것 같아용
2022. 6. 8. 오후 6:15, 토마토 : 초봉이 중요하기보다 성장가능성을 보셔요.. 4000받아도 성장가능성 없으면 안가느니만 못합니다
2022. 6. 8. 오후 6:15, 비디오가미래다 : 맞아요 성장가능성이 1순위이버다
2022. 6. 8. 오후 6:17, 주니어개발자 : ㅠㅠ 답변 감사합니다 👍
2022. 6. 8. 오후 6:19, 시닙프엔 : 다들 답변 감사드려요!! 성장가능성은 어떻게 볼 수 있을까요.. 여긴 si하는 곳 같더라구요 전 프론트인데 풀스택도 하야하는🥹
2022. 6. 8. 오후 6:28, 르르 : 삭제된 메시지입니다. 
2022. 6. 8. 오후 6:28, 핸디(강경석) : 호불호가 갈리지만 저는 주니어 시절에 풀스택 해보는것도 좋았습니다.
퀄리티는 보장하지못하더라도 해본다는 경험이 나중에 도움이 되더라구요. 하지만 그 와중에 프론트로 업무의 중심을 프론트로 가져가야합니다. 그리고 근무시간외에도 공부할수 있는 환경이 만들길 추천해요. 
물론 근무시간내에 공부를 할수있는 환경과 업무면 더할나위없지만 이건 장담할 수 없으니까요.
2022. 6. 8. 오후 6:34, 타로 : 안녕하세요! 이번 스프린트에 매직타로 닉네임으로 신청한 타로라고 합니다. 다름이 아니라 종강 일정이 변한걸 확인해서 신청을 취소합니다. Docs에서 삭제는 해놓았지만 혹시 몰라서 단톡에도 남겨둡니다
스프린트 참여는 다음을 노리겠습니다. 감사합니다!
2022. 6. 8. 오후 6:34, 시닙프엔 : 다행히 제가 붙은 곳은 다른 곳과 다르게 확연히 업무 시간이 적어 공부할 시간이 충분할 것 같습니다! 좋은 말씀 감사드려요:)
2022. 6. 8. 오후 6:46, 자란다 Recruiter : 이모티콘 이제 퇴근시간이네요..!!! 
모두 괜찮은 하루 보내셨길 바라고요! 모두 즐퇴입니다!
2022. 6. 8. 오후 6:56, 귀여운 라이언 : 웹캠으로 녹화 후 지정한 구간을 추출하는 기능을 구현해본 사람이 있을까요? ㅠㅠ
이것저것 하는데 많이 어렵내요
2022. 6. 8. 오후 7:27, seed : 신입으로 취준중입니다. 합격한 곳에서 수습기간인 3개월 동안은 개인 노트북으로 업무를 진행해야 한다고 하는데 일반적이지 않은 경우 같아서 마음에 걸려요ㅠㅠ 다른 조건은 괜찮은 편이라고 생각했는데 제일 중요한 게 빠져있는 느낌입니다. 입사해도 괜찮을까요?
2022. 6. 8. 오후 7:28, 델 : 오.. 급여는 그대로 나오나요?
2022. 6. 8. 오후 7:31, seed : 연봉은 정확하게 말씀해주셨는데 수습 기간에 어떻게 적용될지는 계약서 쓸 때 알려주실 것 같아요 채용 담당자님이 아직 상의 중인 부분이라고 하셨어요
2022. 6. 8. 오후 7:31, 철진 : 노트북만으로는 판단하기 어려울 것 같아요! 3개월은 서로 협의 하에 나가기 쉬운 상황이라서 그런 조항을 뒀을 수도 있으니까요!!! 회사 입장에서도 3개월 쓰던거라고 새로온 분한테 주기가 꺼려질 수도 있기때문에 다른 조건들을 잘 보면 좋을 것 같아요 
2022. 6. 8. 오후 7:31, 즐거운 네오 : 수습기간에 급여도 깎으면 취업 급한거 아닌 이상 저라면 안 갈래요...
2022. 6. 8. 오후 7:32, 모랑 : 저는 회사차원에서 그런 부분이 있으면 렌탈해서라도 하는게 맞지 않나 싶은데 그걸 개인 노트북으로 하라고 한다면 저는 보류할 것 같아요
2022. 6. 8. 오후 7:32, 프론트 공부 : 수습기간에 급여 90% 지급 같은곳은 많지 않나요?
2022. 6. 8. 오후 7:33, Hardy : 원티드 공고는 거진 다 급여 100%였던거 같아요
2022. 6. 8. 오후 7:33, 애교뿜뿜 어피치 : 제가 본것도 거진 100퍼이긴한데
2022. 6. 8. 오후 7:34, 애교뿜뿜 어피치 : 회사 입장에서는 또 굳이 안그럴수도 있고,, 그게 또 좋다 나쁘다 하기도 애매하긴하네요 
2022. 6. 8. 오후 7:34, 뮤츠 : 오..회사에서컴퓨터를안준다라..
2022. 6. 8. 오후 7:34, 브레드 : 정말 일반적이진 않네요.. ㅠ 보통 새 노트북 사주는거에 리스크를 느낀다면.. 회사에 충분히 남는 노트북 등 100프로 원하는걸 못해주더라도 있긴할텐데.. 그러고 수습 끝나면 사양에 맞는걸 맞춰주던지...
2022. 6. 8. 오후 7:35, 브레드 : 극단적인 표현으론, 컴퓨터가 없다고 하면… 입사가 불가한걸까요… 급 의문 ..ㅠ.. 
2022. 6. 8. 오후 7:35, 브레드 : 급여는 요즘은 그래도 수습이여도 100프로 다 주지만 여전히 회사에 따라선 80~90도 많더라고요
2022. 6. 8. 오후 7:35, 뮤츠 : 글쎄요.. 저분은 컴퓨터도 안주는데 대우를 잘해주겠어? 라는 생각이신거같기도하고
2022. 6. 8. 오후 7:36, 브레드 : 뮤츠님 말씀이 맞는거같아요. 어떻게 보면 기본적인건데. 저는 거기다 방법에 의문을 더하여 ㅎㅎ 
2022. 6. 8. 오후 7:36, 브레드 : 일반 직군도 아니고 개발자를 뽑은건데 컴퓨터를….ㅎ… 
2022. 6. 8. 오후 7:36, 애교뿜뿜 어피치 : 저는 제 주변 지인들 수습때 개인장비 쓰라는 경우 많이 보긴해서.. 다만 정규직 됐을땐 희망하는 장비도 맞춰주긴했죠 
2022. 6. 8. 오후 7:37, 브레드 : 차라리 이 조건이라도 확실하면! 그리고 그래도 가고 싶으신 곳이라면… 괜찮겠찌만. seed님의 불안한 마음은 충분히 이해가 가네요. ㅠ 
2022. 6. 8. 오후 7:38, 애교뿜뿜 어피치 : 그러게요.. 선입견 없이 한번 꼼꼼히 따져보심이.. 
2022. 6. 8. 오후 7:38, 브레드 : 참 이게 입사전이니 ㅎㅎㅎ 물어볼수도없고 ..으허.. 화이팅입니다!!! ㅠㅠ
2022. 6. 8. 오후 7:39, 뮤츠 : 다른조건들이 괜찮다고 생각하신다니 고민을 좀해보세요 수습기간동안만 컴퓨터를 안주는게 일반적이진않은거같은데 뭐그렇게까지 이상해보이진 않습니다
2022. 6. 8. 오후 7:39, 살려줘 네오 : 그러게요 2-3주도 아니고 3달이나... 새 것을 안 사준다고 해도 회사꺼 남은 모니터나 컴퓨터라고 보통 주지 않나요.? 2주 정도는 애플에서 주문 않나요. 
2022. 6. 8. 오후 7:39, 뮤츠 : 회사에서 확신이 없는게 아닐까여
2022. 6. 8. 오후 7:39, 뮤츠 : 왠지 다른데 갈거같은 느낌?ㅋㅋㅋ
2022. 6. 8. 오후 7:41, 살려줘 네오 : 그래도 컴퓨터 외에 다른 조건이 전부 다 맞다면 회사가 알아보는 기간이기도 하지만 , 본인도 알아가는 기간이니 다녀볼거 같기도 하네요!  
2022. 6. 8. 오후 7:41, 브레드 : 이모티콘 
2022. 6. 8. 오후 7:42, seed : 그냥 일반 사무직으로 일을 해도 개인 컴퓨터가 주어지는데 개인 노트북을 지참해야 된다고 하셔서 좀 당황스러운 마음이었어요ㅋㅋㅋ
2022. 6. 8. 오후 7:43, seed : 그래서 다시 여쭤보니 수습기간에만 그렇다고만 답변해주셨고 더 자세히는 못 물어봤습니다ㅜㅜ
2022. 6. 8. 오후 7:44, seed : 경험 많으신 다른 분들의 의견이 궁금했어요
2022. 6. 8. 오후 7:44, 허브의 개발 일지 : 글쎄요 큰 문제는 없어 보입니다!
2022. 6. 8. 오후 7:44, 뮤츠 : 회사 규모가 좀 작은가요?
2022. 6. 8. 오후 7:44, 뮤츠 : 보통 회사에 유후 컴퓨터들 다 있지 않나..
2022. 6. 8. 오후 7:45, seed : 네 규모는 작습니다
2022. 6. 8. 오후 7:45, 살려줘 네오 : 수습 기간만 그런거라면 괜찮지 않을까요? 수습 끝날때 최신 장비로 사달라고 하심이!! 다른 조건이 다 맞으시다면
2022. 6. 8. 오후 7:47, 시무룩한 튜브 : 저도 수습 때 개인 노트북 사용했었네요
2022. 6. 8. 오후 7:48, 시무룩한 튜브 : 전체 사원 30명 규모일 때 ..
2022. 6. 8. 오후 7:49, seed : 의견 감사드립니다ㅜㅜ 잘 고민해볼게요!!
2022. 6. 8. 오후 7:49, 흔들 : 이렇게 말고 왜 그런지 직접적인 이유를 여쭈어보는게 실례인거 같진 않습니다. 수습이라 분업때문인지 등등. 담당자가 그냥 말해줄듯 한데요?
이런건 입사하는데 큰 영향을 미치는 사항은 아닐꺼같습니다.
화이팅!
2022. 6. 8. 오후 8:11, O_O : 개인적으론 이것도 사전에 확인하시는게, 좋을 것 같아요..! 이정도 질문은 지원자의 권리라고 생각해요.
2022. 6. 8. 오후 8:14, seed : 네! 내일 한번더 둥글게 여쭤볼까봐요!!
2022. 6. 8. 오후 8:30, 프론트 공부 : 걱정되시는게 개인 컴퓨터를 3개월간 써야한다는것 보다는 회사가 돈이 없거나, 직원(개발자) 에 대한 대우가 안좋은 회사일까봐 걱정되시는거죠??
2022. 6. 8. 오후 8:30, 프론트 공부 : 걱정 되시는건가요?
2022. 6. 8. 오후 8:34, seed : 네 비슷합니다. 일반적인 장비도 지급해주시지 않는데 다른 부분도 처음 말씀과 다르거나 지켜지지 않을 것 같다는 생각과 그런 회사에서 얼마나 일할수 있을까 하는 우려가 들었어요
2022. 6. 8. 오후 9:07, 론트리니 : 작은 기업의 경우, 장비 안주는 곳도 종종 있어요 
2022. 6. 8. 오후 9:25, 모승 : 아, 그런가요?
2022. 6. 8. 오후 9:29: 초롱초롱 네오님이 들어왔습니다.
2022. 6. 8. 오후 9:29, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 8. 오후 9:30, 유용태 (teo.yu) : 초롱초롱네오님~ 반갑습니다 어서오세요 :)
2022. 6. 8. 오후 9:30: 초롱초롱 네오님이 나갔습니다.
2022. 6. 8. 오후 10:23, O_O : https://www.youtube.com/watch?v=JKQHnv9xIIM&list=PL1DJtS1Hv1PiGXmgruP1_gM2TSvQiOsFL

UX writing까지 시스템화시키다니...
볼때마다 대단하네요 진짜
2022. 6. 8. 오후 11:25, 로투스 : 안녕하세요, 스프린트에 프론(11번째 행)으로 신청했었는데요, 정말 죄송하지만 제가 다음주에 일정이 생겨서 부득이하게 참여를 못하게 되었습니다… 구글 스프레드 시트를 수정해야하는데 핸드폰으로는 수정이 잘 안되어서 집에 가자마자 바로 지우겠습니다. 정말 죄송합니다
2022. 6. 8. 오후 11:59, 로투스 : 수정했습니다!

2022년 6월 9일 목요일
2022. 6. 9. 오전 12:02, 진현 : https://youtube.com/c/RealWorldReact
2022년 Reactathon 유튜브입니당 보다보니까 재밌어서 공유드려요!!🙇🏻‍♂️
2022. 6. 9. 오전 12:32, 긱긱 : 오 맞아요 오늘 제일 인상 깊었던 세션이었어요!
2022. 6. 9. 오전 12:35, O_O : tds 야 원래 유명했지만
다른게 진짜 어마어마하더라구요...
2022. 6. 9. 오전 12:36, O_O : 문구를 린트로 관리한다니..
2022. 6. 9. 오전 12:47, 퉁이리 : 와 저도 진짜 감탄했습니다
2022. 6. 9. 오전 12:51, 백엔드! : 안녕하세요
2022. 6. 9. 오전 12:51, 백엔드! : 혹시 프론트딴에서 영상업로드시 화소나 프레임 낮추는 방법이 있을까요 ?
2022. 6. 9. 오전 5:59, 비디오가미래다 : S3 업로드 트리거로 람다함수호출 한다음에 ffmpeg 라이브러리 같은거 써서 낮추셔야할거 같아요
2022. 6. 9. 오전 9:09, 백엔드! : 넵 감사합니다
2022. 6. 9. 오전 9:15, 썰cho : 테오님 이번스프린트는 8명이 전부 같이하는건가요
2022. 6. 9. 오전 9:17, 부끄러운 어피치 : 사진
2022. 6. 9. 오전 9:17, 부끄러운 어피치 : 와우 ㅋㅋ
2022. 6. 9. 오전 9:17, 부끄러운 어피치 : Vue는 보통 swr을 사용하나요??!
2022. 6. 9. 오전 9:17, 유용태 (teo.yu) : 네~ 하지만 한팀의 max인원이 8명이 넘지는 않게 하려고 합니다. 지원자 수를 보고 판단을 하려고 해요.. 지원자 수가 많은데 팀 인원을 적절히 나눠보겠습니다~
2022. 6. 9. 오전 9:24, 썰cho : 뷰는 상태관리를 내부에서 하지 않나요
2022. 6. 9. 오전 9:24, 썰cho : 뷰에서 상태관리를 들어본적이 없어서
2022. 6. 9. 오전 9:25, 썰cho : 넵 감사합니다!! 이번엔 대규모 인원이 될수도 있겠네요
2022. 6. 9. 오전 9:26, 귀여운 라이언 : 클라에서 서버로 전송해서 서버에서 처리하는 방법이 보편적입니다
추가적으로 클라이언트단에서 브라우저용 ffmpeg가 있어서 사용이 가능하나 무지 느립니다 ㅠㅠ
2022. 6. 9. 오전 9:30, 유용태 (teo.yu) : 네 그렇네요 이번에는 여러팀을 동시에 진행하는 방향으로 생각하고 있습니다 ;)
2022. 6. 9. 오전 9:50, 곰곰 : codeball 써보신분 있으신가요? 요즘 만들고있는 블로그 저장소 시험삼아 돌려봤는데 풀리퀘스트 4개중 3개가 거절이네요…. ㅜㅜ
2022. 6. 9. 오전 9:53, Herb : 사소한 의견입니다만, 스프린트의 구글 스프레드시트 뭔가 5행 (제목 있는 행)을 고정하면 좋을 것 같습니다!
2022. 6. 9. 오전 9:54, 유용태 (teo.yu) : 네! 좋은 의견 감사합니다 혹시 지금 가능하면 그렇게 편집 부탁드려요~ 아니면 출근 중인데 일단 회사에 도착하면 제가 수정해두겠습니다 제안 감사합니다 
2022. 6. 9. 오전 9:58, 영교 : https://www.google.com/url?sa=t&source=web&rct=j&url=https://beta.reactjs.org/&ved=2ahUKEwje7KaUlZ_4AhVemlYBHUQfCuIQFnoECAQQAQ&usg=AOvVaw0wQKRwzuvqGMCyimL8PeSg
2022. 6. 9. 오전 9:59, 영교 : 리액트에서 새로 도큐먼트 만드나봐요 ㅎㅎ..
2022. 6. 9. 오전 10:03, Herb : 아 방금 알게 된 사실이:
1. 구글 독스에서는 n행만 고정하는 기능은 없구 1행부터 n행까지 한꺼번에 고정하는 기능만 제공하는 것 같습니다 (제가 찾아본 범위 내에서는요!)
2. 1-5행을 고정시키면 차지하는 면적이 많아 또 보기 불편합니다
3. 그대로 둘 지 행을 재배열할 지 제가 판단할 범위는 아닌 것 같아서 일단 손대지 않았습니다!

2022. 6. 9. 오전 10:03, Herb : 디자인이 깔끔하니 이쁘네요
2022. 6. 9. 오전 10:04, 영교 : 내용도 좋은 거 같아요 훅으로 설명을 다 바꿨네요
2022. 6. 9. 오전 10:04, 토마토 : js 파일로 된 라이브러리들이 서로 충돌이 나는데(클릭 이벤트를 한쪽이 잡아서 다른쪽이 작동안되는 문제 등) 둘다 꼭 필요한 기능이라서 빼기가 힘든데 다들 이럴때는 어떻게 해결하시나요??
2022. 6. 9. 오전 10:05, 썰cho : 그럼 라이브러리 파일 들어가서 직접수정하거나..
2022. 6. 9. 오전 10:05, 썰cho : 둘다 되도록 폴리필 하거나..?
2022. 6. 9. 오전 10:07, 토마토 : ㅎㅎ.. 그냥 새로 만들어야겠네요.. 감사합니다
2022. 6. 9. 오전 10:09, 프엔공부중 : 크롬 lighthouse는 페이지 하나만 측정하는건가요?
2022. 6. 9. 오전 10:27, 자란다 Recruiter : 이모티콘 날이 우중충한데, 출근은 활기차게 잘 하셨길..... 바래봅니다
2022. 6. 9. 오전 10:42, 허브의 개발 일지 : 개인적으로 최근에 비가 너무 안와서 시원하게 한번 내려줬으면 좋겠네요ㅜㅜ
2022. 6. 9. 오전 10:51, 여의도개발 : 카카오페이도 최신 프론트엔드 기술블로그글이 있네요
https://tech.kakaopay.com/tag/frontend
2022. 6. 9. 오전 10:52, 허브의 개발 일지 : 혹시 RN에서 jwt 토큰 어떻게 관리하시나요?
2022. 6. 9. 오전 10:52, 허브의 개발 일지 : async storagy에 담아서 쓰시나요?
2022. 6. 9. 오전 10:53: 불금 네오님이 들어왔습니다.
2022. 6. 9. 오전 10:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오전 10:53, 유용태 (teo.yu) : 안녕하세요 불금 네오님 반갑습니다 :)
2022. 6. 9. 오전 10:54, 불금 네오 : 안녕하세요
2022. 6. 9. 오전 10:55, 유용태 (teo.yu) : 네~ 안녕하세요. 어서오세요. ㅎ 여기는 프론트엔드에 대해서 궁금한것들이 생길때 질문하고 또 좋은 자료들을 공유하면서 함꼐 성장하고자 하는 공간입니다. ㅎ 편하게 글 남겨주세요 :)
2022. 6. 9. 오전 10:55, 불금 네오 : 넵 ㅎㅎ
2022. 6. 9. 오전 11:06, 김동현 : accessToken 은 axios 의 defaultHeader 에 담아놓고, refreshToken 은 유효기간을 명시하여 asyncStorage에 담아놓습니다
2022. 6. 9. 오전 11:49, 허브의 개발 일지 : ॱଳ͘ 감사합니다~!
2022. 6. 9. 오전 11:52: 불금 네오님이 나갔습니다.
2022. 6. 9. 오전 11:52, 엄지척 튜브 : hls 사용해보신분 있나요??
2022. 6. 9. 오전 11:55, 퇴근하는 프로도 : 저용
2022. 6. 9. 오전 11:55, 주니어개발자 : 저두용
2022. 6. 9. 오후 12:24, 호호 부는 튜브 : hls가 http live streaming 인가용
2022. 6. 9. 오후 12:24, 비디오가미래다 : 넵 맞아용
2022. 6. 9. 오후 12:25, 비디오가미래다 : 애플에서 만든 스트림 프로토콜알고 있어요
2022. 6. 9. 오후 12:25, 호호 부는 튜브 : 오호 애플에서 만들었군요
2022. 6. 9. 오후 12:27: 초롱초롱 네오님이 들어왔습니다.
2022. 6. 9. 오후 12:27, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 12:39: [백엔드]부와악님이 들어왔습니다.
2022. 6. 9. 오후 12:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 12:40, [백엔드]부와악 : 안녕하세요 방장님 혹시 개인적으로 문의 좀 드려도 될까요??
2022. 6. 9. 오후 12:46, 유용태 (teo.yu) : 어서오세요 부와악님~ 네 물어보세요
2022. 6. 9. 오후 12:50, [백엔드]부와악 : 아 혹시 1대1로 여쭤봐도 될까요....?? 
2022. 6. 9. 오후 12:50, 유용태 (teo.yu) : 네~
2022. 6. 9. 오후 1:10: [백엔드]부와악님이 나갔습니다.
2022. 6. 9. 오후 1:57: 리듬타는 제이지님이 들어왔습니다.
2022. 6. 9. 오후 1:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 3:08: 멋쩍은 튜브님이 나갔습니다.
2022. 6. 9. 오후 3:36, 디디 : 혹시 타입스크립트 다들 어떤식으로 공부해보셨나요?? 기초적인 타입 붙이는 정도로만 알고 사용해봤는데 자신있게 기술스택에 써볼수 있을 정도로 제대로 공부해보고 싶어서요! 어떤 방식으로 공부하셨는지 어떤 학습자료를 쓰셨는지 궁금합니다..!
2022. 6. 9. 오후 3:36, 부끄러운 어피치 : 리액트 쿼리가 이름을 쿼리(query)로 바꿨네요. 소개글도 바뀌었구요 ㅋㅋ
2022. 6. 9. 오후 3:36, 썰cho : 저는 노드모듈을 많이 까봤어요
2022. 6. 9. 오후 3:36, 썰cho : 거기 잘 되어있는 타입스크립트 코드들이 많아서요 ㅋㅋ
2022. 6. 9. 오후 3:41, 디디 : 노드모듈 까보는건 생각 못해봤는데 굉장히 좋은 방법같네요! 감사합니다!!
2022. 6. 9. 오후 3:41, 쏠라c : 이거 혹시 어디서 확인하셨나요 !
2022. 6. 9. 오후 3:41, 썰cho : axios같이
2022. 6. 9. 오후 3:41, 쏠라c : 공식문서 찾아봤는데 안보여서.. 하하
2022. 6. 9. 오후 3:41, 썰cho : 탄탄한 라이브러리들을 까보면 도움이 많이 됩니다
2022. 6. 9. 오후 3:45, 부끄러운 어피치 : 여기요~ https://github.com/TanStack
2022. 6. 9. 오후 3:45, 부끄러운 어피치 : 새로운 이름인 query의 소개문구에는 '🤖 Powerful asynchronous state management, server-state utilities and data fetching for TS/JS, React, Solid, Svelte and Vue.'이라고 설명하네요~ 
2022. 6. 9. 오후 3:53, 고규식 : 기존에는 React기반에서만 지원해서 react query로 쓰다가 버전업되면서 다른 프레임워크들도 지원을 한다고해서 이름이 바뀐것같아여
2022. 6. 9. 오후 3:53, 애교뿜뿜 어피치 : solid, vue, sevlte!
2022. 6. 9. 오후 3:56, 부끄러운 어피치 : 오늘 아침에 트윗을 보니까 vue로 비슷한 라이브러리(vue-query)를 태그해서 얘기좀 하자고 하는거 보면 무언가 큰? 작업을 할것만 같은 느낌이 드네요
2022. 6. 9. 오후 3:57: 웹초보님이 들어왔습니다.
2022. 6. 9. 오후 3:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 3:57, 웹초보 : 안녕하세요
2022. 6. 9. 오후 4:06, 쏠라c : 오.. 감사합니다 ! 새로운 업데이트가 있나보네요 ㅎㅎ
2022. 6. 9. 오후 4:12, 김주영 : 안녕하세요~
2022. 6. 9. 오후 4:12, 대장 : 안녕하세요 ~
2022. 6. 9. 오후 4:15, 철진 : 안녕하세요! 여러분 질문이 있는데요, 혹시 평소 컴포넌트를 사용하실때 Dropdown.trigger, Dropdown.list 등의 형식을 자주 사용하실까요? 이번에 토스 컨퍼런스를 보면서 예시코드가 위와 같은 형식이었는데 해당처럼 사용하려면 Dropdown이라는 컴포넌트 안에서 Dropdown.trigger = Trigger 등의 작업을 해줘야 한다는 생각이 들었는데 그렇게 되면 트리쉐이킹에서는 불이익이 있다는 생각이 들었습니다. 다른 분들은 어떻게 사용하고 계신지 궁금합니다!! 
2022. 6. 9. 오후 4:15, 철진 : 컨퍼런스는 지속가능한 컴포넌트였습니다!! 
2022. 6. 9. 오후 4:17, 프엔공부중 : 앱 개발에서 부분 부분을 웹뷰로 개발하는 이유가 어떤 요소들이 있나요?
2022. 6. 9. 오후 4:18, 철진 : 웹뷰를 사용하면 매번 심사를 기다릴 필요없이 바로바로 배포 후에 사용자 반응을 볼 수 있습니다! 
2022. 6. 9. 오후 4:19, 승훈 : 오호 
2022. 6. 9. 오후 4:19, 승훈 : 감사합니다 덕분에 저도 궁금증이 풀렸습니다 ㅋㅋ 
2022. 6. 9. 오후 4:20, 프엔공부중 : 아 그러면 네이티브로 개발한 부분은 조금이라도 수정을 하게 된다면 배포 후 심사가 필요한가요?
2022. 6. 9. 오후 4:23, 음악듣는 어피치 : 네이티브는 모르겠는데 스위프트나 코틀린 경우에는 늘 심사받더라고요
2022. 6. 9. 오후 4:24, 프엔공부중 : 그렇군요.. 그런 부분에 있어서 영향이 상당히 크겠네요 ㄷ..
2022. 6. 9. 오후 4:26, 철진 : 네! 그래서 이번에 토스 컨퍼런스에서 RN 다룬 내용이 있는데 코드 푸쉬는 매우 강력하더라구요!! (자바스크립트 파일을 동적으로 변경하는 것이 허용되므로 코드 푸쉬를 통해서 이것만 변경!!) 심사없이 업데이트를 하고 사용자의 반응을 볼 수 있다는 점이 신선했어요! 
2022. 6. 9. 오후 4:28, 음악듣는 어피치 : 오 그럼 네이티브도 심사에서 자유롭다는 뜻리네요
2022. 6. 9. 오후 4:28, 프엔공부중 : 오.. 저도 한번 찾아봐야겠네요 답변 너무나 감사합니다!
2022. 6. 9. 오후 4:29, fefe : 웹뷰가 iframe 처럼 안드로이드나 ios에 세팅할때 URL 입력해서 띄워주나요!? 
2022. 6. 9. 오후 4:29, 썰cho : 넵
2022. 6. 9. 오후 4:29, fefe : 아하! 감사합니다 ㅎ
2022. 6. 9. 오후 4:30, 썰cho : 좀 다른느낌이긴하지만 그렇게 이해하시는편이
2022. 6. 9. 오후 4:30, 썰cho : 편하실거같아요
2022. 6. 9. 오후 4:36: 웹초보님이 나갔습니다.
2022. 6. 9. 오후 4:47, 엄지척 튜브 : 혹시 부모컴포넌트에서 함수를 만들어서 props로 내려줬는데
2022. 6. 9. 오후 4:59, 주니어개발자 : 이모티콘 질문이 궁금해요…
2022. 6. 9. 오후 5:03, 모랑 : ㅋㅋㅋㅋㅋㅋ
2022. 6. 9. 오후 5:04, 모랑 : 인터넷 짤방하나 생각나네요
2022. 6. 9. 오후 5:04, 모랑 : 사진
2022. 6. 9. 오후 5:06, 엄지척 튜브 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 9. 오후 5:06, 엄지척 튜브 : 함수를 내려주는 행위가 렌더링이 발생하는지 몰랐는데
2022. 6. 9. 오후 5:06, 눈빛 애교 어피치 : 대답 드릉드릉중..
2022. 6. 9. 오후 5:07, 엄지척 튜브 : 발생하네요..
2022. 6. 9. 오후 5:07, 엄지척 튜브 : 이모티콘 죄송합니다
2022. 6. 9. 오후 5:13, 진현우 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 9. 오후 5:18, 코린이 : 시간차가 관심을 유도하기 좋군욬ㅋㅋㅋ
2022. 6. 9. 오후 5:26, 햄햄 : 혹시 nextjs 쓰실 때 서버에서 렌더링 된 페이지에서 폰트가 깨지는 현상을 겪으셨던 분 계신가요.. 로컬에선 괜찮은데 배포된 사이트에서만 이런 현상이 발생하고, 이것때문에 react hydration 에러가 발생하는데 원인을 모르겠네요 ㅠㅠ
2022. 6. 9. 오후 5:43: 파이팅하는 무지님이 들어왔습니다.
2022. 6. 9. 오후 5:43, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 5:45, 브래드리 : 안녕하세요. 현재 현업에서 한 페이지에서 react-query에서 api를 병렬적으로 호출하고 싶은데, 혹시 참고할만한 레퍼런스나 방법을 공유해주실 수있나요?

감사합니다~!
2022. 6. 9. 오후 5:47, 허브의 개발 일지 : 배민근 개발자님 리액트쿼리 세미나 참고해보세요
2022. 6. 9. 오후 5:49, 철진 : 허민님 답변 자료 찾아보시면 좋을 것 같아요!! 단순 병렬이라면 그저 3번 호출해도 병렬적으로 동작하긴 합니다!! 
2022. 6. 9. 오후 5:50, 웹린이 : 갯수가 정해져 있다면 useQuery를 여러번 호출하시면 되고 동적이라면 useQueries 이용하시면 될 것 같네요
2022. 6. 9. 오후 5:50, 웹린이 : https://react-query.tanstack.com/reference/useQueries
2022. 6. 9. 오후 5:52, 살려줘 네오 : 안녕하세여 혹시 hls 쓰셨던 분들 중에서 cors이슈는 어떻게 해결하셨는지 궁금합니다!
2022. 6. 9. 오후 6:05, 브래드리 : 많은 답변들 감사합니다~!
2022. 6. 9. 오후 6:12, 엄지척 튜브 : 저는 패키지제이슨에 프록시 설정해서 해골했습니당
2022. 6. 9. 오후 6:27, 브래드리 : react-query사용해서 병렬적으로 api 호출은 되는데, 마지막에 모든 결과값이 들어왔을 때 동기적으로 페이지에 뿌려주고 싶은데 promis.all안에서 react query를 호출해도 비동기적으로 결과값이 각각 반환이 되는거같아요.. 혹시 어떻게하면 동기적으로 모든 결과값이 한번에 반환되게 할 수 있을까요?
2022. 6. 9. 오후 6:30, 델 : 동기적으로 처리해야 할 이유가 있으신가요??
2022. 6. 9. 오후 6:31, O_O : 퇴근 시간을 맞이해서 예전에 한 번 올렸었는데, 저희 아직 채용 중입니다...! 

https://www.wanted.co.kr/wd/115319
많은 관심 부탁드립니다!! ㅠㅠ
2022. 6. 9. 오후 6:33, O_O : 경력직분들 모시려면... 어떤걸 어필하면 좋을까요.? ㅠㅠ
2022. 6. 9. 오후 6:34, Hardy : 돈...?
2022. 6. 9. 오후 6:34, 허브의 개발 일지 : enabled option 추가해보셨나요?
2022. 6. 9. 오후 6:34, 그레이 : 어필은 역시 급여..
2022. 6. 9. 오후 6:35, 허브의 개발 일지 : const { data: todoList, error, isFetching } = useQuery('todos', fetchTodoList);
const { data: nextTodo, error, isFetching } = useQuery(
  'nextTodos',
  fetchNextTodoList,
  {
    enabled: !!todoList // true가 되면 fetchNextTodoList를 실행한다
  }
);
2022. 6. 9. 오후 6:35, 그레이 : 급여를 제외하곤 동료나 개발문화 복지 등이 잇겟네요
2022. 6. 9. 오후 6:35, 프론트 공부 : 경력직이면 보통3년차인가요?
2022. 6. 9. 오후 6:36, 스베루토 : 스벨트 쓰면 원하는 연봉보다 1k 낮아도 지원할맘 있는데... 눈에 씻고봐도 스벨트 채용공고는 안보이네요 ㅋㅋ
2022. 6. 9. 오후 6:36, 델 : 근데 enabled 를 쓰면 호출부터 동기적으로 들어갈거라 올바른 구현은 아닐 거 같긴 해요
2022. 6. 9. 오후 6:36, 살려줘 네오 : M368파일 한번 url받아서 실행 시키면 cors로 ts파일 요청이 거절 당해서 영상을 실행 못시키는 거 같은데 어떻게 해결해주면 좋을까요
2022. 6. 9. 오후 6:36, 델 : 화면에 뜨는거만 동기적으로 처리하기를 원하시는 거 같아서..
2022. 6. 9. 오후 6:36, O_O : 넵 최소 그정도일것 같아요...
2022. 6. 9. 오후 6:37, O_O : 알지만 마음대로 못하는...역시 연봉이군요 ㅠㅠ 
다른 회사들처럼 최저연봉같은걸 제시하는게 최고이려나요...?
2022. 6. 9. 오후 6:38, 허브의 개발 일지 : 그러면 데이터 페칭의 문제가 아니라 useLayoutEffect 등을 활용해서 동기적인 렌덩을 해주는게 좋지않을까용?
2022. 6. 9. 오후 6:38, O_O : 개발문화 등은 나름 노션으로 어필했는데... 반응이 생각보다 많이 없더라구요 ㅠㅠ
2022. 6. 9. 오후 6:38, 허브의 개발 일지 : 저도 알아가는 단계라 정답은 잘 모르겠네요 ..
2022. 6. 9. 오후 6:38, 스베루토 : 경력직은 무조건 연봉입니다..
2022. 6. 9. 오후 6:39, 철진 : useQuries를 사용하시고 모든 요청이 완료 되면 화면을 그리면 될 것 같습니다! 
2022. 6. 9. 오후 6:39, O_O : ㅠㅠㅠㅠ 연봉이라는게 구체적으로...
채용공고에 최저연봉 얼마부터! 이런 식인가요? (유니콘 회사들처럼..?)
2022. 6. 9. 오후 6:40, 스베루토 : 네넵 테이블잇으면 좋죠
2022. 6. 9. 오후 6:40, 프론트 공부 : 연봉은 합격하기전까지 모르는거니까 지원은 하지 않을까요?
2022. 6. 9. 오후 6:40, 허브의 개발 일지 : 보통 연봉공개 되어있지 않나용?
2022. 6. 9. 오후 6:40, 스베루토 : 예를들어 5000~1억
2022. 6. 9. 오후 6:40, 스베루토 : 이런식으로
2022. 6. 9. 오후 6:40, 스베루토 : 제시하면 더 편하죠
2022. 6. 9. 오후 6:40, 허브의 개발 일지 : 잡코리아같은 곳에 치면 평균 연봉같은거 공개 안하는 기업도 많던데 이런것부터 풀면 좋을 것같기두 합니당
2022. 6. 9. 오후 6:40, 철진 : 리턴할때 isAllLoading : isLoading1 || isLoading2... 
2022. 6. 9. 오후 6:41, O_O : ㅠㅠ 역시 젤 눈에 띄는건 연봉이군요.. 의견들 감사합니다!!!
2022. 6. 9. 오후 6:41, 스베루토 : 반대로 회사입장에서는 지원자 어떤걸 보고 서류통과시키는지도 궁금하네요 ... ㅋㅋ
2022. 6. 9. 오후 6:42, 스베루토 : 최근 원티드로 15군데 정도 지원했는데 3군데 합격.. 그중에 한곳이 넥x ...
2022. 6. 9. 오후 6:43, 스베루토 : 3곳중 2군데는 기술분야가 좀 다른데도 합격이고 오히려 프론트엔드는 더 잘 떨어지고..
2022. 6. 9. 오후 6:43, 스베루토 : 프론트엔드 포폴이 약해서 그런가 싶기도 하네요..
2022. 6. 9. 오후 6:44, 델 : 실력 능력에 대한 보편적인 뭔가가 있긴 하지만
2022. 6. 9. 오후 6:44, 델 : 회사 상황이랑 운에 대한 부분도 엄청 큰 거 같아요
2022. 6. 9. 오후 6:44, 스베루토 : 아마 그렇겠죠?
2022. 6. 9. 오후 6:44, 브래드리 : 화면 렌더링을 1번만 하기위해서입니다 ㅠ
2022. 6. 9. 오후 6:44, 스베루토 : 좀 급하게 뽑는곳에 지원하면 잘 붙는느낌
2022. 6. 9. 오후 6:45, 델 : 사실 그런 이슈시면 리액트쿼리 철학이랑은 안 맞는 거 같긴 해요
2022. 6. 9. 오후 6:45, O_O : 그 기준은 회바회라 정말 다양한것 같아요...
깃헙까지 들어가서 다 보거나, 일단 서류 허들을 낮추고 이후 프로세스에서 거른다거나...

위에 말씀하신것처럼 운도 작용하는 것 같아요.
당장 사람이 급하면 허들이 그만큼 낮아지고...
2022. 6. 9. 오후 6:45, 뮤츠 : 취업은 확실히 운칠기삼 느낌..
2022. 6. 9. 오후 6:45, 뮤츠 : 그냥 늘 준비를 어느정도 해놔야 기회라도 잡을수있는것같습니다..
2022. 6. 9. 오후 6:45, 델 : 선언적으로 구현해놔라 페치랑 렌더는 내가 알아서 한다 이런 느낌이라 리액트쿼리를 안 쓰시는 게 베스트고 아니면 많이 돌아돌아서 구현하셔야 될 거 같아요
2022. 6. 9. 오후 6:46, 스베루토 : 깃헙 아예 닫아놓을까 싶기도 하네요...ㅋㅋㅋ 퇴근하고 노는개발자라 깃헙 텅텅비었어요 ㅠ
2022. 6. 9. 오후 6:47, 델 : 근데 리액트에서 렌더를 한번만 해야 할 상황이 있나요..?
2022. 6. 9. 오후 6:47, 음악듣는 어피치 : 깃헙을 닫으시면 블로그라도 열어두셔야 할텐데..
2022. 6. 9. 오후 6:47, 스베루토 : 아하..깃헙 다 보긴 보는가보군요...
2022. 6. 9. 오후 6:48, 브래드리 : 렌더 횟수를 최소화시키는게 좋지않나요?
2022. 6. 9. 오후 6:48, 스베루토 : 저는 서류에 적을거 다 적어놓고 깃헙은 텅텅비었어요 ㅋㅋ
2022. 6. 9. 오후 6:48, 스베루토 : 깃헙좀 채워야겠다 ...
2022. 6. 9. 오후 6:48, 모랑 : 저는 회사에 남아가지고 기술 리서치나 그런걸 하다보니까 결국 깃헙에 남는게 없긴해서 ㅋㅋㅋㅋ
2022. 6. 9. 오후 6:48, arthur : 신입 5~6천 정도 주는 곳들 경력직 연봉은 어느정도 수준인가요~? 
2022. 6. 9. 오후 6:49, 모랑 : 저도 블로그에 정리하는게 좋을 거 같더라구요
2022. 6. 9. 오후 6:50, O_O : 연봉을 갑자기 공고에 적기가 애매한게... 기존분들 생각하면 쉽게 결정하기 어려운 부분 같더라구요.. 
2022. 6. 9. 오후 6:51, 델 : 그냥 딱 놓고 봤을 때 렌더 횟수가 많은 게 좋냐 적은 게 좋냐 하면 당연히 적은 게 낫긴 하겠지만 유의미하진 않다고 생각해요
2022. 6. 9. 오후 6:51, 모랑 : 그쵸
2022. 6. 9. 오후 6:51, 델 : https://kentcdodds.com/blog/fix-the-slow-render-before-you-fix-the-re-render 
2022. 6. 9. 오후 6:51, 모랑 : 기존분들 연봉인상이 같이 이뤄지는게 아닌 이상 최저 이정도 준다고 공고 올리기는 리스크가 클거같아요
2022. 6. 9. 오후 6:52, 뮤츠 : 채용쪽도 참힘들겠어요
2022. 6. 9. 오후 6:52, O_O : 네 ㅠ 그래서 그 방법은 현실적으로 불가능할 듯 해요ㅠㅠ 유니콘회사처럼 진짜 돈이 많아서 일괄인상! 이렇게 할 수 있는게 아니라...
2022. 6. 9. 오후 6:53, 스베루토 : 발품파는거 어떠십니까...
2022. 6. 9. 오후 6:53, 델 : 이 글 읽고 느낀 건데, 사실 한 번의 렌더가 느리지 않다면 아무리 렌더를 많이 해도 사용자가 느끼기에 아무 문제 없으니까요 :)
2022. 6. 9. 오후 6:53, 뮤츠 : 3~5년차가 시장에서 젤 구하기 힘들텐데.. 반응이 적은게 당연하다고 생각합니다
2022. 6. 9. 오후 6:53, 스베루토 : 시장에 3~5년차가 구하기 힘든가요?
2022. 6. 9. 오후 6:53, O_O : 발품은 윗분들이 발품 열심히 팔고 계신걸로 알고 있어요! ..
사실 이런 고민하는 저는 막내입니다..^^....
2022. 6. 9. 오후 6:53, 스베루토 : 다들 하다가 그만두거나 떠나서 그런가요
2022. 6. 9. 오후 6:54, 스베루토 : 저는 이제 갓 2년차...ㅋㅋ 아직 신입같아요 저는
2022. 6. 9. 오후 6:54, O_O : 프론트 3~ 5년차는 정말정말 없는 것 같아요..
프론트 역사가 짧기도 하고 그정도 년차되면 보통 대기업 노리시다보니
2022. 6. 9. 오후 6:54, 뮤츠 : 그정도 연차가 움직이려면 확실한 메리트가 있어야하니까 힘들것같아요
2022. 6. 9. 오후 6:58, 백엔드! : 저 궁금한게 프론트가 
2022. 6. 9. 오후 6:58, 백엔드! : 웹 + 앱
2022. 6. 9. 오후 6:58, 백엔드! : 둘다 포함하는 언어죠 ?
2022. 6. 9. 오후 6:59, 현수 : 프론트라는 건 언어는 아니고 분야를 얘기하는게 맞는 것 같아요! 웹과 앱을 포함해서 전체적인 보여지는 부분, 뷰와 관련된 로직들을 설계하는 사람을 일컫는 것 같습니다
2022. 6. 9. 오후 6:59, 델 : 추가로 리액트쿼리 컨트리뷰터이신 tkdodo 님도 그 부분에 대해서 언급하셨는데, 이것도 읽어보시는 거 추천드려요!

원문 https://tkdodo.eu/blog/react-query-render-optimizations

번역 https://parang.tech/react/2022-react-03/#3-react-query-render-optimizations
2022. 6. 9. 오후 6:59, 백엔드! : 감사합니다!
2022. 6. 9. 오후 6:59, 백엔드! : 혹시 그러면
2022. 6. 9. 오후 7:00, 백엔드! : 웹으로 만들어도 앱으로 바꿀 수 있을까요 ?
2022. 6. 9. 오후 7:08, 박용준 : pwa, ionic 비슷한 기술을 사용하면 가능은 합니다
2022. 6. 9. 오후 7:14, 백엔드! : 오 감사합니다
2022. 6. 9. 오후 7:16, 부탁하는 무지 : 혹시 코드스테이츠 신청하시분 계신가요?
2022. 6. 9. 오후 7:17, 모승 : 저여 또 떨어졌네여 할 생각 없었긴한데
2022. 6. 9. 오후 7:17, 부탁하는 무지 : 에고ㅠㅠ 그러시군요.. 연락이 없으면 떨어진거겠져?
2022. 6. 9. 오후 7:17, 부탁하는 무지 : 저도 떨어진듯 ㅋㅋ
2022. 6. 9. 오후 7:18, 모승 : 문자 왔어요 저는
2022. 6. 9. 오후 7:18, 모승 : 떨어졌다고
2022. 6. 9. 오후 7:19, 부탁하는 무지 : 에고ㅠㅠ 길은 많으니까 
2022. 6. 9. 오후 7:19, 부탁하는 무지 : 그래도 아쉽네요 ㅠㅠㅎㅎ
2022. 6. 9. 오후 7:20, O_O : 요즘은 부트캠프 들이 국비로 많이 넘어왔군요
2022. 6. 9. 오후 7:21, 부탁하는 무지 : 모승님 혹시 문자가 WEB발신으로 오셨나요?
2022. 6. 9. 오후 7:21, Hardy : 돈내고 다녔는데 억울하다!
2022. 6. 9. 오후 7:23, O_O : 학원입장에선 국비가 꽤 괜찮을 것 같아요... 
수강생 한명에 한달 백만원 정도니... 요샌 더 되려나...?
2022. 6. 9. 오후 7:23, 모승 : 사진
2022. 6. 9. 오후 7:23, 모승 : 이렇게 왔어용
2022. 6. 9. 오후 7:23, 부탁하는 무지 : ㅠㅠ 저는 연락도 안왔네요 ㅋㅋㅋ
2022. 6. 9. 오후 7:24, 유용태 (teo.yu) : 저희 팀으로 지원해보세요 ㅎ
2022. 6. 9. 오후 7:26, 유용태 (teo.yu) : https://careers.kakaoenterprise.com/job/%EA%B2%BD%EA%B8%B0%EB%8F%84-%EC%B9%B4%EC%B9%B4%EC%98%A4%EC%9B%8C%ED%81%AC-%EC%9B%B9%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EA%B2%BD%EA%B8%B0/6460544/
2022. 6. 9. 오후 7:28, 썰cho : ㅋㅋ 리액트 써도 지원해도 되나요
2022. 6. 9. 오후 7:28, 유용태 (teo.yu) : 네 저희는
스벨트 리액트 뷰 다 합니다 ㅋ
2022. 6. 9. 오후 7:29, 유용태 (teo.yu) : 앵귤러는 했었지만 이제 명맥을 다했습니다 ㅋㅋ
2022. 6. 9. 오후 7:33, 살려줘 네오 : 3년 이상  경력직만 모시는 건가요..?ㅠㅠ
2022. 6. 9. 오후 7:40, 웹린이 : queryFn에서 api 호출하고 Promiss.all로 기다렸다 반환해도 될 것 같구요
2022. 6. 9. 오후 7:42, 웹린이 : 아니면 useQueries 사용하고 results.every({isLoading}=> !isLoading)이런식으로 isLoading 싹 체크해서
2022. 6. 9. 오후 7:42, 웹린이 : 그동안 fallback ui띄워주셔도 될 것 같네용
2022. 6. 9. 오후 7:43, O_O : 저희요? 저흰 아닙니다..!
2022. 6. 9. 오후 7:44, O_O : 그냥 흔히 말하는 경력직에 관한 얘기엿어요
2022. 6. 9. 오후 7:46, 웹린이 : 그런데 제 경험상
2022. 6. 9. 오후 7:46, 웹린이 : useQueries 써야되는 경우는
2022. 6. 9. 오후 7:47, 웹린이 : 컴포넌트 더 쪼개면 해결 가능한 경우가 많았어서 구조를 좀 더 고민해보셔도 좋을 것 같아요
2022. 6. 9. 오후 7:48, 웹린이 : 그리고 렌더링 최적화는 이슈 없으면 미리 생각할 필요는 없는 것 같아요~
2022. 6. 9. 오후 7:53, 웹린이 : 개발 시작한지 얼마 안된 뉴비의 생각들이니 가볍게 참고만 해주세요 ㅎㅎ
2022. 6. 9. 오후 8:01, 링링 :  혹시 마이크로 프론트엔드를 실제로 개발에 도입하신 회사나 팀 있으신가요 아니면 아직은 이론이 도입된 정도일까요
2022. 6. 9. 오후 8:03, 링링 : 조는 작은 팀에서 일하는 프론트 주니어인데요 저희 팀리더분이 관심이 있으신지 몇 번 언급하시는데요 저는 하나도 몰라서 찾아보고 있긴한데 감을 몰라서 여쭤봐요
2022. 6. 9. 오후 8:03, 링링 : *저는
2022. 6. 9. 오후 8:04, 승훈 : https://toss.im/slash-21/sessions/2-5
2022. 6. 9. 오후 8:07, 썰cho : 오늘 slash는 전부 백앤드 관련이네요
2022. 6. 9. 오후 8:08, 웹린이 : 첫날은 프론트, 둘쨋날 백엔드, 셋쨋날 인프라(데브옵스?) 인 것 같드라구요
2022. 6. 9. 오후 8:08, j : 그래더 몇몇 개는 재밋더라구여
2022. 6. 9. 오후 8:08, j : 무한스크롤 재밋었어요
2022. 6. 9. 오후 8:10: R님이 들어왔습니다.
2022. 6. 9. 오후 8:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 8:12, 유용태 (teo.yu) : 안녕하세요 호호 부는 튜브님~ 반갑습니다 :)
2022. 6. 9. 오후 8:19, R : 앗 안녕하세요 !! 프론트엔드 공부 시작한지 얼마 안되었는데 벨로그 글 보다가 오픈채팅방도 알게되어서 들어오게 되었어요:) 
너무 너무 도움이 많이 되고 있습니다 ㅎㅎ 감사합니다 ~
2022. 6. 9. 오후 8:31, 승훈 : 오늘의 집 개발 블로그에 아마 도입 사례 글 하나 있는 걸로 알고있어요 
2022. 6. 9. 오후 8:42, 허브의 개발 일지 : 조민 개발자님? 께서 쓰신 미디엄 벨로그
2022. 6. 9. 오후 8:42, 허브의 개발 일지 : 보시면 될 것 같아요
2022. 6. 9. 오후 8:43, 허브의 개발 일지 : 조은 개발자님이시네요!
2022. 6. 9. 오후 8:45, 부탁하는 네오 : single-spa라는 프레임워크 있는걸로 알고 있습니다
2022. 6. 9. 오후 9:23, 돈다발 들고 좋아하는 무지 : 혹시 맥북쓰시는분 추천해주실 모델있을까요? 
2022. 6. 9. 오후 9:27, 초롱초롱 네오 : 프로쓰는데 좋아영
2022. 6. 9. 오후 9:27, 헬렌 : 저는 에어 쓰는데 좋아요~
2022. 6. 9. 오후 9:28, 초롱초롱 네오 : 전 주사율때문에,,,,
2022. 6. 9. 오후 9:28, 초롱초롱 네오 : 이모티콘 
2022. 6. 9. 오후 9:28, 헬렌 : ㅋㅋㅋㅋㅋㅋㅋ 오리 너무 귀엽네요
2022. 6. 9. 오후 9:38, 유용태 (teo.yu) : 늦은 시간 공지를 드리게 되어 죄송합니다. 스프린트 신청자가 예상보다 많은 관심 너무 감사 드립니다. 잊지 않겠지만 수,목,금은 밤 11시 주말은 자유시간으로 진행되는 스프린트이며 3주간 연속으로 하기에는 제가 너무 부담이 되는 개인 상황이라 최초(?) 3팀 동시 진행을 해보려고 합니다. +_+

6/15(수) 부터 매일 밤 11시 라는 점 다시 한번 강조드리면서 안되시는 분들은 그냥 시트에서 삭제해주시면 되고 이후 참가자들 부터는 예비 후보자로 간주하도록하겠습니다. 

다시 한번 관심에 너무 감사드리고 멀티로 진행을 하더라도 협업과 프로세를 배우고 아디이어 기획부터 배포까지라는 원래 취지에 맞게 진행할 수 있도록 최선을 다하겠습니다. 감사합니다.
2022. 6. 9. 오후 9:38, 유용태 (teo.yu) : 톡게시판 '공지': 늦은 시간 공지를 드리게 되어 죄송합니다. 스프린트 신청자가 예상보다 많은 관심 너무 감사 드립니다. 잊지 않겠지만 수,목,금은 밤 11시 주말은 자유시간으로 진행되는 스프린트이며 3주간 연속으로 하기에는 제가 너무 부담이 되는 개인 상황이라 최초(?) 3팀 동시 진행을 해보려고 합니다. +_+

6/15(수) 부터 매일 밤 11시 라는 점 다시 한번 강조드리면서 안되시는 분들은 그냥 시트에서 삭제해주시면 되고 이후 참가자들 부터는 예비 후보자로 간주하도록하겠습니다. 

다시 한번 관심에 너무 감사드리고 멀티로 진행을 하더라도 협업과 프로세를 배우고 아디이어 기획부터 배포까지라는 원래 취지에 맞게 진행할 수 있도록 최선을 다하겠습니다. 감사합니다.
2022. 6. 9. 오후 9:47, 선풍기 바람 쐬는 어피치 : 아이프레임 안에서의 버튼(등 링크를 사용하여)이동은 프레임 외부로 나갈 수 없다고 들었는데.. 새탭이나 새창을 여는 것도 안되는 건가요?
2022. 6. 9. 오후 9:49, 설아아빠 : 열수있어요
2022. 6. 9. 오후 9:50, 자란다 Recruiter : 이모티콘 헬스장갔다가 이제 집도착했습니다. 오늘 하루도 괜찮은 하루 보내셨길 바라겠습니다 :) 
내일 인사 드릴게요! 푹 쉬세요 모두! 
2022. 6. 9. 오후 9:50, 선풍기 바람 쐬는 어피치 : 헉 그렇군요. 방법이 없는 줄 알았는데.
그럼 보고 있던 페이지에서 링크 이동은 할 수 없지만 새탭이나 새창을 여는 것은 가능하다고 이해 하면 될까요?
2022. 6. 9. 오후 9:51, 설아아빠 : 넹 타겟 _blank나 window.open 하시면 되요 
2022. 6. 9. 오후 9:52, 선풍기 바람 쐬는 어피치 : 네!! 감사합니다.
2022. 6. 9. 오후 10:00: 피자 먹다 자는 무지님이 들어왔습니다.
2022. 6. 9. 오후 10:00, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 10:02: Kirin님이 들어왔습니다.
2022. 6. 9. 오후 10:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 9. 오후 10:07, 유용태 (teo.yu) : 피자먹다자는 무지님 kirin님 반갑습니다 :) 어서오세요!! +_+
2022. 6. 9. 오후 10:22, 링링 : @승훈 @허민 @부탁하는 네오 감사합니다 찾아볼게요 🙏 
2022. 6. 9. 오후 11:18: 빈털터리 제이지님이 들어왔습니다.
2022. 6. 9. 오후 11:18, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj

2022년 6월 10일 금요일
2022. 6. 10. 오전 1:08, 애교뿜뿜 무지 : 안녕하세요 ! 혹시 onclick 메소드를 icon에다 바로 하는 것보다 icon위에 버튼으로 감싸서 주는 것이 더 좋은 걸까요?
2022. 6. 10. 오전 1:14, A대 4-1(진) : 안녕하세요 ! 제가 학교 프로젝트로 3d 웹프로젝트를 구현했는데요 ㅎㅎ 뭔가 너무 쀼듯해서 홍보한번 해도 됄까요 !?!?
2022. 6. 10. 오전 1:15, 건방진 제이지 : 어떤거에 관련된거에요??
2022. 6. 10. 오전 1:16, A대 4-1(진) : 학교 메타버스 구현해봤어여..! 아직 실력이 미숙해서 8명 들어오면 브라우저가 느려지더라구요 ,,,
2022. 6. 10. 오전 1:16, A대 4-1(진) : https://www.metajou.kro.kr

입니다 !
2022. 6. 10. 오전 1:18, A대 4-1(진) : 모바일은 .. 키 이벤트를 안넣었어여 ㅜㅜ
2022. 6. 10. 오전 1:18, 콘이 웃긴 무지 : 멀티플레이는 어떻게 구현하셨어요?
2022. 6. 10. 오전 1:18, 뮤츠 : 오...ㅋㅋㅋㅋ
2022. 6. 10. 오전 1:18, A대 4-1(진) : 소켓 사용했습니다 !
2022. 6. 10. 오전 1:19, 콘이 웃긴 무지 : 게임로직이 서버쪽에서 처리되는방식이에요 ??
2022. 6. 10. 오전 1:20, A대 4-1(진) : 소켓으로 이벤트 발생해서 데이터 보내주면 프론트에서 처리해줬습니다 !
2022. 6. 10. 오전 1:21, 백엔드! : 오우
2022. 6. 10. 오전 1:21, 백엔드! : 혹시
2022. 6. 10. 오전 1:21, 백엔드! : 어떤걸로 만들었나요 ?
2022. 6. 10. 오전 1:22, 백엔드! : @대학교 3학년  혹시 프레임워크나 그런거좀 말해주실 수 있을까요 ?
2022. 6. 10. 오전 1:22, A대 4-1(진) : 리액트요 !
2022. 6. 10. 오전 1:22, 백엔드! : 그 ui 3d로 만드는건
2022. 6. 10. 오전 1:22, 백엔드! : 어떤거 사용했나요 ?
2022. 6. 10. 오전 1:23, 백엔드! : 사진
2022. 6. 10. 오전 1:23, 백엔드! : 잘만들었네용
2022. 6. 10. 오전 1:23, A대 4-1(진) : react-three/fiber
react-three/cannon
react-three/drei 사용했습니다 ?
2022. 6. 10. 오전 1:23, 백엔드! : 직접 하나하나 다 만든거에요 ?
2022. 6. 10. 오전 1:23, A대 4-1(진) : cannon으로 물리엔진 넣었구요
fiber로 카메라 꺼내오고
drei로 렌더링 시켜줬습니다 !
2022. 6. 10. 오전 1:23, A대 4-1(진) : 넹 ㅎㅎ
2022. 6. 10. 오전 1:23, 백엔드! : 와
2022. 6. 10. 오전 1:23, 백엔드! : 기간은
2022. 6. 10. 오전 1:23, 백엔드! : 어느정도 걸렸나요 ?
2022. 6. 10. 오전 1:23, 백엔드! : 진짜 멋져용
2022. 6. 10. 오전 1:23, A대 4-1(진) : 3개월이요 !
2022. 6. 10. 오전 1:24, A대 4-1(진) : 감사합니다 ㅎㅎ
2022. 6. 10. 오전 1:24, 백엔드! : 와우 혼자 했어요 ?
2022. 6. 10. 오전 1:24, 백엔드! : 사진
2022. 6. 10. 오전 1:24, 백엔드! : 재밌네용 점프 계속하면
2022. 6. 10. 오전 1:24, 백엔드! : 하늘도 날라댕기고
2022. 6. 10. 오전 1:24, A대 4-1(진) : 아뇨아뇨 ㅋㅋㅋ 프론트 2명 디자이너 4명이였어요 !
2022. 6. 10. 오전 1:24, A대 4-1(진) : 감사합니다 !
2022. 6. 10. 오전 1:24, 백엔드! : ㄷㄷ 디자이너 4명!
2022. 6. 10. 오전 1:25, 백엔드! : 진짜 조금 더 
2022. 6. 10. 오전 1:25, 백엔드! : 다듬고 렉 안걸리게하면
2022. 6. 10. 오전 1:25, 백엔드! : 사람들 많이 사용하겠는데요 ?
2022. 6. 10. 오전 1:26, A대 4-1(진) : ㅎㅎㅎ 극찬이십니다 !
2022. 6. 10. 오전 1:27, 뮤츠 : 고생좀하셨겠는데요
2022. 6. 10. 오전 1:27, 뮤츠 : (최고)
2022. 6. 10. 오전 1:28, A대 4-1(진) : 디자이너분 4분중 3d는 한분이 해주셔서 … 그 분께 너무 감사드리네요 ㅜㅜ

칭찬 감사드립니다 !!
2022. 6. 10. 오전 1:31, 멋쟁이 프로도 : 아주메일은 아직 작동 안하는건가요??
2022. 6. 10. 오전 1:31, 멋쟁이 프로도 : 계속 입력창으로 되돌아가네요ㅎㅎ
2022. 6. 10. 오전 1:33, A대 4-1(진) : 오잉 ?!?
2022. 6. 10. 오전 1:34, 멋쟁이 프로도 : 아주대 이메일 입력하면 2FA 검증 페이지 떴다가 다시 입력창으로 돌아가네요ㅜ
2022. 6. 10. 오전 1:35, A대 4-1(진) : 앗 확인해보겠습니당 검증 성공 해도 그러나여 ??
2022. 6. 10. 오전 1:36, 멋쟁이 프로도 : 검증을 못해요 자꾸 메일 입력창으로 되돌아가서ㅋㅋㅋ
2022. 6. 10. 오전 1:36, 멋쟁이 프로도 : 게스트로 보고있는데 진짜 똑같이 만드셨네요!
2022. 6. 10. 오전 1:36, 으쓱으쓱 어피치 : 실제 아주대 캠퍼스인가요? 경사가 엄청나네요..ㅜㅜㅋㅋㅋ
2022. 6. 10. 오전 1:37, A대 4-1(진) : ㅋㅋㅋ 경사 낮춘거에여 ㅜㅜ
2022. 6. 10. 오전 1:37, 멋쟁이 프로도 : 공대건물이 하필 저 경사 위에 있어요ㅋㅋㅋ
2022. 6. 10. 오전 1:37, 으쓱으쓱 어피치 : 앗 이런 ㅜㅜㅋㅋㅋㅋ 너무 잘만드신거같아요!!
2022. 6. 10. 오전 1:38, A대 4-1(진) : 감사합니다 !!
2022. 6. 10. 오전 1:38, A대 4-1(진) : 너무 뿌듯해여 ㅋㅋㅋ
2022. 6. 10. 오전 1:38, 으쓱으쓱 어피치 : 디자이너분이 4분이나 계신데 3d는 어떻게 소통하는지 궁금하네요.. 보통은 피그마나 XD를 쓸텐데
2022. 6. 10. 오전 1:38, A대 4-1(진) : 3d모델에
2022. 6. 10. 오전 1:38, A대 4-1(진) : 기본적으로 포지션을 넣어주셔서
2022. 6. 10. 오전 1:39, A대 4-1(진) : 이미지 불러오듯 렌더링 시켜주면 되요 !
2022. 6. 10. 오전 1:39, A대 4-1(진) : 문제는 충돌 처리였습니다 ㅜㅜ
2022. 6. 10. 오전 1:39, A대 4-1(진) : 프론트에서 임의로 포지션 넣어줄수 있어요 !
2022. 6. 10. 오전 1:39, 피자 먹다 자는 무지 : 와 진짜 잘 만드셨네요 벚꽃시즌에 아주대 자주 갔었는데 오랜만에 캠퍼스 반갑네요 ㅋㅋㅋㅋ
2022. 6. 10. 오전 1:40, A대 4-1(진) : 감사합니다 ㅜㅜ 홍보 많이 해주세용
2022. 6. 10. 오전 1:43, 멋쟁이 프로도 : 대단하시네요
2022. 6. 10. 오전 1:55, A대 4-1(진) : 요거 5/30 정책이 바뀌어서 수정했다고 핮니다 !
2022. 6. 10. 오전 6:22: 르르님이 나갔습니다.
2022. 6. 10. 오전 7:05, 김주영 : 우아 대단하시네요
2022. 6. 10. 오전 8:15, 유용태 (teo.yu) : 네~ 그래야 목적에 받는 계층 구조를 유지하기가 좋아요
2022. 6. 10. 오전 8:21, 유용태 (teo.yu) : 와!! 잘 만드셨네요 ㅎㅎ 디코에도 박제(?) 해두었습니다~ 홍보가 많이 되면 좋겠네요+_+ 공지로 올리고 싶은데 링크랑 말이 분리되어 있어서 다시 적어주시면 당분간 공지글로 올려둘게요 ㅎ
2022. 6. 10. 오전 8:25, 유용태 (teo.yu) : 맞는*
2022. 6. 10. 오전 8:30, 유용태 (teo.yu) : 개인적인 궁금함입니다~ 카톡 UI가 컨텐츠를 아카이브 하기에도 불리하고 주제별로 이야기하기도 불편하고 코드 올리기도 불편하고 나중에 온 사람들은 예전 기록을 볼수가 없다 보니 디스코드를 보조도구로 커뮤니티를 같이 병행해보고 있는데 놀랄만큼(!) 관심이 없어요. ㅋㅋ 왜 일까요? 디스코드는 뭔가 글을 적기 부담스러운가요?
2022. 6. 10. 오전 8:33, Vintz : 맞아요 생각보다 조용(?)하달까 저는 개인적으로 접근성이랑 익숙하지 않아서 그런 것 같아요
2022. 6. 10. 오전 8:34, 햄햄 : 디스코드를 써본적이 없어서 잘 몰랐네요 ^^;
2022. 6. 10. 오전 8:35, Luke : 눈팅으로 꾸준히 이용하고 있습니다!! 관심이 없는 건 아니고 글을 잘 쓰지 않는 거예요 ㅜㅜ 
2022. 6. 10. 오전 8:37, 썰cho : 투채널이라서
2022. 6. 10. 오전 8:37, 썰cho : 둘다 이용하게 하는게 생각보다 힘든거 같아요
2022. 6. 10. 오전 8:37, 부탁하는 무지 : 사람들의 접근성 차이와 편리함인 것 같습니다!! 뭔가 디스코드는 각잡고 준비해야하는? 게임, 스터디, 화상통화 등 모바일보단 컴퓨터가 더 편리하지 않나요?(개인의견) 디스코드 채팅은 모바일에서 뭔가 계속 켜놓고 하기가 부담된달까..? 생각해보면 사람들의 인식 차이도 있는 것 같네요 ㅋ
2022. 6. 10. 오전 8:38, 퉁이리 : 아카이브로는 디스코드 최고에요~ 오픈카톡에서 대부분 대화가 이루어지다보니 그런것같아요 ㅎㅎ 조용히 이용하고있었는데 이모지 사용해야겠어요 ㅎㅎ
2022. 6. 10. 오전 8:40, 유용태 (teo.yu) : 디스코드 사용의 독려나 장려의 우회성 멘트(?)는 아니었습니다~ ㅋㅋ 저희 회사도 업무용 메신저를 만들고 있는터라 진짜로 이유가 궁금했고 말씀해주신 내용들 다 생각을 할만한 지점이 있는것 같아서 감사합니다 ㅎ
2022. 6. 10. 오전 8:42, 선풍기 바람 쐬는 어피치 : 저는 온라인/오프라인 찍히는게 부담스럽습니다...
2022. 6. 10. 오전 8:43, 부탁하는 무지 : 오..그러네요 채팅중이라 실시간으로도 뜨고,,
2022. 6. 10. 오전 8:43, 선풍기 바람 쐬는 어피치 : 저는 그 이유가 커서 슬랙도 잘...
2022. 6. 10. 오전 9:06, 모승 : 그거는 설정으로 끌수 있슴다
2022. 6. 10. 오전 9:07, 너겟 : 선배님들
2022. 6. 10. 오전 9:25, 진현우 : 후배인데 대답해도 되나요..?
2022. 6. 10. 오전 9:25, 진현우 : (녜)
2022. 6. 10. 오전 9:30, 너겟 : 좋은아침입니다!!!😆❤️
2022. 6. 10. 오전 9:33, 너겟 : 혹시 구글에서 보내는 warning 실제 현업에서는 무시하시는지 개선작업을 하시는지 ... 궁금합니다 
2022. 6. 10. 오전 9:34, 너겟 : 사진
2022. 6. 10. 오전 9:42, 유용태 (teo.yu) : 일단 무시합니다. 할일이 없으면 개선을 하게 되요. ㅋ
2022. 6. 10. 오전 9:43, 유용태 (teo.yu) : 대신 완성도에 지장을 준다 싶으면 개선해야죠. ㅎ
2022. 6. 10. 오전 9:45, 게으름(lifeisnovel) : 태블릿/모바일 구분용으로 useragent 쓰는 곳이 있는데 최근에 ua 축소 관련해서 크롬에서 계속 warning 보내주고 있어서 이건 슬슬 대응 준비하고 있습니당
2022. 6. 10. 오전 10:10, 자란다 Recruiter : 이모티콘 오늘 금요일!! 주의 마지막!! 화이팅입니다. 
2022. 6. 10. 오전 10:18, 너겟 : 감사합니다!!
2022. 6. 10. 오전 10:18, Vintz : 화이팅!! ㅎㅎ 안녕하세요 여러분 이직하려는 곳에서 기술 과제 탈락 후 받은 피드백 중에 디바운싱과 같은 최적화 작업을 했으면 좋겠다는 피드백을 받게 되었어요. 여러분은 이런 피드백을 받지 않길 바라면서..이번 기회에 저도 제대로 배울겸 글을 쓰게 되었습니다!

틀린 부분 지적, 날카로운 비판, 응원 등 모두 환영입니다! 🤗

https://onlydev.tistory.com/151
2022. 6. 10. 오전 10:19, 썰cho : 빈츠 회사 들어간지 얼마 안되지 않았나요??
2022. 6. 10. 오전 10:19, Hardy : 옮기시는군요
2022. 6. 10. 오전 10:20, 썰cho : 지금글도 좋습니다. 근데 어떤경우에 많이쓰는지 예시도 알려주면 더 좋을거같아요 ㅋㅋ
2022. 6. 10. 오전 10:20, Vintz : 앜ㅋㅋㅋㅋ 네 저 7개월차에요 썰! 개인적으로 정말 좋은 곳이지만 딱 하나 성장에 대한 욕구가 채워지지 않아서요 😭
2022. 6. 10. 오전 10:21, 썰cho : 5개월만 더 참으셔보시지 ㅠㅠ 저도 이직을 짧게 하다보니
2022. 6. 10. 오전 10:22, 썰cho : 이직하는 회사에서 별로 안좋게 보더라고요…
2022. 6. 10. 오전 10:22, Vintz : 의견 감사합니다! 사용예는 코드 하단에 조금 적어놓긴 했는데 이제보니 잘 안보이네요 수정하겠습니다!
2022. 6. 10. 오전 10:22, 썰cho : 아 저는 정확한 사용법? 쓰로틀링은 보통
2022. 6. 10. 오전 10:22, 썰cho : 스크롤 이벤트나 마우스 움직임 이벤트같이
2022. 6. 10. 오전 10:22, 썰cho : 계속 연속되는 곳에서 많이 사용한다 이런느낌으로요 ㅎㅎ
2022. 6. 10. 오전 10:23, 핸디(강경석) : 글도 읽은김에 영상도 하나 보시면 좋을듯 하여 추천드립니다.
https://www.youtube.com/watch?v=By49qqkzmzA&t=510s
2022. 6. 10. 오전 10:23, Vintz : 그렇군요..요새 계속 고민하고 있긴합니다 ㅠㅠ
2022. 6. 10. 오전 10:24, 썰cho : 근데 한두번정도는 가능한데..
2022. 6. 10. 오전 10:24, 썰cho : 그 다음이 문제긴 합니다 ㅋㅋ
2022. 6. 10. 오전 10:24, Vintz : 오홍..🤔 해당 내용 추가해볼게요 고마워요!!
2022. 6. 10. 오전 10:24, 썰cho : 그래서 고민 많이하시고!! 화이팅입니다
2022. 6. 10. 오전 10:25, Vintz : 넵!! 감사합니다 😍
2022. 6. 10. 오전 10:26, gahui : 안녕하세요. 질문이 있습니다. Vue.js를 사용하고 있습니다만, 팝업창이 닫혔는지를 계속 확인해야하는데, 혹시 어떤 방법이 있을까요? 구글 검색했을땐, setInterval 을 이용하서 구현하는 방법이 있는데, 다른 방법이 있을까요? (예를 들어 팝업창이 닫혔을때, 특정 이벤트를 원래 창에 내려준다던지..) 
2022. 6. 10. 오전 10:29, 나이스하게개발하기 : 상위에서 상태관리하는 툴이 있다면 팝업상태를 조회해서 확인하면 되지 않을까요?
2022. 6. 10. 오전 10:29, 나이스하게개발하기 : 스케줄러 기능이 필요하시다는 말씀이신지?
2022. 6. 10. 오전 10:31, gahui : 해당 기능을 구현하는데, 어떤 기능이 필요한지를 질문했어요...! 팝업창이 열렸는지 닫혔는지를 파악하기 위해 스케줄러 기능이 필요하다면 그걸 쓸수 있고 (보통 어떤식으로 구현하시는지 궁금해서 여쭤봤습니다..) 
2022. 6. 10. 오전 10:32, gahui : 상위에서 상태관리하는 툴이란게 어떤걸 말씀하시는걸까요?
2022. 6. 10. 오전 10:37, 엄지척 튜브 : 전역상태관리 아닝까요?
2022. 6. 10. 오전 10:38, 비디오가미래다 : Vuex로 State 변경되는거 체크하라는 말씀이신거 같은데용
2022. 6. 10. 오전 10:40, gahui : 아~ 한번 시도해보겠습니다! 감사합니다!
2022. 6. 10. 오전 10:44, Vintz : 썰이 알려주신대로 수정 완료했어요! 덕분에 더 좋은 내용이 됐습니다 감사해요! 🤩
2022. 6. 10. 오전 10:46, 비디오가미래다 : 잠깐 봤는데 핵심이 쏙쏙 들어잇네요 멋져요!
2022. 6. 10. 오전 10:52: 티비보는 무지님이 들어왔습니다.
2022. 6. 10. 오전 10:52, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 10. 오전 11:00, 프엔공부중 : 실무에서는 웹 서비스의 성능 체크를 어떤걸로 하나요?!
2022. 6. 10. 오전 11:00, 썰cho : light house?
2022. 6. 10. 오전 11:01, 프엔공부중 : 아 실무에서도 light house를 쓰는군요
2022. 6. 10. 오전 11:01, 프엔공부중 : 그러면 모든 페이지를 다 돌릴 순 없으니 중요한 페이지만 돌리는건가요?
2022. 6. 10. 오전 11:01, 썰cho : 안쓰는 회사들이 많긴하죠.. 성능체크를 안하는..
2022. 6. 10. 오전 11:12, 프엔공부중 : 아핳..그렇군요 
2022. 6. 10. 오전 11:15, gege : 안녕하세요 여러분 제가 최근 data-driven 아키텍처에 관심이 생겼는데요. 혹시 모바일, 데스크탑, 태블릿 등 Device에 특화된 UI를 제공하도록 Multiple display을 제공하는 컴포넌트를 구현하기 위해 참고할만한 레퍼런스가 있을까요?
2022. 6. 10. 오전 11:17, 썰cho : 적응형같은건가요
2022. 6. 10. 오전 11:25, gege : 네 맞습니다!
2022. 6. 10. 오전 11:29, 유용태 (teo.yu) : 티비보는 무지님~~ 반갑습니다 :)
2022. 6. 10. 오전 11:29, gege : 예를 들자면 동일한 single select data를 데스크탑에서는 combobox, 모바일에서는 radio 로 나타내는? UX적으로 더 편리한 형태의 컴포넌트로 표현해보고 싶어서요!
2022. 6. 10. 오후 12:38, 유용태 (teo.yu) : https://yozm.wishket.com/magazine/detail/1513/?utm_source=stibee&utm_medium=email&utm_campaign=newsletter_yozm&utm_content=contents
2022. 6. 10. 오후 1:22, 망치 : 안녕하세요 타입스크립트 고수분들께 질문드립니다.

같은 로직의 함수를 두 군데(A, B)에서 불러서 사용중인데요,
A에서 함수를 사용시 넣는 파라미터 타입과 함수에서 돌려주는 리턴타입,
B에서 함수를 사용시 넣는 파라미터 타입과 함수에서 돌려주는 리턴타입이 다를 때요,

함수에서는 타입 정의를 어떻게 해야할까요?
오버로딩 말고 다른 구현방법이 있을까요?
2022. 6. 10. 오후 1:22, 피자 먹다 자는 무지 : 유니온 타입으로 선언해주면 안되려나요
2022. 6. 10. 오후 1:22, 햄햄 : 저는 그럴때 제네릭을 써요
2022. 6. 10. 오후 1:23, lucky.jun : 제니릭이요
2022. 6. 10. 오후 1:23, 망치 : 유니온타입으로 하니까 리턴값을 실제 사용하는 곳에서 에러가 나더라구요!
2022. 6. 10. 오후 1:23, 망치 : 제네릭을 더 파봐야겠군여..! 감사합니다
2022. 6. 10. 오후 1:23, 피자 먹다 자는 무지 : 어떤식으로 했는지 볼 수 있을까요?
2022. 6. 10. 오후 1:23, lucky.jun : 제네릭 타입을 통해 리턴값까지 정해줄 수 있어요
2022. 6. 10. 오후 1:23, 썰cho : https://www.youtube.com/watch?v=Vv0PGUxOzq0
2022. 6. 10. 오후 1:24, 썰cho : 우테코에서 제네릭 해주더라고요
2022. 6. 10. 오후 1:31, 망치 : 음 함수의 기능 자체는
map으로 새로운 필드를 추가하고 아이디 기준으로 소팅해주는 기능인데요,
파라미터로 배열을 받는데, 그 A와 B 배열의 타입이 달라서 적용이 안되는 것 같아요.
그 A와 B의 갖고 있는 필드값이 다르거등요…
그래서 리턴 값도 달라져서 유니온타입 사용이 어려운 것 같아용
2022. 6. 10. 오후 1:46, 델 : 제네릭이 맞을 거 같아요
2022. 6. 10. 오후 1:47, 델 : 근데 타입이 많이 다르다면 그냥 똑같은 함수 안 쓰고 따로 분리하는 것도 나쁘지 않을 거 같아요!
2022. 6. 10. 오후 1:50, 망치 : 처음에는 분리해서 작성했는데 들어가는 배열만 다르고 로직이 아예 같아서 리팩토링 하게 되었습니당..! 제네릭을 봐볼게용 감사합니다 :D
2022. 6. 10. 오후 2:02: 티비보는 무지님이 나갔습니다.
2022. 6. 10. 오후 2:24, 김주영 : 리액트는 보통 create-react-app 을 통해서 기본 템플릿이 주어지잖아요? 그런데 그 기본 템플릿 이해가 힘들어서 잘 이해하려면 어떤 문서 참고하는게 좋을까요? 보통 태그들도 div class='App' 가 아닌 div className='App' 이렇게 쓰는 거 같아서요
2022. 6. 10. 오후 2:24, 김주영 : 제 API Server랑 통신하느라 Http 통신도 썼는데 import React, {useState, useEffect} from 'react'; 이런 import 구문의 중괄호도 궁금하네요
2022. 6. 10. 오후 2:25, 김주영 : JSX라는 다큐멘테이션만 열심히 보면 될까요?
2022. 6. 10. 오후 2:25, 그레이 : ts, jsx 튜토리얼을 보시면 좋을 것 같습니다
2022. 6. 10. 오후 2:26, 김주영 : ts ! 알겠습니다
2022. 6. 10. 오후 2:26, 포유 : className 쓰는건 jsx 에서 해석 할 때 js 의 class랑 구분하기 위해서로 알고 있고, import 중괄호는 그냥 es6 import 보면 될거 같아요
2022. 6. 10. 오후 2:27, O_O : https://ko.javascript.info/modules-intro
모듈부분 보시면 될 것 같아요 후자는
2022. 6. 10. 오후 2:28, 김주영 : jsx 해석, es6, 모듈 다 공부해보겠습니다. 감사합니다!
2022. 6. 10. 오후 2:32, 인사하는 프로도 : 안녕하세요~ 열심히 톡내용만 보다가 용기내서 질문합니다 . 
저는 현재 SI에서 2년 반정도 근무를 하고있습니다.
SI에서 벗어나 자사 서비스가 있는 회사로 이직을 하고싶어서 혼자 열심히 준비를 하면서 이 방에서 도움도 많이 받으며 이것저것 글들을 찾아보고 있습니다. 저는 경력직말고 프론트엔드로 새로 경력을 쌓고싶어서 신입으로 지원을 하고싶은 생각이 있습니다.. SI경력을 안 좋게 본다는 회사 글들이 있어서 혹시.. 이 경력이 채용에서 불리한 점이 있는지 궁금합니다ㅠㅠ 
2022. 6. 10. 오후 2:34, 눈빛 애교 어피치 : 그것도 다 회사바이회사라서 그 경력을 인정해주는 회사도 있을거예요 불리하다고 말하는 회사가 오히려 더 이상해보이네요 저는..
2022. 6. 10. 오후 2:35, 썰cho : 경력 자체는 안좋게 보지 않아요 근데 거기서 뭘 배웠는지는 볼거같아요
2022. 6. 10. 오후 2:37, 포유 : 어차피 신입으로 지원하시는거면 상관없지 않을까요..?
2022. 6. 10. 오후 2:38, 옥수수 수염차 : 공채신입 뽑는곳에 신입으로 지원하면 신입인데 수시인 회사에 넣으면 2년경력있어서 2년차로 인식하고 면접 진행되요..
2022. 6. 10. 오후 2:38, 선풍기 바람 쐬는 어피치 : 그럼 거짓말해야되는건가요...?? 경력없다고?
2022. 6. 10. 오후 2:40, 주니어개발자 : 요새 중고신입 많아서.. 얘기하고 어필하는것도 좋지 않을까요?
2022. 6. 10. 오후 2:40, 썰cho : 저는 쓰는걸 추천드립니다
2022. 6. 10. 오후 2:40, 옥수수 수염차 : 개발경력 있는데, 굳이 없앨 필요는 없다고 생각되네요. 
2022. 6. 10. 오후 2:40, 썰cho : 굳이 안쓸이유는 없다고 봐서
2022. 6. 10. 오후 2:40, 썰cho : 마이너스는 아닌 느낌이에요
2022. 6. 10. 오후 2:40, fefe : 저는 지우고싶은 물경력 느낌이 1년 있긴한데 … 이력서에서 삭제해도 뭐 문제가되지는 않을까요.?
2022. 6. 10. 오후 2:41, 옥수수 수염차 : 신입공채라면 이해하는데, 수시라면 신입처럼 봐달라고 하면 오히려 좋게 보진 않습니다..
2022. 6. 10. 오후 2:41, 인사하는 프로도 : 네 si업체에서 주로 금융권이나 작은 프로젝트를 해서
업무는 주로 제이쿼리.. 자바스크립트, UI툴로 스크립트와 최근 프로젝트가 뷰를 사용하고있는데.. 이것도 자사 프레임워크를 써서 반쪽짜리 뷰예요..

그래서 저 혼자만의 생각으로는 경력으로 살리기에는 무리가 있다 싶어서 혼자 뷰와 리액트로 프로젝트를 준비하면서 신입공고를 넣어볼까했습니다ㅜㅜ
2022. 6. 10. 오후 2:43, 옥수수 수염차 : 공고자체가 신입이라면 폭넓은 경험인, 중고 신입 좋아할거같습니다.
2022. 6. 10. 오후 2:44, 옥수수 수염차 : 여러분들 경력 인정받아서 연봉 더 잘 받으셔야합니다. 고생해서 보낸 세월을 낮춰서 날리는건 아깝습니다ㅠ_ㅜ
2022. 6. 10. 오후 2:45, fefe : 3년차인데 1년이 물경력같아서 아직 3년차의 실력이 아닌거같은 느낌이라서 그렇습니다 ㅠㅠ
2022. 6. 10. 오후 2:45, 썰cho : 그간 뭐햇는지 물어보면
2022. 6. 10. 오후 2:45, 썰cho : 난감할수도 있을거같아서
2022. 6. 10. 오후 2:45, 썰cho : 그거 설명만 가능하다면 지워도 될거같아요
2022. 6. 10. 오후 2:47, 허브의 개발 일지 : 저는 사실 프레임워크 사용 경험경력도 중요하지만 1년 동안 사내 개발 하신거면 크지 않나요..? 직군이 다른것도 아니고 살리히면 좋을 것 같아요!
2022. 6. 10. 오후 2:47, 유용태 (teo.yu) : 굳이 지우지는 마세요~ 대신 그걸로 뭘 어필할건지는 고민을 하세요 물경력이라는건 본인이 설명을 못할때 만들어집니다
2022. 6. 10. 오후 2:48, fefe : JSP + jquery 조합으로 사용했던 경험이 이제는 쓸모없어진 것 같아서 지우고싶은 마음입니다. . ㅎ
2022. 6. 10. 오후 2:48, 유용태 (teo.yu) : DOM을 잘 할 수 있는 경험이고
2022. 6. 10. 오후 2:49, 유용태 (teo.yu) : 서버베이스를 걸쳐봤기 때문에 그리고 서비스 운영을 해봤다고 얘기하세요
2022. 6. 10. 오후 2:49, 유용태 (teo.yu) : 남들은 다시 DOM을 공부하는데
2022. 6. 10. 오후 2:49, 썰cho : 저는 그걸로 웹 전반적으로 이해했다고 써도 좋을거같아요
2022. 6. 10. 오후 2:49, 유용태 (teo.yu) : 맞아요
2022. 6. 10. 오후 2:50, 썰cho : 요새는 프론트로 취업하신분들중에 서버도 모르고 오시는분들이 가끔 있어서
2022. 6. 10. 오후 2:50, 유용태 (teo.yu) : 이직을 하고 싶은 이유가 되기도 하잖아요
2022. 6. 10. 오후 2:50, 유용태 (teo.yu) : 맞아요
2022. 6. 10. 오후 2:50, fefe : 헐… 그렇게 이야기할 수 있는 방법이 있었네요.. 생각도 못했습니다. 요즘은 뷰, 리액트 경력만 필요하다 라고 편협하게 생각했던 제 자신이 좀 부끄럽네요 . 
2022. 6. 10. 오후 2:50, 유용태 (teo.yu) : 저도 프레임워크 한지 얼마 안되었고 php에 jquery한 기간 IE678 크로스 브라우징 해본 기간 플래시 해본 경험
2022. 6. 10. 오후 2:51, lucky.jun : 그럼 드는 생각인데 스스로 성장에 부적합한 환경이다? 라고 설명해도 이해해주실까요?
2022. 6. 10. 오후 2:51, 유용태 (teo.yu) : 솔직히 지금 그 경험이 직접적으로 도움이 되는가? 라고 하면 애매하지만 입체적으로 이해하는 사고의 폭은 다르다고 생각해요
2022. 6. 10. 오후 2:51, 유용태 (teo.yu) : 그럼요!!
2022. 6. 10. 오후 2:51, 유용태 (teo.yu) : 그럼요
2022. 6. 10. 오후 2:52, 인사하는 프로도 : 그럼 경력을 살리고 제가 인터뷰와 어필할 수 있는 것들을 잘 준비해가면 경력 이직도 가능할까요?ㅠㅠ
2022. 6. 10. 오후 2:52, 유용태 (teo.yu) : 레거시를 하기 싫다가 아니라 성장하고 싶다잖아요
2022. 6. 10. 오후 2:52, 인사하는 프로도 : 저는 SI에서 프로젝트 한 경험들이 물론 제 개인한테는 도움이 되었지만 새로운 프레임워크나 이러할 기술이 아니다보니
2022. 6. 10. 오후 2:52, 유용태 (teo.yu) : 그럼 경력에서 힘든게 그러면 우리회사에서 요구하는 스킬은 가지고 계시나요? (가령 리액트 타입스크립트) 라고 했을때
2022. 6. 10. 오후 2:53, 유용태 (teo.yu) : 준비가 되어 있는가가 중요하다고 생각합니다
2022. 6. 10. 오후 2:53, lucky.jun : 그런 부분은 개인적으로라도 준비해야겠군요
2022. 6. 10. 오후 2:53, 인사하는 프로도 : 이직을 준비하면서 부정적인 글들을 보면서 약간 걱정이 앞서는 마음입니다 ㅠㅠ
2022. 6. 10. 오후 2:53, 유용태 (teo.yu) : 면접에서 심층질문이 들어올테고 더 빡빡하게 검증은 할체니까요
2022. 6. 10. 오후 2:53, 썰cho : 오래 다닐 회사가 아니면
2022. 6. 10. 오후 2:53, lucky.jun : 어떤글들이요?
2022. 6. 10. 오후 2:53, 인사하는 프로도 : 네네 지금 뷰,리액트,타입스크립트는 따로 공부하면서 프로젝트 준비중입니다
2022. 6. 10. 오후 2:53, 썰cho : 이직해야지!
2022. 6. 10. 오후 2:53, 유용태 (teo.yu) : 부정적이다라기보다 상대적으로 경쟁력이 낮은 것은 맞죠
2022. 6. 10. 오후 2:53, 썰cho : 이런거보단
2022. 6. 10. 오후 2:53, 썰cho : 계속 시도는 해보는게 좋은거같아요
2022. 6. 10. 오후 2:54, 썰cho : 그러다 걸리면 가는거고
2022. 6. 10. 오후 2:54, 썰cho : 아니면 원래 회사 다니는거고
2022. 6. 10. 오후 2:54, 썰cho : 그래야 맘도 편하게 더 좋은회사 이직할수 있는거 같아요
2022. 6. 10. 오후 2:54, 유용태 (teo.yu) : 조기축구팀을 만들때 축구 해본 사람을 공격수로 두고 싶은것은 누구나 그렇잖아요
2022. 6. 10. 오후 2:54, lucky.jun : 너무 좋은 비유네요
2022. 6. 10. 오후 2:54, 인사하는 프로도 : 네 모두들 답변 감사해요 ㅠㅠ
2022. 6. 10. 오후 2:55, 유용태 (teo.yu) : 안해본 경력을 해본 경력자와 연차가 같으니 같다고 해주세요는 어찌보면 불합리한 요구지만
2022. 6. 10. 오후 2:55, 유용태 (teo.yu) : 개발은 잘하는 사람은 뭘해도 잘한다는 게 있어서
2022. 6. 10. 오후 2:55, O_O : 기존 경력을 잘 포장 + 신기술을 개인적으로라도 다뤄보면서 기술 트렌드에도 뒤쳐지지 않았고, 오히려 그동안의 경험을 바탕으로 신입들 보단 더 잘 적응 가능하다는걸 보여줌
이런 느낌 아닐까욥..?
2022. 6. 10. 오후 2:55, 유용태 (teo.yu) : 그런 느낌을 보여주는게 필요하다고 생각해요! 
2022. 6. 10. 오후 2:56, 유용태 (teo.yu) : 오오 +_+
2022. 6. 10. 오후 2:56, 인사하는 프로도 : SI 프로젝트를 다니다보면 80프로정도는 프리로 일하시면서 금융권이나 안정적으로 일하시는 길로 빠지는 분들이 많은데
2022. 6. 10. 오후 2:56, 유용태 (teo.yu) : 그러면서 레거시와 운영을 다 겪어봤다까지!!
2022. 6. 10. 오후 2:56, 인사하는 프로도 : 저는 너무너무도 이직을 원하고 있어서 답답한 마음에 톡 드렸습니다 ㅠㅠ
2022. 6. 10. 오후 2:56, 썰cho : 저희 회사에서 엘지에서 2년 일하고 나와서 스타트업 다니시는분이 이직겸 해서 왔는데
2022. 6. 10. 오후 2:56, O_O : 포장이 진짜 중요한것 같아요... 경력 좋으신분들도 이력서 못써서 서류 탈락하시는 분들 꽤 되더라구요.. 옆에서 보면 분명히 잘하는 사람인데 이력서를 보면 아니 왜 ... 이렇게 쓰세요 하는 느낌이 드는
2022. 6. 10. 오후 2:56, 인사하는 프로도 : 다들 감사해요 지금 마음이 다시 잡히네요ㅠㅠ
2022. 6. 10. 오후 2:56, 썰cho : 도전을 좋아한다로 포장하니까
2022. 6. 10. 오후 2:57, 썰cho : 더 좋게 보이더라고요
2022. 6. 10. 오후 2:57, 썰cho : 왜 엘지에서? 이랬지만
2022. 6. 10. 오후 2:57, 썰cho : 그 답변을 듣고 다 수긍하고 더 좋게봣어요
2022. 6. 10. 오후 2:57, 썰cho : 그런 이유를 찾아보세요
2022. 6. 10. 오후 2:58, 인사하는 프로도 : 넵 감사합니다 오히려 더 좋은 기회로 만들 수 있게 제가 열심히 노력해야겠어요!
2022. 6. 10. 오후 2:58, 유용태 (teo.yu) : 화이팅입니다!! 짬바는 무시 못하는 거죠 ㅎ
2022. 6. 10. 오후 2:59, 프론돌이 : 실무에서 그런걸 못해봤을 수록, 토이프로젝트로나마 해봤고, 개념들을 잘 정리했다. 
라는걸로 나름 어필은 되기 때문에 

깃헙, 블로그 관리를 하시라고 더 추천드리긴 해요 ㅋ
2022. 6. 10. 오후 2:59, 김주영 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 10. 오후 2:59, 프론돌이 : 물론, 실무에서 그런거 해보고, 잘해보이는 사람이 1순위이긴 합니다.
2022. 6. 10. 오후 2:59, 프론돌이 : 1순위가 없을시에, 2순위 중에서 먼저 뽑히려면...이라는 가정
2022. 6. 10. 오후 2:59: 초보님이 들어왔습니다.
2022. 6. 10. 오후 2:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 10. 오후 3:00, 유용태 (teo.yu) : 피자 먹다 자는 무지님 반갑습니다 :)
2022. 6. 10. 오후 3:00, 초보 : 안녕하세요!
2022. 6. 10. 오후 3:00, 초보 : 이모티콘 
2022. 6. 10. 오후 3:02, 초보 : 리덕스 비동기 관련해서 하나만 여쭤봐도 될까요?
2022. 6. 10. 오후 3:02, 유용태 (teo.yu) : 네 안녕하세요~ 여기는 프론트엔드
개발을 하다가 궁금한게 생겼을때 다른 개발자들에게 궁금한 것들 생겼을때 같이 물어보고 또 얘기 나눠보고자 하는 공간입니다~ 꼭 실무 얘기가 아니더라도 취업이나 이직 커리어 고민 본인 글이나 프로젝트 홍보나 자랑 좋은 자료등 편하게 글 남겨주세요 ㅎ
2022. 6. 10. 오후 3:02, 유용태 (teo.yu) : 네~
2022. 6. 10. 오후 3:03, 초보 : 리덕스 공부중인데요 createStore가 deprecated 되서 구글링을 해보니 툴킷을 사용하는걸 권장하더라구요
2022. 6. 10. 오후 3:04, 초보 : 비동기 작업시에 saga나 thunk 대신 툴킷을 사용하는편인가요? 실무에서도?
2022. 6. 10. 오후 3:04, 햄햄 : 툴킷도 함께 사용할수 있어요~
2022. 6. 10. 오후 3:04, 허브의 개발 일지 : thunk랑 saga랑 추구하는 의도를 생각해보시면 답이 나오지 않을까요오~?
2022. 6. 10. 오후 3:04, 햄햄 : saga or thunk + 툴킷
2022. 6. 10. 오후 3:04, 허브의 개발 일지 : rtk는 기본적으로 thunk가 되기 때문에
2022. 6. 10. 오후 3:05, 허브의 개발 일지 : 덕스패턴으로 rtk로 구현하시고 saga랑 묶는게 좋아보입니다 ㅎㅎ
2022. 6. 10. 오후 3:06, 초보 : 아하 이제 막 리덕스 배우고 이제 비동기 공부하려는데 공식문서에도 툴킷에 비동기 기능도 있다고 해서 툴킷만 배워도 되나 싶었는데 천천히 공부해야겠네요
2022. 6. 10. 오후 3:06, 초보 : 알려주셔서 감사합니다
2022. 6. 10. 오후 3:06, 허브의 개발 일지 : redux에서 thunk를 사용한 이유와 더불어 왜 saga가 등장했는지 공부하시면 좋을 것 같아요
2022. 6. 10. 오후 3:07, 초보 : 넵 공식문서 천천히 살펴보겠습니다!!
2022. 6. 10. 오후 3:07, 허브의 개발 일지 : 프레임워크마다 나름의 철학을 찾아가며 공부하는게 좋더라구요 ㅎㅎ
2022. 6. 10. 오후 3:07, 초보 : 이모티콘 
2022. 6. 10. 오후 3:11, 부끄러운 어피치 : 처음에는 이해하기가 어려울수있으니까 직접 구현해보면서 이래저래 해보면 이해하는게 더 빠를수도있어요
2022. 6. 10. 오후 3:14, 초보 : 넵 책에서도 직접 구현하면서 설명해주네요
2022. 6. 10. 오후 3:17, 부끄러운 어피치 : 그런데 요즘도 리덕스에 대해서 설명하라 하면 플럭스 패턴에 대해서도 얘기해야할까요 ??
2022. 6. 10. 오후 3:17, 허브의 개발 일지 : 빠질 수 없지 않을까요?
2022. 6. 10. 오후 3:17, 허브의 개발 일지 : 전 조금 설명충이라
2022. 6. 10. 오후 3:17, 허브의 개발 일지 : 리덕스 물어봤을때
2022. 6. 10. 오후 3:18, 허브의 개발 일지 : 플럭스, 아토믹, 프록시 설명하고 rtk, 사가 이야기한다음 리액트 쿼리랑 swr 이야기했던거같아요
2022. 6. 10. 오후 3:26, 초보 : 그런 개념들도 공식문서에 다 나오는건가요?
2022. 6. 10. 오후 3:27, 초보 : 책에는 그런 개념들 설명이 안나와있던데 … 공식문서 꼼꼼히 봐야겠네요
2022. 6. 10. 오후 3:29, 허브의 개발 일지 : 공식 문서도 공식문서지만 각 프레임워크나 라이브러리만든 핵심 개발자가 컨퍼런스에서 이야기하는거 보시면 좋은 이야기 많아용
2022. 6. 10. 오후 3:29, 허브의 개발 일지 : 저도 잘 몰라서 배우는 입장이라
2022. 6. 10. 오후 3:30, 허브의 개발 일지 : 기술적 구현이 부족하지만 최대한 목적에 맞게 사용할려고 찾아봤던거같아요
2022. 6. 10. 오후 3:33, 초보 : 와.. 그런부분도 찾아보면서 공부하시네요 저도 찾아보겠습니당 
2022. 6. 10. 오후 3:39, 허브의 개발 일지 : 그냥 ㅎ.. 이야기책 보듯이..? 개발도 그냥 하면 재미없잖아요.. 개발 재미없어지면 좀 내려놓고 평소 보고 싶었던 세미나나 블로그 글 보면서 풀고.. 그런거죠.. ㅎ
2022. 6. 10. 오후 3:49, team_smalt 성석원 : 혹시 Angular 에서 Module scope가 다른 컴포넌트를 공유하는 방법을 알고계신분 있을까요 ?
2022. 6. 10. 오후 4:04, 링링 : 카톡은 습관적으로라도 사람들이 늘 체크하고 그룹톡 많이 사용해서 편하게 질문글 올리기 부담감이 없는데
디스코드는 처음 사용하는 사람도 많고 자주 들어가는 것도 아니라서 그런 것 같아요 .
비슷하지만 디스코드는 아카이브 채널 + 모임용? 으로 사용해서 더 좋다고 생각했어요 주제별 좋은 내용만 요약해 놓은 게시판들이 있어서 또 한번 놀랐고요 카톡 오픈채팅방은 금방 300개가 쌓여 있고 여러가지 내용이 섞여있어서 재밌지만 다 따라기가 어려울 때도 있거든요 투채널인거 좋습니다!!
2022. 6. 10. 오후 4:05, 링링 : 여기에 대한 의견요:)
2022. 6. 10. 오후 4:10, 너겟 : 선배님들! 혹시 회사에서 이미지 스토리지 관리는 프론트에서 하나요, 백에서 하나요? 저희는 미니 프로젝트 진행중이라 사실 어느쪽에서 하던지 상관은 없는데 현업에서는 어떻게 하는지 알고싶습니다!!!
2022. 6. 10. 오후 4:11, 멋쟁이 프로도 : 저희는 백엔드요
2022. 6. 10. 오후 4:12, 대장 : 음
2022. 6. 10. 오후 4:12, 대장 : 일반 이미지 파일이면
2022. 6. 10. 오후 4:12, 대장 : S3에 업로드해서 사용합니다
2022. 6. 10. 오후 4:12, 대장 : 저희는용
2022. 6. 10. 오후 4:16, 사수가없어요 : 테오님 말씀 들으니 생각이 많이 확장되네요 감사합니다
2022. 6. 10. 오후 4:30, 허브의 개발 일지 : s3로 바로 엔드포인트가연결되능것보단
2022. 6. 10. 오후 4:30, 허브의 개발 일지 : 샵검색 : #aws cloudfront
2022. 6. 10. 오후 4:31, 너겟 : 아하... 일반이미지가 아니면 어떤게있을까요? 
2022. 6. 10. 오후 4:31, 허브의 개발 일지 : 이걸 활용해서 cdn 구축하는것은 어떨까용~?
2022. 6. 10. 오후 4:31, 너겟 : 오......
2022. 6. 10. 오후 4:31, 너겟 : 저는 s3밖에 생각을 못했어요
2022. 6. 10. 오후 4:32, 허브의 개발 일지 : 이것도
2022. 6. 10. 오후 4:32, 허브의 개발 일지 : s3활용하는겁니다!
2022. 6. 10. 오후 4:34, 곰곰 : 선배님들 제가 이제부터.. 코드리뷰를 해야하는 입장이 되었는데, 사실 저는 코드리뷰를 받아본적이 없어요. 어떻게 진행을 하는게 좋을까요?
2022. 6. 10. 오후 4:36, 아이뽀송 : https://velog.io/@jiseung/code-review 이 글을 추천드립니당
2022. 6. 10. 오후 4:36, 허브의 개발 일지 : https://youtu.be/ssDMIcPBqUE
2022. 6. 10. 오후 4:36, 허브의 개발 일지 : 오 저도 저글 읽어보고 싶었는데
2022. 6. 10. 오후 4:36, 허브의 개발 일지 : 읽어볼게용
2022. 6. 10. 오후 4:36, 아이뽀송 : 오오 맞아요 저분 강의를 정리한 거라고 하더라구요
2022. 6. 10. 오후 4:36, 곰곰 : 감사드립니다 참고하겠습니다
2022. 6. 10. 오후 4:36, 허브의 개발 일지 : 아 그런건가용?
2022. 6. 10. 오후 4:36, 허브의 개발 일지 : 아하아하
2022. 6. 10. 오후 4:39, 너겟 : 감사합니다!
2022. 6. 10. 오후 4:55, O_O : 최근 이직하신분들.. 과제 전형 받으면 JS, TS 뭘로 받으셨는지 혹시 알 수 있을까요?!
2022. 6. 10. 오후 5:00, Hardy : 대부분 고를 수 있게 하셨어요
2022. 6. 10. 오후 5:04, 햄햄 : 저는 최근에 취준할 때 거의 ts였습니다 혹은 ts가산점..
2022. 6. 10. 오후 5:09, 대장 : 아 일반 이미지가
2022. 6. 10. 오후 5:09, 대장 : 사진
2022. 6. 10. 오후 5:09, 대장 : 그냥 이런 일반 이미지 말한거에요 !
2022. 6. 10. 오후 5:10, 카타나 : 와...
2022. 6. 10. 오후 5:12, O_O : 아하 다 비슷하군요 .. 답변 감사합니다!!
2022. 6. 10. 오후 5:16, 허브의 개발 일지 : 일반 이미지 치고 훌륭하네요
2022. 6. 10. 오후 5:27, 선풍기 : 이 정도면 특별 이미지죠
2022. 6. 10. 오후 5:27, Kani : 이미지치고는 너무 오이시이 해보이네요...
2022. 6. 10. 오후 5:27, 뮤츠 : 금요일 저녁에 저런 이미지라..
2022. 6. 10. 오후 5:35, 기뻐하는 라이언 : 안녕하세요 git사용할때 현재 커밋에서 특정 이전 커밋으로 돌아가서 여기에 파일을 add 할수 있을까요?
2022. 6. 10. 오후 5:37, 썰cho : 흠 그래야 하는 이유를 알수있을까요??
2022. 6. 10. 오후 5:37, 썰cho : 현재 커밋들이 컨플릭트 날수도 있을거같아서
2022. 6. 10. 오후 5:37, 썰cho : 비추할거같아요
2022. 6. 10. 오후 5:40, 기뻐하는 라이언 : 같은 커밋에 한 파일을 깜박하고 추가하지 못했습니다.
2022. 6. 10. 오후 5:40, 뮤츠 : 깃허브에 푸쉬한커밋을 되돌리고싶으신건가요?
2022. 6. 10. 오후 5:42, 기뻐하는 라이언 : 특정 커밋에 이동 후에 파일 하나만 추가 하고 싶어서요..
2022. 6. 10. 오후 5:43, 그레이 : rebase 를 하심 됩니다
2022. 6. 10. 오후 5:44, 기뻐하는 라이언 : 네 rebase로 해보겠습니다.
2022. 6. 10. 오후 5:52, 프론돌이 : 사진
2022. 6. 10. 오후 5:52, 프론돌이 : 리얼포스 사세요~~~
2022. 6. 10. 오후 5:55, 짜짜개발자 : 혹시 리액트 네이티브에서 웹뷰띄우는데 스택 애니메이션 효과 주는법 아시는분 계신가요? 지금 생각으로 슬라이드처럼 늘 페이지를 두개띄워서 넘겨야 하나 생각하고있어요 ㅠㅠ 
2022. 6. 10. 오후 5:56, 짜짜개발자 : 웹뷰에서 리액트네이티브 스택 애니메이션 효과를 주는법이 궁금합니다!!!
2022. 6. 10. 오후 5:57, 토마토 : 스크롤바 사용하려고 하는데
아래부분 전체를 height 지정하려고 할때는 어떤 방법을 써야할까요? 600px; 이런식으로 하니까 화면을 줄이면 여백이 생깁니다 ...
2022. 6. 10. 오후 5:57, 토마토 : 삭제된 메시지입니다. 
2022. 6. 10. 오후 5:58, 토마토 : 사진
2022. 6. 10. 오후 5:58, 토마토 : 사진
2022. 6. 10. 오후 5:58, 토마토 : 방법 아시는분 계실까요...?
2022. 6. 10. 오후 5:58, 짜짜개발자 : 엘레멘트의 높이를 계산해서 스테이트로  사용하면 되지않나용? 
2022. 6. 10. 오후 5:59, 스타트업개발자 : 현재 react s3 cloudFront 로 웹뷰를 배포중인데 cloudFront 캐시 설정을 Managed-CachingDisabled 으로 설정해서 캐시가 남지 않도록 하고 새로 배포할 때마다 캐시 삭제 없이 최신 데이터를 보게하고 싶은데,,, 캐시를 삭제해야지 왜 최신데이터가 보일까요? 혹시 다른 설정을 해야할까요?
2022. 6. 10. 오후 6:01, 꽐 : display: flex에 flex-grow: 1로 설정해서 쓰면 되지 않을까요?
2022. 6. 10. 오후 6:03, 토마토 : js로 하는건가요?? 잘 몰라서..
2022. 6. 10. 오후 6:04, 토마토 : 사진
2022. 6. 10. 오후 6:04, 토마토 : 요렇게 나오네용 허허,, 녀석 
2022. 6. 10. 오후 6:04, 토마토 : 이모티콘 
2022. 6. 10. 오후 6:08, 꽐 : 헛...
2022. 6. 10. 오후 6:10, 유용태 (teo.yu) : html,body { height: 100% } 를 쓰셔야 하고
2022. 6. 10. 오후 6:10, 제이 : 아래 컴포넌트에도 높이 100%을 적용하면 남은 공간에서 백퍼센트를 차지하는 걸로 알고있어요!
2022. 6. 10. 오후 6:10, 유용태 (teo.yu) : 부모 컨테이너가 display:flex; flow-flow: column
2022. 6. 10. 오후 6:11, 유용태 (teo.yu) : 가변쪽 크기에 flex:1 이 필요합니다
2022. 6. 10. 오후 6:12, 토마토 : 와우 감사합니다 해볼게요!
2022. 6. 10. 오후 6:12, 토마토 : 이모티콘 
2022. 6. 10. 오후 6:14, 토마토 : 사진
2022. 6. 10. 오후 6:14, 토마토 : 감사합니다 다들 복받으실거에요 ㅠㅠ
2022. 6. 10. 오후 6:15, 진현 : 안녕하세요~! 혹시 캐시삭제없이 해야하는 이유가 있을까요???
2022. 6. 10. 오후 6:17, 유용태 (teo.yu) : cdn header 설정에서 cache-control: must-revalidate 로 지정해보세요 https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/Cache-Control
2022. 6. 10. 오후 6:23, 스타트업개발자 : 일단 캐시 사용하지 않는걸로 설정을 했는데 계속해서 캐시삭제를 해야지만 최신데이터 보이는게 좀 의아해서,,,?
그리고 qa 테스트 하시는 분들이 최신 데이터가 보이지 않으니 유저들도 그렇지 않냐? 라는 질문이 들어와서… 저도 알아보는 중입니다
2022. 6. 10. 오후 7:13, 더위시러 : 개발자는 보통 사내에서 인사평가할때 어떤 지표를 가지고 개개인의 능력을 평가하나요??
2022. 6. 10. 오후 7:15, O_O : 저두 궁금해요... 대기업 같은덴 동료평가랑 정량적 지표가 어느정도 있던데, 스타트업 같은 경우엔 보통 어떻게 하나용...?
2022. 6. 10. 오후 7:24, 허브의 개발 일지 : 레몬베이스 역량 질문
2022. 6. 10. 오후 7:24, 퇴근하는 프로도 : 규모가 작은 스타트업일수록 개발리더가 사내 모든 개발에 개입한다고 봐야해서 코드리뷰로 상시평가 하는 모양이죠
2022. 6. 10. 오후 7:25, 허브의 개발 일지 : 같은거보면 얼마나 일정기한내 아웃풋을 내는지, 데이터 드라이븐을 얼마나 잘 소화 하는지, 팀 내 커뮤니케이션에는 문제가 없는지 등을 많이 봤던거같아용
2022. 6. 10. 오후 7:47, O_O : 흐음 보통 몇퍼정도 올리시나유...? 회바회 사바사겠지먄 ㅠㅠ
2022. 6. 10. 오후 7:55, 스타트업개발자 : 동료평가가 좀 크죠
그리고 자신이 프로젝트에 기여한 정도?
2022. 6. 10. 오후 8:39, 뮤츠 : 혹시 공부하시면서 와 이프로젝트 진짜 괜찮다 인사이트 높이는데 도움이 많이 되었다 하는 퍼블릭 프로젝트 혹시 있으신가요?? 남들은 어떻게 코드를 짜고 로직을 구성하는지 궁금한데 참고할만한 자료 추천해주시면 감사하겠습니다 오픈 라이브러리 말구요!
2022. 6. 10. 오후 8:39, 현수 : velog?..
2022. 6. 10. 오후 8:40, 유용태 (teo.yu) : 피그마 피그잼
2022. 6. 10. 오후 8:40, 유용태 (teo.yu) : 근데 질문이 조금 추상적이서 조금만 더 구체적으로 바꿔서 질문해주실수 있나요? 주제가 너무 흥미로운데요~
2022. 6. 10. 오후 8:42, 곰곰 : 요즘 velog보면서 비슷하게 next js로 만들어보고있는데 배울게정말 많은거같아요
2022. 6. 10. 오후 8:42, 곰곰 : 블로그 뚝딱만들줄알았는데 생각보다 신경써야할곳들이 많더라구요..
2022. 6. 10. 오후 8:46, 뮤츠 : 음~ 저희가 이제 구글링을 통해서 다른 분들은 어떤 프로젝트를 하고 있는지 어떠한 아이디어를 구현하려는지 이런 것들을 많이 접하게 되는데 보통 사이드 프로젝트에서는 코드를 오픈하면서 진행하시는 경우가 많아서 가끔 깃허브에서 코드를 직접 보는데요. 다른 분들은 혹시 남들이 하는 오픈된 프로젝트를 보면서 오~ 이사람 좀 치는데? 했던 감명깊게 본 프로젝트가 있으신지에 대한 질문이었습니다. 많은 인사이트를 얻고싶어서요! 질문이 너무 두루뭉실하죠? 죄송합니다ㅎㅎ
2022. 6. 10. 오후 8:48, 뮤츠 : 비지니스적인면에서이든 기술적인면에서이든 감명을 받았던 프로젝트가 있으셨는지에 대한 물음이었습니다!
2022. 6. 10. 오후 9:44, 유용태 (teo.yu) : https://github.com/antfu
2022. 6. 10. 오후 9:44, 유용태 (teo.yu) : 최근에는 사람이 하는 프로젝트 대부분에서 많은 인사이트를 느끼고 있어요! :)
2022. 6. 10. 오후 9:48, 유용태 (teo.yu) : 그 밖에 오픈소스는 svetle와 rxjs였고 서비스들은 오픈소스들은 거의 못봤는데 퀄리티적인 인사이트로는 피그잼이 정말 최고인것 같아요!! +_+
2022. 6. 10. 오후 9:51, 뮤츠 : 피그잼이 오픈소스라는것도 처음 알아서 놀랍네요! 당분간 피그마가 어떤로직인지 탐구해보겠습니다. 그나저나 역시 테오는 스벨트를 사랑하시는요. 저도 스벨트 연구를 조금 해볼게요!
2022. 6. 10. 오후 9:51, 유용태 (teo.yu) : 피그잼은 아니에요 ^^;; 서비스는 오픈소스가 잘 없어서
2022. 6. 10. 오후 9:53, 뮤츠 : 아그렇군요ㅎㅎ 역시
2022. 6. 10. 오후 9:59, 유용태 (teo.yu) : 피그잼 이전에도 Miro를 필두로 해서 화이트보드 툴이 없던게 아니었는데 UI부터 사용성 퍼포먼스 감성까지 그냥 차원을
넘은 완성도를 한번에 보여줬다는 점에 너무 인상적이었습니다 무엇보다 이것이 웹 기반이라는 점이 더더욱이요 +_+
2022. 6. 10. 오후 10:06, 뮤츠 : 아~그렇군요 확실히 피그마는 디자이너와 프론트엔드개발자의 간격을 조금이나마 줄여준듯한 서비스인것 같습니다! 별 대수롭지 않은 질문에 대답해주셔서 감사합니다
2022. 6. 10. 오후 10:14, 프론트신입생존기 : 태오님은 리액트 뷰 스벨트 중에 스벨트를 제일 좋아하시나요?
2022. 6. 10. 오후 10:15, 유용태 (teo.yu) : 네!!
2022. 6. 10. 오후 10:21, 링링 : 알고리즘 추천도서 질문입니다.
회사다니면서 하루에 하나씩 문제만 풀고 있는데요 제가 비전공자라서 개념도 약한 것 같아서요 입문서 정도의 도식이 많은 개념 도서 추천해주실 게 있으실까요?
누구나 자료구조와 알고리즘 이라는 책이 있길래 살까 보고 있었어요
http://mobile.kyobobook.co.kr/showcase/book/KOR/9791165217815

2022. 6. 10. 오후 10:23, 프론트신입생존기 : 저는 스벨트는 아직 못써봤는데 
혹시 리액트와 뷰에 비교해서 더 좋아하시는 부분이 어떤 점이실까요?
2022. 6. 10. 오후 10:24, 프론트신입생존기 : 회사가 뷰가 기본인데 단기간으로 쓰고 버릴 서비스를 다른 기술스택을 써볼까해서요.
2022. 6. 10. 오후 10:24, 유용태 (teo.yu) : 간결하고 직관적인 문법. 적은 코드 적은 번들 크기, 훨씬 더 빠른 속도 입니다
2022. 6. 10. 오후 10:25, 동동 : 저 봤는데 내용은 좋아요 근데 소스코드가 루비 기반이었단거 같아서 좀 당황하실 수도 있어요 ㅎㅎ
2022. 6. 10. 오후 10:25, 동동 : 그냥 의사코드라 생각하고 보시면 맘 편해요
2022. 6. 10. 오후 10:25, 유용태 (teo.yu) : 뷰를 하다가 스벨트로 가면 진~짜 더 쉬울거에요 vue4가 나온다면 이렇게 나오겠구나 할 정도로
2022. 6. 10. 오후 10:26, 킴티오 : 목차보면 괜찮은 것 같네요. 이것말고도 종만북이라고 구종만씨가 쓴 책도 좋습니다 다만 책 자체가 난이도가 높습니다 ㅎㅎ;
2022. 6. 10. 오후 10:27, 프론트신입생존기 : 오 그정도인가요? 한번 시간날때 날잡고 봐봐야 겠네요.
2022. 6. 10. 오후 10:27, 그레이 : 도서몰에 '알고리즘'이라고 검색했더니 이젠 프로그래밍과 무관한 책이 반 넘는듯 하네요? ㅎㅎ 옛날엔 죄다 프로그래밍 책이었는데
2022. 6. 10. 오후 10:27, 그레이 : openapi, 클라우드 등과 같이 마케팅 용어로 자리잡은듯
2022. 6. 10. 오후 10:34, 유용태 (teo.yu) : 이해하고 적응하는 데에는 진짜 얼마 걸리지 않을거에요~ 혹시 SSR을 해야 하나요?
2022. 6. 10. 오후 10:42, 유용태 (teo.yu) : ssr이 필요하면 svetlekit 아니면 반드시 vite를 이용한 svetle 세팅으로 하시길
바래요~
2022. 6. 10. 오후 10:57, 안녕하세요 : 현재 회사에서 vue를 쓰는데 svelte 금방 적응해서 할 수 있을까요??!
2022. 6. 10. 오후 11:27, 부끄러운 어피치 : 저 어릴때만 해도 속독학원이래서 말도안되는 시간으로 책 보는 기술? 알려주는 곳도 있고 그래서 가끔씩 티비보면 겁나빨리 책 넘기면서 책 읽는 사람들도 보고 그랬었는데, 요즘에는 잘 안보이네요 ㅋㅋ
2022. 6. 10. 오후 11:27, 부끄러운 어피치 : 혹시 속독학원 다니신분 있으신가요?
2022. 6. 10. 오후 11:27, 눈물바다에 빠진 라이언 : 속독학원은 안 다니구
2022. 6. 10. 오후 11:27, 눈물바다에 빠진 라이언 : 학원에서 속독법을 가르쳤었어요(?)
2022. 6. 10. 오후 11:27, 눈물바다에 빠진 라이언 : 국영수 종합학원이었는데
2022. 6. 10. 오후 11:27, 눈물바다에 빠진 라이언 : 국어시간 때 가르쳤었던 기억이..ㅋㅋㅋㅋ;
2022. 6. 10. 오후 11:28, 부끄러운 어피치 : 갑자기 공식문서 보는데, 하루종일 봐도 진전이 없어서 현타가 왔었습니다
2022. 6. 10. 오후 11:28, 부끄러운 어피치 : 효과는 있었나요 ?
2022. 6. 10. 오후 11:28, 눈물바다에 빠진 라이언 : 지금은 다 까먹엇는데요
2022. 6. 10. 오후 11:28, 눈물바다에 빠진 라이언 : 그때 한창 가르칠 때
2022. 6. 10. 오후 11:28, 눈물바다에 빠진 라이언 : 막 이미지 찍듯이 그정도는 아니었고
2022. 6. 10. 오후 11:28, 눈물바다에 빠진 라이언 : 그림을 그리듯이 글이 읽혀졌어요(?)
2022. 6. 10. 오후 11:28, 부끄러운 어피치 : ㅋㅋㅋㅋ 대박이네요
2022. 6. 10. 오후 11:29, 눈물바다에 빠진 라이언 : 글을 보고 캔버스에 그림을 그리듯이 장면을 만든다음에
2022. 6. 10. 오후 11:29, 눈물바다에 빠진 라이언 : 동영상 되감기 하듯이
2022. 6. 10. 오후 11:29, 눈물바다에 빠진 라이언 : 기억하는 방식이었어요
2022. 6. 10. 오후 11:29, 눈물바다에 빠진 라이언 : 그때 효과 좋긴 했는데 지금은 책도 안읽고해서 ㅎ;;;;; 효과 하나도 못 보고 있습니다 큽
2022. 6. 10. 오후 11:29, 부끄러운 어피치 : 시간대비 가성비가 좋겠네요
2022. 6. 10. 오후 11:29, 파이팅하는 무지 : 혹시 웹사이트 개발할때 필요한 배경화면? 이미지 어디서 구하시나요??
2022. 6. 10. 오후 11:29, 눈물바다에 빠진 라이언 : 진짜 잘하는 애들은 막 이미지 찍듯이 읽는다구 하더라구요!
2022. 6. 10. 오후 11:30, 눈물바다에 빠진 라이언 : 저도 개발문서 보면 답이 안 나옵니다 ㅋㅋ
2022. 6. 10. 오후 11:30, 눈물바다에 빠진 라이언 : 기본적으로 독해력이 후달리는듯..
2022. 6. 10. 오후 11:31, 부끄러운 어피치 : 아하.. 속독 하면 대충 연령대가 예상이 되네요 ㅋㅋ 한때 붐이였던지라 ..
2022. 6. 10. 오후 11:31, 부끄러운 어피치 : 친절한 답변 감사합니다 ㅋㅋㅋ
2022. 6. 10. 오후 11:33, 더위시러 : 이모티콘 
2022. 6. 10. 오후 11:33, 더위시러 : 이모티콘 
2022. 6. 10. 오후 11:47, 김주영 : 사실 이미지 찍듯이 무언가를 볼 수 있으면 그것 나름대로 엄청난 재능 아닌가 싶네요...
2022. 6. 10. 오후 11:47, 김주영 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 10. 오후 11:47, 눈물바다에 빠진 라이언 : 같은 반은 아니지만 A반 친구가 그래서...
2022. 6. 10. 오후 11:47, 눈물바다에 빠진 라이언 : 제가 외계인보듯이 쳐다봤던 기억이 있네요 ㅋㅋㅋㅋㅋ
2022. 6. 10. 오후 11:47, 눈물바다에 빠진 라이언 : 막 무슨 세상에 이런일이 수준으로 엄청 빠른건 아닌데
2022. 6. 10. 오후 11:48, 눈물바다에 빠진 라이언 : 눈동자 몇 번 굴리지도 않고 스르륵 읽어버리더라구요..
2022. 6. 10. 오후 11:48, 김주영 : 신기하네요...
2022. 6. 10. 오후 11:48, 눈물바다에 빠진 라이언 : 가장 낮은 반이었던 C반인 제게 아주 신선한 충격이었어요 ㅎㅎ;
2022. 6. 10. 오후 11:55, 제이 : unsplash요!
2022. 6. 10. 오후 11:56: 권노미님이 나갔습니다.
2022. 6. 10. 오후 11:57, jayss : 꽁짜가 최곱니다~!저도 언스플래쉬!

2022년 6월 11일 토요일
2022. 6. 11. 오전 12:02, 파이팅하는 무지 : 감사합니다! 참고해서 넣어보겠습니다ㅎㅎㅎ
2022. 6. 11. 오전 12:09, 자란다 Recruiter : 이모티콘 오늘 저희 CTO님 콘텐츠가 완성되어 자란다 개발팀 소개드릴겸 내용 공유 드립니다! 
많관부 해주시면 싸랑입니다.. 

https://bit.ly/3mxhN2p

총 3편입니다! 
정말 좋은 분입니다 ! 
2022. 6. 11. 오전 12:28, 벙찐 튜브 : 저는 구글링하거나 네이버 그라폴리오이용(파일제목에 창작자표시)합니당
2022. 6. 11. 오전 12:35, 프론트신입생존기 : 감사합니다! 안그래도 이번에 백 프론트 합친 모노레포 구성할때 vite썼었는데 이번에 배운거 그대로 써볼수 있겠네요!
2022. 6. 11. 오전 1:07, 애교뿜뿜 무지 : 안녕하세요! 궁금한게 있는데 useMemo같은 것들을 utils.ts 같은 파일에서 써도 되는 건지 궁금한데 아시는 분 계실까요~?
2022. 6. 11. 오전 1:13, 프론트 : useMemo는 훅이라서 유틸파일같은데서는 못쓰지않을까요?
custom hook을 만들어서 그 안에서 useMemo를 쓰는게 어떨까요!
2022. 6. 11. 오전 1:44: 기뻐하는 라이언님이 들어왔습니다.
2022. 6. 11. 오전 1:44, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 11. 오전 1:44, 기뻐하는 라이언 : 안녕하세요~
2022. 6. 11. 오전 2:06: 택배 상자를 든 네오님이 들어왔습니다.
2022. 6. 11. 오전 2:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 11. 오전 5:20, 김주영 : 안녕하세요~
2022. 6. 11. 오전 7:53, 유용태 (teo.yu) : react만 쓰셨던 분도 적응은 3일도 안 걸렸구요 vue라면 더더욱 금방 하시게 될거에요~ 거의 포팅(?) 수준으로 1:1로 매칭해서 하실 수 있을 거에요. 프레임워크별로 동일한 기능 문법 정리해놓은 사이트 공유 드립니다https://component-party.dev/#reactivity 
2022. 6. 11. 오전 7:54, 유용태 (teo.yu) : 기뻐하는 라이언님 김주영님~ 안녕하세요!! :) 환영합니다 ㅎㅎ
2022. 6. 11. 오전 7:54, 유용태 (teo.yu) : 택배 상자를 든 네오님도 반갑습니다~
2022. 6. 11. 오전 7:59, 유용태 (teo.yu) : https://medium.com/jarandacareer/part-3-%EC%95%84%EB%A7%88%EC%A1%B4-%EC%B6%9C%EC%8B%A0-cto%EA%B0%80-%EB%A7%8C%EB%93%A4%EC%96%B4%EA%B0%88-%ED%85%8C%ED%81%AC-%ED%8C%80%EC%97%90-%EB%8C%80%ED%95%B4-873c076af947 마지막 3편에서 회사에서 뽑고 싶어 하는 좋은 개발자에 보편적으로 이해하기 쉽게 알려주고 있네요 한번 읽어보시면 좋을 것 같아요. :)
2022. 6. 11. 오전 9:38, 프론트신입생존기 : 컴퓨터 카톡에서는 톡에다가 따봉을 못날리나보네요
2022. 6. 11. 오전 9:39, 아이뽀송 : 마우스를 메세지 위에 올리면 오른쪽에 하트가 있어요
2022. 6. 11. 오전 9:48, 자란다 Recruiter : 이모티콘 좋은 주말 되세요!! 
2022. 6. 11. 오전 11:13, 프론트신입생존기 : 사진
2022. 6. 11. 오전 11:13, 프론트신입생존기 : 맥북에서는 아예 따봉이 안보이네요 ㅋㅋㅋ
2022. 6. 11. 오전 11:13, 유용태 (teo.yu) : 업데이트를 해보세요 ㅎ
2022. 6. 11. 오전 11:13, 프린이 : 업뎃하면보일껄요?!
2022. 6. 11. 오전 11:13, 프론트신입생존기 : 아 맥북은 자동업뎃이 안되나 보군요;;;
2022. 6. 11. 오전 11:31, 델 : 돼요!
2022. 6. 11. 오전 11:33, 프론트신입생존기 : 띠용 뭐지
2022. 6. 11. 오후 12:38, 유용태 (teo.yu) : https://eopla.net/magazines/56?utm_source=lkdin&utm_medium=text-organic&utm_campaign=mg-woobro
2022. 6. 11. 오후 12:42, O_O : 코드를 천 줄이든, 만 줄이든 얼마만큼 짜든 간에, 핵심은 '내가 작성한 코드로 만들어낸 비즈니스 가치가 무엇인가?'입니다. 그 비즈니스 가치로 나의 가치가 증명되는 거고 인정받는 것이지 코딩 자체로 인정받는 것은 아니기 때문입니다.
2022. 6. 11. 오후 12:42, 유용태 (teo.yu) : 너무너무너무 공감하는 말입니다 ㅋ
2022. 6. 11. 오후 12:45, O_O : 답변들이 되게 좋네요 좋은글 공유 감사합니다!!
2022. 6. 11. 오후 12:46, 허브의 개발 일지 : 정말 좋은 의미네요 ㅎㅎ 감사합니다
2022. 6. 11. 오후 12:48, 열심히 일하는 네오 : 혹시 next 에서 getServersideprops를 사용한 경우 빌드한 next파일을 띄우는 서버가 따로 필요한가요??
공식문서에서는 그런 가이드가 없는 거 같아서 질문 드립니다!
2022. 6. 11. 오후 12:49, 허브의 개발 일지 : 웹 서버와 앱 애플리케이션 서버의 차이에서 혼돈이 오시는 것 같네요 ㅎㅎ
2022. 6. 11. 오후 12:51, 백엔드! : 혹시 비지니스적 가치가 실질적으로 소프트웨어적으로 이세상에 기여를 한(?) 그런 느낌인가요?
2022. 6. 11. 오후 12:51, 백엔드! : 소프트웨어적으로 문제를 해결한?
2022. 6. 11. 오후 12:54, 허브의 개발 일지 : 프로덕트 아키텍쳐 측면으로 생각해보면 react, next js는 프레임워크이고 웹 서버의 역할을 하게 됩니다.! 그렇기 때문에 역할로서는 Node가 돌아간다고 생각하시면 됩니당.

우리가 www.google.co.kr에 들어가면 벌어지는 일을 생각해보시면 좋을 것 같습니다! DNS랑 라우팅 부분 넘기시고 정적 및 동적 html파일이랑 자바스크립트 파일이 무슨 역할을 하시는지 보시면 좋을 것 같아요
2022. 6. 11. 오후 12:55, 허브의 개발 일지 : 저도 조금 설명드리면서 완벽한 정의가 없다보니 조금 추상적으로 말씀드렸네요 ㅎㅎ.. 브라우저 작동원리를 저도 다시 살펴봐야겠슴당
2022. 6. 11. 오후 12:57, 열심히 일하는 네오 : 자세한 설명 감사합니다ㅎㅎ
한 번 공부해보겠습니다!
2022. 6. 11. 오후 12:58, 허브의 개발 일지 : next build 도 같이 보시면 도움 많이 되실 것 같아용
2022. 6. 11. 오후 1:32, 흔들 : 주말 잘 쉬고 계신지요?
여러분들은 키보드를 어떤걸 쓰시나요? 아무래도 개발자에게 키보드도 중요한 요소라고 생각해서요. 저는 앱코무접점과 개인적으로 만든 키보드 이렇게 2개 사용합니다. 
2022. 6. 11. 오후 1:33, 철진 : 저는 회사에서는 레오폴드 무접점 사용하고 있습니다! 집에서는 레오폴드 갈축 사용중이에요
2022. 6. 11. 오후 1:35, 곰곰 : 저는 레오폴드 넘비싸서 앱코 엔데버 35g 무접점 쓰는데 아주좋아요
2022. 6. 11. 오후 1:35, 흔들 : 와 레오폴드많이 쓰시네요.
2022. 6. 11. 오후 1:36, 흔들 : 35g 쓰다가 좀 날려서 40g으로 바꾸려고요.
2022. 6. 11. 오후 1:36, 곰곰 : 전 요즘 손가락이랑 손목건강이 안좋아서 ;ㅁ;...
2022. 6. 11. 오후 1:37, 곰곰 : 첨에 기계식 갈축 쓰다가 손가락 아파서 바꿨는데 아주 만족중...
2022. 6. 11. 오후 1:37, 흔들 : 전 기계식은 소리가 너무커서 주변 눈치보여서.... ㅎㅎ
2022. 6. 11. 오후 1:37, team_smalt 성석원 : 저는 키크론 k3, k8 둘다 갈축 사용합니다 
2022. 6. 11. 오후 1:38, 흔들 : 제가 손가락 힘이 너무 쎈가봐요. ㅡㅡ
2022. 6. 11. 오후 1:38, 유용태 (teo.yu) : 서든어택2가 서든어택보다 훨씬 더 많은 코드로 만들어졌지만 망했죠
2022. 6. 11. 오후 1:40, 백엔드! : 아 ... 
2022. 6. 11. 오후 1:40, 백엔드! : 그런느낌이군요 이해했습니다 감사합니다 :)
2022. 6. 11. 오후 1:42, 대장 : 저는 회사에서 키크론 k8 적축
집에서 애플 매직키보드 사용합니당
2022. 6. 11. 오후 1:43, 유용태 (teo.yu) : 글의 정확한 요지는 개발을 하면서 문제해결을 많은 코드로 무조건 해결하고자 하는 것보다 더 나은 가치를 만드는 적은 코드를 사용할 수 있는 해결 능력이 더 중요하다 그런 얘기이기는 합니다 ㅎ
2022. 6. 11. 오후 1:43, 프린이 : 저는 리얼포스 r3 30g인데 만족스럽네요 사각사각하는 손맛..
2022. 6. 11. 오후 1:45, 흔들 : 적은 코드라는 말. 저도 가끔 고민하지만 그게 정말 중요한 능력? 같습니다. 그런능력은 타고나야하나? 이런 생각까지..  
2022. 6. 11. 오후 1:46, 흔들 : 리얼포스 좋죠. 30g 괜찮으세요?
2022. 6. 11. 오후 1:47, 프린이 : 손가락힘이 약해서 좋네용 ㅎㅎ
2022. 6. 11. 오후 1:50, 기타치는 튜브 : 사실 코딩오 글쓰기랑 비슷해서 퇴고(리팩토링)하면서 간결해지는거 어닌가요. 처음부터 뿅나오면 좋지만 그런 경험은 가뭄에 콩나듯해서 ㅎㅎ
2022. 6. 11. 오후 1:50, 유용태 (teo.yu) : 짬을 먹다보면 일정이랑 리소스는 정해져있다면 어떻게 구현하지?가 아니라 어떻게 해결하지? 하면서 정답보다 상황에 맞는 해법을 찾다보면 그렇게 되는 것 같아요 그중에는 기존에 생각지도 못했던 유레카도 있도 아니면 그저 꼼수인 기술부채가 되고 그러지만 구현이 아니라 그전에 방법을 고민해보는 것은 필요한거 같아요 :)
2022. 6. 11. 오후 1:50, O_O : 저는 조용한걸 좋아해서 바밀로 저소음적축써요!
2022. 6. 11. 오후 1:53, 흔들 : 전 이런 마인드적 고민 너무좋다고 생각합니다.
2022. 6. 11. 오후 1:54, 흔들 : 바밀로꺼도 한번 써봐야겠네요.
2022. 6. 11. 오후 1:54, 멋쟁이 프로도 : 리얼포스 r2 for mac 30g이요~
2022. 6. 11. 오후 1:55, 흔들 : 아놔 35g도 날려서 바꾸려는데 30~35g도 많이 쓰시는군요.
2022. 6. 11. 오후 1:58, 곰곰 : 30g 구름타법 익숙해지면
2022. 6. 11. 오후 1:58, 곰곰 : 좀만 무거운거쓰면 손가락 아픕니당 ㅋㅋㅋㅋ
2022. 6. 11. 오후 2:04, 흔들 : 실력이 좋으니 가능하신겁니다. ㅎㅎ
2022. 6. 11. 오후 2:09, dding-g : 저는 빨콩씁니다 ㅎㅎ
2022. 6. 11. 오후 2:12, 흔들 : 띵지님 빨꽁이라하믄 예전 노트북사이에 꼽혀있던 마우스...
2022. 6. 11. 오후 2:13, 허브의 개발 일지 : 저도 엔데버 35g 무접점 쓰는데
2022. 6. 11. 오후 2:13, 허브의 개발 일지 : 조금 높이가 높아서 불편합니당
2022. 6. 11. 오후 2:13, 허브의 개발 일지 : 팜레스트 쓰고 하긴 하는데
2022. 6. 11. 오후 2:14, 허브의 개발 일지 : 개인적으로 레오폴드 FC660b나 저소음 적축이 좋은 것 같아요
2022. 6. 11. 오후 2:14, 허브의 개발 일지 : 무접점이 생각보다 조용한 키보드는 아니더라구요
2022. 6. 11. 오후 2:14, O_O : 다들 기계식 쓰시면 팜레스트 쓰시나요?
사야지사야지 생각만하다가 일년 지낫는데..
2022. 6. 11. 오후 2:14, 흔들 : 전 그래서 노뿌 계열로다가 쓰고있긴 합니다.
2022. 6. 11. 오후 2:14, 허브의 개발 일지 : 없으면 손목 갈리는 느낌 ㅎ
2022. 6. 11. 오후 2:15, 흔들 : 저도 씁니다 
2022. 6. 11. 오후 2:15, 허브의 개발 일지 : 최근엔 무접점 키보드 좋긴한데[
2022. 6. 11. 오후 2:15, 택배 상자를 든 네오 : mx keys는 어떻게 생각하시나요??!
2022. 6. 11. 오후 2:15, 허브의 개발 일지 : mx keys mini 보고 있었어요
2022. 6. 11. 오후 2:15, 허브의 개발 일지 : 오 맞아요 저도 좀 보고 있는데
2022. 6. 11. 오후 2:15, 허브의 개발 일지 : 조금 잘그락 거리는 느낌이 없지않아 있더라구요
2022. 6. 11. 오후 2:16, 허브의 개발 일지 : 근데 디자인도 이쁘고 지금 로지텍 버티컬 쓰는데 같이 쓰면 디자인이 이뻐보여서 ㅎㅎ
2022. 6. 11. 오후 2:16, 택배 상자를 든 네오 : mini 는 logiBolt이용하는것 같던데요 
2022. 6. 11. 오후 2:16, 택배 상자를 든 네오 : 로지텍 버티컬도 로지볼트 사용하나요?
2022. 6. 11. 오후 2:18, 흔들 : 요거 노트북마냥 너무 낮아서 불편하지 않으세요?
2022. 6. 11. 오후 2:19, 흔들 : 키는 눌려야 제맛이라...
2022. 6. 11. 오후 2:21, dding-g : 씽크패드 키보드가 무선으로 나온게 따로 있어서 그거 사용합니다!
2022. 6. 11. 오후 2:34, 까루 : 저는 엠스톤 코랄축 38g 쓰는데 되게 좋은거 같아요
2022. 6. 11. 오후 3:03, O_O : 사진
2022. 6. 11. 오후 3:04, O_O : 오늘 트위터에서 핫한 주제같은데.. 어떻게들 생각하시나요??!
2022. 6. 11. 오후 3:05, 유용태 (teo.yu) : 면접에서는 특정 질문에 대한 대답을 못한것으로 떨어뜨리지는 않는데 ㅋㅋ 뭔가 공감이 갈만한 느낌의 만화네요 ㅋㅋ
2022. 6. 11. 오후 3:13, 엉망장자 : 저도 비슷하게 질문 받았었는데 저렇게 무섭게 물어보시지는 않았던…ㅋㅋㅋㅋ 오히려 기술 관련해서 이야기 나누는건 재밌었던거 같아요
2022. 6. 11. 오후 3:16, 유용태 (teo.yu) : 저 역시 그렇다고 생각했지만 저렇게 느껴질수도 있구나 싶긴한데 대부분의 마음은 말씀하신대로 그냥 개발자가 기술 얘기를 나누고 싶은 형태라고 생각합니다 면접이라는 특수 상황이라 그렇지
2022. 6. 11. 오후 3:17, 현수 : 저거 너무 면접관분이 악마스럽게 나왔네요ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 11. 오후 3:19: 엄지척 어피치님이 나갔습니다.
2022. 6. 11. 오후 3:26, O_O : 이미지는 너무 과장된거 같아요 ㅋㅋㅋㅋㅋ
2022. 6. 11. 오후 3:27, 최민석 : ㅋㅋㅋ 저런 면접 나쁘지않은데 굉장히 나쁘게나왔네요
2022. 6. 11. 오후 3:27, O_O : 트위터 타임라인 반응이 생각보다 부정적인 의견이 많아서.. 다른 분들 의견이 궁금했어요
2022. 6. 11. 오후 3:42, 햄햄 : 프로젝트 같은데서 제가 쓴 기술에 대해 질문하는건 대답하기 좋은 것 같아요 ㅋㅋㅋ 진짜 암기가 필요한 질문들은 왠지 무섭죠 ㅜㅜ
2022. 6. 11. 오후 4:34, 프론트신입생존기 : 앜ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 11. 오후 4:41, 웹린이 : 저는 저런 유형의 질문 좋았던 것 같네요 ㅋㅋㅋㅋ
2022. 6. 11. 오후 4:46, hustle-dev : 깃헙에 재미있는 뱃지들이 여러개 생겼네요
2022. 6. 11. 오후 4:46, hustle-dev : https://github.blog/2022-06-09-introducing-achievements-recognizing-the-many-stages-of-a-developers-coding-journey/
2022. 6. 11. 오후 4:49, 그레이 : 짤은 유머 같고 글은 좀 진지하게 반응한 것 같네요 ㅎㅎ
2022. 6. 11. 오후 4:52, O_O : 요거 귀엽더라구요 ㅎㅎㅎ
2022. 6. 11. 오후 4:55, hustle-dev : 맞아요 ㅋㅋㅋ 오늘 처음보는데 신기했어요
2022. 6. 11. 오후 5:04: Luke님이 나갔습니다.
2022. 6. 11. 오후 5:05: 엄지척 프로도님이 들어왔습니다.
2022. 6. 11. 오후 5:05, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 11. 오후 6:33, 유용태 (teo.yu) : 엄지척 프로도님~ 반갑습니다 어서오세요   :)
2022. 6. 11. 오후 6:44, 자란다 Recruiter : 모두 즐저녁 입니다!!!! 
2022. 6. 11. 오후 7:54, 신나는 프로도 : 혹시 하나의 div를 드래그 하여 움직였을때 또 다른하나의 div가 같이 따라서 움직이게 하려면 어떤 키워드를 검색해야하나요?
2022. 6. 11. 오후 8:12: 초롱초롱 무지님이 들어왔습니다.
2022. 6. 11. 오후 8:12, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 11. 오후 8:14, 초롱초롱 무지 : 안녕하세요 혹시 부트스트랩 관련 질문해도 되나요?
2022. 6. 11. 오후 8:16, 유용태 (teo.yu) : 그럼요
2022. 6. 11. 오후 8:17, 유용태 (teo.yu) : 초롱초롱 무지님~~ 환영합니다 ㅎ
2022. 6. 11. 오후 8:18, 유용태 (teo.yu) : drag library와 css transform, setTimeout 정도면 원하는 것을 충분히 만드실 것 같아요~
2022. 6. 11. 오후 8:19, 초롱초롱 무지 : 답변 정말감사드립니다! :) 제가 지금 bootstrap사용해서 pug를 하고 있는데 input태그에서 마우스 갖다대면 뜨는 색상을 어떻게 바꿔야하는지 모르겠어서요ㅠ 
2022. 6. 11. 오후 8:19, 초롱초롱 무지 : 사진
2022. 6. 11. 오후 8:19, 초롱초롱 무지 : 사진
2022. 6. 11. 오후 8:19, 초롱초롱 무지 : 혹시 아시는 분 계실까요?!
2022. 6. 11. 오후 8:20, 유용태 (teo.yu) : 일단 드래그로 하나의 엘리먼트을 움직이게 하시는 것은 시중에 많으니 사용해보시고 그 offset만큼 다른 div를 찾아서 transform하면 될것 같아요
2022. 6. 11. 오후 8:20, 유용태 (teo.yu) : css는 전혀 안 사용하시나요?
2022. 6. 11. 오후 8:21, 초롱초롱 무지 : 네!  css는 따로안만들었는데  css파일 따로 없이는 못바꾸나요??!ㅠ
2022. 6. 11. 오후 8:24, 그레이 : 저 파란 아웃라인 말씀하시는건가요?
2022. 6. 11. 오후 8:24, 초롱초롱 무지 : 넵!
2022. 6. 11. 오후 8:24, 유용태 (teo.yu) : https://stackoverflow.com/questions/14820952/change-bootstrap-input-focus-blue-glow
2022. 6. 11. 오후 8:24, 유용태 (teo.yu) : bootstrap 자체에서는 색깔 변경 옵션이 없네요
2022. 6. 11. 오후 8:25, 포유 : hover 할때의  border나 outline을 바꾸면 될텐데..
2022. 6. 11. 오후 8:25, 그레이 : css 파일을 안써야하는 특별한 이유가 없다면 css 파일 만드셔서 form-control 클래스에 focus 셀렉터를 수정하시면 될듯
2022. 6. 11. 오후 8:26, 초롱초롱 무지 : 네 모두 답변 감사합니다! 한번 해보도록 하겠습니다!
2022. 6. 11. 오후 8:36, 신나는 프로도 : 답변 감사합니다 시도해보겠습니다:)
2022. 6. 11. 오후 8:37: 튜브낀 튜브님이 들어왔습니다.
2022. 6. 11. 오후 8:37, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 11. 오후 8:39, 초롱초롱 무지 : 아 그리고 이거는 너무 쉬운거 질문 하는 것 같아 죄송한데ㅠㅠ platter.jpg 를 사용하고 싶은데 파일 경로를 어떻게 수정해야 할까요??
2022. 6. 11. 오후 8:39, 초롱초롱 무지 : 사진
2022. 6. 11. 오후 8:40, 유용태 (teo.yu) : 튜브낀 튜브님 반갑습니다~
2022. 6. 11. 오후 8:41, 그레이 : 일단 image 폴더를 저 public 폴더 아래 두셔야 할듯?
2022. 6. 11. 오후 8:42, 초롱초롱 무지 : 앗 이렇게 하니까 바로 되었어요! img폴더는 항상 public 폴더 안에 있어야하는군요! 감사합니다 ㅎㅎ
2022. 6. 11. 오후 9:08: 박종승님이 들어왔습니다.
2022. 6. 11. 오후 9:08, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 11. 오후 9:09, 유용태 (teo.yu) : 박종승님~~ 어서오세요 반갑습니다 :)

2022년 6월 12일 일요일
2022. 6. 12. 오전 9:22, 박종승 : 안녕하세요!! 저도 반갑습니다. 테오님 블로그 통해서 들어오게 되었어요! 게시글들 너무~~ 잘보고 있어요ㅎ, 인사도 드릴겸 커뮤니티 경험도 해보고 싶어서 바로 참여버튼 눌렀어요. 덕분에 많이 배우고 있어요. 감사합니다:)
2022. 6. 12. 오전 9:23, 유용태 (teo.yu) : 너무 너무 감사합니다!! :)
2022. 6. 12. 오전 9:27, 유용태 (teo.yu) : 이 곳은 블로그에서 적힌 내용이나 프론트엔드에 궁금한 것들을 남겨주시면 답변을 드리고자 했던 공간에서 이제 다 같이 질문와 답변하면서 함께 성장하는 공간이 되었습니다ㅎ 어떤 질문이나 주제던간에 모두에게 생각을 해볼 수 있는 환기가 되므로 편하게 글 남겨 주시면 제가 아는대로 답변 드리겠습니다~ 다른 분들도 많이 도움을 주실거에요~ 종승님도 내가 아는 질문이다 싶으면 주저말고 답변남겨주세요 ㅎ
2022. 6. 12. 오전 9:31, 박종승 : 네네. 알겠습니다:)
2022. 6. 12. 오전 9:53, 선풍기 바람 쐬는 어피치 : 안녕하세요. 공부하다가 this에 관련해서 질문이있습니다. 일반 함수로 호출된 Circle 내부의 this는 전역 객체를 가리키는데, 콘솔 로그로 출력한 radius는 전역에 변수가 없으니 에러가 날거라 생각했는데 15가 출력되어 이 부분이 이해가 안됩니다..😭
2022. 6. 12. 오전 9:53, 선풍기 바람 쐬는 어피치 : 사진
2022. 6. 12. 오전 9:58, 유용태 (teo.yu) : function을 그냥 호출하게
되면 this는 window 객체가 됩니다 ㅠㅠ window객체는 전역객체이니 this.radius = window.radius = radius = 15 가 되는 것입니다
2022. 6. 12. 오전 9:59, 철진 : 이건 var, let, const에 대해서 공부해보시면 좋을 것 같습니다.  전역 객체에 변수로 선언이 되어있어서 15가 나오는 것입니다.
2022. 6. 12. 오전 10:00, 유용태 (teo.yu) : 많은 사람들이 이건 설계상 미스라고 봐서 나중에 최신 자바스크립트에서는 'use strict'를 하거나 module모드에서는 안되도록 했지만 이미 만들어진 구 스펙 하위호환을 위해서 남겨둔 거에요 굳이 알 필요도 없고 응용할 필요도 없는 방식입니다
2022. 6. 12. 오전 10:00, 철진 : var a = 5 
console.log(window.a) // 5

const a = 5 
console.log(window.a) // undefined 
2022. 6. 12. 오전 10:00, 철진 : 태오님 말씀이 맞습니다!! 
2022. 6. 12. 오전 10:03, 선풍기 바람 쐬는 어피치 : 두분 다 정말 감사합니다!!
2022. 6. 12. 오전 10:59, 프린이 : https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/this
2022. 6. 12. 오전 10:59, 프린이 : 요거 읽어보시면 도움될거에요 ㅎㅎ
2022. 6. 12. 오전 11:37, 프론트신입생존기 : This 같은 Js 개념 공부는 모던 자바스크립트 deep dive랑 코어 자바스크립트책도 추천드립니다.
2022. 6. 12. 오전 11:40, 동동 : 근데 신입 면접에 단골으로 나오는 질문이더라구요 ㅎㅎ…
면접준비하면 알아야 하는 ㅠㅠ ㅋㅋㅋㅋㅋ
2022. 6. 12. 오전 11:41, 프론트신입생존기 : 저는 사실 한번도 질문 받아보질 못했네요
2022. 6. 12. 오전 11:44, 모랑 : this에 대해서 설명해보세요는 간간히 들어보긴 했네요
2022. 6. 12. 오전 11:51, 프론트신입생존기 : 아 저도 그정도는 받았던거 같기도... 근데 위에 분이올려주신것처럼 응용해서 풀어봐 한적은 앖었어요.
2022. 6. 12. 오후 12:03, 철진 : 위의 문제는 this도 관련 있지만 변수 할당 관련 문제이기도 해서 복합적으로 기억하면 될 것 같아용!
2022. 6. 12. 오후 12:04, 철진 : 스코프 체인이 관련되어있기도 하고
2022. 6. 12. 오후 12:08: 초롱초롱 무지님이 나갔습니다.
2022. 6. 12. 오후 12:19, 모랑 : 함수 호출의 주체가 어떤것인지를 포커싱하면 이해하기 좀 더 편하더라구요
2022. 6. 12. 오후 12:57: 현윶님이 들어왔습니다.
2022. 6. 12. 오후 12:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 12. 오후 12:57, 유용태 (teo.yu) : 현윷님~ 반갑습니다 :)
2022. 6. 12. 오후 12:58, 현윶 : 안녕하세요! :)
2022. 6. 12. 오후 1:10, 유용태 (teo.yu) : 여기는 프론트엔드 관련 궁금한 것들을 서로 묻고 답하면서 함께 성장하고자 하는 공간입니다 ㅎ 궁금한 내용이 관심자 흥미로운 주제나 본인 글 본인 프로젝트 등 편하게 글 남겨주세요 ㅎ
2022. 6. 12. 오후 3:30, 프엔공부중 : 질문이 있습니다! 아래 코드처럼 조건에 따라 다른 뷰를 보여주어야 할 때 jsx안에 삼항연산자를 써서 코드를 작성하는 방법이랑 jsx 밖에서 함수를 만들어서 작성하는 방법 중에서 어떤 형태로 작성하시나요?!!
2022. 6. 12. 오후 3:30, 프엔공부중 : 사진
2022. 6. 12. 오후 3:33, 그레이 : 종종 그냥 두번 씁니다
 {isAuth && <>a</>}
 {!isAuth && <>b</>}

2022. 6. 12. 오후 3:35, 철진 : 저는 삼항연산자를 더 많이 쓰는 것 같습니다. 가독성이 안좋아진다면 함수로 분리를 고려해보고요! 
2022. 6. 12. 오후 3:36, 나그네 : 조건부 렌더링이나 Conditional Rendering 을 키워드로 검색해보세요~
2022. 6. 12. 오후 3:38, 부끄러운 어피치 : 메가스터디 it교육도 시작하네요 ㄷㄷ
2022. 6. 12. 오후 3:38, O_O : 그렇지않아도 페북에 광고뜨더라구요...   
2022. 6. 12. 오후 3:39, 부끄러운 어피치 : 그러니까요 
2022. 6. 12. 오후 3:41, 델 : 저는 조건에 따라 a or b 인 상황이라면 삼항연산자를 쓰고, 근데 로직이 너무 크다면 함수로 빼고, 로그인되지 않았거나 데이터가 아직 오지 않은 등 예외적인 상황에 대한 ui처리를 해줘야 하는 거면 if문을 써요!
2022. 6. 12. 오후 3:43, 프엔공부중 : 대부분 간단한 로직이면 jsx안에 사용하시는군요 답변해주신 분들 너무나 감사합니다!
2022. 6. 12. 오후 3:44, 피자 먹다 자는 무지 : onClick에서 분기처리해줘도 되지않나요
2022. 6. 12. 오후 3:44, 피자 먹다 자는 무지 : 아 로그아웃이랑 로그인이었군요 ㅈㅅ
2022. 6. 12. 오후 3:54, 엄지척 튜브 : 삭제된 메시지입니다. 
2022. 6. 12. 오후 3:56, Kani : ?
2022. 6. 12. 오후 3:56, 헬렌 : ?
2022. 6. 12. 오후 3:58, 카타나 : ?
2022. 6. 12. 오후 4:01, 대장 : ?
2022. 6. 12. 오후 4:02, O_O : 사진
2022. 6. 12. 오후 4:07, 초롱초롱 네오 : 이모티콘 
2022. 6. 12. 오후 4:07, 초롱초롱 네오 : 이모티콘 
2022. 6. 12. 오후 4:07, 초롱초롱 네오 : 이모티콘 
2022. 6. 12. 오후 4:11, Kani : 인스타 홍보 뭐시기 올리신거 같던데
2022. 6. 12. 오후 4:23: Rudy.black님이 들어왔습니다.
2022. 6. 12. 오후 4:23, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 12. 오후 4:24: Rudy.black님이 나갔습니다.
2022. 6. 12. 오후 5:53: 비옷입은 튜브님이 들어왔습니다.
2022. 6. 12. 오후 5:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 12. 오후 5:54, 유용태 (teo.yu) : 안녕하세요 비옷입은 튜브님~~ 반갑습니다 :)
2022. 6. 12. 오후 5:55, 비옷입은 튜브 : 안녕하세요!
2022. 6. 12. 오후 5:55, 유용태 (teo.yu) : 네~ 어서오세요! 여기는 프론트엔데에 대해 질문하고 답하고 좋은 자료나 관심사를 공유하는 공간입니다. ㅎ 편하게 글 남겨주세요. ㅎ
2022. 6. 12. 오후 5:57, 비옷입은 튜브 : 넵 감사합니다 ㅎㅎ
2022. 6. 12. 오후 6:06, 허브의 개발 일지 : 혹시 rn으로 개발하실때 개발단계에서 기획자나 디자이너에게 개발하신 곳 까지 공유하실때 어떻게 하시나요?
2022. 6. 12. 오후 6:06, 허브의 개발 일지 : 직접 기획자나 디자이너 폰으로 빌드를 해주시나요?
2022. 6. 12. 오후 6:09, 프론트 공부 : 파이어베이스 앱 디스트리뷰션 을 사용했습니다!  
가까이있다면 직접 빌드하는것도 괜찮을거같아요
2022. 6. 12. 오후 6:09, 허브의 개발 일지 : 아하 감사합니다!

2022년 6월 13일 월요일
2022. 6. 13. 오전 2:22: 옐로우님이 들어왔습니다.
2022. 6. 13. 오전 2:22, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오전 4:02: 엄지척 프로도님이 나갔습니다.
2022. 6. 13. 오전 8:15, 유용태 (teo.yu) : https://nirazanbasnet.medium.com/dont-use-100vh-for-mobile-responsive-43a709c7e9e6
2022. 6. 13. 오전 8:36, 유용태 (teo.yu) : 옐로우님 반갑습니다. 어서오세요 :)
2022. 6. 13. 오전 8:50, 사수가없어요 : 여쭤볼게 있는데
2022. 6. 13. 오전 8:50, 사수가없어요 : 타입스크립트 클론코딩하면서 배우는게 낫나요? 
2022. 6. 13. 오전 8:50, 사수가없어요 : 아니면 책이나 기본부터 듣고 클론코딩하는게 나을까요?..
2022. 6. 13. 오전 8:51, 유용태 (teo.yu) : 혹시 본인이 작업한 JS 프로젝트가 조그만한거라도 있나요?
2022. 6. 13. 오전 8:51, 사수가없어요 : 네(부끄)
2022. 6. 13. 오전 8:51, 사수가없어요 : 이펙티브 타입스크립트 이거 들어볼까 하다가
2022. 6. 13. 오전 8:51, 사수가없어요 : 난이도가 높은거 같아서…
2022. 6. 13. 오전 8:51, 유용태 (teo.yu) : 그러면 그냥 해당 프로젝트를 TS로 한번 마이그레이션을 먼저 해보는 것을 추천합니다.
2022. 6. 13. 오전 8:52, 사수가없어요 : 앵무새처럼 따라해서 그건 좀 어려운거 같아요 
2022. 6. 13. 오전 8:52, 사수가없어요 : (흑흑)
2022. 6. 13. 오전 8:52, 썰cho : 그럼 이번에
2022. 6. 13. 오전 8:52, 썰cho : 타스로 만들면서
2022. 6. 13. 오전 8:52, 썰cho : 새로 만들어보세요
2022. 6. 13. 오전 8:53, 사수가없어요 : 그럼 기본을 듣고
2022. 6. 13. 오전 8:53, 사수가없어요 : 마이그레이션 하라는거죠?
2022. 6. 13. 오전 8:53, 유용태 (teo.yu) : 마이그레이션에서 막히면 막히는 부분을 중심으로 공부하기를 추천드려요
2022. 6. 13. 오전 8:54, 썰cho : 저도 같은 의견입니다 공부를 하고 만드는거보다
2022. 6. 13. 오전 8:54, 선풍기 바람 쐬는 어피치 : 오..꿀팁이다....
2022. 6. 13. 오전 8:54, 유용태 (teo.yu) : 타입스크립트의 모든 기능을 다 한번에 알아야 할 필요는 없는데 중요하고 중요하지 않고를 이해시키려면 경험밖에 없는 것 같아서요
2022. 6. 13. 오전 8:54, 썰cho : 만들다가 막히는걸 찾아보는게 더 공부 잘되는거같아요
2022. 6. 13. 오전 8:55, 사수가없어요 : 음.. 조언감사합니다 고민해볼게요
2022. 6. 13. 오전 8:55, 사수가없어요 : (하하)
2022. 6. 13. 오전 8:55, 유용태 (teo.yu) : vite등을 이용해서 typescript 개발 환경을 세팅시면 기존에 있던 js 프로젝트의 이름을 전부 ts로 바꾸기만 해도 일단 동작은 합니다.
2022. 6. 13. 오전 8:56, 웅세 : 마침 이부분 고민중이었는데 감사합니다!
2022. 6. 13. 오전 8:56, 웅세 : 사진
2022. 6. 13. 오전 8:56, 유용태 (teo.yu) : 그리고 만나는 무수한 TSxxxx 경고 메시지들을 만날 수 있게 있게 되는데 그걸 하나씩 격파(!)해 나가듯이 한번 해보세요! ㅎ
2022. 6. 13. 오전 8:56, 웅세 : 이코드는 혹시 프로젝트 내 어떤 파일에 작성하면되려나요..
2022. 6. 13. 오전 8:56, 사수가없어요 : 오 한번 알아볼게요
2022. 6. 13. 오전 8:56, 사수가없어요 : 고맙습니다~
2022. 6. 13. 오전 8:57, 유용태 (teo.yu) : 아무데나 넣어도 상관없을것 같네요. ㅎ
2022. 6. 13. 오전 8:58, 유용태 (teo.yu) : 바닐라라면 index.html이나 index.js에 프레임워크를 쓴다면 main.tsx나 main.ts 혹은 App 등에 넣으시면 될거에요 ㅎ
2022. 6. 13. 오전 8:59, 사수가없어요 : TypeScript #
vite는 .ts 파일에 대한 컴파일링 및 Import 역시 지원합니다.

단, 타입 체킹은 오로지 IDE 또는 빌드 프로세스에만 의존하며, Vite 자체에서는 .ts 파일에 대한 타입 체킹 작업을 진행하지 않습니다. 타입 체킹이 필요하다면 필요하다면 tsc --noEmit*을 빌드 스크립트에 넣어주세요. 만약 *.vue 소스 코드를 작성중이라면, vue-tsc를 설치해 vue-tsc --noEmit을 빌드 스크립트에 넣어서 타입 체킹을 하도록 설정할 수 있습니다. (* --noEmit: 컴파일링 없이 타입 체킹만을 수행하는 옵션)

Vite의 TypeScript 컴파일링은 Esbuild를 이용하며, TypeScript 소스 코드를 JavaScript 소스 코드로 변환하는 작업에 대해 tsc 대비 약 20~30배 정도 빠른 퍼포먼스를 보이고 있습니다. (HMR은 50ms 미만)

참고로 타입만을 가져오는 경우 잘못 번들링이 될 수 있으며, 이는 타입 전용 Imports와 Exports를 사용하여 이 문제를 우회할 수 있습니다:
2022. 6. 13. 오전 8:59, 사수가없어요 : https://vitejs-kr.github.io/
2022. 6. 13. 오전 8:59, 웅세 : 감사합니다 테오😊
2022. 6. 13. 오전 9:00, 사수가없어요 : 감사합니다 테오😊님
2022. 6. 13. 오전 10:28, 여의도개발 : 사진
2022. 6. 13. 오전 10:28, 여의도개발 : 벌써 2일 남았네용~
2022. 6. 13. 오전 10:28, 썰cho : 웨일에서 ie돌아가는거 만들었다던데..
2022. 6. 13. 오전 10:29, 썰cho : 사진
2022. 6. 13. 오전 10:29, 썰cho : 이거네요..
2022. 6. 13. 오전 10:37, SI탈출하는상상하는프로도 : 이모티콘 으아악
2022. 6. 13. 오전 10:48, 곰곰 : 그만좀....  이제 좀 보내줘...
2022. 6. 13. 오전 11:01: 인사하는 프로도님이 들어왔습니다.
2022. 6. 13. 오전 11:01, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오전 11:02: 인사하는 프로도님이 나갔습니다.
2022. 6. 13. 오전 11:03: 인사하는 프로도님이 들어왔습니다.
2022. 6. 13. 오전 11:03, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오전 11:39, 유용태 (teo.yu) : Jay-G loves noodles 님 반갑습니다 :)
2022. 6. 13. 오전 11:44, 영교 : 사진
2022. 6. 13. 오전 11:44, 영교 : 혹시 이런 주석 처리를 지칭하는 용어를 알 수 있을까요???
2022. 6. 13. 오전 11:45, 프론돌이 : javadoc, jsdoc 형식의 주석이라고 말해요
2022. 6. 13. 오전 11:46, 영교 : 감사합니다!!
2022. 6. 13. 오전 11:56, 허브의 개발 일지 : tsdoc이나 jsdoc은 따로 추가 없이 저렇게 주석 추가만하면 바로 뜨나요?
2022. 6. 13. 오전 11:56, 초보 : 취업할때 제출 할 프로젝트 만들때 백엔드쪽은 파이어베이스로 해도 괜찮을까요? 아니면 express로 서버 구축까지 해야할까요?
2022. 6. 13. 오전 11:56, 프론돌이 : 예전부터 많이 써오던 방식이라 
ide에서 
특정 함수 위에서 
 /** 치시고 엔터 치시면 자동완성으로 어느정도 되서 나와요
2022. 6. 13. 오전 11:57, 유용태 (teo.yu) : 상관없어요~ 왜 선택했는데 썼더니 어땠는지 설명만 할 수 있으면 됩니다 ㅎ
2022. 6. 13. 오전 11:57, 허브의 개발 일지 : 오호오호 감사합니다
2022. 6. 13. 오전 11:57, 그레이 : 플러그인 같은걸 말씀하시는 거라면 요즘은 ide에서 다 지원합니다
2022. 6. 13. 오전 11:57, 허브의 개발 일지 : 매번 유틸 설명 pr에 빼곡히 적었었는데
2022. 6. 13. 오전 11:57, 허브의 개발 일지 : 한번 이렇게 적용해볼게요
2022. 6. 13. 오전 11:58, 프론돌이 : 이름이 javadoc, jsdoc이라고 하는거에서 느껴지는 것처럼, 
예전에는 코드에서 저렇게 만들어두고, 
저런 주석을 모아서 API 문서화 같이 documentation을 해주는 용도로 쓰이곤 했었는데, 

지금은 그런 용도는 좀 줄었고, 

대신 ts기준으로, 
저렇게 해두면, 
쓰는 쪽에서 마우스 가져가 댔을 때, 저런 정보가 자세히 나와요.
2022. 6. 13. 오전 11:58, 프론돌이 : 변수 설명 같은 것도 그렇고, 함수 설명도 그렇고 등등등
2022. 6. 13. 오전 11:58, 초보 : 감사합니다!
2022. 6. 13. 오전 11:58, 허브의 개발 일지 : 감사합니다~ ㅎㅎ 빨리 해보고 싶네요 혹시 잘 정리된 블로그같은거 있으신가요?
2022. 6. 13. 오전 11:59, 프론돌이 : 음. 그냥 예전부터 써오던 경험적인걸로 쭉 썼던거라, 그건 모르겠네요 ㅋ
2022. 6. 13. 오후 12:01, 즐거운 네오 : jsdoc 공식문서 보시면 될거같아요
2022. 6. 13. 오후 12:02, 즐거운 네오 : https://jsdoc.app/index.html
2022. 6. 13. 오후 12:02, 허브의 개발 일지 : 감사합니다 ㅎㅎ
2022. 6. 13. 오후 12:03, 영교 : 친절한 설명 감사합니다 ㅜㅜ
2022. 6. 13. 오후 12:14, 프론돌이 : 사진
2022. 6. 13. 오후 12:14, 프론돌이 : 리얼포스 R3 주문한거 이제 와서 쓰고 있는데 조용하고 좋네요
2022. 6. 13. 오후 12:14, 프론돌이 : 역시 프론트 개발자는 텐키 있는 풀배열!!!
2022. 6. 13. 오후 12:24, Hello World : 안녕하세요 질문이 있습니다!
webpack devServer https: true로 설정해주면 자체 ssl 인증서를 생성하게 되나요~?!
2022. 6. 13. 오후 12:43, O_O : 우측상단에 동그란건뭐하는거에요?!
2022. 6. 13. 오후 12:43, 프론돌이 : 전원 on/off, 페어링 변경 등등이요 ㅋ
2022. 6. 13. 오후 1:05: 벌 서는 라이언님이 들어왔습니다.
2022. 6. 13. 오후 1:05, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 1:09, 철진 : 혹시 프로젝트에 storybook 사용하시는 분들은 API에 종속적인 부분도 다 storybook을 사용하시는 편일까요?? storybook이 좋은 건 알겠는데 팀원들도 사용을 어려워하기도 해서 어떤 방향으로 도움을 줄 수 있을지 고민이 됩니다! 
2022. 6. 13. 오후 1:11, 눈물바다에 빠진 라이언 : 파이썬 라이브러리 폴더를 파이썬 설치폴더에 넣어주려고 하는데 mac이 자꾸 팅기네요… 보안때문에 그런 것 같은데 어떤걸 만져야하나요?
2022. 6. 13. 오후 1:12, 여의도개발 : mock api 연동해보시면 좋아요
그럼 api 따른 상태케이스를 모두 보실수 있어요
2022. 6. 13. 오후 1:12, 눈물바다에 빠진 라이언 : 팅긴다는게 마우스 포인터가 폴더를 못 옮기게 막는 표시로 바뀌네요 ㅠ
2022. 6. 13. 오후 1:30, 설아아빠 : 사진
2022. 6. 13. 오후 1:31, 설아아빠 : 요거는 개인정보 판매하려구 개정하는 약관일까영... ㅎㅎ
2022. 6. 13. 오후 1:33, 토마토 : 사용자끼리 교환하는 정보는 본인 책임이라는거 아닌가요?
2022. 6. 13. 오후 1:59, 초보 : import 관련 하나만 여쭤봐도 될까요?
2022. 6. 13. 오후 1:59, 철진 : 찾아보겠습니다! 감사합니다!!
2022. 6. 13. 오후 2:03, 초보 : 리액트에서 컴포넌트 import 할때 import *as api from “/lib/api”  처럼 import 뒤에 *as 붙이면 해당 컴포넌트 안에 export 붙인 함수들은 api.fuction 이런식으로 사용할수 있는건가요?
2022. 6. 13. 오후 2:16: 츄리닝안경 네오님이 들어왔습니다.
2022. 6. 13. 오후 2:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 2:16, 츄리닝안경 네오 : 안녕하세요
2022. 6. 13. 오후 2:16, 여의도개발 : https://storybook.js.org/addons/msw-storybook-addon
2022. 6. 13. 오후 2:17, 유용태 (teo.yu) : 벌 서는 라이언님 츄리닝 안경 네오님~~ 반갑습니다 :)
2022. 6. 13. 오후 2:17, 츄리닝안경 네오 : 네 반갑습니다 :)
2022. 6. 13. 오후 2:17, 츄리닝안경 네오 : OPACITIY 에 관해서 질문해도 괜찮을까요?
2022. 6. 13. 오후 2:17, 영교 : 네 맞습니다..!
2022. 6. 13. 오후 2:17, 유용태 (teo.yu) : 그럼요~
2022. 6. 13. 오후 2:18, 츄리닝안경 네오 : 동영상
2022. 6. 13. 오후 2:18, 츄리닝안경 네오 : 첫 번째 페이지처럼  텍스트가 왼쪽에서 오른쪽으로 나타나게 하려는데요   두 번째 페이지는 OPACITY TRANSFORM TRANSITION 적용해도 안되네요.
2022. 6. 13. 오후 2:18, 초보 : 감사합니다
2022. 6. 13. 오후 2:33, 대장 : 리액트에서 config.js에서 env 환경변수 선언 한 것을 css에서 사용하게 할 수 있을까요 ?? 찾아봐도 나오지가 않네요 ㅠㅠ
2022. 6. 13. 오후 2:34, 뮤츠 : 환경변수를 css 에서 사용할일이 뭔지가 궁금하네요
2022. 6. 13. 오후 2:36, 대장 : 음
2022. 6. 13. 오후 2:36, 대장 : S3에 올린 이미지 파일을 땡겨서 사용하는데요
2022. 6. 13. 오후 2:36, 대장 : 개발서버랑 운영서버랑 다르게 관리하려고 합니다 
2022. 6. 13. 오후 2:41, 박용준 : css-in-js 모듈에 GlobalStyle 기능이 찾으시는거랑 관련 있을거 같네요
2022. 6. 13. 오후 2:45: 무무님이 들어왔습니다.
2022. 6. 13. 오후 2:45, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 2:45, 유용태 (teo.yu) : 엄지척 제이지님 반갑습니다 어서오세요. ㅎ
2022. 6. 13. 오후 2:45, 무무 : 닉넴 바꿨어요   
2022. 6. 13. 오후 2:45, 대장 : css in js 생각하긴 했는데 그냥 css에서는 없나보네요 ! 그냥 styled component로 해야겠네요
2022. 6. 13. 오후 2:45, 무무 : 네네 반갑습니다. 
2022. 6. 13. 오후 2:50, 프론트 공부 : JS 에서 document.documentElement.style.setProperty 사용해서 할 수 있진않을까용??
2022. 6. 13. 오후 2:52, 허브의 개발 일지 : 문자열로 className으로넘기면 되지 않을까요?
2022. 6. 13. 오후 2:54, 허브의 개발 일지 : 아 s3면 이미지 같은거군용
2022. 6. 13. 오후 2:58, 대장 : 네넵
2022. 6. 13. 오후 3:42, 머리 빗는 네오 : 저희팀이 좀 특이?한것같아서 여쭤봅니당
2022. 6. 13. 오후 3:42, 머리 빗는 네오 : 사진
2022. 6. 13. 오후 3:42, 머리 빗는 네오 : 네트워크를 확인해보면 같은걸로 두개씩 가는데 원래는 한개같은데여
2022. 6. 13. 오후 3:42, 머리 빗는 네오 : 사진
2022. 6. 13. 오후 3:43, 머리 빗는 네오 : 메서드가 옵션과, 요청하는 메서드 이렇게 두개씩 갑니다
2022. 6. 13. 오후 3:43, 머리 빗는 네오 : 사진
2022. 6. 13. 오후 3:46, arthur : https://nukeguys.github.io/dev/options-request/ 이거 한번 봐보세요~
2022. 6. 13. 오후 3:52, 토마토 : 좋은정보 감사합니다.
2022. 6. 13. 오후 5:09: 피자 먹다 자는 무지님이 들어왔습니다.
2022. 6. 13. 오후 5:09, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 5:09: 피자 먹다 자는 무지님이 나갔습니다.
2022. 6. 13. 오후 5:10: 피자 먹다 자는 무지님이 들어왔습니다.
2022. 6. 13. 오후 5:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 6:16: 직종변경님이 들어왔습니다.
2022. 6. 13. 오후 6:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 6:17, 빠밤 : 질문있는데 useState설정할때 

import { useState } from 'react';

const DiaryEditor = () => {
  const [state, setState] = useState({
    author: '',
    content: '',
    emotion: 1
  });

  const handleChangeState = (e) => {
    setState({
      ...state,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = () => {
    console.log(state);
    alert('저장 성공!');
  };

  return (
    <div className='DiaryEditor'>
      <h2>오늘의 일기</h2>
      <div>
        <input
          value={state.author}
          onChange={handleChangeState}
          name='author'
          placeholder='작성자'
          type='text'
        />
      </div>
      <div>
        <textarea
          value={state.content}
          onChange={handleChangeState}
          name='content'
          placeholder='일기'
          type='text'
        />
      </div>
      <div>
        <span>오늘의 감정점수 : </span>
        <select
          name='emotion'
          value={state.emotion}
          onChange={handleChangeState}
        >
          <option value={1}>1</option>
          <option value={2}>2</option>
          <option value={3}>3</option>
          <option value={4}>4</option>
          <option value={5}>5</option>
        </select>
      </div>
      <div>
        <button onClick={handleSubmit}>일기 저장하기</button>
      </div>
    </div>
  );
};
export default DiaryEditor;


이런코드가 있는데 여기

  const handleChangeState = (e) => {
    setState({
      …state,
      [e.target.name]: e.target.value
    });
  };

이렇게 설정한부분은 e.target.name이 string이고 string을 객체의 키로받을때는 []를써야해서 이렇게 코드짰다고 생각했는데 제 생각이맞나요?
2022. 6. 13. 오후 6:19, 고규식 : 프론트엔드 신입입니다!
회사에 프론트엔드 개발 사수가 없는 경우에는 어떤식으로 성장? 실력을 향상 시킬수 있을까요?... 
서버개발자분께서 잘하셔서 기본적인 로직들은 도와주셔서 구현은 다 하고있지만 
시간이 어느정도지나면 제가 좀 더 딥한 프론트 지식들을 사용하여, 문제들을 해결해야할텐데... 걱정이네용 ㅠㅠ
2022. 6. 13. 오후 6:19, 프론돌이 : 저렇게 하면, 
handleChangeAuthor, handleChangeContent, handleChangeEmotion 세개를 만들필요 없이 하나로 할 수 있어요
2022. 6. 13. 오후 6:20, 빠밤 : 저 궁금한게 

  const handleChangeState = (e) => {
    setState({
      …state,
      [e.target.name]: e.target.value
    });
  };

이부분에서 []를 쓰는게
2022. 6. 13. 오후 6:20, 빠밤 : 사진
2022. 6. 13. 오후 6:21, 빠밤 : 이거떄문에그런거맞나요?? 
2022. 6. 13. 오후 6:21, 론트리니 : 넵 맞아용
2022. 6. 13. 오후 6:21, 프론돌이 : 넵
2022. 6. 13. 오후 6:21, 빠밤 : 이런문법이있는지는 정말몰랐네요.. 반성합니다
2022. 6. 13. 오후 6:21, 빠밤 : 저는그냥 점표기법이랑 대괄호표기법으로만 키벨류 추가하는줄..
2022. 6. 13. 오후 6:21, 론트리니 : 이제 아셨으면 된거죠뭐 ㅋㅋ 
2022. 6. 13. 오후 6:22, 빠밤 : 알려주셔서감사합니다!
2022. 6. 13. 오후 6:22, 빠밤 : 결국 string을 추가하려면 []을써서 추가해야한다

이렇게 이해했는데 이거맞나요?
2022. 6. 13. 오후 6:22, 빠밤 : 객체의 키로 string을 동적으로 추가하려면 []을 사용해야한다
2022. 6. 13. 오후 6:23, 프론돌이 : string을 추가하려면은 아닌데, 뒤에 말씀하신 것처럼 string을 동적으로 추가하려면은 맞아요 ㅋ
2022. 6. 13. 오후 6:23, O_O : 이건 아뇨....
2022. 6. 13. 오후 6:23, 빠밤 : 혹시 어디부분이잘못됐을까요?
2022. 6. 13. 오후 6:24, 빠밤 : string이 아니라 객체의 키를 동적으로 추가하려면 []을 사용해야한다

이거맞나요?? 
2022. 6. 13. 오후 6:25, 빠밤 : 아.. 대괄호표기법자체가 동적으로 키를 추가할때 쓰니까 그냥 []쓰는거라고 이해하면될까요? |

https://medium.com/sjk5766/javascript-object-key-vs-object-key-%EC%B0%A8%EC%9D%B4-3c21eb49b763
2022. 6. 13. 오후 6:28, 철진 : computed property name 검색해보시면 관련 내용 보실 수 있어요!
2022. 6. 13. 오후 6:29: 공부중개린이님이 들어왔습니다.
2022. 6. 13. 오후 6:29, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 13. 오후 6:31, O_O : 넹 철진님이 알려주신게 정식명칭이에욥
2022. 6. 13. 오후 6:33, 빠밤 : 다들감사합니다
2022. 6. 13. 오후 7:09, 울지마 라이언 : scroll-snap 사용해보신 분 있으신가용? 스크롤할때는 부드러운데, 마우스 휠로 하면 특히 사파리에서 버벅이네요 ㅠ 해당 문제 혹시 해결하신 분 계실까요 
2022. 6. 13. 오후 7:27, 햄햄 : 그때 그때 닥친 문제들 해결하고 흥미 생기는 것들 집에서 추가로 공부해보면 되지 않을까요? 저두 비슷한 상황이라 ㅎㅎ..
2022. 6. 13. 오후 7:33, 유용태 (teo.yu) : 사수가 있으면 도움이 되겠지만 사수의 방법이 또 정답이거나 맞다는 보장은 없지요. 프론트엔드는 만들어지지 얼마 안되다 보니 다들 막연할 거라고 생각하고 저마다의 Best Practice들을 찾아 가는 중입니다. 그러니 결국 사수가 있어도 곧 뭐가 Best인지 모르는 상황이 오시게 될거에요. 그러니 계속 이게 최선일까?와 같은 자기성찰을 하시면서 이러한 커뮤니티를 통해서 계속 끊임없이 같이 질문하고 함께 생각하기를 바래요~ 사수가 있던 없던 일단 주어진 과제는 스스로 할 수 있는 단계는 가야하기에 일단 회사 업무를 교보재 삼아서 많은 것들을 시도해보시기 바랍니다~ ㅎ
2022. 6. 13. 오후 7:36, 부탁하는 무지 : addEventListener functional로 react에서 사용하면 state가 initial 값으로 나오는 게 맞나요? hook 사용할 때는 ref를 사용하거나 class 컴포넌트를 사용하라던데...... 다른 분들은 이 이슈 어떤 방식으로 해결하셨는지 궁금합니다
2022. 6. 13. 오후 7:36, 코린이 : 알고리즘 공부를 해보려하는데 대부분 자바 씨 씨++ 파이썬 이던데... js는 기업에서 잘 안보나요?..
2022. 6. 13. 오후 7:37, 타로 : Storybook 공부하면서 fake api를 쓰려고 하는데 혹시 어떤 종류가 있을까요?
2022. 6. 13. 오후 7:39, 여의도개발 : Msw
2022. 6. 13. 오후 7:40, 그레이 : 예를 들어주시면 답변하기 편할듯합니다
2022. 6. 13. 오후 7:43, 파이팅 : 프엔은 js로 많이 보는걸로 알아요!
2022. 6. 13. 오후 7:47, 델 : 개인적으로 알고리즘 공부하기에 js가 그리 적합하지 않다고 생각하긴 해요 성능이 좋지 않으면서 추상화가 많이 돼있는 언어라

제대로 공부하실거면 c나 java 가 제일 나을 거 같아요
2022. 6. 13. 오후 7:48, 프론돌이 : 알고리즘을 대회에 나갈 목적으로, 
속도 최적화를 하시는게 목적이면, js는 맞지 않는게 맞는데, 
그런게 아니라, 일반 회사에서의 코딩 테스트나 취미 정도의 목적이면 js로 하시는게 더 나을것 같아요 전. 
실제로 프론트 코테는 대부분 js로 보니까요.
2022. 6. 13. 오후 7:49, 델 : 사실 제가 본 코테들은 js 안 써도 되긴 했어요
2022. 6. 13. 오후 7:49, 프론돌이 : 저도 취미로 1일 1문제 풀고 있는데, 그러다보니, 어디서 문제 보더라도 좀 덜 당황하는게 있어서 좋은 것 같아요
2022. 6. 13. 오후 7:49, 델 : 뭔가 리액트 하면서 자스 시작해서 그런지 자스로 명령적 코드를 짜는 게 영 어색하더라고요ㅠ
2022. 6. 13. 오후 7:49, 프론돌이 : 사진
2022. 6. 13. 오후 7:50, 프론돌이 : 애기 재우다가 같이 잠들면서 빵구들 생기는건 슬픔 ㅜㅜ
2022. 6. 13. 오후 7:51, 벙찐 튜브 : 어마무시하네요..
2022. 6. 13. 오후 7:57, 고규식 : 감사합니다! ㅎㅎ
2022. 6. 13. 오후 7:58, 퇴근하는 프로도 : 코테 자바스크립트로 봐서 속도 느리더라도 어차피 테스트케이스 시간제한이 언어별로 달라서 상관없지 않나요?
2022. 6. 13. 오후 7:59, 여의도개발 : https://youtu.be/T7y6Hl0YZ14
2022. 6. 13. 오후 8:00, 델 : 시험 통과는 하는데, 시간복잡도나 공간복잡도 계산이 안되다 보니 알고리즘 공부가 된다는 느낌은 아니더라고요
2022. 6. 13. 오후 8:02, 델 : 물론 코테 통과가 목적이시고 쉬운 알고리즘들 위주로 공부하실 거라면 저도 js 추천합니다 :)
2022. 6. 13. 오후 8:05, 철진 : 시간복잡도나 공간복잡도 계산 같은 경우에는 자바스크립트도 계산이 되지 않나요!?? 안되는 이유가 있을까요??🤔
2022. 6. 13. 오후 8:06, 웹린이 : 프론트엔드 코테는 JS로 언어 제한하는 경우가 있고, JS로 문제 풀면서 언어를 익히기도 좋아서 저는 JS 로 코테 준비하는거 괜찮다고 생각해요~
2022. 6. 13. 오후 8:06, 웹린이 : 저도 이부분 궁금하네요
2022. 6. 13. 오후 8:07, 으쓱으쓱 어피치 : 저도 동의합니다~~ 그리고 프론트개발하면서는 쓸일이 거의 없는 코드도 알고리즘풀면서 짜게되어서 JS에 더 친숙해지고 공부 되는느낌을 많이 받아요!
2022. 6. 13. 오후 8:11, 프엔이될테야 : 알고리즘..  외면하고있었는데 자극받고갑니다!! 저도 준비해봐야겠네요
2022. 6. 13. 오후 8:11, 썰cho : 솔직히 풀기쉬워서 파이썬으로 많이들 하시는데 자스로 풀면 다 직접 구현해야해서
2022. 6. 13. 오후 8:11, 썰cho : 이해도도 높아지긴 하더라고요
2022. 6. 13. 오후 8:12, 파이팅 : 맞아요 저도 프젝할땐 안쓰던 코드들 알고리즘풀때 쓰니깐 새롭게 재밌더라고용ㅎㅎ 자스에 대해 더 배우는느낌
2022. 6. 13. 오후 8:19, 웹린이 : 결국 어떤 언어로 풀던 언어 특성에 따른 디테일한 부분만 달라지고 핵심은 같아서, 편하신걸로 공부하시고 프론트 개발자를 지망하시면 위에서 말씀드린 대로 익숙해질 겸 JS 추천드려요 ㅎㅎ
2022. 6. 13. 오후 8:19, 웹린이 : JS 풀이가 잘 없는 문제들도 있는데 결국 핵심은 같기에 다른 언어로 작성된 풀이 참고해도 큰 문제 없으실꺼에요~
2022. 6. 13. 오후 8:20, 프론돌이 : 문제풀이 플랫폼으로 근데 백준은 별로 비추...하고 싶네요
2022. 6. 13. 오후 8:20, 웹린이 : 백준은 입력받기가
2022. 6. 13. 오후 8:20, 웹린이 : 진짜 까다롭죠 ㅋㅋㅋ
2022. 6. 13. 오후 8:20, 프론돌이 : 백준은 I / O 관련해서 좀...
2022. 6. 13. 오후 8:20, 프론돌이 : 맞아요 ㅋ
2022. 6. 13. 오후 8:20, 프론돌이 : 애초에 테크기업들 코테가 영어로 대부분 나오기도 하니까 

리트코드, 코딜리티, 이런걸로 하는게 더 좋은 것 같아요
2022. 6. 13. 오후 8:20, 프론돌이 : 한글만 보다가 영어 문제 포면 처음엔 어리버리하니까
2022. 6. 13. 오후 8:22, 허브의 개발 일지 : js는 프로그래머스랑 릿코드가 좋긴 하더라구요 ㅎㅎ
2022. 6. 13. 오후 8:22, 웹린이 : 그래도 백준 보일러플레이트 하나 만들어 놓고 쓰면
2022. 6. 13. 오후 8:22, 웹린이 : 나름 괜찮드라구요 ㅎㅎ
2022. 6. 13. 오후 8:22, 썰cho : 거기 노드 버전이 낮아서
2022. 6. 13. 오후 8:22, 썰cho : 가끔 안되는게 있어서 좀 그렇더라고요
2022. 6. 13. 오후 8:23, 프론돌이 : 0.대 버전이었던걸로 본 것 같은데 요즘도 그런가요 ㄷ ㄷ
2022. 6. 13. 오후 8:23, 썰cho : 요새는 되는거 같기는한데 또 안되는거 있으면.. 좀 그럴거같아서..
2022. 6. 13. 오후 8:23, 웹린이 : 맞아요 프로그래머스
2022. 6. 13. 오후 8:23, 썰cho : 예전에 map함수 백준에서 안돌아가서 화났었어요..
2022. 6. 13. 오후 8:23, 웹린이 : replaceAll도 지원 안했던것 같네요
2022. 6. 13. 오후 8:23, 썰cho : 프로그래머스에서 지원안해줬어요??
2022. 6. 13. 오후 8:23, 썰cho : 백준이 아니라?
2022. 6. 13. 오후 8:24, 웹린이 : 프로그래머스도 지원 안했던걸로 기억합니다 ㅎㅎ
2022. 6. 13. 오후 8:24, 웹린이 : 지금은 하는지 모르겠네요😅
2022. 6. 13. 오후 8:25, 썰cho : 아 그래요?? 그건 몰랐습니다..
2022. 6. 13. 오후 8:26, 웹린이 : replaceAll이 node 15버전 부터 지원하는데 프로그래머스는 12버전 쓰고 있네요!
2022. 6. 13. 오후 8:27, 웹린이 : 이모티콘 
2022. 6. 13. 오후 8:27, 썰cho : 지금도 그런가요.. 버전업좀 해주지
2022. 6. 13. 오후 8:28, 웹린이 : 넵 그런것 같아요 ㅋㅋㅋ 방금 보고왔는데
2022. 6. 13. 오후 8:28, 웹린이 : 사진
2022. 6. 13. 오후 8:28, 웹린이 : 12네요 ㅠㅠ
2022. 6. 13. 오후 8:30, 웹린이 : 백준은 16이네요!
2022. 6. 13. 오후 8:30, 썰cho : 백준은 그새 올렸나보네요
2022. 6. 13. 오후 8:30, 웹린이 : 백준은 꽤 예전부터 16지원 했었던 것 같아요 예전에 풀었을 때도 for await 같은거 써도 문제 없었어서 ㅎㅎ;
2022. 6. 13. 오후 8:31, 햄햄 : replaceAll 안되던데 많았던걸로 기억 ㅜ
2022. 6. 13. 오후 8:31, 웹린이 : 언제 업데이트 했는지 정확히는 모르겠네요
2022. 6. 13. 오후 8:31, 썰cho : 그래요/? 저 처음에
2022. 6. 13. 오후 8:31, 썰cho : 신입때 map함수도 안돌아가서
2022. 6. 13. 오후 8:31, 썰cho : 백준은 버렸었는데
2022. 6. 13. 오후 8:31, 웹린이 : 아 꽤 예전이라 하기는 좀 그렇네요 ㅋㅋㅋㅋㅋ
2022. 6. 13. 오후 8:31, 웹린이 : 올해 초라서...
2022. 6. 13. 오후 8:31, 썰cho : 어느순간에 map되길래
2022. 6. 13. 오후 8:31, 썰cho : 아 저는 1년반전이라..
2022. 6. 13. 오후 8:31, 웹린이 : 작년쯤 업데이트 됐나보네요!
2022. 6. 13. 오후 8:33, 프엔공부중 : 혹시 프론트에서 뷰 로직과 비즈니스 로직을 구별할 수 있는 기준을 알 수 있을까요? 관련글을 봤는데도 이해가 쉽지 않네요 ㅠ
2022. 6. 13. 오후 8:34, 썰cho : 기준이라는게 애매한게 사람마다 다를거같아요
2022. 6. 13. 오후 8:35, 유용태 (teo.yu) : 뷰로직만 있으면 어떻게든 다른 프로젝트에서도 쓸수는 있어요 비지니스 로직은 그 프로젝트에서만 쓰는 로직이라고 접근하면 조금 편하실것 같아요~
2022. 6. 13. 오후 8:39, 프엔공부중 : 그렇군요..! 찾아보면서도 참 애매하네요..
2022. 6. 13. 오후 8:39, 프엔공부중 : https://medium.com/@shinbaek89/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-business-logic%EC%9D%98-%EB%B6%84%EB%A6%AC-adc10ae881ab
2022. 6. 13. 오후 8:40, 프엔공부중 : 제가 봤던 글을 이 글입니다!
2022. 6. 13. 오후 8:41, 유용태 (teo.yu) : 여기서 말하는 뷰로직은 컴포넌트에 존재해야할 로직과 그렇지 않은 로직을 말하고 있는 거네요~
2022. 6. 13. 오후 8:45, 유용태 (teo.yu) : 이 글에서 마지막에 제안하는 백엔드와 프론트엔드의 관계를 가지고 예시를 드는게
제일 이해하기시는 편하실 것 같네요~ 우리가 백엔드 데이터는 명확히 비지니스 로직이라는 것을 알고 있고 그 데이터를 적절히 뷰로 변경하는 일을 프론트엔드가 하고 있죠
2022. 6. 13. 오후 8:46, 유용태 (teo.yu) : 프론트엔드는 뷰에서 데이터를 보여주고 이벤트를 받아서 데이터를 수정하는 역할을 수행하게 되는데 보여주고 이벤트를 받는 영역을 뷰 그 외의 영역을 비지니스로 로직이라고 한다면 프론트엔드안에서 다시 백엔드와 프론트엔드가 한번 더 나눠져 있다고 생각하면 어떨까요? 마치 REST API와 같은 계층이 존재해서 데이터를 수정하고 불러오는 역할만 하는
2022. 6. 13. 오후 8:50, 유용태 (teo.yu) : 화면이 아니라 데이터를 중심으로 생각을 했을때 나중에 기획과 디자인이 화면을 다 갈아 엎더라도 남겨질 영역이 비지니스 로직이라거나 

완전 다른 디바이스 ex)음성기반 UI 처럼 완전 UI가 다른 곳으로 이 프로그램을 포팅할때 가져갈 코드가 비지니스 로직이라고 생각할 수 있으실까요?
2022. 6. 13. 오후 8:52, 햄햄 : 오오 좀 더 이해가 되는 것 같아요👍👍 
2022. 6. 13. 오후 8:53, 프엔공부중 : 아아아아 오 감을 좀 잡은 것 같아요! 자세한 설명 너무나 감사합니다 ㅠㅠ
2022. 6. 13. 오후 8:57, 유용태 (teo.yu) : 감사합니다 :) 실제로 서비스가 확장이 되면 다른 UI 영역으로도 확장이 될수가 있는데 이때 컴포넌트가 뷰로직과 비지니스로직이 강결합이 되어 있으면 정말 힘들기에 한번 겪고 나면 진짜 체감을 할 수 있습니다 나중에 한번 본인이 만든 프로젝트를 UI만 한번 싹 리뉴얼을 해보시면 아시게 될거에요 ㅎ
2022. 6. 13. 오후 8:59, 프엔공부중 : 그렇군요..! 앞으로 새로 프로젝트를 시작하게 된다면 뷰로직과 비즈니스 로직을 분리하는 형태로 개발을 해봐야겠네요!
2022. 6. 13. 오후 10:55: 중등개발자님이 들어왔습니다.
2022. 6. 13. 오후 10:55, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj

2022년 6월 14일 화요일
2022. 6. 14. 오전 9:13: Jay-G gets a facial님이 들어왔습니다.
2022. 6. 14. 오전 9:13, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 14. 오전 9:13, 유용태 (teo.yu) : 박시혁님 Jay-G gets a facial 님 반갑습니다 :)
2022. 6. 14. 오전 9:16, Jay-G gets a facial : 안녕하세요! 스프린트에 관심있어서 들어왔습니다~ 감사합니다!
2022. 6. 14. 오전 9:16, 유용태 (teo.yu) : 환영합니다. 이번 스프린트는 내일부터 5일간 진행하고 있어요~ 다음번 스프린트는 7월이 되면 또 하게 되지 않을까 생각합니다. ㅎ
2022. 6. 14. 오전 9:17, Jay-G gets a facial : 아쉽지만 7월에 지원해야겠네요! 친절한 설명 감사합니다. 이번 스프린트도 기대합니다~
2022. 6. 14. 오전 9:18, 유용태 (teo.yu) : 네~ 고맙습니다. 그 밖에 프론트엔드에 대해서 궁금한게 생기면 무엇이든 좋으니 편하게 글 남겨주세요. 내가 궁금한 것은 다른 사람에게도 좋은 인사이트가 됩니다. ㅎ
2022. 6. 14. 오전 9:20, 유용태 (teo.yu) : 오랜만에 블로그에 스프린트가 아닌 글을 올려보네요. Atomic Deisgn Pattern에 관한 글입니다. :) https://velog.io/@teo/Atomic-Design-Pattern
2022. 6. 14. 오전 9:31, 스타트업개발자 : 혹시 nextjs 에서 네이버 프리미엄 로그 분석 스크립트 설치해 보신 분 계실까요?
2022. 6. 14. 오전 9:34, 프엔이될테야 : 사진
2022. 6. 14. 오전 9:34, 프엔이될테야 : 테오님 오타있어요!
2022. 6. 14. 오전 9:35, 유용태 (teo.yu) : 감사합니다 ^^;
2022. 6. 14. 오전 9:42, 철진 : 태오님 글 잘 읽었습니다! 궁금증이 하나 있는데 폴더 명에 가끔 @공통 식으로 정리한 것들이 보이는데 @가 특별한 기능이 있을까요??? 
2022. 6. 14. 오전 9:43, 유용태 (teo.yu) : 대부분 코드에디터가 알파벳순 정렬이기에 폴더 최상단으로 보낼수 있는 역할을 합니다. ㅋ
2022. 6. 14. 오전 9:43, 유용태 (teo.yu) : 다른 기호들은 좀 어색한데 @는 node_modules 때문인지 좀 익숙했어요. ㅎ
2022. 6. 14. 오전 9:45, O_O : 예~전에 네이버에서 발표한거 봤는데 거긴 3단계로 나눠서 했더라구요
2022. 6. 14. 오전 9:46, O_O : https://tv.naver.com/v/11994379
2022. 6. 14. 오전 9:46, O_O : 라인이군요
2022. 6. 14. 오전 9:48, 철진 : 아하 그런 이유였군요!! 감사합니다!!
2022. 6. 14. 오전 10:15, 개린이 : 개발자 구직 플랫폼 어떤거들 사용하시나요??
2022. 6. 14. 오전 10:15, 썰cho : 원티드?
2022. 6. 14. 오전 10:15, 썰cho : 점핏이나 리멤버에서 가끔 연락오기도하고
2022. 6. 14. 오전 10:15, 썰cho : 그런거같아요
2022. 6. 14. 오전 10:16, 프론돌이 : 큰 회사 기준으로는 직접 찌르는게 제일 낫다고 생각해요!
2022. 6. 14. 오전 10:17, 프론돌이 : 실제 회사로 들어오는 이력서도 통과 평균을 보면, 직접 지원온게 확률이 높더라구요. 
물론, 잘한 사람이 그렇게 지원한거일 수도 있지만, 
보편적으로 보면 그렇고, 그렇기 때문에 
원티드 같이 다른 플랫폼으로 들어오면, 더 별로 같이 느껴지는게 어느정도 있더라구요.
2022. 6. 14. 오전 10:18, 프론돌이 : 큰회사가 아니더라도, 직접 찌르는게 좀더 정성있어보일 것 같다라는게 있을 것 같기도 하네요
2022. 6. 14. 오전 10:24, 개린이 : 직접찾아가서 넣는게 아무래도 그렇게 느껴지겠내욤 ..!
2022. 6. 14. 오전 10:33, 썰cho : 큰회사 아니면 채용 페이지가 따로있는곳은 거의 없고 있어도 노션페이지 이더라고요
2022. 6. 14. 오전 10:34, 썰cho : 원티드나 채용 플랫폼은 구직자들에게 채용 샤인 보너스 챙겨줘서 좋기도 하고요..
2022. 6. 14. 오전 11:13, 지노 : 사진
2022. 6. 14. 오전 11:13, 지노 : if가 참인 조건에 걸리는 이미지가 분명이 존재하는데 Skeleton에서 img로 교체가 안되네요.. 코드에 문제가 있을까요?
2022. 6. 14. 오전 11:14, 지노 : 사진
2022. 6. 14. 오전 11:15: 토벤머리 초보자님이 들어왔습니다.
2022. 6. 14. 오전 11:15, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 14. 오전 11:16, 토벤머리 초보자 : 안녕하세요 초보 프론트엔드 개발자입니다~
2022. 6. 14. 오전 11:19, 대장 : 사진
2022. 6. 14. 오전 11:19, 대장 : 주석 문구 어이없네요 ..
2022. 6. 14. 오전 11:19, 대장 : ㅋㅋㅋㅋㅋ
2022. 6. 14. 오전 11:51, 지노 : intersection observer가 skeleton을 감싸는 div의 ref를 받고 있으므로 isIntersection이 true여서 img로 교체되는 순간 isIntersection이 false로 변하므로 문제가 발생하는 거였네요ㅎㅎ;
2022. 6. 14. 오후 12:14, L : 개발 관련 글을 타고들어가다가 발견한 글인데요, 닌자 코드라는 코드스타일에 대해 알게 되어 공유합니다😆
https://ko.javascript.info/ninja-code
2022. 6. 14. 오후 12:17, 응원하는 튜브 : 혹시 geolocation-db.com 응답이 없는데 다른분들 어떠신지요
2022. 6. 14. 오후 12:18, 응원하는 튜브 : 아 돌아왔네요 ㅠ
2022. 6. 14. 오후 12:27, 유용태 (teo.yu) : 토벤머리 초보자님~ 반갑습니다 :)
2022. 6. 14. 오후 12:51, 기뻐하는 라이언 : 안녕하세요 재귀함수에서 

function countdown(n) {
  if (n < 1) {
    return [];
  } else {
    const countArray = countdown(n - 1);

    return countArray;
  }
}
console.log(countdown(5));

이것이 [1,2,3,4,5]가 되는지 잘 모르겠습니다. 

실행 순서대로 알려 주시면 감사하겠습니다.
2022. 6. 14. 오후 12:54, Hardy : 저건 [1,2,3,4,5]가 안되는데요...? 
2022. 6. 14. 오후 12:54, 106 : 실행해보니 []가 나옵니다!
2022. 6. 14. 오후 12:54, 썰cho : 될거같은데
2022. 6. 14. 오후 12:54, 기뻐하는 라이언 : const countArray = countdown(n - 1); 밑에 
countArray.push(n)을
2022. 6. 14. 오후 12:54, Hardy : 배열에 넣는게 없어요!
2022. 6. 14. 오후 12:54, 기뻐하는 라이언 : 못넣었어요
2022. 6. 14. 오후 12:54, 썰cho : 아
2022. 6. 14. 오후 12:54, 썰cho : 그러네
2022. 6. 14. 오후 12:54, 썰cho : .push있는줄
2022. 6. 14. 오후 12:54, 기뻐하는 라이언 : function countdown(n) {
  if (n < 1) {
    return [];
  } else {
    const countArray = countdown(n - 1);
    countArray.push(n);
    return countArray;
  }
}
console.log(countdown(5));
2022. 6. 14. 오후 12:55, 썰cho : 한줄씩 들어가보세요
2022. 6. 14. 오후 12:56, Hardy : 있다고 가정하에 말씀드리면 
const countArray = countdown(n - 1)에서 새로운 countdown이 호출되고 n < 1까지 계속 호출되서 countdow(5) countdow(4) countdow(3) countdow(2) countdow(1)까지 호출될거고 countdow(1)에서 push된걸 리턴해주고 다시 1 2 3 4 5 순으로 리턴되가지고 [1,2,3,4,5]가 됩니다
2022. 6. 14. 오후 1:00, 기뻐하는 라이언 : countArray.push(n);는 언제 실행 되는것인가요?
2022. 6. 14. 오후 1:02, Hardy : n이 0이될때 더 이상 재귀함수를 호출 안하게 되므로 []를 리턴하고 countdow(1)부터 push를 하죠?
2022. 6. 14. 오후 1:03, 허브의 개발 일지 : 근데 코드가
2022. 6. 14. 오후 1:03, 허브의 개발 일지 : 좀
2022. 6. 14. 오후 1:04, 그레이 : n이 1이상일 때요
2022. 6. 14. 오후 1:05, 허브의 개발 일지 : function cnt() {
 function DFS(){
 if(끝나는 조건) {리턴}
 else(){ 로직 }
 } 
DFS(1)
}
2022. 6. 14. 오후 1:05, 허브의 개발 일지 : 이런식으로 구성을 해야 콜스택 활용해서 
2022. 6. 14. 오후 1:05, 허브의 개발 일지 : 재귀를 구성할 수 있지 않을까요?
2022. 6. 14. 오후 1:06, 그레이 : 콜스택을 활용해서  재귀를 구성한다는게 무슨 뜻인가용?
2022. 6. 14. 오후 1:07, 허브의 개발 일지 : 샵검색 : #자바스크립트 콜스택
2022. 6. 14. 오후 1:07, 허브의 개발 일지 : 지금은 의도적으로 스택과 유사하게 로직을 작성하실려고 배열을 하나 더 선언하셨는데
2022. 6. 14. 오후 1:08, 허브의 개발 일지 : 굳이 그렇게 하시지 않아도 자바스크립트의 이벤트루프를 통해서 콜스택에 쌓인 실행구문을 통해서 재귀를 구현하는게
2022. 6. 14. 오후 1:08, 허브의 개발 일지 : 조금 더 좋지 않을까란 생각을 했슴당
2022. 6. 14. 오후 1:09, Hardy : countdow(5) 호출
countdow(4) 호출
countdow(3) 호출
countdow(2) 호출
countdow(1) 호출
countdow(0) 호출
countdow(0) return []
countdow(1) return [1]
countdow(2) return [1,2]
countdow(3) return [1,2,3]
countdow(4) return [1,2,3,4]
countdow(5) return [1,2,3,4,5]

보기좋게 흐름 적어보면 이렇게 되겠네용
2022. 6. 14. 오후 1:10, 기뻐하는 라이언 : https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/use-recursion-to-create-a-countdown 문제 풀다가 재귀 용법을 잘 몰라서 질문을 드렸습니다.
2022. 6. 14. 오후 1:10, 106 : const countdown = (n) => {
  let answer;
  const recursive = (count, countArray) => {
    if (count <= n) {
      recursive(count + 1, [...countArray, count]);
    } else answer = countArray;
  };
  recursive(1, []);
  return answer;
};

console.log(countdown(5));
2022. 6. 14. 오후 1:10, 그레이 : 결과적으로 동일하지 않나요? 어떤 차이가 있는지 알수 있을까용?
2022. 6. 14. 오후 1:10, 106 : 이렇게 보셔도 좋을 것 같네요
2022. 6. 14. 오후 1:10, 106 : 대충 해봤는데
2022. 6. 14. 오후 1:11, Hardy : 재귀함수 유튜브에 검색해서 영상으로 보시는게 좋을거에요 텍스트로만 이해하기 어려울 순 있어요
2022. 6. 14. 오후 1:12, 기뻐하는 라이언 : 네 맞아요 텍스트로만 봐서 한번에 이해하기 어려운거 같아요.  유튜브 알려 주셔서 감사합니다.
2022. 6. 14. 오후 1:13, 기뻐하는 라이언 : 코드까지 올려 주셔서 감사합니다.
2022. 6. 14. 오후 1:38, 부탁하는 무지 : 늦었지만 스택 오버플로우에 비슷한 질문이 있어 같이 공유합니다 https://stackoverflow.com/questions/55265255/react-usestate-hook-event-handler-using-initial-state
답변의 내용을 보면 ref로 값을 watch할 수 있도록 사용하는 듯한데, 번거롭다는 느낌이 들어서요. 
2022. 6. 14. 오후 1:48, L : 사이드 프로젝트 진행할 때 사용가능한 public API가 모여있는 깃허브 발견해서 공유드려요~
https://github.com/public-apis/public-apis
2022. 6. 14. 오후 1:49, 그레이 : 리액트 컴포넌트 안에서 window.addEventListener 를 쓰려 하시는 거라면 useEffect 사용을 추천드립니다
2022. 6. 14. 오후 1:54, 애교뿜뿜 어피치 : js class 를 생성하고,

인스턴스를 생성하여 메서드를 사용할 때 비구조화 할당을 해서 하는 경우, 인스턴스 내의 변수를 undefined로 인식하는데 혹시 이유를 알 수 있을까요..?

cosnt { getAge } = new Person()  X

const person = new Person()
person.getAge() O
2022. 6. 14. 오후 1:57, 허브의 개발 일지 : person의 타입은 인터프리터언어인 자바스크립트는 모르죵
2022. 6. 14. 오후 2:04, 부탁하는 무지 : 음… 제가 문제라고 생각하는 경우는 addEventListener를 useEffect와 함께 사용하는 부분이 아니라 (이미 그런 식으로 사용하고 있습니다!) addEventListener에 콜백함수로 넣은 함수에서 state를 initial 값만 불러오고 업데이트된 이후의 값을 못 불러오고 있다는 게 문제입니다! 스택 오버플로우의 답변을 참고해 보니 class 컴포넌트를 사용하거나 ref를 사용하는 방식으로 해결을 하고 있었고요
2022. 6. 14. 오후 2:09, 그레이 : 링크주신 글에서는 리렌더 이전의 함수를 참조하고 있는 문제가 있었는데요, 무지님은 이미 useEffect 를 사용하고 계시다 하니 다른 문제가 아닐까요
2022. 6. 14. 오후 2:09, 그레이 : 직접 작성하신 예시를 주시면 좋을듯 하네요
2022. 6. 14. 오후 2:12, 취미는개발 : 선배님들께 질문 한가지 드립니다 !

.env file을 gitignore 시키는데
이런 자료가 여러개 있을 경우 env 파일들은 어떻게 관리하시나요 ?
2022. 6. 14. 오후 2:18, 김동현 : doppler 를 이용해서 관리중입니다. 
2022. 6. 14. 오후 2:24, 고규식 : 실무에서 webpack을 써보지않았는데, (왜 webpack을 쓰는지는 대략적으로 알것같습니다)
어떤 경우에 webpack을 사용하게 되나요?!?
초기 셋팅때 쓰는건지…
2022. 6. 14. 오후 2:25, 썰cho : 웹팩을 왜 쓰는지 알면…
2022. 6. 14. 오후 2:25, 썰cho : 그냥 리액트 쓰면서도 원래 쓰고 있으실껀데
2022. 6. 14. 오후 2:25, 썰cho : 리액트 cra는 웹팩 기본설정이 되어있을뿐 안쓰는게 아닙니다
2022. 6. 14. 오후 2:29, A대 4-1(진) : 저는 바닐라 js로 개발을해보고 개발자도구의 네트워크탭에서 요청하는 js,css파일들을 확인해보고 웹팩을 적용한 후에 네트워크탬을 확인해서 비교했었습니다!
2022. 6. 14. 오후 2:30, 그레이 :  기본적인 목적은 역시 번들링이죠
2022. 6. 14. 오후 2:38, 사랑하긴했었나요스쳐가는인연이었나요짧지 : https://wormwlrm.github.io/2020/08/12/History-of-JavaScript-Modules-and-Bundlers.html

여기 번들러 등장 배경, 쓰는 이유에 대한 설명 잘 되어 있더라구요
2022. 6. 14. 오후 2:48, 고규식 : 네네 사실 CRA통해서만 프로젝트 시작했지
webpack을 직접 셋팅해본적이 없어서요…
2022. 6. 14. 오후 2:48, 고규식 : CRA 잘 안쓰나요?!….
2022. 6. 14. 오후 2:49, 고규식 : CRA는 불필요한 패키지들도 있고해서 파일 자체 크기가 커서 CRA안쓰고 직접 셋팅하는게 좋다는 말도 있더라고요….
2022. 6. 14. 오후 2:49, 초롱초롱 네오 : CRA 기본 설정되있는게 되게 많아서 CRA에 기본 기능들을 다 쓰지 않을 규모의 프로젝트면 직접 설정하는게 좋고 아니면 CRA 많이 쓴다고 알고 있습니다
2022. 6. 14. 오후 2:51, 델 : 한국은 인터넷 속도가 많이 빨라서 번들 사이즈가 별로 안 중요해서 그냥 초기에는 CRA로 후딱 개발하는 경우가 많은데
2022. 6. 14. 오후 2:51, 델 : 글로벌이거나 고객 대상이거나 하면 성능이나 인프라쪽도 다양한 걸 고려해야 해서 Next.js 를 쓰거나 직접 구축하거나 하는 거 같아요
2022. 6. 14. 오후 2:51, 델 : 어드민 같은 거 개발할거면 그냥 CRA 써서 편하고 빠르게 개발하고 배포하고
2022. 6. 14. 오후 2:53, 썰cho : 비교대상이 잘못된거같습니다
2022. 6. 14. 오후 2:53, 델 : 전세계 모든 리액트 쓰는 회사를 다 아는 게 아니라서 CRA 를 잘 쓴다 / 안 쓴다 로 딱 잘라서 말하긴 애매한데 그냥 쓸만하면 쓰고 쓸만하지 않으면 안 쓰는 느낌인 거 같아요
2022. 6. 14. 오후 2:53, 썰cho : cra랑 비교하려면 넥스트가 아니라
2022. 6. 14. 오후 2:53, 썰cho : 직접 웹팩 구성한것과 비교해야될거같아요
2022. 6. 14. 오후 2:54, 델 : 음 그게 '직접 구축하거나' 에 포함된 거였긴 한데
2022. 6. 14. 오후 2:54, 썰cho : 저희만 해도 craco쓰긴 하지만 웹팩 설정 건들긴 하거든요
2022. 6. 14. 오후 2:54, 썰cho : 아 그게 저는 넥스트도 직접 구축하거나의 범주에 들어가면 안된다고 생각해서 ㅎㅎ
2022. 6. 14. 오후 2:54, 델 : 그냥 같은 '리액트 쓰는 프레임워크' 라는 축에서 말한 거였어요!
2022. 6. 14. 오후 2:54, 썰cho : 넵넵!!
2022. 6. 14. 오후 2:55, 델 : 그쵸 넥스트도 직접 필수로 해줘야 하는 거 없이 다 해주는 프레임워크죠 :)
2022. 6. 14. 오후 2:56, 썰cho : cra도 누군가가 구성해놓은 보일러플레이트라고 생각해서 나중에 본인만의 보일러 플레이트는 한번 만드는건 좋다고 생각합니다
2022. 6. 14. 오후 3:00, 벙찐 튜브 : 질문있습니다.. 혹시 다음 사진과 같이 요소를 배치하고 싶은데 어떤 속성(css-property)을 사용하면 될까요?
2022. 6. 14. 오후 3:01, 벙찐 튜브 : 사진
2022. 6. 14. 오후 3:01, 델 : grid..?
2022. 6. 14. 오후 3:02, 벙찐 튜브 : 공부 더 해볼게용
2022. 6. 14. 오후 3:02, 벙찐 튜브 : 감사합니다 :)
2022. 6. 14. 오후 3:03, 모승 : flexbox써도 되는데 grid보다 귀찮을듯여
2022. 6. 14. 오후 3:08, 벙찐 튜브 : 아하 그런 애매한 상황이군요.. ㅋㅋㅋ
2022. 6. 14. 오후 3:17, 헬렌 : 질문있습니다! creat react app으로 만들었을 때도 웹팩 번들링 최적화를 하나요?
2022. 6. 14. 오후 3:28, 썰cho : eject해서 할수도 있어요
2022. 6. 14. 오후 3:43, 헬렌 : eject를 해야 하는군요… 답변 감사합니다 🙏
2022. 6. 14. 오후 3:54, 동동 : react-scripts 기본 번들링도 굉장히 많은 최적화가 되어 있습니다… 
코드 보시면 웹팩 설정만 몇백줄 넘게 있는걸 보실 수 있을거에요
2022. 6. 14. 오후 4:05, 철진 : react query 사용하다가 궁금증이 있습니다!!  const {data, isLoading} = useCustomQuery() 같은 경우에 isLoading이 false라면 data에 값이 있을 것 이라고 생각했는데 에러가 나지 않은 상황에서도 undefined 에러가 나오는 이유가 무엇일까요?(map 등의 메서드 사용시)
2022. 6. 14. 오후 4:10, 포유 : 요청이 안 간거 아니에요?
2022. 6. 14. 오후 4:11, 철진 : 요청은 정상적으로 갔습니다! 
2022. 6. 14. 오후 4:11, 박용준 : 요청 하기 전에 data가 undefiend여서?
2022. 6. 14. 오후 4:12, 부끄러운 어피치 : 네트워크 탭에서는 response의 데이터가 undefined는 아닌거죠 ?
2022. 6. 14. 오후 4:12, 철진 : 아래에서는 이렇게 되어있구용!

if(isLoading) { return <로딩/>}

return <보여줄 컴포넌트/>
2022. 6. 14. 오후 4:12, 박용준 : isLoading || !data
2022. 6. 14. 오후 4:12, 프론트 지키미 : If (!data) 추가 어떤가요
2022. 6. 14. 오후 4:12, 철진 : 용준님처럼 해야 에러가 안나서 
2022. 6. 14. 오후 4:12, 박용준 : 로 하심 될 거 같은 느낌이
2022. 6. 14. 오후 4:12, 철진 : 왜 그런 사이클인지 궁금했습ㄴ디ㅏ
2022. 6. 14. 오후 4:13, 철진 : isLoading이 false가 되면 data는 당연히 요청이 성공이면 undefined가 아니어야하는 것 같은데...
2022. 6. 14. 오후 4:13, 박용준 : 초기 data 값은 undefiend 입니다 (요청 전)
2022. 6. 14. 오후 4:15, 철진 : 넵 그 부분은 이해가 가는데 isLoading이 false가 된 시점에는 요청이 끝나고 data가 undefined가 아닌 시점이 아닐까요??? 이 부분이 이해가 잘 안됐습니다
2022. 6. 14. 오후 4:15, 프론트 지키미 : 비동기 동작이 완료되기 전에 화면을 그려야해서 아닐까뇨?? 
2022. 6. 14. 오후 4:16, 주주 : 처음 렌더링 될 때 보여줄 컴포넌트가 먼저 렌더링돼서 그런 거 아닐까요..?
2022. 6. 14. 오후 4:16, 철진 : 그래서 if(isLoading)을 통해서 컴포넌트가 렌더링 되지 않도록 조건을 걸어주고 있는 상황인데 잘못 적은 부분이 있을까요??
2022. 6. 14. 오후 4:17, 주주 : isLoading 초기 값은 false여서
2022. 6. 14. 오후 4:18, 철진 : isLoading 초기 값이 false 인가요? 
2022. 6. 14. 오후 4:19, 주주 : 넵 useQuery는 들고 있는 컴포넌트가 한 번 실행된 후에 시작할테니까용
2022. 6. 14. 오후 4:19, 철진 : 로그를 찍어봤는데 
isLoading : true
data: undefined 
컴포넌트 콘솔 : 실행 X
isLoading:: false
data: 있음 
컴포넌트 콘솔 : 실행 
2022. 6. 14. 오후 4:19, 철진 : 이렇게 나오는 것 같아서요… ㅠㅠ
2022. 6. 14. 오후 4:21, 부끄러운 어피치 : 정상적인 흐름 아닌가요?
2022. 6. 14. 오후 4:22, 주주 : 어랏 그러네여 애초에 useQuery가 돌아야 isLoading이 찍히기 시작하겠네여
2022. 6. 14. 오후 4:22, 주주 : 정확히 data가 있을 때 분기처리를 하고 싶으시면 isSuccess를 쓰시는 게 더 좋을 것 같아용
2022. 6. 14. 오후 4:24, 철진 : 주주님 죄송합니다!!  제가 isLoading을 !data 조건도 추가해서 그렇게 잘 찍히고 있었네요!! 주주님 말씀처럼 아직 요청 전이기 때문에 false로 시작하는게 정확하네요!! 궁금증이 해소되었습니다!! 바보 같은 질문이었네요. 감사합니다!
2022. 6. 14. 오후 4:24, 철진 : 정상적인 흐름으로 나오도록 조건을 추가해뒀는데… 부끄러운 어피치님 답변 보고 이상해서 보다가 알게 됐습니다. 감사합니다! 
2022. 6. 14. 오후 4:25, 부끄러운 어피치 : 금방 해결돼서 다행입니다!!
2022. 6. 14. 오후 4:27, 주주 : 저도 공부가 되었습니다 ㅎㅎㅎ isLoading 초기값이 false가 아니라 애초에 isLoading 값이 없어서 <보여줄 컴포넌트> 가 가장 처음 렌더링된다고 보는 게 맞겠네용
2022. 6. 14. 오후 4:49, 박종승 : 안녕하세요. 질문이 있습니다. 테오님이 작성하신 아토믹 디자인 패턴에 관한 글에서 SideContentBar가 organisms인지 moecules인지 애매하다고 말씀하신 부분이 왜 애매하게 여겨지는 것인가요? 그림을 봤을 때, 어떤 원자의 갯수를 기준으로 적으면 organisms고 많이 구성되면 moecules인 것으로 구분하면 된다고 생각했는데 어떤 예외 사항이 있는 걸까요?
2022. 6. 14. 오후 4:52, 부끄러운 어피치 : 단순 많고 적고의 기준이 아니라 사람마다 받아들여지는게 다 다르기 때문인 것도 있고, 여타 다른 이유도 있지 않을까요??!
2022. 6. 14. 오후 4:56, 허브의 개발 일지 : 그쳐 그룹을 묶는 범주에 따라 달라지고
2022. 6. 14. 오후 4:56, 허브의 개발 일지 : 블로그 글대로 재사용 범주가 다양하기 때문에
2022. 6. 14. 오후 4:56, 허브의 개발 일지 : 페이지별로 도메인을 묶어서 그 안에서 아토믹하게 관리하신거 같더라구요
2022. 6. 14. 오후 4:57, 허브의 개발 일지 : 뭐가 맞다 틀리다는 없기 때문에 당연한것 같습니당
2022. 6. 14. 오후 4:57, 허브의 개발 일지 : 아무래도 팀마다 서비스마다 지향하는 바가 다르다보니 ㅎㅎ 참 어렵네용 ㅜ
2022. 6. 14. 오후 4:58, 초보개발자 : 삭제된 메시지입니다. 
2022. 6. 14. 오후 5:03, 초보개발자 : Atom 개수를 기준으로 보면 organism으로 분류되어야 하는 컴포넌트가 컴포넌트 자체의 규모나 재사용은 molecule 컴포넌트 정도이거나 또 다른 organism을 만들 때 사용되는 경우 organism인지 molecule인지 분류하기 애매할 수도 있을 것 같아요
2022. 6. 14. 오후 5:06, 퉁이리 : 이번에 토스에서도 비슷한걸 다루었던데 요즘 뜨거운 감자네요(크크)
2022. 6. 14. 오후 5:06, 퉁이리 : 뜨감~ 뜨뜨뜨
2022. 6. 14. 오후 5:12, 초보개발자 : 저는 컴포넌트 폴더에 Common과 각 도메인 별 폴더를 분리하여 사용하는 편입니다. Common은 아토믹 디자인의 atom에 해당 되는 것 같고, 각 도메인 별 폴더에 정의하는 컴포넌트는 상황에 따라 organism이나 molecule이 됩니다. 정의된 컴포넌트를 import해서 또 다른 옵션을 넣어서 커스텀하기도 하는데, 개념적으로는 atomic design을 따른다고 할 수 있지만, 폴더 네이밍을 molecule이나 organism으오 분류하진 않습니다. 오히려 틀에 갇힌 사고를 하게 되는 것 같더라구요
2022. 6. 14. 오후 5:46, 박종승 : 모두들 답변 감사합니다. 원자로 구성되는 것이 어쩌면 무한대같은 영역인데 5단계로 한정짓기는 참 어려운 것 같아요. 애매한 저 돌연변이같은 녀석들을 한 계층에 더 넣으면 어떨까 고민했었는데 일단은 기준을 한번 정해보고 테오님 말씀처럼 몸소 겪어봐야할 것 같습니다. 공유해주셔서 감사합니다:)
2022. 6. 14. 오후 6:00, 유용태 (teo.yu) : 그렇죠. 이러한 개념없이 그냥 폴더를 만들게 되면 계층구조를 생각하기가 어렵기에 ..

계층을 molecule이나 organism과 같이 이름을 짓고 바라보기 때문에 계층적으로 사고를 해서 나눌수 있게 되는 멘탈모델이 갖춰지게 되는데 계층이 3겹이상이 되면서 또 혼란을 가져오지요. 

그렇다고 그냥 이름으로만 짓다보면 얘랑 얘가 같은 계층에 있는게 맞아? 이런식으로 혼란이 생기게 됩니다. 결과론적으로는 폴더 트리가 계층분리가 잘 되어 있으면서 의미론적인 잘 구분이 되어 있도록 하는 것이 필요하구요 이렇게 하려면 적당히 타협하지 않도록 하는 내부 룰이나 논의가 많이 필요하더라구요
2022. 6. 14. 오후 6:37, 헬렌 : 저도 아토믹 디자인 반영해봤는데 기준이 참 애매모호 했어요. 프로젝트가 끝난 후 팀원들과 리뷰했는데 ,아톰 폴더에 있지 않은 건 재사용성이 떨어지는데 굳이 나눠야 하는가에 대해 얘기했어요.
2022. 6. 14. 오후 8:09: 룰루님이 들어왔습니다.
2022. 6. 14. 오후 8:09, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 14. 오후 8:10, 유용태 (teo.yu) : 안녕하세요 룰루님~~ 반갑습니다 :) 어서오세요 
2022. 6. 14. 오후 8:11, 룰루 : 안녕하세요!
2022. 6. 14. 오후 8:12, 유용태 (teo.yu) : 네!! 환영합니다 이곳은 프론트엔드에 관해 물어보고 얘기나누고 함께 성장하고자 하는 공간입니다~ 편하게 궁금한 것들 있으면 글 남겨주세요 ;)
2022. 6. 14. 오후 8:12, 룰루 : 코테 관련해서 궁금한점이 있어 들어오게 되었습니다!
2022. 6. 14. 오후 8:12, 유용태 (teo.yu) : 좋아요 :)
2022. 6. 14. 오후 8:12, 룰루 : 프론트엔드라면 코테를 js로 준비해야 하나요??
2022. 6. 14. 오후 8:13, 유용태 (teo.yu) : 꼭 그렇지는 않지만 그 편이 더 유리합니다 ㅎ
2022. 6. 14. 오후 8:13, 룰루 : 코테를 대부분 파이썬이나 c++로 추천하셔서 고민중이였습니다ㅠ
2022. 6. 14. 오후 8:14, dding-g : 저도 이직 준비하느라 코테 공부중인데 js로 봅니다. js를 이미 할 줄 아신다면 괜찮지 않을까요??
2022. 6. 14. 오후 8:14, 모승 : 파이썬이 자바스크립트 보다 코테 구현에 유리하다고 들었어요
2022. 6. 14. 오후 8:14, 유용태 (teo.yu) : 백엔드도 있고 자료가 많다보니 그렇게 얘기하지만 저는 js가 훨씬 더 좋다고 생각해요 코테하기 좋은 언어라고 생각합니다 ㅎ
2022. 6. 14. 오후 8:15, 모승 : 근데 저는 어차피 프론트엔드니까 js로 하고있습니다 js공부도 할겸 js로만 응시가능한 회사도 있어용
2022. 6. 14. 오후 8:15, 유용태 (teo.yu) : 그쵸~ 프론트엔드다 보니 js를 잘 하는게 더 이점이라고 생각합니다 아직 시작하지 않으셨다면 js로 시작하기를 권해드려요
2022. 6. 14. 오후 8:15, 룰루 : 그럼 자료구조나 알고리즘 공부 할때 js기반으로 쓰인 책으로 공부하셨나요??
2022. 6. 14. 오후 8:16, dding-g : 저는 따로 공부하지 않고 바킹독님 유튜브 보고 문제만 풀고있습니다.
2022. 6. 14. 오후 8:17, 유용태 (teo.yu) : 제가 공부할 시기에는 그렇게 막 책이 있다거나 js가 유행하던 시절이 아니라서 그냥 공부했었고 이직시 코테 준비는 프로그래머스? 릿코드 그런 사이트 문제들 js로 그냥 풀어가면서 준비했어요
2022. 6. 14. 오후 8:17, 룰루 : 우아 좋은 정보 감사합니다!!
2022. 6. 14. 오후 8:17, 유용태 (teo.yu) : 이론은 그냥 이론으로 배웠는데 파이썬이나 c코드를 js로 바꾸는건 어렵지 않아서
2022. 6. 14. 오후 8:18, 유용태 (teo.yu) : 교재는 그냥 무조건 이해하기 쉬운것으로 선택하시고 다른 코드를 js로 만들면서 공부하는 것도 괜찮아요
2022. 6. 14. 오후 8:19, 룰루 : 좋은 정보 주셔서 감사합니다!
2022. 6. 14. 오후 8:21, 룰루 : 주변에 조언을 구할 분이 없어서 막막 했었는데 감사합니다!!
2022. 6. 14. 오후 8:25, 주니어개발자 : 알고리즘 이것이 코딩테스트다 책 추천드립니다!
코드는 파이썬인데 저도 파이썬하나도모르는데 내용이좋고 이해하기쉽게되어있어서 별도로 js로 문제를 풀고정리했어오
2022. 6. 14. 오후 8:26, 룰루 : 그것도 한번 찾아봐야겠네요! 
좋은 정보 감사합니다~
2022. 6. 14. 오후 8:56, 박종승 : (congrats)
2022. 6. 14. 오후 8:56, 박종승 : 와 500명 축하합니다 :)
2022. 6. 14. 오후 9:00, 여의도개발 : 리액트 입문자분이 보시기에 괜찮은 도서 같네용
http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&mallGb=KOR&barcode=9791162245682&orderClick=LEa&Kc=
2022. 6. 14. 오후 9:27: 엄지척 어피치님이 나갔습니다.
2022. 6. 14. 오후 9:41: 엄지척 제이지님이 들어왔습니다.
2022. 6. 14. 오후 9:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 14. 오후 9:47, 유용태 (teo.yu) : 엄지척 제이지님~~ 반갑습니다 :) 어서오세요~
2022. 6. 14. 오후 9:47, 엄지척 제이지 : 안녕하세요!🙂🙂🙂
2022. 6. 14. 오후 9:49, 유용태 (teo.yu) : 네~ 안녕하세요 ㅎ 이곳은 프론트엔드에 대해서 함께 묻고 답하고 이야기하면서 서로가 서로에게 사수가 되어주는 공간입니다 ㅎ 언제든 궁금한 내용이나 관심사가 있가면 편하게 글 남겨주세요 :)
2022. 6. 14. 오후 9:54, 엄지척 제이지 : 감사합니다 테오님 :) 저는 혼자 프론트엔드를 공부하고 있는 학생인데 프로젝트를 하면서 느낀 어려움 중 하나가 프로젝트 초기 설정이었습니다. 처음엔 웹팩, 바벨, 린트 이런게 뭔지도 모르고 시작했고요..(그래서 항상 같이하는 개발자분들이 설정해주신걸 따라갔습니다ㅠ) 다들 이런 설정 방법은 어디서 배우시는건가요?🥲 많이 사용하는 린트룰이라던지, cra없이 웹팩을 설정한다던지 이런거요!
2022. 6. 14. 오후 9:55, 유용태 (teo.yu) : 설정은 배우는게 아니라 필요하면 하게 되는 거죠 ㅋㅋ
2022. 6. 14. 오후 9:57, 유용태 (teo.yu) : 음... 하다가 잘 모르는게 나왔을때 그게 나에게 필요한게 아니라면 굳이 애써 이해하려고 하기 보다는 이런게 있구나... 정도로만 넘어가는 것도 필요합니다 자연스럽게 알게되는 그 시점이라는게 와요
2022. 6. 14. 오후 9:58, 유용태 (teo.yu) : eslint의 경우 저는 https://standardjs.com/readme-kokr.html 를 씁니다
2022. 6. 14. 오후 10:00, 유용태 (teo.yu) : 그리고 cra를 쓰지 않거나 설정을 변경을 해야 할 만한 이유를 만들어보세요. 목적이 없는 상태에서 그냥 공부하는 것은 생각보다 크게 도움이 안됩니다. 뭐가 있는지만 대충 알아두고 필요할때 찾아서 익히세요
2022. 6. 14. 오후 10:02, 유용태 (teo.yu) : typescript를 배울때도 제일 하지 말아야 하는 것은 tsconfig부터 배우려고 하는 거라고 생각합니다 언젠가 할줄은 알아야겠지만 설정을 변경해야할 이유를 모르는데 설정값을 공부 하는 것은 큰 의미가 없어요 ㅎ 언젠가는 그 설정을 변경해야만 하는 순간이 오실거에요!
2022. 6. 14. 오후 10:06, 유용태 (teo.yu) : 그래도 궁금하고 공부를 해야 되는 타입이라면 여러가지 npx starter 세팅들을 해보면서 ex) react + ts + tailwindcss starter kit 이런 미리 세팅된 프로젝트나 다른 오픈소스의 설정들을 살펴보면서 내 설정에는 없던 값들(?) 위주로 살펴보시면 조금 더 공부하거나 익혀나가시기 좋으실거에요~
2022. 6. 14. 오후 10:08, 웹린이 : 저는 개발하다 필요하겠다 싶은 룰, 설정 있나 찾아보면서 알게되었던 것 같네요
2022. 6. 14. 오후 10:09, 웹린이 : 리뷰에 꾸준히 나오는 부분들 eslint나 tsconfig 설정으로 해결 가능한 경우가 꽤 있더라구요 
2022. 6. 14. 오후 10:16, 엄지척 제이지 : 다들 조언 너무 감사드립니다...!!! 어떻게 접근해봐야 할지 감이 확 잡히네요👍👍👍 당장 시작하는 프로젝트부터 한 번 차근차근 찾아가면서 설정해봐야겠어요ㅎㅎ
2022. 6. 14. 오후 11:05: 인사하는 프로도님이 나갔습니다.
2022. 6. 14. 오후 11:23, 애교뿜뿜 무지 : 안녕하세요! 궁금한게 있는데 next.js에서 next-auth랑 prisma로 로그인/회원가입을 구현했는데, schema.prisma 파일에서

datasource db {
  provider = 'sqlite'
  url      = 'file:mydb.db'
}

이렇게 한 것을 네틀리파이로 어떻게 배포하는지 아시는 분 계실까요?

2022년 6월 15일 수요일
2022. 6. 15. 오전 12:48, 곰곰 : sqlite는 로컬db아닌가요?
2022. 6. 15. 오전 12:58, 애교뿜뿜 무지 : 넵 맞습니다 ! 제가 next-auth, prisma가 완전 처음이라 하라는 대로 했는데 배포를 못하고 있어서 .. 혹시 배포할 방법 아시는게 있을까요? ㅠㅠ
2022. 6. 15. 오전 1:00, 곰곰 : 로컬db는 서버가이니기때문에 배포한상태에서 db연결을 수립할수 없지않나 싶은데...
2022. 6. 15. 오전 1:05, 애교뿜뿜 무지 : 백엔드는 처음이라 엄청 찾아 헤맸는데… 다시 디비를 엎어야겠네요..ㅠ 확실히 안되는 거라도 알아서 속이 시원합니다! 감사합니다 🙏
2022. 6. 15. 오전 1:05, 곰곰 : 간단한 테스트용이면 planetscale 한번 써보세요
2022. 6. 15. 오전 1:07, 애교뿜뿜 무지 : 앗 지금 유튜브에 postgres + 히로쿠+버셀 배포방법 나와있어서 이걸로 할까 했는데 planetscale 이게 더 간단할까욥..??
2022. 6. 15. 오전 1:08, 곰곰 : 서버가 있으시다면 postgresql 설치하셔서 환경 구성하셔도 좋지만 따로 서버환경이 없으시다면 planetscale쓰시는것도 추천드려요
2022. 6. 15. 오전 1:12, 곰곰 : 혹시나 해서 저도 좀더 찾아봤는데 https://answers.netlify.com/t/how-to-include-supporting-files-like-a-sqlite3-database-in-netlify-functions/29740/2 이런게 있네요
2022. 6. 15. 오전 1:15, 애교뿜뿜 무지 : 대박 좋은 정보 많이 알려주셔서 너무 감사드립니다 일단 하나씩 찾아보고 적용해볼게요 ㅎㅎㅎ 감사합니다 🙌🙏
2022. 6. 15. 오전 8:47, 햄햄 : https://doda.app/quiz/sVnyiiTIHi

ui ux 테스트라고 합니다 재밌네요 ㅋㅋ
2022. 6. 15. 오전 8:50, 여의도개발 : css version
https://css-speedrun.netlify.app/
2022. 6. 15. 오전 9:12, 여의도개발 : 사진
2022. 6. 15. 오전 9:12, 여의도개발 : 고인의 명복을 빕니다
2022. 6. 15. 오전 9:12, 이프노즈 : 깜짝놀랐네요
2022. 6. 15. 오전 9:13, Kani : 저도
2022. 6. 15. 오전 9:13, Kani : 깝놀
2022. 6. 15. 오전 9:17, Jay-G gets a facial : 감사합니다~ 좋은 사이트 발견했네요 ㅎㅎ 
2022. 6. 15. 오전 9:26, 동동 : 테오의 IE 대응기 썰 이런것도 기회가 되면 들어보고 싶어요 ㅎㅎ
2022. 6. 15. 오전 9:30, 유용태 (teo.yu) : ㅋㅋㅋ '으잉... 쯧쯧 편할줄 알아야지 너네는 이런거 안해봤지? 라떼는 말이야.... 

1) border-radious가 없어서 round를 다 css로 그렸다 이말이야. 5,3,2,1 margin 순서

2) console 디버그 창이 없어서 alert으로 다 확인했다 맨이야.' 이런거요? ㅋㅋ
2022. 6. 15. 오전 9:30, 동동 : 와 이거 실화인가요..? ㅋㅋㅋㅋ 
더 듣고싶어요!!!!
2022. 6. 15. 오전 9:31: 콜라겐3270님이 들어왔습니다.
2022. 6. 15. 오전 9:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오전 9:31, 유용태 (teo.yu) : 재밌겠는데요? ㅋ 나중에 블로그로도 써야 겠네요. ㅋㅋ IE6, IE7, IE8, IE9 마다 css 규칙이 달랐어요. ㅋ
2022. 6. 15. 오전 9:31, 헬렌 : ㅋㅋㅋㅋㅋㅋㅋㅋ 너무 재밌네요
2022. 6. 15. 오전 9:31, 유용태 (teo.yu) : 콜라겐3270님 반갑습니다. 어서오에ㅛ. ㅎ
2022. 6. 15. 오전 9:31, 썰cho : 저는 이미지로.. 해봤어요 ㅋㅋ
2022. 6. 15. 오전 9:31, dding-g : 사진
2022. 6. 15. 오전 9:31, dding-g : 오.. 하다보니 좀 의외인 부분이 있네요. 사용자들을 현혹할만한 글 보단 정직하게 쓰는게 더 좋다고 하네요..?! 물론 케바케 사바사겠지만 신기하네요
2022. 6. 15. 오전 9:31, 콜라겐3270 : 이모티콘 반갑습니다 
2022. 6. 15. 오전 9:31, 썰cho : 5픽셀씩 잘라서 귀퉁이 만들고
2022. 6. 15. 오전 9:32, 썰cho : 상하좌우 반복하게 이미지 스타일줘서
2022. 6. 15. 오전 9:32, 썰cho : ㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 9:36, 이프노즈 : 사실 지켜져야하는 규칙입니다. 
국문으로 된 내용중엔 아래의 글이 잘 정리되어있어서 확인해보심 좋겠네용.
https://brunch.co.kr/@joojun/104
2022. 6. 15. 오전 9:38: 떨고있는 어피치님이 들어왔습니다.
2022. 6. 15. 오전 9:38, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오전 9:39, 유용태 (teo.yu) : 경례하는 프로도님 반갑습니다~ :)
2022. 6. 15. 오전 9:39, 떨고있는 어피치 : 안녕하세용 !

오늘 IE 종료되는 경사가 있는 날인데,
프론트엔드 개발자로서 특별하게 해야할 일이 있을까요…? 

1. 폴리필을 지운다?
2022. 6. 15. 오전 9:40, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 9:40, 썰cho : 사진
2022. 6. 15. 오전 9:40, 썰cho : 웨일은 원망한다
2022. 6. 15. 오전 9:40, 썰cho : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 9:40, 썰cho : 웨일을
2022. 6. 15. 오전 9:41, 유용태 (teo.yu) : '이 사이트는 익스플로러에 최적화 되어 있습니다.' 이 문구는 이제 좀 사라졌으면. ㅋㅋㅋ
2022. 6. 15. 오전 9:41, dding-g : 감사합니다!! 정독해볼게요! :)
2022. 6. 15. 오전 9:41, 떨고있는 어피치 : 저런 모드로 들어가지 않는다면, 아마 오래 전에 홈페이지 제작을 맡겨두고 쓰던 곳들은 접속이 아예 안되는거죠?ㅜㅜㅋㅋ
2022. 6. 15. 오전 9:41, 허브의 개발 일지 : 프론트의 주적은 사파리가 아닌 IE.
2022. 6. 15. 오전 9:41, 여의도개발 : I: IE야..
E: E제 안녕
2022. 6. 15. 오전 9:43, 유용태 (teo.yu) : React를 써야할 이유가 하나 줄었군요. IE11에서도 쓸수 있다라는게 큰 장점이었는데 말이죠. 이번 기회로 React로 라이브러리 다이어트가 되길 바랍니다. ㅋ
2022. 6. 15. 오전 9:44, 유용태 (teo.yu) : https://cloudless.tistory.com/114 그 시절 특정 브라우저에서만 돌아가도록 하는 CSS hack
2022. 6. 15. 오전 9:46, 유용태 (teo.yu) : IE6는 fixed, child selector, 투명 png 지원이 안되었습니다. ㅎ
2022. 6. 15. 오전 9:46, 유용태 (teo.yu) : 아! hover는 a태그에만 적용이 되는 기능이라서 모든 hover가 들어가는 HTML을 강제로 a로 바꿔야 했어요
2022. 6. 15. 오전 9:47, 유용태 (teo.yu) : 그때 법도 참 웃겼는데 MS가 반독점법에 걸려서 IE를 강제로 업데이트를 하지 못하게 - OS를 설치하면 IE가 있는데 IE가 강제로 업데이트가 되면 사람들이 다른 브라우저를 선택할 권리를 방해하게 된다. - 그래서
2022. 6. 15. 오전 9:48, 유용태 (teo.yu) : IE가 버전별로 설치를 해야하는 설치형 브라우저가 되었다는 사실. ㅋㅋ
2022. 6. 15. 오전 9:48, 승훈 : 이모티콘 
2022. 6. 15. 오전 9:49, 유용태 (teo.yu) : 그래서 당시 윈도우 98(맞나?)에 IE6이 기본으로 깔려있었고 사람들이 업데이트는 굳이 안하고 있으니 IE7보다 IE6 점유율이 높았어서 진짜 많이 힘들었어요.
2022. 6. 15. 오전 9:50, 유용태 (teo.yu) : 사실학 최악의 빌런이 IE6였기 때문에...;;
2022. 6. 15. 오전 9:50, 떨고있는 어피치 : ㅎㅎㅎ브라우저의 역사를 다 알고 계시는 테오님…
2022. 6. 15. 오전 9:50, 유용태 (teo.yu) : 구글에게는 감사합니다. 크롬은 진짜 혁명이었어요. ㅋㅋ
2022. 6. 15. 오전 9:52, 유용태 (teo.yu) : IE가 웃긴게 자동 업데이트는 안되는데 높은 버전의 브라우저를 설치하면 하위 브라우저가 동작하지 않도록 되어 있어서.. (같은 exploer 이름으로 설치됨) 한번 업데이트를 하면 예전 브라우저를 실행을 못시켰어요.
2022. 6. 15. 오전 9:52, 유용태 (teo.yu) : 그래서 테스트용 PC를 따로 두거나 Virtual OS를 깔아서 IE6~7을 테스트하곤 했습니다.
2022. 6. 15. 오전 9:52, 유용태 (teo.yu) : https://www.my-debugbar.com/wiki/IETester/HomePage
2022. 6. 15. 오전 9:53, 유용태 (teo.yu) : 나중에는 모든 버전의 IE를 동시에 띄워서 확인하는 도구도 나왔고
2022. 6. 15. 오전 9:53, 사수가없어요 : 아하..
2022. 6. 15. 오전 9:54, 유용태 (teo.yu) : https://www.browserstack.com/ 지금은 많이 바뀌었는데 크롬 브라우저에서 IE를 테스트 할 수 있는 사이트(?)도 나왔었구요. ㅋㅋㅋ
2022. 6. 15. 오전 9:56, 유용태 (teo.yu) : 다들 개발은 크롬으로 하고 IE에서 확인하던 과도기가 있었고 그래서 저희가 한때는 못해먹겠다고 생각해서 그냥 크롬용으로만 개발하는 비용을 놓고 IE6 지원비 IE7 지원비 IE8 지원비를 다 따로 받았었는데ㅋㅋ  IE6 지원비는 거의 원래 견적에 50%를 더 넘게 추가했었는데도 다 해달라고 했었죠. ㅋ
2022. 6. 15. 오전 9:56, 리듬타는 제이지 : 와..그정도로 힘든 작업이군요
2022. 6. 15. 오전 9:57, 유용태 (teo.yu) : IE7, IE8을 크로스 브라우징 비용은 포기하는 사람이 많았는데 IE6는 그냥 OS를 깔면 처음있는 브라우저인데 사실상 기능이 거의 없다 싶이한 녀석이라서 웹 발전의 가장 큰 걸림돌이었다 생각합니다. ㅎ
2022. 6. 15. 오전 9:58, 여의도개발 : web 역사의 산증인이시네요
2022. 6. 15. 오전 9:58, 떨고있는 어피치 : 약간 이민정-이병헌의 흑백졸업사진 '존대할게요'가 생각나는 순간입니닼ㅋㅋㅋㅋ


2022. 6. 15. 오전 9:58, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 9:59, 떨고있는 어피치 : 아마 이 방에는 태어나서 크롬만 써본 사람도 있을 수도 있을 것같아요….

2022. 6. 15. 오전 9:59, 여의도개발 : ㄷ ㄷ ㄷ 
2022. 6. 15. 오전 9:59, 떨고있는 어피치 : (그정도는 아닌가…?)
2022. 6. 15. 오전 9:59, 피카츄돈까스/React,RN : 윈도우 기본이 엣지라서 이것도크롬기반이구나!...ㅋㅋ
2022. 6. 15. 오전 10:01, 진정한 : 브라우저 얘기하니 드는 궁금점인데, 기업 입장(구글,ms)에서는 크롬이나 엣지같은 브라우저를 운영할 때 이를 통해 얻는 이점이 어떤 게 있을까요?
2022. 6. 15. 오전 10:01, 유용태 (teo.yu) : 영향력이죠 그로 인한 인재수급
2022. 6. 15. 오전 10:01, 피카츄돈까스/React,RN : 아마 데이터도 많이 보유 할 수 있지 않을까요?
2022. 6. 15. 오전 10:01, 유용태 (teo.yu) : 그리고 허브이자 플랫폼이 된다는 것이 엄청 크죠
2022. 6. 15. 오전 10:02, 유용태 (teo.yu) : 예전에 다들 첫페이지를 무엇으로 하느냐 싸움도 엄청 났었는데
2022. 6. 15. 오전 10:02, 유용태 (teo.yu) : 크롬은 첫페이지가 구글검색이잖아요. ㅋ
2022. 6. 15. 오전 10:02, 피카츄돈까스/React,RN : 아 그렇네요 그걸로 인한 광고수익도 엄청날거고 
2022. 6. 15. 오전 10:03, 유용태 (teo.yu) : 그리고 자신들의 서비스에 필요한 기능을 먼저 만들수도 있고.. 가령 화상회의 같은 경우에는 webRTC 기능을 자기들이 먼저 만들어서 붙이고 오픈화 시킨것도 있고
2022. 6. 15. 오전 10:03, 유용태 (teo.yu) : 구글의 브랜드 이미지는 크롬때문에 계속 좋아질겁니다
2022. 6. 15. 오전 10:03, 유용태 (teo.yu) : 일단 웹 = 브라우저 = 구글 이라는 공식을 만들었잖아요.
2022. 6. 15. 오전 10:03, 진정한 : 생각 못했는데 탁 치네요..
2022. 6. 15. 오전 10:03, 유용태 (teo.yu) : = 엄청난 개발자가 있는 곳 = 가고 싶은 회사 = 인재수급
2022. 6. 15. 오전 10:04, j : 사진
2022. 6. 15. 오전 10:04, 뮤츠 : ㅋㅋㅋㅋ재밋는사람이넹
2022. 6. 15. 오전 10:04, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 6. 15. 오전 10:04, 웹린이 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 10:04, j : 지인이 보내줬는데 타이밍이 안좋았네..
2022. 6. 15. 오전 10:04, 피카츄돈까스/React,RN : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 10:04, j : 여러분 토론중이셨는데
2022. 6. 15. 오전 10:05, 피카츄돈까스/React,RN : 아주 좋았습니다 ㅋㅋ
2022. 6. 15. 오전 10:05, j : 브라우저 이야기하는데..
2022. 6. 15. 오전 10:05, 유용태 (teo.yu) : 맞아요. 지금 그 얘기 하고 있었습니다. ㅎ
2022. 6. 15. 오전 10:05, j : 너무 슬픈 이야기를 들고왔네요
2022. 6. 15. 오전 10:06, 유용태 (teo.yu) : 웨일도 브라우저에다가 무료 화상회의를 기본으로 해서 점유율을 높이려고 하더라구요
2022. 6. 15. 오전 10:06, 게으름(lifeisnovel) : 사진
2022. 6. 15. 오전 10:06, 게으름(lifeisnovel) : 국민은행 공지인데
2022. 6. 15. 오전 10:06, 게으름(lifeisnovel) : IE10(!) 지원종료...
2022. 6. 15. 오전 10:06, 유용태 (teo.yu) : 시작점이 크롬이 아니라 웨일이 된다면 엄청 큰 힘을 얻겠죠 ㅎ
2022. 6. 15. 오전 10:06, 피카츄돈까스/React,RN : 오예!
2022. 6. 15. 오전 10:06, 유용태 (teo.yu) : 오오!!
2022. 6. 15. 오전 10:07, 게으름(lifeisnovel) : 최신브라우저 IE11를 사용해달라는.. 공지입니다
2022. 6. 15. 오전 10:07, 피카츄돈까스/React,RN : 아?
2022. 6. 15. 오전 10:07, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 10:07, 떨고있는 어피치 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 15. 오전 10:07, 피카츄돈까스/React,RN : 네?ㅋㅋㅋㅋㅋㅋ 그런공지였따구여?ㅋㅋㅋㅋ
2022. 6. 15. 오전 10:07, O_O : IE 호환모드 !!
2022. 6. 15. 오전 10:07, 피카츄돈까스/React,RN : 눈물..
2022. 6. 15. 오전 10:07, 게으름(lifeisnovel) : 은행권 개발자분들 파이팅...
2022. 6. 15. 오전 10:07, j : 화이팅..
2022. 6. 15. 오전 10:07, 이프노즈 : ㅋㅋㅋㅋ; 엣지 아니고 11인가요
2022. 6. 15. 오전 10:07, 유용태 (teo.yu) : 예전에 웹 개발자가 돈을 많이 줘도 금융권 IT로 가기 싫어했던 이유.. ㅠㅠ
2022. 6. 15. 오전 10:07, 떨고있는 어피치 : 근데 아마 저기 회사들도 데이터 뜯어보면
IE로 접속하는 고객 유저수가 많아서 쉽게 버리질 못할 것같아요
2022. 6. 15. 오전 10:08, j : 아무래도 윗세대들은
2022. 6. 15. 오전 10:08, 모승 : 근데 요즘 금융권도 바뀌고있다고 하더라고여
2022. 6. 15. 오전 10:08, j : IE 사용이 많은지라..
2022. 6. 15. 오전 10:08, 피카츄돈까스/React,RN : 그죠 ㅠ 근데 그런회사들이 좀 바꿔줘야 ... 다들 바뀔텐데
2022. 6. 15. 오전 10:08, 유용태 (teo.yu) : 바뀌겠죠 카뱅 한대 맞아보니까...
2022. 6. 15. 오전 10:08, j : 저도 부모님한테는 크롬 쓰라고 이야기는 하고있는데..
2022. 6. 15. 오전 10:08, 유용태 (teo.yu) : 토스한테도 맞고
2022. 6. 15. 오전 10:08, 유용태 (teo.yu) : 기능만 있다고 사람들이 쓰지 않는 세상이 되어버렸으니
2022. 6. 15. 오전 10:08, 유용태 (teo.yu) : 진짜 오래걸린것 같아요
2022. 6. 15. 오전 10:09, 유용태 (teo.yu) : 과거(?) 웹 개발하면서 결제를 붙여달라는 요구사항이 진짜 많은데 그때 paypal 결제를 참 부러워 했었거든요
2022. 6. 15. 오전 10:10, 유용태 (teo.yu) : AciveX덕지덕지나 결제 환경을 바꿀 수 없는 그 더러운 UI를 안 붙일수 없는 환경... ㅠㅠ
2022. 6. 15. 오전 10:11, 피카츄돈까스/React,RN : 크...페이팔 진짜.. 아니 외국은 이렇게 편한가?! 했어요 
2022. 6. 15. 오전 10:11, 피카츄돈까스/React,RN : 누군가 외국은 책임을 회사가 안고 우리나라는 책임을 고객에게 미룬다고 하던데 딱 맞는거같더라구요 
2022. 6. 15. 오전 10:11, 허브의 개발 일지 : 와 저 지금 KSign 때문에 죽고싶었는데 ㄹㅇ
2022. 6. 15. 오전 10:12, 유용태 (teo.yu) : 왜 PG는 돈이 많을텐데 그런 개선을 안하나... 생각도 참 많이 했었는데... 그런데 돈을 투자하겠다는 생각자체를 못했던것 같아요. PG사가 되기 위한 조건이 엄청 까다롭다 보니 기능이나 UX로는 경쟁을 하는게 아니니까요
2022. 6. 15. 오전 10:12, 이프노즈 : 공인인증서가 나가고 공동인증서가 들어왔습니다….
2022. 6. 15. 오전 10:12, 피카츄돈까스/React,RN : 이게 무슨 말장난인가여..흑흑 그래도 좀 편해지긴 한거같아요 오픈뱅킹도 생기고..
2022. 6. 15. 오전 10:14, 유용태 (teo.yu) : 그 사람들은 쓰면서 불편하다는 생각을 진짜 안하는거 같은데 너~~~~~~~무 신기했어요
2022. 6. 15. 오전 10:14, 유용태 (teo.yu) : 당연히 불편하지 않아? 라는 그런 느낌이 없다랄까? 이게 왜? 잘 되잖아 원래 이렇게 하는거 아냐? 이런... 마인드
2022. 6. 15. 오전 10:15, 피카츄돈까스/React,RN : 그죠 그렇게 길들여져셔 ㅠㅠ 뭐가 불편한건지 모르더라구요 ㅠ
2022. 6. 15. 오전 10:16, lucky.jun : 딥한 기능까지 쓰지 않아서 그렇지 않을까요? ㅎㅎ
2022. 6. 15. 오전 10:20, 유용태 (teo.yu) : 그러게요.. 지금이야 사용성을 중요시하는 회사들이 나왔고 환경이 생겼으니까 좋아요. 예전에는 기능을 구현하는게 중요하고 어떻게 사용하게 하는지에 대해서 투자하는 것을 돈 아깝다고 생각했었거든요
2022. 6. 15. 오후 12:22, 허브의 개발 일지 : 그런의미에서 토스가
2022. 6. 15. 오후 12:22, 허브의 개발 일지 : PG 사업을 시작한것은 어쩌면
2022. 6. 15. 오후 12:22, 허브의 개발 일지 : 조금 긍정적?으로 저는 생각하고 있슴당
2022. 6. 15. 오후 12:40: 흑석동주니어님이 나갔습니다.
2022. 6. 15. 오후 12:42: 소심한 네오님이 나갔습니다.
2022. 6. 15. 오후 12:44, 허브의 개발 일지 : 혹시 rn에서 물리디바이스로 ios 구동할때 xcode가 디바이스를 못잡으면 어떻게 하셨나용??
2022. 6. 15. 오후 12:45, 허브의 개발 일지 : 옛날에 ios할때 아이튠즈를 설치해야만 잡혔던 기억도 있고
2022. 6. 15. 오후 12:45, 허브의 개발 일지 : 고민임당
2022. 6. 15. 오후 12:45, 김동현 : 아예 못잡나요?
2022. 6. 15. 오후 12:52, 허브의 개발 일지 : 내넹 xcode 디바이스목록에
2022. 6. 15. 오후 12:52, 허브의 개발 일지 : 안뜨더라구요
2022. 6. 15. 오후 12:52, 허브의 개발 일지 : 근데 충전은 잘되구
2022. 6. 15. 오후 12:53, 허브의 개발 일지 : 지금 점심시간인데 가서 
2022. 6. 15. 오후 12:53, 프론트 지키미 : xcode 업데이트 혹시 가능한가여?
2022. 6. 15. 오후 12:53, 허브의 개발 일지 : 폰에서 뭐 설정하는게 있는지 찾아보고
2022. 6. 15. 오후 12:53, 허브의 개발 일지 : 아 그건 안됩니다
2022. 6. 15. 오후 12:53, 허브의 개발 일지 : xcode업데이트했다가
2022. 6. 15. 오후 12:53, 허브의 개발 일지 : 무슨 억까를 당할지몰라서
2022. 6. 15. 오후 12:53, 프론트 지키미 : 핸드폰은 혹시 최근에 업데이트 하셨나요?
2022. 6. 15. 오후 12:53, 허브의 개발 일지 : 네네 ios 15.6이에요
2022. 6. 15. 오후 12:54, 프론트 지키미 : xcode 버전이 최신이 아니어서 ios 15.6을 인식 못하는게 아닐까 조심스레 추측해 봅니다
2022. 6. 15. 오후 12:54, 허브의 개발 일지 : 그러기엔 시뮬레이터가 15.6으로 구동되는거같아서
2022. 6. 15. 오후 12:54, 허브의 개발 일지 : xcode는 13쓰고잏어용
2022. 6. 15. 오후 12:55, 프론트 지키미 : 아 그렇군요 추측 철회하겠습니다
2022. 6. 15. 오후 12:55, 허브의 개발 일지 : ㅋㅋㄱㅋㄱㅋㄲㅋㄱㅋㅋ
2022. 6. 15. 오후 12:56, 허브의 개발 일지 : 지금 한달 후에 릴리즈라 봐야 하는데 
2022. 6. 15. 오후 12:56, 허브의 개발 일지 : xcode 버전이나 이런건 가장 마지막에 건드려야해용
2022. 6. 15. 오후 12:56, 허브의 개발 일지 : 괜히 건드렸다가 이번 스프린트 날릴까봐 ㅜ
2022. 6. 15. 오후 1:27, 부끄러운 어피치 : 테오! 저 궁금한게 있는데요, 장난감 프로젝트(nextjs)에 새로운 css 라이브러리나 프레임워크 써보려고 하는데요, 혹시 adorable-css도 잘 되나요 ?
2022. 6. 15. 오후 1:28, 여의도개발 : 사진
2022. 6. 15. 오후 1:28, 여의도개발 : 혹시.. StringEnum.Yes를 Y로 인식(?)하게하는 방법 아시는분..?
2022. 6. 15. 오후 1:29, 박용준 : const enum을 쓰심 됩니다
2022. 6. 15. 오후 1:30, 박용준 : (as const)
2022. 6. 15. 오후 1:31: 짱준님이 들어왔습니다.
2022. 6. 15. 오후 1:31, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 1:34, 승훈 : 이모티콘 500명입니다~!
2022. 6. 15. 오후 1:44, 진현 : 이모티콘 
2022. 6. 15. 오후 1:44, 주니어개발자 : 이모티콘 
2022. 6. 15. 오후 1:47, A대 4-1(진) : 여러분 혹시 redux와 recoil 차이 중에
redux는 상태가 변하면 store 객체 값이 바뀌어서 App부터 상태가 변경되어 diff 알고리즘에 전부 다 들어가나요?

recoil은 react 내부에서 상태관리를 하기 떄문에 구독하고 있는 컴포넌트만 diff 알고리즘 들어가나요??
2022. 6. 15. 오후 1:52, 박용준 : 아니요 redux는 변경된 값을 select 하고 있던 부분만 업데이트 됩니다
2022. 6. 15. 오후 1:55, 유용태 (teo.yu) : nextjs에서는 vite기반의 빌드 방식은 사용할수가 없구요. virtual css인 script cdn 방식으로는 가능할거에요. 아직 webpack으로는 포팅을 안했습니다. 제가 webpack을 안쓰다보니 ㅠ
2022. 6. 15. 오후 1:55, A대 4-1(진) : 감사합니다. 제가 이런 의문을 가졌던 이유가,
redux의 store는 상태가 react 외부에서 관리된다고 해서 redux의 상태가 바뀐다는건 store의 상태가 바뀌는건데 그럼 App컴포넌트로 내려주는 값이 새로운 객체 값이라 생각해서 diff알고리즘에 적용됄거라 생각했었습니다.

용준님께서 해주신 답변은 redux나 recoil이나 참조하고있는 컴포넌트만 변경됀다는 말씀이시군요!

감사합니다.
2022. 6. 15. 오후 1:55, 유용태 (teo.yu) : 짱준님~~ 반갑습니다 :)
2022. 6. 15. 오후 1:56, 여의도개발 : 좀더 자세히 설명 가능하실까요?
2022. 6. 15. 오후 1:58, 부끄러운 어피치 : 답변 감사합니다!!
2022. 6. 15. 오후 1:58: 즐거운 네오님이 들어왔습니다.
2022. 6. 15. 오후 1:58, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 2:00, 델 : 확인해보진 않았는데 store 가 매번 새로운 객체가 되는 게 아니라 store 객체를 라이브러리가 계속 mutable 하게 다루면서 변경하지 않으려나요?
2022. 6. 15. 오후 2:01, A대 4-1(진) : 아 제가 redux를 사용은 해보진 않았지만,
보통 action.type에 따라 
return {...prev,isLoading:true } 처럼 사용해서 불변성을 유지한다고 생각했습니다!
2022. 6. 15. 오후 2:04, 썰cho : @hustle-dev 님~~ 혹시 저 개인톡 가능할까요?? 저 클릭하면 개인톡 됩니다 ㅎㅎ
2022. 6. 15. 오후 2:04, 너겟 : redux는 툴킷을 쓰면 immer가 내장돼있어서 얘가 불변성유지를 해줘요
2022. 6. 15. 오후 2:04, 델 : 음 그러니까 reducer 는 항상 객체를 불변성을 유지하면서 새로운 객체를 리턴하도록 코드를 짜야 하는 건 맞는데, 리덕스가 내부적으로 가지고 있는 store 값은 리듀서가 리턴하는 객체 값에 따라 mutable 하게 업데이트되지 않을까 하는 말이었어요!
2022. 6. 15. 오후 2:04, 유용태 (teo.yu) : 즐거운 네오님~ 반갑습니다 :)
2022. 6. 15. 오후 2:04, 델 : 삭제된 메시지입니다. 
2022. 6. 15. 오후 2:04, A대 4-1(진) : 와
2022. 6. 15. 오후 2:05, A대 4-1(진) : reducer는 불변성이 맞지만, redux내부 store는 mutable하다 이말씀이시죠??
2022. 6. 15. 오후 2:05, 델 : 아 넵넵 그게 제 생각인데 뭔가 당연히 그럴 거 같긴 한데 또 확신은 없어서 코드 뜯어보고 있습니다 ㅋㅋㅋ
2022. 6. 15. 오후 2:07, 델 : 사실 보통 CRA에서 리덕스 쓸 때 index.js 에서

const store = createStore(리듀서들); // 여기서 변수 정의

return (
   …
   <Provider store={store}>
   …
)

이렇게 되기 때문에 리액트에 전달되는 store는 mutable할 수밖에 없지 않나 싶긴 해요
2022. 6. 15. 오후 2:08, 델 : 아 근데 코드 읽어보니까 아닌 거 같네요 ㅋㅋㅋㅋㅋㅋ 더 읽어보고 나아중에 확신 생기면 다시 정리해볼게요!
2022. 6. 15. 오후 2:09, A대 4-1(진) : 저도 더 공부해보겠습니다 감사합니다!
2022. 6. 15. 오후 2:09, 너겟 : 리덕스를 쓰는 이유가 state를 immutable하게 관리하기 위해서라고 알고있는데.. store가 mutable하면 안되지않나요
2022. 6. 15. 오후 2:09, A대 4-1(진) : @너겟  너겟님 혹시 이거에 대해 어떻게 생각하시는지 알 수 있을까요??
2022. 6. 15. 오후 2:10, hustle-dev : 넵넵
2022. 6. 15. 오후 2:10, 허브의 개발 일지 : 동영상
2022. 6. 15. 오후 2:10, 허브의 개발 일지 : 웹에선 저 깜박이는 컬러가 텍스트 컬러 바꿔주면 됐는데
2022. 6. 15. 오후 2:11, 너겟 : 제가 recoil을 안써봐서..ㅠ 
2022. 6. 15. 오후 2:11, 허브의 개발 일지 : 혹시 rn에선 어떻게 바꾸는지 아시는 방법 아시나요?
2022. 6. 15. 오후 2:11, 허브의 개발 일지 : 그리고 저 깜빡 깜빡 거리는 아이의 이름도 궁금합니다 ㅜ
2022. 6. 15. 오후 2:12, 떨고있는 어피치 : css blink 검색해보시면 될것같습니당
2022. 6. 15. 오후 2:12, 떨고있는 어피치 : 사진
2022. 6. 15. 오후 2:12, A대 4-1(진) : 리덕스쪽 이야기는 어떻게 생각하세요?? 

store가 react 외부에서 관리되어서 store의 상태 값이 변경되면 불변성으로 새로운 store를 받는다 생각했는데,, 그래서 diff 알고리즘에는 다 올라가지만 값은 변경되지 않는 컴포넌트들은 리렌더가 발생하지 않는다고 생각했거든요
2022. 6. 15. 오후 2:13, 게으름(lifeisnovel) : css caret-color 확인해보세요!
2022. 6. 15. 오후 2:13, 허브의 개발 일지 : There is actually a prop doing this for TextInput : selectionColor

<TextInput
  selectionColor={'green'}
/>
2022. 6. 15. 오후 2:13, 허브의 개발 일지 : 찾았슴당~
2022. 6. 15. 오후 2:14, 허브의 개발 일지 : TextInput.defaultProps.selectionColor = 'red'; 이런식으로 상단에 써주면 되네용
2022. 6. 15. 오후 2:14, 너겟 : 리코일을 검색해보니 확실히 불필요한 렌더링이 발생하지 않는 점이 있네요!
2022. 6. 15. 오후 2:14, 너겟 : 저도 이렇게 깊이는 생가해보지 못했는데
2022. 6. 15. 오후 2:15, 델 : 리덕스도 구독한 컴포넌트만 업데이트되지 않나요?
2022. 6. 15. 오후 2:15, 웹린이 : react-redux도 useSelector로 구독한 값 안바귀면 리렌더링 안돼요~
2022. 6. 15. 오후 2:16, A대 4-1(진) : 아 그럼 애초에 diff알고리즘으로 검사해주는 컴포넌트들은 useSelector 구독한 컴포넌트만 되는거군요?
2022. 6. 15. 오후 2:17, A대 4-1(진) : store의 객체가 불변성으로 변경되면 useSelector를 구독하지 않는 모든 컴포넌트도 diff알고리즘으로 비교할거라 생각했었습니다! 물론 리렌더가 발생하지 않을거라고 생각은했습니다!
2022. 6. 15. 오후 2:18, 델 : 근데 store 객체가 createStore()가 리턴하는 그거 말씀하시는 거 맞나요?
2022. 6. 15. 오후 2:18, 델 : 아니면 리덕스가 내부적으로 관리하는 state를 말씀하시는 걸까요
2022. 6. 15. 오후 2:19, 너겟 : 스토어는 state랑 리듀서를 다 포함하는 개념 아닌가요
2022. 6. 15. 오후 2:19, 웹린이 : store객체는 처음에 생성해서 provider로 내려주고
2022. 6. 15. 오후 2:19, 웹린이 : 딱히 건드릴 일이 없긴한데
2022. 6. 15. 오후 2:19, 델 : 이거라면 맨 처음에 자바스크립트 로드될 때만 실행되기 때문에 레퍼런스값이 바뀔 수가 없어서
2022. 6. 15. 오후 2:20, 웹린이 : 만약에 바뀐다면 store 소비하고 있는 컴포넌트는 리렌더링 되겠죠
2022. 6. 15. 오후 2:20, 웹린이 : ???
2022. 6. 15. 오후 2:20, A대 4-1(진) : 아
2022. 6. 15. 오후 2:20, 웹린이 : 보통은 짜요짜요님이 말씀하신 것 처럼
2022. 6. 15. 오후 2:21, 웹린이 : 처음에 한번 생성한 뒤로 바뀔일이 없지 않나요 ㅎㅎ
2022. 6. 15. 오후 2:21, A대 4-1(진) : store의 상태가 불변성을 유지한다해도 
store자체는 바뀌지 않는가보네요??
2022. 6. 15. 오후 2:21, A대 4-1(진) : const obj = { a : 1 }
obj.a = 2;

이런 느낌인가보네여
2022. 6. 15. 오후 2:22, 웹린이 : 네 store는 계속 그대로에요~ store가 갖고있는 state가 바뀌는거지 store가 바뀌는게 아니니까요~
2022. 6. 15. 오후 2:22, A대 4-1(진) : ㅎㅎ,,
2022. 6. 15. 오후 2:22, A대 4-1(진) : ㅜㅜ 감사합니다.. 제가 깊게 알지못해서 발생한 질문으로 많은분들께서 귀한시간을 소비해주셨네여
2022. 6. 15. 오후 2:22, A대 4-1(진) : 많이 배웠습니다 ㅎㅎ
2022. 6. 15. 오후 2:22, 살려줘 네오 : 혹시!! Useeffecf로 api통신 후 state 변경 해주고 그 데이터가 있으면 navigate로 넘겨 주었는데 페이지는 이동 되었는데 state는 null인데 해결방법 아실 분 계실까요?
2022. 6. 15. 오후 2:23, 너겟 : 넘겨주는 데이터 먼저 검증해보고 넘겨주는 방식 시도해보셔요 저도 어제 그 문제때문에 고생했는데 
2022. 6. 15. 오후 2:24, 애교뿜뿜 어피치 : https://github.com/rakkasjs/rakkasjs

요런게 만들어지고 있네요
2022. 6. 15. 오후 2:24, 살려줘 네오 : Navigate시점에 데이터는 null이라 그런거 같은데. 아직 state가 set으로 안 바뀐 것 같은 상태에서 훅이 빠르게 바뀐거 같아요  흠
2022. 6. 15. 오후 2:26, 델 : 확인해보니까 이부분 코드 읽어보시면 도움 될 거 같아요

store
https://github.com/reduxjs/redux/blob/d4d08d0438711ea7528fc3c5c11da00cd120a991/src/createStore.ts#L361-L367

state
https://github.com/reduxjs/redux/blob/master/src/createStore.ts#L111

store 는 그냥 createStore 함수가 리턴하는 객체일 뿐이고 state 는 createStore 함수 실행 중에 생성된 객체로 store.getState 클로저에 의해서 접근 가능한 값인 거 같아요 
2022. 6. 15. 오후 2:26, 너겟 : 선배님들, 혹시 데이터리스트 map으로 돌릴때 map 내부에서 하위 컴포넌트에 특정 item 값만 내려주려면 어떻게 하나요? (예: n번 카드 클릭할때 n번 아이템의 정보만 받아서 모달 만들기) 새 페이지 이동하는 방식으로밖에 구현이 안되네요 ㅠㅠ
2022. 6. 15. 오후 2:27, 너겟 : 후 props 보내니까 전체 리스트 다 내려보내주세요
2022. 6. 15. 오후 2:27, 너겟 : 새 페이지로 이동할때는 location쓰거나 params 쓰면되는데
2022. 6. 15. 오후 2:27, 델 : 이렇게 말씀주신 것처럼 state 가 store 의 프로퍼티 형태로 존재하지는 않는 거 같아요
2022. 6. 15. 오후 2:29, 살려줘 네오 : 어떻게 해결하셨나요?
2022. 6. 15. 오후 2:29, 부끄러운 어피치 : 제가 질문을 제대로 이해 한건지는 모르겠지만, filter를 사용하는 건 도움이 안될까요?
2022. 6. 15. 오후 2:30, 너겟 : 저는 보낼때 && 이거 써서 ㅈ데이터가 있는지 한번 더 확인했긴한데 제 상황이랑 조금 다른거같긴해요
2022. 6. 15. 오후 2:30, A대 4-1(진) : ㅎㅎ 감사합니다
2022. 6. 15. 오후 2:31, 너겟 : setState가 먹히기 전에 넘어가서 초기값 null이 뜬거같네요
2022. 6. 15. 오후 2:31, 델 : <ul>
      {data.map((d) => (
        <li>
          <button onClick={() => setModalId(d.id)}>클릭</button>
        </li>
      ))}
    </ul>
    <Modal id={modalId}>뭐</Modal>

이런 식으로 처리합니다!
2022. 6. 15. 오후 2:33, 너겟 : 아 그럼 다이렉트로 보내는 방법은 애초에 없는거군요?
2022. 6. 15. 오후 2:33, 살려줘 네오 : 맞아요.. navigate하기 전에 data업데이트 된걸 넘겨줘야하는데 그전에 navigate가 먼저 작동해서 넘겨준거 같아서.
2022. 6. 15. 오후 2:34, 델 : 모달에 전달된 아이템도 하나의 상태값이라 수학적으로 생각했을 때 하나의 상태를 별도로 만들어줄 수밖에 없을 거 같아요
2022. 6. 15. 오후 2:35: 몽몽님이 들어왔습니다.
2022. 6. 15. 오후 2:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 2:35, 델 : 혹시 yes24 터졌나요..?

https://www.yes24.com/product/goods/108748841
2022. 6. 15. 오후 2:36, 음악듣는 어피치 : 저는 잘 접속되는데요!
2022. 6. 15. 오후 2:36, 너겟 : 넵 감사합니다! 
2022. 6. 15. 오후 2:36, 델 : 동영상
2022. 6. 15. 오후 2:37, 델 : 오.. 왜인지 신박한 이슈가 생기네요 ㅋㅋㅋㅋㅋㅋㅋ ㅜㅜ 다른 브라우저로 접속해봐야겠어요 감사합니다!
2022. 6. 15. 오후 2:37, 살려줘 네오 : state가 바뀐 시점을 찾아서 보내줘야 하는데 어떻게 해결하셨을까요? 
2022. 6. 15. 오후 2:37, 빠밤 : 혹시 리액트공부할때 리덕스는 필수로공부해야할까요?
2022. 6. 15. 오후 2:39, 델 : 저는 필수까진 아니고 알면 좋다 정도인 거 같아요 점점 죽고 있어서
2022. 6. 15. 오후 2:40, 음악듣는 어피치 : 캐시 지우고 접속해보세요! 아니면 시크릿모드
2022. 6. 15. 오후 2:40, 썰cho : 아직까지는 저는 필수라고 생각은 합니다.. 죽고는 있다지만 아직도 많이 쓰고 있어서ㅠ ㅠ 
어딜가든 써야하는거같긴해요
2022. 6. 15. 오후 2:40, 썰cho : 새로운 프로젝트는 점점 없어지고는 있지만..
2022. 6. 15. 오후 2:41, 델 : 맞아요 리코일 그렇게 좋다좋다 소리 나와도 아직 npm trends 들어가보면 압도적이긴 하더라구요
2022. 6. 15. 오후 2:42, 너겟 : 네오님 저는 리덕스로 관리를 해서... 저같은 경우에는 리스트를 받아서 그 리스트가 있는지랑 길이가 0보다 큰지를 확인해본다음에 넘기는 걸로 세팅했어요
2022. 6. 15. 오후 2:42, 너겟 : useEffect(() => {
    dispatch(getFeedLists());

    if(FeedLists && FeedLists.length > 0) {
      console.log(FeedLists[0].img_url);
    }
  }, []);
2022. 6. 15. 오후 2:42, 너겟 : 이런식으로요
2022. 6. 15. 오후 2:42, 너겟 : 글고 아래보내줄때도 &&로 확인 한번 더 하고 보냈어요 
2022. 6. 15. 오후 2:43, 너겟 : 저는 리덕스밖에 안써봤지만 mobx도 많이 쓰시더라구요 
2022. 6. 15. 오후 2:44, 너겟 : 근데 저는 전역상태관리를 항상 써주고있어요 안쓰면 제가 너무 헷갈려서요 ㅠㅠ
2022. 6. 15. 오후 2:46, 살려줘 네오 : 아!! 전역이군요..전역으로 처리할 데이터는 아니라서.. 흠 감사합니다. ㅜ
2022. 6. 15. 오후 2:47, 델 : 요즘 약간 상태관리매니저 춘추전국시대인 거 같아요
2022. 6. 15. 오후 2:48, 곰곰 : 리덕스 쓰기시작하면 불편한점도있지만 편한게 더 많아서 저는 많이쓰는것같아요
2022. 6. 15. 오후 2:48, 살려줘 네오 : 그래도 아직은 리덕스가 조금 위에 있지 않나요? 흠..
2022. 6. 15. 오후 2:48, 곰곰 : 저는 한두단계 넘어가면 바로 스토어로 빼서 관리합니다..
2022. 6. 15. 오후 2:49, 박용준 : 라고들 많이 하긴 하는데 npmtrends를 보면.. redux가 프론트판의 리액트와 같습니다
2022. 6. 15. 오후 2:50, 썰cho : react query 도 많이 쓰는거같아요
2022. 6. 15. 오후 2:50, 델 : 사진
2022. 6. 15. 오후 2:50, 박용준 : 그래도 redux 대신 zustand 같은거 은근 쓰긴 하더라구요
2022. 6. 15. 오후 2:50, 델 : 조금이 아니라 압도적이긴 한데
2022. 6. 15. 오후 2:50, 썰cho : 주스탄드는 레퍼런스가 없어서 ㅠㅠ
2022. 6. 15. 오후 2:50, 너겟 : 와우 압도적이네요
2022. 6. 15. 오후 2:50, 델 : 신규 생성하는 프로젝트는 웬만하면 리덕스 안 쓰려는 분위기고
2022. 6. 15. 오후 2:50, 썰cho : 저희회사도 리덕스 왠만하면 안쓰려고..
2022. 6. 15. 오후 2:50, 너겟 : 확실히 리덕스가 레퍼런스가 겁나 많은거같아요 
2022. 6. 15. 오후 2:50, 델 : 리액트쿼리 나오면서 클라이언트 상태관리 매니저가 필요한 건 맞냐? 같은 생각들도 나오고 하더라구요
2022. 6. 15. 오후 2:50, 썰cho : 오히려 리코일이 많아서 리코일쪽으로 쓰자고 했어요
2022. 6. 15. 오후 2:51, 델 : 그러는 새에 jotai zustand recoil 같은 것들이 분위기상 많이 치고 올라온 거 같아요
2022. 6. 15. 오후 2:51, 썰cho : 리코일 + 리액트 쿼리 사용하자고 이야기중입니다
2022. 6. 15. 오후 2:52, 너겟 : 리덕스 이해하고 있으면 리코일도 금방 배울수있을까요?
2022. 6. 15. 오후 2:52, 델 : 그럼에도 몇 년 전까지만 해도 리덕스가 리액트랑 항상 붙어다니던 라이브러리였어서 그런지 아직도 압도적이긴 한 거 같구요
2022. 6. 15. 오후 2:52, 스타트업개발자 : 세 개의 프로젝트를 진행중인데 서로 같은 약관의 내용을 사용하는데 프로젝트의 디자인이 완전 다르다보니 서로 다른 디자인을 적용시켜야 하는 상황입니다. 이런 경우에는 어떻게 작업을 해야할까요?
2022. 6. 15. 오후 2:55, 빠밤 : 레거시 코드보려면 필수군요
2022. 6. 15. 오후 3:04, 웹린이 : 저는 개인적으로 react-query나 swr 로 처리하기 까다로운 부분들이 있어서 redux, recoil 같은 전역 상태 관리 라이브러리 사용이 필요하긴 한 것 같아요.
2022. 6. 15. 오후 3:04: 귀여운 라이언님이 들어왔습니다.
2022. 6. 15. 오후 3:04, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 3:05, 웹린이 : react-query, swr 이 애초에 전역 상태관리 하려고 나온것도 아니고 data fetching을 목적으로 만들어진거다 보니 전역 상태관리 하는데 쓰긴 불편하더라구요.
2022. 6. 15. 오후 3:09, 철진 : 맞아요. 두 라이브러리가 서버 상태를 규정하고 클라이언트 상태랑 분리하려고 하는 것처럼 클라이언트 상태를 관리하는 다른 라이브러리가 있다면 좋은 것 같아요. 
2022. 6. 15. 오후 3:11, 애교뿜뿜 어피치 : 그랩큐엘 아닌 곳에서 쓸 수 있는 Apollo 같은것이 나온다면..
2022. 6. 15. 오후 3:14, 델 : 맞아요 저도 동의해요, 근데 경험상 어드민 같은 프로젝트들은 클라이언트 상태가 아주 적어서 굳이 필요없을 때도 많더라구요
2022. 6. 15. 오후 3:15, 애교뿜뿜 어피치 : 전 데브툴 하나보고 리덕스툴킷 계속 쓰고 있습니다.ㅎㅎㅎ;
2022. 6. 15. 오후 3:22, 살려줘 네오 : 혹시! 프론트에서 페이지 이동시 상태값 넘겨주는 방법이 navigate외 다른 방법이 있을까요?
2022. 6. 15. 오후 3:23: 떨고있는 어피치님이 나갔습니다.
2022. 6. 15. 오후 3:25, 프론트는 잼있어 : 백엔드라 뇌피셜이긴 한데 쿼리 파라미터로 넘겨주면 어떨까요?
2022. 6. 15. 오후 3:26, 살려줘 네오 : 리액 고수님들! 클라이언트단에서 상태를 가지고 넘겨주고 싶은데 페이지간 이동시 넘겨줄 방법이 리액트내에서 있을까요? v6되고나서 v5 history에서 넘겨주는 방식이 navigate에선 안되서 ..ㅜ
2022. 6. 15. 오후 3:27, 웅세 : 그냥 props로 넘겨주시거나 쿼리파라미터로 넘길수있지않나요??
2022. 6. 15. 오후 3:27, 여의도개발 : 혹시
2022. 6. 15. 오후 3:27, 여의도개발 : 사진
2022. 6. 15. 오후 3:27, 피자 먹다 자는 무지 : location이랑 useParam으로 안되나요?
2022. 6. 15. 오후 3:28, 여의도개발 : 이렇게 말씀이신가용?
2022. 6. 15. 오후 3:29, 살려줘 네오 : location으로 넘겨줄수있나요? 
2022. 6. 15. 오후 3:31, 철진 : navigate에서도 state를 통해서 거의 동일하게 넘길 수 있습니다. 
2022. 6. 15. 오후 3:32, 허브의 개발 일지 : 그 혹시
2022. 6. 15. 오후 3:32, 허브의 개발 일지 : 한글만 입력받게 하는
2022. 6. 15. 오후 3:32, 허브의 개발 일지 : 정규표현식
2022. 6. 15. 오후 3:32, 허브의 개발 일지 : 있으신 분 계신가요?
2022. 6. 15. 오후 3:33, 피자 먹다 자는 무지 : https://reactrouter.com/docs/en/v6/getting-started/concepts#locations
2022. 6. 15. 오후 3:33, 빠밤 : 프론트는 정말 신기술이 금방금방나오네요
2022. 6. 15. 오후 3:34, 빠밤 : 공부안하면 바로 나가리될듯..
2022. 6. 15. 오후 3:36, 살려줘 네오 : 요거는 window.location.href로 이동시키는 것과 동일한거 말씀하시는건가요? 리액트내에서가 아니구요?
2022. 6. 15. 오후 3:37, Hyo : production 레벨에서
console log 사용하면 안되는 이유가 있나요?
2022. 6. 15. 오후 3:37, 피자 먹다 자는 무지 : https://www.codegrepper.com/code-examples/javascript/getting+state+in+react-router-dom+v6
2022. 6. 15. 오후 3:37, 피자 먹다 자는 무지 : 제가 라우터 돔에서 자료를 봤었는데
2022. 6. 15. 오후 3:38, 피자 먹다 자는 무지 : 못찾겠어서
2022. 6. 15. 오후 3:46, 프론트 : https://stackoverflow.com/questions/64566405/react-router-dom-v6-usenavigate-passing-value-to-another-component

navigate로 넘겨주고, 읽을 때는 useLocation으로 불러오면 되는 거 같아요
2022. 6. 15. 오후 3:52, 살려줘 네오 : 그렇게 해봤는데 navigate시점에서 useState가 반영안되서 페이지 이동되면서 date가 null인 상태가 반영되는거 같아요! ㅜㅜ 혹시 oauth로 리다이렉트 해서 받은 데이터를 useState로 해서 페이지 이동시켜주고 싶은데 방법이 없을까요 ? ㅠ
2022. 6. 15. 오후 3:53: 배불뚝 제이지님이 들어왔습니다.
2022. 6. 15. 오후 3:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 4:00, 토벤머리 초보자 : 갑자기 궁금한게 생겨서 질문하나 남기겠습니다…

Redux를 사용하는데 '비동기 처리'가 안되어서 Redux-saga나 Redux-thunk같은 미들웨어를 사용한다고 알고 있는데, 사용하는 단에서 async/await으로 액션의 dispatch 주기를 제어하면 되지 않나요? 비동기 제어를 한다고 미들웨어를 추가한다는 개념이 이해가 가지 않아서 질문 드립니다!
2022. 6. 15. 오후 4:08, 델 : 사용하는 단이 리듀서를 말씀하시는 건가요?
2022. 6. 15. 오후 4:08, 델 : 아니면 컴포넌트에서 dispatch 를 호출하는 부분을 말씀하시는 건가요?
2022. 6. 15. 오후 4:20: 다몬님이 들어왔습니다.
2022. 6. 15. 오후 4:20, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 4:21, 유용태 (teo.yu) : 다몬님~~ 반갑습니다 어서오세요 :)
2022. 6. 15. 오후 4:21, 다몬 : 안녕하세요 1년차 프론트엔드 개발자입니다~! 반갑습니다
2022. 6. 15. 오후 4:22, 취미는개발 : 반갑습니다 :)
2022. 6. 15. 오후 4:22, 토벤머리 초보자 : 답장 늦어서 죄송합니다. 컴포넌트 단위에서 호출하는 겁니다
2022. 6. 15. 오후 4:24, 델 : 관리의 용이성인 거 같아요
2022. 6. 15. 오후 4:25, 델 : 유저 목록을 조회하는 getUsers 라는 액션이 있을 때
2022. 6. 15. 오후 4:27, 델 : 세 컴포넌트에서 getUsers 를 이용한다면

매번 컴포넌트에서 api 호출을 하고 기다렸다가 리덕스에다가 넘기는 로직을 반복구현하는 것보다

컴포넌트에서 getUsers 를 호출하면 리덕스가 상태 관리자답게 자기가 알아서 api 호출해서 알아서 리스폰스를 state에다가 set할 수 있게 되면, api 호출 로직에 대한 책임을 뷰 로직(컴포넌트) 가 아닌 비즈니스로직 (리덕스) 에게 미룰 수 있으니까요!
2022. 6. 15. 오후 4:51, 토벤머리 초보자 : 아하… 로직을 분리하기 위해서 미들웨어가 사용되는 거군요…
2022. 6. 15. 오후 4:51, 토벤머리 초보자 : 감사합니다 시원한 답변이 된것 같습니다!
2022. 6. 15. 오후 4:53, 살려줘 네오 : 혹시 요새는 redux와 비동기 통신은 react query로 조합해서도 많이 쓴다는데 어떻게 생각하시나요?
2022. 6. 15. 오후 4:53, 썰cho : react query 쓰면 로컬은 좀 가벼운걸로 쓰시더라고요
2022. 6. 15. 오후 4:54, 애교뿜뿜 어피치 : 저는 리덕스에 쿼리 쓰고 있습니다.
2022. 6. 15. 오후 4:55, 박용준 : 넵 맞습니다
2022. 6. 15. 오후 4:57, 델 : 제가 클라이언트 상태가 빡세게 필요한 프로젝트를 못 경험해봐서.. 잘 모르겠습니다ㅠㅠ
2022. 6. 15. 오후 4:59, 델 : 경험상 웬만하면 react-query 를 쓴다면 나머지 상태들은 useState 면 충분했고 멀리 가도 context 면 충분했는데, 아까 웹린이님께서도 말씀하셨듯이 클라이언트 상태가 빡세게 필요한 프로젝트들이 있는 거 같아요
2022. 6. 15. 오후 4:59, 델 : 근데 redux + react-query 를 이쁘게 조합해서 쓰는 그림은 잘 안 그려지긴 해요 redux는 명령적이고 react-query 는 선언적이라
2022. 6. 15. 오후 5:00, 썰cho : 아 저는 상대적으로 가벼운 zustand나 recoil을 말한거였어요
2022. 6. 15. 오후 5:00, 델 : 사진
2022. 6. 15. 오후 5:00, 델 : 공식문서는 이렇게 표현하더라고요
2022. 6. 15. 오후 5:05, 허브의 개발 일지 : 그런 의미로 
2022. 6. 15. 오후 5:06, 허브의 개발 일지 : https://redux-toolkit.js.org/rtk-query/overview
2022. 6. 15. 오후 5:06, 허브의 개발 일지 : 진짜 리덕스 사랑꾼이 될 수 있는 기회가 있습니다
2022. 6. 15. 오후 5:08, 델 : 맞아요 리덕스랑 조합할거면 저게 짱인 거 같아요
2022. 6. 15. 오후 5:28, 귀여운 라이언 : 혹시 다들 디버깅 레벨 기준을 어떻게 잡으시나요?
2022. 6. 15. 오후 5:30: 말썽쟁이 네오님이 들어왔습니다.
2022. 6. 15. 오후 5:30, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 5:35, 치맥하는 제이지 : 안녕하세요.
현재 프로젝트가 heroku로 CI/CD 환경이 구축되어 있어서 git에 push 하면 브랜치별로 deploy가 되어서 코드리뷰 시 PR를 쉽게 확인 할 수 있는 상태인데요.(Review apps)
특정 기능을 개발환경과 review apps, staging 단계에서만 보이게 하고 production 에서는 숨기고 싶습니다.
process?.env.NODE_ENV 를 이용하려고하니까 review apps 나 staging에서도 process?.env.NODE_ENV==='production' 이라서 의도한대로 동작이 안되네요.
어떻게 하면 review apps, staging, production을 구분할 수 있을까요?
2022. 6. 15. 오후 5:38, 철진 : env에 APP_NAME 등의 내용을 추가해서 이를 이용해서 분기할 수 있을 것 같습니다. 저희 서비스가 도메인이 여러 개 있어서 해당하는 방법으로 디자인 등을 처리하고 있습니다.
2022. 6. 15. 오후 5:38, 철진 : env.qa / env.dev 등으로 구별하고 있구요! 
2022. 6. 15. 오후 5:50, 진현 : 리덕스를 사용하다가 리액트쿼리를 도입하게된 기업들의 기술블로그가 있어서 공유드립니당

카카오톡
https://tech.kakao.com/2022/06/13/react-query/

카카오페이
https://tech.kakaopay.com/post/react-query-1/

우아한형제들
https://techblog.woowahan.com/6339/
2022. 6. 15. 오후 5:50, 호호 부는 튜브 : 혹시 컴포넌트를 나누는 기준에 대한 좋은 글이 있을까요?
2022. 6. 15. 오후 5:51, 철진 : https://youtu.be/fR8tsJ2r7Eg
2022. 6. 15. 오후 5:51, 철진 : https://jbee.io/web/components-should-be-flexible/
2022. 6. 15. 오후 5:52, 철진 : 이게 맞을지 모르겠지만 도움이 많이 되는 영상, 글이었습니다!
2022. 6. 15. 오후 5:59, 여의도개발 : 고맙습니다.
2022. 6. 15. 오후 5:59, 여의도개발 : state와 status의 차이는 뭘까요?
2022. 6. 15. 오후 6:02, 링링 : 영어 말씀이신가요 리액트에서는 state 만 있는 거 아닌가욤
2022. 6. 15. 오후 6:03, 설아아빠 : https://remocon33.tistory.com/m/701
2022. 6. 15. 오후 6:04, 여의도개발 : 와 형 제가 딱 궁금했던거!!
2022. 6. 15. 오후 6:04, 여의도개발 : 프로그래밍적으로 둘간의 차이가 어떤건지가 궁금했습니다.
2022. 6. 15. 오후 6:11, 고규식 : 제가 짠 코드 말고 다른사람이 작성한 코드읽는것을 어려워해서  잘짜여진 코드를 보고 읽는 연습을 하고싶은데, 어떤것을 보는게 좋을까요!?…
깃헙에서 star 많이 받은 프로젝트 보려고하는데, 너무 커서 어디서 보는게 좋을지 모르겠습니다ㅠ
2022. 6. 15. 오후 6:21, 파이팅 : 저도 궁금하네요
2022. 6. 15. 오후 6:36, 링링 : 저도 차이가 궁금해서 찾아봤오요

2022. 6. 15. 오후 6:36, 링링 : 요거요
2022. 6. 15. 오후 6:36, 링링 : 사진
2022. 6. 15. 오후 6:37, 링링 : 출처는 스택익스체인지입니다 덕분에 저도 잘 알았습니다:) https://softwareengineering.stackexchange.com/questions/219351/state-or-status-when-should-a-variable-name-contain-the-word-state-and-w
2022. 6. 15. 오후 6:38, 치맥하는 제이지 : 감사합니다! 말씀해주신 내용이 도움이 되었어요! 바로 적용했습니다! 좋은 저녁시간 보내세요!
2022. 6. 15. 오후 6:58, 초보 : 독학 하니까 너무 막막하네요 ㅠㅠ
2022. 6. 15. 오후 7:07, 프엔이될테야 : 저는 해탈했습니다..!
2022. 6. 15. 오후 7:10, hustle-dev : 저도 혼자해서 막막할때 부트캠프에 들어가 많이 도움이 되었던거 같아요
2022. 6. 15. 오후 7:10, 빠밤 : 확실히 어디들어가서 하는게 혼자하는것보다 개인적으로는 더 나은거같아요
2022. 6. 15. 오후 7:10, 빠밤 : 어디 소속되있는거자체가 위안이되더라구요
2022. 6. 15. 오후 7:11, hustle-dev : 맞아요 같이 공부하는 사람들도 있어서 서로 자극도 되면서 집중해서 공부할 수 있는거같아요
2022. 6. 15. 오후 7:12, 빠밤 : 프론트엔드시면 이번에 네이버부스트캠프에서 모집하던데 지원해보세요
2022. 6. 15. 오후 7:12, 빠밤 : 거기 엄청 유명합니다
2022. 6. 15. 오후 7:14, hustle-dev : 그러네요 부스트캠프도 모집중이군요 
2022. 6. 15. 오후 7:16, 초보 : 부트캠프는 비싸지 않나요?
2022. 6. 15. 오후 7:18, hustle-dev : 부스트캠프는 무료일걸요? 제가 했던 부트캠프도 무료였어요
2022. 6. 15. 오후 7:18, 링링 : 신입 되어도 막막하기는 마찬가지입니당....
2022. 6. 15. 오후 7:18, 철진 : 허슬님음 어디 부트캠프 다니셨나요??
2022. 6. 15. 오후 7:18, 철진 : 무료인 곳 어디인가유??
2022. 6. 15. 오후 7:18, O_O : 요즘 부트캠프들 국비로 전환 많이 하더라구요
2022. 6. 15. 오후 7:18, Hardy : 요즘 부트캠프 국비로도 가능하더라고요
2022. 6. 15. 오후 7:19, hustle-dev : 전 작년에 패캠에 네카라쿠배 라는 부트캠프다녔는데
2022. 6. 15. 오후 7:19, hustle-dev : 이번에 보니까 바뀐거같아요
2022. 6. 15. 오후 7:19, hustle-dev : https://zero-base.co.kr/event/connectto_fe
2022. 6. 15. 오후 7:19, 초보 : 아하 그렇군요.. 예전에는 몇백만원 한다고 얼핏 봤었는데 부트캠프도 한번 알아봐야겠네요 
2022. 6. 15. 오후 7:19, hustle-dev : 개인적으로 공부할 수 있는 환경?을 아침 10시부터 밤 10시까지 오프라인으로 강제해서
2022. 6. 15. 오후 7:19, hustle-dev : 전 좋았어요
2022. 6. 15. 오후 7:28, 빠밤 : 실제로 네카라쿠배많이가나요?? 
2022. 6. 15. 오후 7:28, 파이팅 : 허슬님 저기 코테 어려운가요? 3번보던데
2022. 6. 15. 오후 7:31, hustle-dev : 그 제가 2기였는데 1기 거의 10분중에 6분정도 가신걸로 알고있어요
2022. 6. 15. 오후 7:31, 고규식 : 3번보나요? 작년에는 2번이였는데... 전 떨어졌어요ㅠ
2022. 6. 15. 오후 7:32, hustle-dev : 1기땐 연계가 잘되었던거같은데 2기부턴 그런 커넥션이 많이 잘 안된거같기도해요
2022. 6. 15. 오후 7:32, hustle-dev : 글쎄요 제가 2기때는 코테 없이 들어갔었던거 같아서 기억이 잘 나지 않네요 ㅜㅜ
2022. 6. 15. 오후 7:33: 라임님이 들어왔습니다.
2022. 6. 15. 오후 7:33, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 7:36, 라임 : 삭제된 메시지입니다. 
2022. 6. 15. 오후 7:43, 타로 : 혹시 이 걸 보통 뭐라 그러는지 아시는 분 있으신가요? input창에 년도 월 일을 입력하면 해당 날짜로 이동하는 거요!
2022. 6. 15. 오후 7:43, 타로 : 명확한 명칭이 생각나지 않아서 여쭤봅니당
2022. 6. 15. 오후 7:43, 신난 어피치 : Datepicker?
2022. 6. 15. 오후 7:43, 피자 먹다 자는 무지 : ㄷㅔ이트피커?
2022. 6. 15. 오후 7:44, 타로 : 그렇군요! 감사합니당
2022. 6. 15. 오후 8:57: 기뻐하는 라이언님이 들어왔습니다.
2022. 6. 15. 오후 8:57, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 9:25, 유용태 (teo.yu) : 라임님~ 기뻐하는 라이언님~~ 반갑습니다 :) 어서오세요 ㅎ
2022. 6. 15. 오후 9:32, 기뻐하는 라이언 : 안녕하세요 리덕스에서 localStorage.getItem을 적용하려면 어떻게 설정해야 할까요? 
createStore는 현재 deprecated되어서 이것대신 다른 것으로 사용 가능할까요?
2022. 6. 15. 오후 9:35: 애교뿜뿜 무지님이 들어왔습니다.
2022. 6. 15. 오후 9:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 15. 오후 9:35: 휘파람 프로도님이 들어왔습니다.
2022. 6. 15. 오후 9:36, 유용태 (teo.yu) : 애교뿜뿜 무지님 휘파람 프로도님~ 반갑습니다 어서오세요 :)
2022. 6. 15. 오후 9:36, 휘파람 프로도 : 안녕하세요~!ㅎㅎ 
2022. 6. 15. 오후 9:36, 애교뿜뿜 무지 : 안녕하세요!ㅎ
2022. 6. 15. 오후 9:38, 김동현 : 저는 이런 경우를 위해서 새로 배우신 분들에게 알고리즘 공부를 추천합니다.
어떤 알고리즘 문제를 푼다음, 모범 답안 코드 2~3개정도를 보면서 다른 사람이 어떻게 깔끔하게 코드를 쓰는구나를 알수있게됩니다!
2022. 6. 15. 오후 9:38, 유용태 (teo.yu) : 환영합니다~ 이곳은 프론트엔드나 개발과 관련해서 궁금한 내용들은 공유하고 함께 성장하고자 하는 공간입니다~ 기술뿐만아니라 협업이나 실무 취준 이직 고민등 편하게 글 남겨주세요 ㅎ
2022. 6. 15. 오후 9:38, 김동현 : 알고리즘 공부를 통헤 얻는 다른 부수적인 이득도 엄청 많고요
2022. 6. 15. 오후 9:42, 휘파람 프로도 : 넵ㅎㅎ 여러 정보 얻고싶어서 들어왔습니다!
2022. 6. 15. 오후 9:42, 기뻐하는 라이언 : 안녕하세요!🍀
2022. 6. 15. 오후 9:43, 유용태 (teo.yu) : 네~ 많은 도움 되기를 바래요~ 적극적으로 물어보시면 더 좋아요 ㅎ 잘부탁드립니다
2022. 6. 15. 오후 9:58, 토마토 : @유용태 (teo.yu)  테오님~ 게더타운 맵에 있는 강을 실수로 지워버렸어요 ... 죄송합니다
2022. 6. 15. 오후 9:59, 토마토 : 사진
2022. 6. 15. 오후 9:59, 유용태 (teo.yu) : 괜찮아요ㅎㅎ 마음대로 또 만들어보세요 ㅎ
2022. 6. 15. 오후 9:59, 토마토 : 이모티콘 
2022. 6. 15. 오후 9:59, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋ
2022. 6. 15. 오후 10:00, 기뻐하는 라이언 : 안녕하세요 리덕스에서 localStorage.getItem을 적용하려면 createStore로 하는것으로 알고 있는데, 현재 deprecated되어서 이것대신 어떤 것으로 대체 되었을까요?
2022. 6. 15. 오후 10:21, 초보 : deprecated되고 줄도 쳐지는데 그냥 사용해도 적용돼요
2022. 6. 15. 오후 10:22, 토벤머리 초보자 : redux toolkit을 권장하고 있는것으로 알고있어요!
2022. 6. 15. 오후 10:23, 토벤머리 초보자 : @deprecated
We recommend using the configureStore method of the @reduxjs/toolkit package, which replaces createStore.
2022. 6. 15. 오후 10:23, 초보 : 저도 최근에 리덕스 공부했어서..  지금은 toolkit configureStore인데 createStore도 사용가능해요
2022. 6. 15. 오후 10:26, 기뻐하는 라이언 : index.tsx에서 configureStore를 사용해서 createStore를 선언하면 에러가 발생하네요
2022. 6. 15. 오후 10:28, 토벤머리 초보자 : import { legacy_createStore as createStore} from 'redux'
2022. 6. 15. 오후 10:28, 토벤머리 초보자 : 이렇게 한번 선언해보시겠어요?
2022. 6. 15. 오후 10:31, 기뻐하는 라이언 : 에러가 발생하는데 

index,tsx에서 

const store = configureStore({
  reducer: rootReducer,
  middleware: (getDefaultMiddleware) => getDefaultMiddleware({ serializableCheck: false }),
  devTools: process?.env.NODE_ENV !== 'production',
});
2022. 6. 15. 오후 10:31, 기뻐하는 라이언 : 중복 되어서 에러가 발생하는것인가요?
2022. 6. 15. 오후 10:59, 주니어개발자 : 혹시 스프린트는 어디서 모여서 진행하나요??
2022. 6. 15. 오후 10:59, 유용태 (teo.yu) : https://app.gather.town/app/BF5knX8KBmXFn5CU/teo 여기로 오세요~
2022. 6. 15. 오후 11:04, 유용태 (teo.yu) : 11시 5분에 시작하겠습니다
2022. 6. 15. 오후 11:58, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 6. 15. 오후 11:58, O_O : https://velog.io/@velopert/react-context-tutorial
벨로퍼트님 글입니다!
컨텍스트 api는 잘 사용을 안했는데... 다시 생각하게 되네요
2022. 6. 15. 오후 11:59, 화가난다 화가나 그래서 난 화가임 : nextjs에서 이미지를 사용할 때 svg를 주로 사용하시나요? 아니면 next/image를 사용하시나요? 사용할 때 기준점이 있나요?

2022년 6월 16일 목요일
2022. 6. 16. 오전 12:00, 제이영 : 아이콘은 svg사용합니다. svg로하기에 너무 복잡하면 이미지로 뽑습니다.
2022. 6. 16. 오전 12:02, 화가난다 화가나 그래서 난 화가임 : 아이콘이나 로고같은 작은 이미지는 svg를 사용하신다는 거죠? 나머지는 image로 사용하고요?
2022. 6. 16. 오전 12:04, 제이영 : 넵
대부분 작은 이미지는 덜 복잡하니까요~
추가로 뭔가 color값을 바꿔가며 여러번 사용될만한 경우에도 이미지 여러개 저장하는 것보다는 svg의 fill값을 바꾸는 식으로 사용합니다.
2022. 6. 16. 오전 12:05, 화가난다 화가나 그래서 난 화가임 : 근데 복잡하다는 건 무엇을 의미하는지 알 수 있을까요?
2022. 6. 16. 오전 12:05, 화가난다 화가나 그래서 난 화가임 : svg로도 크기가 큰 일러스트 작품을 뽑아서 사용할 수 있지 않나요?
2022. 6. 16. 오전 12:06, 제이영 : figma에서 svg로 export해보면 아...이건 svgomg로 압축해도 겁나 코드가 길어보이네 하는 게 있습니다
2022. 6. 16. 오전 12:06, 화가난다 화가나 그래서 난 화가임 : 아
2022. 6. 16. 오전 12:07, 화가난다 화가나 그래서 난 화가임 : 무슨 말씀이신지 알 거 같아요
2022. 6. 16. 오전 12:09, 화가난다 화가나 그래서 난 화가임 : 감사합니다!
2022. 6. 16. 오전 12:27, 썰cho : 죄송합니다 ㅠㅠ 잠깐 눈붙인다는게 이제 일어났네여 ㅠㅠ 알람 맞췄는데 끄고 자버려서 ㅠㅠㅠ
2022. 6. 16. 오전 12:42, 유용태 (teo.yu) : 괜찮아요~ 지금이라도 하고 싶으면 게더로 오세요
2022. 6. 16. 오전 4:15: 케챱될거야님이 들어왔습니다.
2022. 6. 16. 오전 4:15, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 16. 오전 8:04, 유용태 (teo.yu) : 프린이님~ 반갑습니다 어서요세요 :)
2022. 6. 16. 오전 9:40, hooon : 저 여기에 개발자 이력서관련 질문도 괜찮을까요??
2022. 6. 16. 오전 9:41, 유용태 (teo.yu) : 그럼요~
2022. 6. 16. 오전 9:47, hooon :  신입 프론트엔드 지원 이력서 작성중 입니다. 여기에 JAVA로 진행했던 프로젝트를 이력서에 넣어도 도움이 될까요??
 근데 예전에 했던 프로젝트여서 문서나 코드가 남아있지 않아요. 그냥 자바도 공부했었다고 어필하면 좋은점이 있을지 질문합니다~

2022. 6. 16. 오전 9:48, 비디오가미래다 : 도움될거 같아요!!
2022. 6. 16. 오전 9:49, 유용태 (teo.yu) : 어필하는 것 자체는 나쁘지 않아요. 다만 이력서에 쓴다는 것은 면접관으로 부터 질문을 받고 싶다는 표시이기에 무슨 얘기를 할지는 생각해두세요
2022. 6. 16. 오전 9:50, 유용태 (teo.yu) : 그냥 이력이 많이 써있기만 하면 진정성이나 전문성에 대해서 의문을 품을수 밖에 없어요
2022. 6. 16. 오전 9:51, 유용태 (teo.yu) : 프로젝트 경력 기술서를 쓸 때 어떤 것을 하기 위해서 JAVA로 무엇을 개발했고 해결했는지 짧게 그러나 구체적으로 적어두시는게 좋아요
2022. 6. 16. 오전 9:52, 썰cho : 코드로 인증이 안된다면 분명히 질문이 들어올건데 그거에대한 답변이 가능하다면
2022. 6. 16. 오전 9:52, 썰cho : 더 좋은 점수일거같아요
2022. 6. 16. 오전 9:53, 현수 : 근데 기본적으로 프론트엔드 면접에서는 크게 관심사가 아닐 것 같아서 사용 가능 기술 스택 적어놓는 곳에 제일 하단에? 추가적으로 Java를 사용가능한데 Java를 사용해서 어떤 것이 가능하고, 어떤 것을 할 수 있다를 적어두는 정도면 괜찮을 것 같아요
2022. 6. 16. 오전 9:56, hooon :  답변 감사합니다~ 추가적으로 제가 그 프로젝트는 코딩을 독학으로 혼자하다가 팀으로 뭔가 해보고싶어서 대학교 다니는 친구한테 부탁해서 친구팀에 껴서 친구 대학과제를 몰래 했었어요. 개발에 얼마나 관심이 있는지 어필하고싶은데 이런 경험을 어필해도 되는지 궁금합니다. 
2022. 6. 16. 오전 9:56, j : 직무랑 연관지어서 작성하면 괜찮을거 같아요. 스택이 안맞아도 우선은 직무랑 연관지어 이러한 작업을 진행하였다 혹은 프로젝트를 하면서 이런 부분을 통해 해당 직무에 접근하게 되었는지
2022. 6. 16. 오전 9:58, hooon : 어우 질문한번에 이렇게 많은 답변을 주시니 다들 너무 감사합니다~~
2022. 6. 16. 오전 9:58, j : 대학과제를 몰래 했다는건 위험할거 같아요.. 본인의 관심을 어필한다기 보다 오히려 마이너스 요소일 것 같네요. 청강이나 이런거면 괜찮을거 같은데
2022. 6. 16. 오전 10:00, j : 결과를 위해 과정에서 불법적인(?) 비 도덕적인 요소가 끼어 있다는 생각이 들것 같아서 그부분에서 위험할 것 같은 생각입니다
2022. 6. 16. 오전 10:07, hooon : 음 그렇군요. 이부분은 더 조심해야겠네요
2022. 6. 16. 오전 10:08, 델 : '몰래'라는 표현 때문인지 개발에 대한 관심이 있다고 느껴지는 플러스 요소보다 규율을 어기고 회사 질서를 깰 수 있다는 마이너스 요소가 훨씬 클 거 같아요
2022. 6. 16. 오전 10:08, 진정한 : 예전부터 생각했던 건데, 서로의 이력서를 볼 수 있는 플랫폼이 있을까요?
2022. 6. 16. 오전 10:08, 프린이 : 링크드인..?
2022. 6. 16. 오전 10:10, 진정한 : 정확히는 포트폴리오가 담긴 디테일한 이력서요!
2022. 6. 16. 오전 10:11, j : 로켓펀치 정보페이지?
2022. 6. 16. 오전 10:11, 진정한 : 이런 사이트가 있었으면 하는데, 이게 대중의 니즈와는 달라서 없는 것 같아서 여쭤봤어요
2022. 6. 16. 오전 10:11, 진정한 : 확인해봐야겠어요 ㅎㅎ
2022. 6. 16. 오전 10:11, 진정한 : 감사합니다!
2022. 6. 16. 오전 10:17, 케챱될거야 : 안녕하세요! 제가 어제 너무 늦은 시간에 들어와서 소개를 못 드렸네요. 대학생이고 리액트 다루고 있습니다. 요즘은 면접 보러 다니고있어요!
2022. 6. 16. 오전 10:17, 프론트는 잼있어 : '안녕하세요'
2022. 6. 16. 오전 10:20, 케챱될거야 : 안녕하세요!
2022. 6. 16. 오전 10:21, 유용태 (teo.yu) : 네~ 어서오세요~ ㅎ 면접에 대해서 궁금한거 생기면 많이 물어보세요 ㅎ 화이팅입니다!!
2022. 6. 16. 오전 10:22, 케챱될거야 : 감사합니다!!
2022. 6. 16. 오전 10:40, 더위시러 : 혹시 react intersection observer 사용했을 때 무한 렌더링 걸려보신분 있으신가요 ㅠㅠ
2022. 6. 16. 오전 10:45, 프론트 : intersection observer 여기에 옵션 어떻게 넘겨주는지 혹시 보여주실수있나요?
2022. 6. 16. 오전 10:45, 몽몽 : intersection observer를 사용해본적은 없지만 mobx 사용하거나 리액트에서 보통 무한 렌더링에 빠지는 경우는 state값이나 props가 어딘가에서 계속 상태가 변경되는 경우가 대부분이엇던거같습니다. 의심되는 state값을 한번 확인해보시면 좋을거같습니다.
2022. 6. 16. 오전 10:46, 대장 : 기존 파일에 퍼블리싱 파일 적용했더니 깨지는데, 기존에 전체 속성으로 스타일이 들어가서 그런 것 같습니다 ... 

그렇다고 기존 파일을 수정하기에는 다른 부분에서 사이드이펙트가 나는데, 이런 경우에는 어떻게 처리 하시나요 ?
2022. 6. 16. 오전 10:56, 더위시러 : useIntersectionObserver 커스텀훅을 만들어서 observe 하는 <div> 컴포넌트를 자식 컴포넌트에게 내려줬는데 inViewRef 라는 상태값이 계속 바뀌는 에러가 있었습니다. 

방금 해결했는데 커스텀훅을 그냥 자식컴포넌트에서 호출했더니, 렌더링이 안걸리고 잘동작하더라고요 ㅠㅜ 이유는 잘 모르겠습니다. 

2022. 6. 16. 오전 11:00, 케챱될거야 : inViewRef는 useRef에요?
2022. 6. 16. 오전 11:01, 더위시러 : 삭제된 메시지입니다. 
2022. 6. 16. 오전 11:02, 더위시러 : import { useInView } from 'react-intersection-observer';

 const [inViewRef, inView] = useInView();

라이브러리 내장 훅 ref 입니다!
2022. 6. 16. 오전 11:07, 케챱될거야 : 제가 라이브러리는 사용해보지 않아서 모르겠네요 ...ㅠ
2022. 6. 16. 오전 11:54, 감자코딩 : 혹시 퍼블리셔에서 프론트엔드 개발자 되신분 계실까요
2022. 6. 16. 오전 11:55, 스타트업개발자 : 저는 아니지만 저희 회사 신입분이 기존 퍼블1년 경력이셨는데 프론트 신입으로 들어오셨습니다.
2022. 6. 16. 오전 11:56, 벙찐 튜브 : 오.. 
2022. 6. 16. 오전 11:57, 감자코딩 : 그럼 혹시  퍼블 하면서 1년동안 공부 하고 프론트로 들어오신건가요...???
2022. 6. 16. 오전 11:58, 스타트업개발자 : 네네 그렇게알고있씁니다
2022. 6. 16. 오전 11:59, 감자코딩 : 아아 감사합니다!
2022. 6. 16. 오후 12:01, 승훈 : 저염 ~
2022. 6. 16. 오후 12:01, 감자코딩 : 승훈님도 1년 공부 하고 하신건가요?
2022. 6. 16. 오후 12:02, 승훈 : 1년정도 공부하고 프론트 이직 해야겠다는 안하고 회사다니면서 틈틈히 공부하고 3~4개월 준비하고 이직 한거같아여 
2022. 6. 16. 오후 12:03, 승훈 : 기간 다 산정하면 1년은 걸린거같아여 ㅋㅋㅋ
2022. 6. 16. 오후 12:06, fefe : 안녕하세요! 현재 운영하고 있는 서비스가 데스크탑 페이지, 모바일 페이지가 하나씩 있는데,  만약 URL이 desktop.co.kr 이라고 가정했을 때, 

데스크탑에서 접근 시 그대로 보여주고,
모바일에서 접근 시  ( ex)mobile.co.kr ) 라는 도메인으로 redirect 시켜주는데요! 
2022. 6. 16. 오후 12:06, fefe : 사진
2022. 6. 16. 오후 12:07, fefe : Desktop페이지에 seo관련 세팅들을 다 해놨는데 구글 검색로봇이 스마트폰으로만 크롤링해서 저기있는 크롤링에 사용된 에이전트를 데스크탑으로 바꿀 수 있는 방법이 있을까요?
2022. 6. 16. 오후 12:08, 진현 : https://98.js.org/ 
웹사이트에서 추억의 윈도우98을 사용할 수 있네요!!
2022. 6. 16. 오후 12:19, 진현 : 윈도우95를 컴포넌트화한 라이브러리도 있어요 ㅎㅎㅎ
https://github.com/React95/React95

2022. 6. 16. 오후 12:30, 감자코딩 : 알려주셔서 감사합니다 !
2022. 6. 16. 오후 12:30, 감자코딩 : 혹시 독학으로 하신건가요?
2022. 6. 16. 오후 12:31, 승훈 : 네네 ㅋㅋㅋ
2022. 6. 16. 오후 12:45, 강승진 : https://developers.google.com/search/docs/advanced/crawling/overview-google-crawlers?hl=ko
여기에 나열된 구글봇의 user agent 패턴들일 경우에 모바일웹으로 리다이렉트처리를 안하도록 하심 될듯합니다
요즘은 모바일퍼스트가 기본이라 구글봇도 모바일웹을 우선으로 크롤해가요
2022. 6. 16. 오후 1:01, fefe : 답변 감사드립니다. 하나 더 여쭤보고싶은게 있는데, robots.txt 파일에서 useragent를 Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html) 이런식으로 세팅해놔도 괜찮을까요? Yeti, google bot 같은 값만 들어갈 수 있는건지 궁금합니다..!
2022. 6. 16. 오후 1:30, 강승진 : robots 에 들어가는값은 ua 가 아니라서 안될겁니다
2022. 6. 16. 오후 1:31, 강승진 : https://developers.google.com/search/docs/advanced/robots/create-robots-txt?hl=ko
저도 자세히는 모르겠으니 문서투척..!
2022. 6. 16. 오후 1:32, fefe : 아 감사합니다! ㅎㅎ 모바일 페이지로 리다이렉트를 하지않으면 해결 될 문제인 것 같은데 내부 구성원들과 협의가 필요하겠네요.. ㅎㅎ 감사합니다! 좋은 하루 보내세요
2022. 6. 16. 오후 2:05, 승훈 :  우왕 !
2022. 6. 16. 오후 2:51: 부끄러운 어피치님이 들어왔습니다.
2022. 6. 16. 오후 2:51, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 16. 오후 3:20, 케챱될거야 : 요즘 하루에 하나씩 공부중인데 좋아서 공유합니다.

자바스크립트나 react에서 자주 사용하는 패턴들에 대해 잘 정리되어 있는 사이트에요.

https://www.patterns.dev/posts/introduction/

https://www.patterns.dev/posts/classic-design-patterns/
2022. 6. 16. 오후 3:21, 케챱될거야 : 디자인 패턴 관련한 내용이에요
2022. 6. 16. 오후 3:36, gege : 감사합니다! ㅎㅎ
2022. 6. 16. 오후 3:47, React취준이 : 안녕하세요!
프론트엔드 면접 관련해서 보면 좋은 cs지식 책이 있을까요??
2022. 6. 16. 오후 3:50, 파이팅 : 저는 cs지식 관련 괜찮은 책 궁금하네요 :) 괜찮은 강의나 책 있을까요?
2022. 6. 16. 오후 3:51, 승훈 : http://www.yes24.com/Product/Goods/108887922
2022. 6. 16. 오후 3:55, React취준이 : 오 감사합니다!!!
2022. 6. 16. 오후 4:01, 파이팅 : 감사합니다!
2022. 6. 16. 오후 4:01, 파이팅 : css로 봤었네욬ㅋㅋㅋ 죄송해요 같은질문했네요ㅠ.ㅠ
2022. 6. 16. 오후 4:30, 스타트업개발자 : 삭제된 메시지입니다. 
2022. 6. 16. 오후 4:56, 케챱될거야 : react query 연습해볼만한 좋은 예제 있을까요?
2022. 6. 16. 오후 5:03, 고규식 : 게시판?
2022. 6. 16. 오후 5:04, 케챱될거야 : 그냥 컨셉만 이해하고 시도해봐도 되겠죠?
2022. 6. 16. 오후 5:04, 케챱될거야 : 강의나 아티클을 찾고있었습니다
2022. 6. 16. 오후 5:05, 김주영 : 프론트엔드에서 웹게임을 만드시고 계신 분은 없을까요? 웹게임은 비즈니스 모델이 어떻게 되는지 좀 궁금합니다. 비즈니스 모델 구성할 때 해킹 위험 같은 것도 크게 없을까요?
2022. 6. 16. 오후 5:06, 김주영 : 요즘 블록체인 P2E가 핫한데 P2E 최전선에 나가계신 분이 있는지 궁금합니다
2022. 6. 16. 오후 5:07, 김주영 : 웹 3.0도 도입된다구 하구...
2022. 6. 16. 오후 5:10: 엄지척 제이지님이 들어왔습니다.
2022. 6. 16. 오후 5:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 16. 오후 5:10, 여의도개발 : 혹시 yarn registry 여러개 지정가능한가요??
2022. 6. 16. 오후 5:13, 엄지척 제이지 : 혹시 모던자바스크립트 Deepdive 책과 https://poiemaweb.com/ 이 사이트내용이 완전히 동일한가요?? 
2022. 6. 16. 오후 5:15, 부끄러운 어피치 : 아무래도 책이 더 상세한거 같습니다만 가능하시다면 병행해서 보시는 것을 추천드리고 싶습니다. 
2022. 6. 16. 오후 5:15, 유용태 (teo.yu) : 부끄러운 어피치님 엄지척 제이님 반갑습니다 :)
2022. 6. 16. 오후 5:15, Kirin : 완전히는 아니고 큰 맥락 정도가 비슷해요
2022. 6. 16. 오후 5:17, 엄지척 제이지 : 책이 사이트 내용을 포함하고 있다면 왜 병행을 추천하시는지 여쭙고싶슴다
2022. 6. 16. 오후 5:17, 엄지척 제이지 : 안녕하세요~!
2022. 6. 16. 오후 5:25, 부끄러운 어피치 : 보시기 위한 목적에 따라 달라질 수 있을 거 같아서요.  자바스크립트 입문용으로 블로그로도 충분하다고 생각합니다. 그러나 간혹 보시다가 더 상세한 설명이나 예제 등이 필요한 경우라면 책을 참고하시는게 용이할 것 같다고 생각되네요. 
2022. 6. 16. 오후 5:28, 엄지척 제이지 : 아하..! 상세한 답변 감사드립니다. 입문은 아니고 좀 더 깊이 공부하고 싶어서였습니다!!
2022. 6. 16. 오후 5:29, 엄지척 제이지 : 자바스크립트 완벽가이드 7판 이번에 새로 나왔는데 딥다이브랑 내용 비슷한거 같아서 찾아보다가 질문 드렸습니다. 혹시 둘 다 읽어보신분 계실까요??
2022. 6. 16. 오후 5:30, 포유 : 둘다 읽어본건 아닌데 하나만 제대로 보면 되지 않을까요 ㅋㅋㅋ
2022. 6. 16. 오후 5:32, 엄지척 제이지 : ㅋㅋㅋ 그렇다면 그나마 스터디가 더 많은 딥다이브로 가야겠습니다. 혼자 공부하겠지만 혹시 모르니.. ㅋㅋㅋ
2022. 6. 16. 오후 5:35, 유영석(Alvin) : 테오님 깃허브를 보았는데요!ㅋㅋ
혹시 bgm-together 이거 배포되어있는 링크가 있을까요? 궁금해서요…ㅋㅋ
2022. 6. 16. 오후 5:36, 유용태 (teo.yu) : https://bgm-together.web.app/
2022. 6. 16. 오후 5:36, 유영석(Alvin) : 감사합니다! :)
2022. 6. 16. 오후 5:36, 유용태 (teo.yu) : 아직 그냥 만들고 있는 중입니다. 
2022. 6. 16. 오후 5:37, 유영석(Alvin) : 저도 이런 컨셉으로 비슷하게 만들어볼까 생각해본적이 있거든요! 그래서 이름만보고도 너무 반가웠습니다!!ㅋㅋㅋ
2022. 6. 16. 오후 5:39, 뮤츠 : 질문이 있는데요 useRef 초기값을 null 로 준 상태에서 렌더링 되기전에 current 값을 연결한 div로 바꾸고 싶은데 방법이 있을까요??
2022. 6. 16. 오후 5:40, 스타트업개발자 : 프로젝트를 하나 해보려고하는데,,,
재택 근무가 많아지면서 앱의 qa 가 이뤄질 때 로그를 원격으로 좀 보고 싶다보니
앱의 로그를 실시간으로 받는 서버를 만들고 이걸 웹으로 보여주려고 하는데 이런 개념으로 접근해서 개발을 해도 될까요?
2022. 6. 16. 오후 5:41, 곰곰 : dom이 렌더링 되야 ref값에서 dom을 참조할수있지않을까요?
2022. 6. 16. 오후 5:45, 뮤츠 : 네 그게 맞긴한데 ref.current 값을 다른 엘리먼트의 속성값으로 연결해줘야되가지고 방법이 없을까 고민중이에요
2022. 6. 16. 오후 6:01, 모승 : 오 디스코드에 하리보 봇같은 느
2022. 6. 16. 오후 6:01, 모승 : 느낌이군여
2022. 6. 16. 오후 6:16, 하자코딩 : 질문하고싶은게 있습니다 ! 
js에서 재할당이 필요한 변수 선언시 var 대신 let을 사용하는 것이 맞다고 공부하였습니다. (es6부터)
(호이스팅, 재선언, 블록레벨스코프 이슈 등으로)

근데 코드 예제를 보면 대부분 var로 선언된 것은 예전 자료이어서 그런거 맞을까요? 현업에서도 주로 let을 사용하는 편이신가요?
2022. 6. 16. 오후 6:17, Hardy : var쓰면 혼납니다
2022. 6. 16. 오후 6:17, O_O : const 써요
2022. 6. 16. 오후 6:18, 하자코딩 : const, let 사용을 지향하는거죠? const는 재할당이 안되니깐,,!
2022. 6. 16. 오후 6:21, O_O : let도 진짜 어쩔 수 없는 경우를 제외하고는 const만 써요.
그 재할당이 문제를 야기할 수 있어서요
2022. 6. 16. 오후 6:22, 엉망장자 : 일단 const만 쓴다 생각하고 각이 전혀 안나오겠다 할때 한번씩 let 쓰는거 같아요!
2022. 6. 16. 오후 6:22, 하자코딩 : 아🤭
2022. 6. 16. 오후 6:23, 너겟 : 변수관리 너무 어려운거같습니다 ㅠㅡㅠ 
2022. 6. 16. 오후 6:23, 하자코딩 : 재할당이 필요한경우 그럼 클로져도 실제로 많이 사용하나요
2022. 6. 16. 오후 6:24, 하자코딩 : 자유변수를 선언해서요
2022. 6. 16. 오후 6:25, 몽몽 : 클로저는 저도 궁금하네요
클로저로 구현해본 기능이 잇냐는 질문받았었는데 개념을 알고잇긴한데 실제로 적용해본적은 없었거든요
2022. 6. 16. 오후 6:26, A대 4-1(진) : 근데 컴포넌트내부에서 다른 컴포넌트 호출하고 props 넘겨주는것도 클로저 아닌가요??
2022. 6. 16. 오후 6:26, 뮤츠 : 클로저는 리액트 state가 클로저 개념이라고는 알고있는데 아 이거 클로져써야겠다! 한적은 모르겠어요
2022. 6. 16. 오후 6:26, 멋쟁이 프로도 : 리액트 useState가 클로저로 동작합니다
2022. 6. 16. 오후 6:26, 케챱될거야 : 리액트 컨포넌트가
2022. 6. 16. 오후 6:26, 케챱될거야 : 샵검색 : #hooks의 동작원리
2022. 6. 16. 오후 6:27, 몽몽 : 오 감사합니다
2022. 6. 16. 오후 6:28, 하자코딩 : 감사합니다 !
2022. 6. 16. 오후 6:28: 하트뿅뿅 라이언님이 들어왔습니다.
2022. 6. 16. 오후 6:28, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 16. 오후 6:29, 유용태 (teo.yu) : 하트뿅뿅 라이언님 반갑습니다 :)
2022. 6. 16. 오후 6:30, 하트뿅뿅 라이언 : 안녕하세요~ 테오님 반갑습니다!~
테오님 글 보다가 참여하게 되었습니다.
2022. 6. 16. 오후 6:42, 유용태 (teo.yu) : 네 감사합니다~ 환영합니다 ㅎ 궁금한 내용이 있다면 편하게 글 남겨주세요 ㅎ 이것은 함께 궁금것을 공유하고 답하면서 함께 성장하고자 하는 공간입니다~~ >_<
2022. 6. 16. 오후 7:06: 으쓱으쓱 어피치님이 들어왔습니다.
2022. 6. 16. 오후 7:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 16. 오후 7:12, 유용태 (teo.yu) : 으쓱으쓱 어피치님~~ 어서오세요 ㅎ 반갑습니다!!
2022. 6. 16. 오후 7:14, 으쓱으쓱 어피치 : 안녕하세요~
2022. 6. 16. 오후 7:14, 프엔공부중 : next.js에서 msw 사용중에 실행순서에서 질문이 있습니다 !! 코드는 아래 이미지처럼 app에서 먼저 worker.start()를 하였지만  worker.start()가 제일 나중에 실행되는 것 같습니다 ㅠ 이유가 무엇인가요..? 동일하게 비동기함수지만 app이 먼저 실행되어야 하는거 아닌가요?
2022. 6. 16. 오후 7:14, 프엔공부중 : 사진
2022. 6. 16. 오후 7:14, 프엔공부중 : 사진
2022. 6. 16. 오후 7:20, 델 : app.tsx 15번줄 동적 import 가 더 오래 걸린 거 아닐까요?
2022. 6. 16. 오후 7:26, 프엔공부중 : 아 단순하게 import 구문이 더 오래걸려서 그런거일수도 있겠네요..
2022. 6. 16. 오후 7:26, 프엔공부중 : 그런경우에는 msw를 다른 컴포넌트에서는 어떻게 실행하나요..? 
2022. 6. 16. 오후 7:28, 휘파람 프로도 : 먼저 받아오고싶은 값이 들어온게 확인되면 다음값 받아오도록 처리하면 안되나요?
2022. 6. 16. 오후 7:44, 델 : 저는 msw import 하고 나서 ReactDOM.render 를 실행하도록 동기 처리해서 해결했어요
2022. 6. 16. 오후 7:47, 주니어 : 스스로가 자바스크립트에 많이 약한 것 같다고 느껴지는데 어떤것부터 공부를 하면 좋을까요?
2022. 6. 16. 오후 7:48, 프엔공부중 : 그런식으로 코드 수정해봐야겠네요!
2022. 6. 16. 오후 7:48, 프엔공부중 : 아 그렇군요 마지막 방법으로 한 번 해봐야겠네요 감사합니다!!
2022. 6. 16. 오후 8:48, 토마토 : 책을 위주로 기본기 공부부터 해보세요!
2022. 6. 16. 오후 8:48, 주니어 : 감사합니다!
2022. 6. 16. 오후 8:51, 유용태 (teo.yu) : 기초공부랑 만들고 싶은걸 해보는 걸 병행하시는게 좋은데 작게라도 자바스크립트에 신경쓰지 말고 어떻게든 구글이던 스택 오버 플로우던 깃헙이던 응요해서 작은 것을 뭐라도 만드는 경험을 좀 늘려가시기를 추천합니다.

영어랑 똑같애요~ 문법이고 깊이고 간에 말을 많이해야 늘듯이 자바스크립트도 언어라서 공부보다 실전을 많이 해야 늘어요 (물론 영어는 잘 못합니다 ㅋ)
2022. 6. 16. 오후 8:58: 김주영님이 나갔습니다.
2022. 6. 16. 오후 9:28, 부끄러운 어피치 : 리액트에서 컴포넌트를 생성할 때 변수로 함수를 할당하는 식으로 만들거나, 함수로 만들거나, 보통 두가지로 나뉘는 것 같은데, 단순 컨벤션일까요?
2022. 6. 16. 오후 9:30, 하자코딩 : 함수 선언식과 표현식의 차이를 말씀하시는 건가요?
2022. 6. 16. 오후 9:30, 승훈 : 화살표함수
2022. 6. 16. 오후 9:30, 부끄러운 어피치 : 앗 맞아요 ㅋㅋ 말을 괜히 어렵게했네요
2022. 6. 16. 오후 9:31, 승훈 : 저는 주로 표현식으로 해요 ~
2022. 6. 16. 오후 9:32, 유영석(Alvin) : this가 바인딩되는 차이가있는데 검색해보시는게 좋을거같아요 :)
2022. 6. 16. 오후 9:33, 하자코딩 : 선언식은 호이스팅이되어서 표현식으로 작성하는 것이 좋지 않나요
2022. 6. 16. 오후 9:35, 승훈 : 호이스팅 여부
export default를 선언과 동시에 할 수 있는가

이거 차이 여부여서
2022. 6. 16. 오후 9:38, 승훈 : 에어비앤비 스타일가이드에서는 표현식을 지향하는데 각 장단점이 있어서 편한방식대로 해도되지 않을까 싶습니다~
2022. 6. 16. 오후 9:40, 승훈 : https://velog.io/@jjunyjjuny/React-%ED%95%A8%EC%88%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%84%A0%EC%96%B8%EB%AC%B8-vs-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%80-%EC%B7%A8%ED%96%A5-%EC%B0%A8%EC%9D%B4%EC%9D%BC%EA%B9%8C
2022. 6. 16. 오후 10:10, 허브의 개발 일지 : 혹시
2022. 6. 16. 오후 10:11, 허브의 개발 일지 : react 프로젝트에서 enum 어떤식으로 관리하고 계신가요?
2022. 6. 16. 오후 10:11, 허브의 개발 일지 : 사진
2022. 6. 16. 오후 10:12, 허브의 개발 일지 : 저는 일단 이런식으로 관리하고 있는데
2022. 6. 16. 오후 10:12, 허브의 개발 일지 : 좀 더 직관적이고 명확한 방법이 있는지 궁금합니당
2022. 6. 16. 오후 10:13, 델 : https://tkdodo.eu/blog/effective-react-query-keys#colocate 요 문구가 생각나네요..
2022. 6. 16. 오후 10:13, 델 : 사진
2022. 6. 16. 오후 10:15, 허브의 개발 일지 : 오 좋은 사이트네요
2022. 6. 16. 오후 10:15, 허브의 개발 일지 : 감사합니다!
2022. 6. 16. 오후 10:15, 델 : 위에껀 쿼리키 얘기긴 해서, 좀더 제너럴한 아티클을 들고 오면
https://kentcdodds.com/blog/colocation#reusable-utility-files

util 에는 재사용할 애들만 넣어야 하고, 안 그러면 언젠가 접근하지 않는데 존재하는 것들이 생기게 되니 지양하자고 주장하는 거 같아요
2022. 6. 16. 오후 10:16, 델 : 그냥 저런 주장이 있구나~ 정도로만 받아들여 주시면 될 거 같아요! 저는 뭐가 좋고 뭐가 나쁜지 잘 모르겠어요 ㅋㅋㅋㅋㅋ
2022. 6. 16. 오후 10:16, 허브의 개발 일지 : 아 맞아요 저희도 리액트 쿼리 도입해서
2022. 6. 16. 오후 10:16, 허브의 개발 일지 : 그거랑 이제 api 통신할때 유저 종류 구분하느라
2022. 6. 16. 오후 10:16, 허브의 개발 일지 : appKeys라고 해서 이넘 관리하던거였어요
2022. 6. 16. 오후 10:17, 허브의 개발 일지 : 좋은 이야기 많이 주셔서 감사합니다 ㅎㅎ
2022. 6. 16. 오후 10:33, O_O : https://engineering.linecorp.com/ko/blog/typescript-enum-tree-shaking/
enum 대신 union types 써욥
2022. 6. 16. 오후 11:06, DARTZ : 안녕하세요! 테오 혹시 면접볼때 말하면서 갑자기 머리가 하얗게 되는 경우에는 잠시 멈춰서 생각하고 대답하는게 날까요? 아니면 '잠시만 시간을 주실수 있으신가요?' 라고 물어보고 하는게 나을까요..?
2022. 6. 16. 오후 11:07, 유용태 (teo.yu) : 시간을 달라고 하는게 더 낫죠. 그래야 면접관이 마음을 놓고 기다릴 수 있으니까요
2022. 6. 16. 오후 11:10, DARTZ : 그렇군요.. 감사합니다! 다음주 pt면접 봐서 연습하는데 중간에 갑자기 머리가 하얗게 되는 경우가 종종 있었습니다..
2022. 6. 16. 오후 11:15, 최민석 : 싸피시군요
2022. 6. 16. 오후 11:15, DARTZ : 정확하십니다..

2022년 6월 17일 금요일
2022. 6. 17. 오전 12:13: 신나는 프로도님이 들어왔습니다.
2022. 6. 17. 오전 12:13, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오전 12:14, 유용태 (teo.yu) : 안녕하세요 신나는 프로도님 반갑습니다 :)
2022. 6. 17. 오전 12:47, O_O : 쏙쏙 함수형책 받아서 슥 넘겨만 봤는데 약간 헤드퍼스트 책 느낌이네요. 
2022. 6. 17. 오전 12:51, O_O : 펑터 아이더 같이 다른 함수형 책에서  보던 용어가 안 보이는게 특이하네용
2022. 6. 17. 오전 1:00, 케챱될거야 : 오 괜찮나여
2022. 6. 17. 오전 1:11, O_O : 아직제대로 읽진못하고 자기전에 첫장만 좀 봤는데 다른 책이랑은 확실히 결이 다르네요.
2022. 6. 17. 오전 1:18, 케챱될거야 : 옹....
2022. 6. 17. 오전 1:18, 케챱될거야 : 관심은 많은데 해보지는 못한 분야라
2022. 6. 17. 오전 1:18, 케챱될거야 : 궁금하네요
2022. 6. 17. 오전 1:18, 케챱될거야 : 책은 샀는데 너무 어렵더라구요
2022. 6. 17. 오전 6:35, 프론트신입생존기 : 이게 바로 그 그린랩스가면 읽는다는 필독서인가요? ㅋㅋㅋ
2022. 6. 17. 오전 6:43, 응애 : 오호
2022. 6. 17. 오전 8:04, 유용태 (teo.yu) : 얌얌냥이 스프린트 시트에 이메일이 빠져있는데 시트에 기입해주면 스프린트 리뷰 메일 같이 보내드릴게요~
2022. 6. 17. 오전 8:27, 얌얌냥이 : 네~~ 알겠습니당!!
2022. 6. 17. 오전 8:53, 대장 : 리액트에서 컴포넌트 하나에 전체 default css를 안 먹게 할 수 있을까요 ?
2022. 6. 17. 오전 8:54, 비디오가미래다 : CSS Override 하는 수 밖에요 ㅠ
2022. 6. 17. 오전 8:55, 여의도개발 : reset css를 프로그래밍적으로 꺾지않는이상 불가능…
2022. 6. 17. 오전 8:56, 대장 : 그런가요 ㅠㅠ 
2022. 6. 17. 오전 8:56, 대장 : 에구구 ㅠㅠ
2022. 6. 17. 오전 8:56, 여의도개발 : css는 캐스케이딩이에요
2022. 6. 17. 오전 8:57, 여의도개발 : 비디오님처럼 우선순위 높혀서 오버라이드하는 수밖에 엄써요
2022. 6. 17. 오전 8:58, 대장 : 감사합니당 !!!!
2022. 6. 17. 오전 8:58, 대장 : 이모티콘 
2022. 6. 17. 오전 9:58, 엄지척 튜브 : 이번에 노트북을 사려고 하는데 
m1프로 기본형13인치 쓰다가 너무 렉걸려서 m1 pro 14인치에 메모리32기가 사려고 하는데 이정도면 평균은 가나요??
2022. 6. 17. 오전 9:58, 엄지척 튜브 : 아니면 추가적으로 옵션을 넣을게 있을까요?
2022. 6. 17. 오전 10:03, 엔 : 용도가 어떻게 되시는지 모르겠지만 프론트 개발 목적이면 차고 넘칠 것 같은데요
2022. 6. 17. 오전 10:05, 델 : 기존꺼 램이 어떻게 되셨나요?
2022. 6. 17. 오전 10:05, 엄지척 튜브 : 8이요!!
2022. 6. 17. 오전 10:06, 델 : 사실 램이 16 이상이셨으면 기존 컴퓨터도 차고 넘치는 스펙인거같긴 해요
2022. 6. 17. 오전 10:06, 엄지척 튜브 : m1프로 깡통 1년썼는데 14인치 써봤는데
2022. 6. 17. 오전 10:06, 엄지척 튜브 : 너무 렉걸리더라구요
2022. 6. 17. 오전 10:07, 델 : 14인치에 32기가면 일단 대부분 개발자들이 컴퓨터에 대해 만족하고 쓸 거 같습니다 ㅋㅋㅋㅋㅋ
2022. 6. 17. 오전 10:07, 엄지척 튜브 : 프론트엔드라도 8기가면 너무 작다고 해서 이번에 32기가 갈까 생각중인데 프론트 업무만하기에 오버스펙이면
2022. 6. 17. 오전 10:07, 자란다 Recruiter : 이모티콘 여러분 모두 backend frontend 구분 없이 선호되는 weekend를 위해 금요일!!!불태우시죠
2022. 6. 17. 오전 10:07, 엄지척 튜브 : 14인치 16기가도 고려중입니다
2022. 6. 17. 오전 10:09, 델 : 저도 똑같이 m1 8기가 쓰다가 너무 렉걸려서 2주 전쯤 m1max 32기가로 넘어왔는데
2022. 6. 17. 오전 10:09, 다몬 : 안녕하세요! 여기서 스터디 홍보해도 되나요?!
2022. 6. 17. 오전 10:09, 델 : 그래도 항상 70%는 쓰더라고요
2022. 6. 17. 오전 10:10, 델 : 회사컴퓨터는 m1pro 16기가인데 얘는 항상 80%씩 쓰고 있고
2022. 6. 17. 오전 10:12, 델 : 16기가도 충분할 거 같긴 한데 호오옥시나 괜히 스펙때문에 후회하느니 54만원 더 투자하셔서 후회없이 쓰시는 게 어떨까 하는 의견입니다 :) 램은 무조건 클수록 좋은거기도 하고 맥북은 리셀도 잘되고
2022. 6. 17. 오전 10:13, 엄지척 튜브 : 맞아요!
2022. 6. 17. 오전 10:13, 엄지척 튜브 : 이모티콘 감사합니다
2022. 6. 17. 오전 10:22, 살려줘 네오 : 이거 어떻게 확인 하시나요?
2022. 6. 17. 오전 10:23, 델 : runcat 쓰고 있어요!
2022. 6. 17. 오전 10:23, 델 : activity monitor (활성상태보기) 에서 확인해도 되는데 메뉴바에 떠있으니까 보기 편하더라고요
2022. 6. 17. 오전 10:24, 델 : 앱스토어에 있어요
2022. 6. 17. 오전 10:25, 델 : 사진
2022. 6. 17. 오전 10:27, 여의도개발 : 갓석찬님 포스트
http://channy.creation.net/blog/1571?fbclid=IwAR2av73l3OZnVq-FNFmTBl9WvhAj9_cO96gd1mgSisiwam06pqvXICxr14Y
2022. 6. 17. 오전 10:43, 음악듣는 어피치 : 그동안 즐거웠고 다시 보지말자 부활은 거부한다.. ie..
2022. 6. 17. 오전 10:48: 첻아님이 들어왔습니다.
2022. 6. 17. 오전 10:48, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오전 11:03, 여의도개발 : npm 운영하실때 릴리즈 노트는 어떻게 관리하시나요? 혹시 좋은 꿀팁 있음 부탁드립니닷ㅎㅎ
2022. 6. 17. 오전 11:18, 프론돌이 : standard-version 이라는 놈 써서, 릴리즈 할 때마다 CHANGELOG.md 갱신하게 해두면, 
그 릴리즈 때 나간 커밋메시지들 feat, fix, 이런거 다 분리해서 보여줘요!
2022. 6. 17. 오전 11:19, 프론돌이 : 사진
2022. 6. 17. 오전 11:19, 여의도개발 : 오호!
2022. 6. 17. 오전 11:19, 프론돌이 : 요로코롬
2022. 6. 17. 오전 11:19: 블럭을 무너트리는 라이언님이 들어왔습니다.
2022. 6. 17. 오전 11:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오전 11:20, 여의도개발 : 겁나 멋진데요?
2022. 6. 17. 오전 11:21, 엄지척 프로도 : 프론트엔드에서 도메인 주도 개발 (DDD)을 적용하는 경우가 많나요? 도메인 주도 개발을 공부해두는게 의미가 있을까요? 
2022. 6. 17. 오전 11:23, 철진 : 공부하는 것은 도움이 되겠지만, 프론트엔드보다 백엔드에서 더 의미있는 방법론으로 알고 있습니다! DDD보다 BDD나 TDD가 프론트엔드에서는 더 유의미한 것 같아요
2022. 6. 17. 오전 11:24, 철진 : 저의 아주 개인적인 의견입니다!
2022. 6. 17. 오전 11:25, j : 저는 프론트에서 비지니스 로직 이해하고 하는 부분에선 DDD가 도움이 된다고 생각해요. 비지니스 로직 이해하기엔 도메인이 기반이 되어야 하고, 해당 도메인을 어떻게 사용자에서 전달할 수 있도록 개발하느냐를 공부하면 도움이 될거라 생각합니다
2022. 6. 17. 오전 11:27, 허브의 개발 일지 : 맞는 말입니다 전체 비즈니스 로직 흐름 이해 못하는 개발자랑 이야기하면 그림을 못그려서 정말 답답할때가 많죠
2022. 6. 17. 오전 11:29, 허브의 개발 일지 : 이런 부분에서 사실 전공자랑 비전공자, 시니어와 주니어가 명확하게 갈리는거 같슴다
2022. 6. 17. 오전 11:36, 엄지척 프로도 : 다들 답변 감사합니다 🤩
2022. 6. 17. 오전 11:44, 워니 : 저는 DDD 라는 게 개인이 혼자 학습해서는 한계가있다고 생각하고 팀 차원에서 학습해서 BC를 잘 나누고 유비쿼터스 랭귀지를 잘 사용해야 공부한만큼 큰 도움이 된다고 생각해요! 개발자 혼자서는 DDD를 적용해서 개선할 수 있는 것에 한계가 있는 느낌이더라고요
2022. 6. 17. 오전 11:57, 프론트신입생존기 : 오 워니님 안녕하세요! 개발바닥이랑 EO 유튜브 잘봤어요!
2022. 6. 17. 오후 12:20, 워니 : 헉 ㅋㅋㅋ 안녕하세요~! 잘 봐주셔서 감사합니다!
2022. 6. 17. 오후 12:20, 워니 : 이모티콘 
2022. 6. 17. 오후 12:21, 리듬타는 제이지 : 마자요 너무 잘 봤어요
이력서 쓰는법도 도움이 많이 된 것 같숩니다
2022. 6. 17. 오후 12:21, 리듬타는 제이지 : 이모티콘 
2022. 6. 17. 오후 12:21, 리듬타는 제이지 : 감사합니다
2022. 6. 17. 오후 12:23, 워니 : 헛 도움이 되셨다니 보람차네요 🥰 인프런에 런칭한 이력서 강의도 필요할 때 찾아주세요(?) 급광고
2022. 6. 17. 오후 12:27, 리듬타는 제이지 : 헉.. 답해주셨다 일기에 써야지
2022. 6. 17. 오후 12:27, 리듬타는 제이지 : 홍보 많이 하겠습니다
2022. 6. 17. 오후 12:29, 철진 : 이력서 쓸때 도움 많이 받았습니다!! 좋은 강의, 이력서 감사합니다!!
2022. 6. 17. 오후 12:30, 워니 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ 오앙 홍보 많이 해주세요~! 감사합니당
2022. 6. 17. 오후 12:32, 썰cho : 헐 반갑습니다
2022. 6. 17. 오후 12:32, 썰cho : 강의 등록 바로했었어요 ㅋㅋ
2022. 6. 17. 오후 12:32, 썰cho : 열심히 듣고 이직 준비중입니다
2022. 6. 17. 오후 12:35, 케챱될거야 : 프린이 중복 닉네임이
2022. 6. 17. 오후 12:35, 케챱될거야 : 4명이네요
2022. 6. 17. 오후 12:35, 케챱될거야 : 바꿔야겠네요
2022. 6. 17. 오후 12:37, 리듬타는 제이지 : 저도 워니인데 테크보니 워니에 더 가깝습니다
2022. 6. 17. 오후 12:37, 케챱될거야 : 전 아직 걸음마 못뗀 진짜 프린인데
2022. 6. 17. 오후 12:38, 리듬타는 제이지 : 아 실력 말구요..ㅎ
2022. 6. 17. 오후 12:38, 리듬타는 제이지 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 17. 오후 12:38, 케챱될거야 : 원래 고수분들이 겸손한걸 생각하면 닉네임을 바꿔야겠네요
2022. 6. 17. 오후 12:38, 케챱될거야 : 아하
2022. 6. 17. 오후 12:38, 케챱될거야 : ㅋㅋㅋㅋㅋㅋㅋ
2022. 6. 17. 오후 12:47, 워니 : 아고 감사합니다 이직 꼭 좋은 결과 있으시길..! 🙏
2022. 6. 17. 오후 12:47, 썰cho : 좋은 강의 주셔서 제가 다 감사하죠!!
2022. 6. 17. 오후 12:50, 백엔드! : 워니님이 그 워니님인가요!
2022. 6. 17. 오후 12:50, 백엔드! : 대박 
2022. 6. 17. 오후 1:00, 얌얌냥이 : 대박..
2022. 6. 17. 오후 1:04, 계절황기 : 리액트 컴포넌트를 작성할 때 도메인에 의존하지만 재사용가능성이 큰 컴포넌트의 경우도 도메인에 의존하지 않게 컴포넌트를 나누는 것이 좋을까요 ? 아니면 재사용성을 고려해서 도메인에 의존하지만 컴포넌트를 따로 분리하지 않고 재사용하는 것이 좋을까요 ? 
2022. 6. 17. 오후 2:01, 초보 : 리액트 css 프레임워크 가장 많이 쓰는게 어떤건가요 ??
2022. 6. 17. 오후 2:01, 휘파람 프로도 : antd 썻습니다
2022. 6. 17. 오후 2:03, 대장 : Antd 좋아염
2022. 6. 17. 오후 2:03, 초보 : 혹시 테일윈드도 써보셨나요?
2022. 6. 17. 오후 2:04, 초보 : antd 한번 써봐야겠네요 감사합니다
2022. 6. 17. 오후 2:04, 휘파람 프로도 : 테일윈드는 안써봣습니다ㅠ
2022. 6. 17. 오후 2:05, 김동현 : antd 를 css 프레임워크로 보시나요?
2022. 6. 17. 오후 2:05, 곰곰 : 테일윈드 이번 프로젝트부터 도입하는데 개발자 입장에서는 편한점이 좀 많네요 ㅎㅎ
2022. 6. 17. 오후 2:06, 김동현 : antd 는 material 처럼 UI Library 라고 봐야되지 않나요?
2022. 6. 17. 오후 2:06, 박용준 : 테일윈드 호불호가 너무 갈려서 자주 쓰이지 않더군요
2022. 6. 17. 오후 2:06, 주니어개발자 : 개인적으로 테일윈드 좋아합니다.. 너무 편해요!!
2022. 6. 17. 오후 2:07, fefe : antd pro에서 제공하는 템플릿을 사용하면 프레임워크라고 볼 수 있을정도로 구조가 잘 만들어져있긴합니다
2022. 6. 17. 오후 2:07, 진정한 : 저도 테일윈드 개인적으로 많이 좋아합니다
2022. 6. 17. 오후 2:07, fefe : 레퍼런스가 중국어인게 많아서 좀 힘들지만 워낙 잘만들어서 레퍼런스 볼 필요도 많이 없다는.. 
2022. 6. 17. 오후 2:08, 진정한 : 편리한 것도 장점인데 초보자라 css가 익숙하지 않을 때, 테일윈드 쓰면서 도움 많이 얻었던 거 같아요
2022. 6. 17. 오후 2:11, 철진 : 저는 emotion 좋아합니다! 
2022. 6. 17. 오후 2:12, 철진 : mui 호환성도 좋아서 사용하기가 편했어요
2022. 6. 17. 오후 2:13: 궁시렁 프로도님이 들어왔습니다.
2022. 6. 17. 오후 2:13, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오후 2:40, 프론돌이 : 사진
2022. 6. 17. 오후 2:40, 프론돌이 : 인증코드 쓸 떄 마다 스트레스네요
2022. 6. 17. 오후 2:40, 프론돌이 : 도대체 왜 틀린거야 ㅜㅠㅜ
2022. 6. 17. 오후 2:40, 프론돌이 : 인증코드 -> 보안문자
2022. 6. 17. 오후 2:41, fefe : '42395' ? 
2022. 6. 17. 오후 2:41, fefe : ㅋㅋㅋㅋㅋ
2022. 6. 17. 오후 2:42, 뮤츠 : 보안문자 만들어내는 로직도 궁금하네요 갑자기
2022. 6. 17. 오후 2:44, 프론돌이 : 사진
2022. 6. 17. 오후 2:44, 프론돌이 : 사진
2022. 6. 17. 오후 2:44, 세이지 : 921401?
2022. 6. 17. 오후 2:44, 세이지 : 14805?
2022. 6. 17. 오후 2:44, 프론돌이 : 사진
2022. 6. 17. 오후 2:44, 프론돌이 : 6번만에 성공했네요 ㅜㅜ
2022. 6. 17. 오후 2:44, 프론돌이 : 사람도 컴퓨터로 오해하게 만들 인증이로군...
2022. 6. 17. 오후 2:45, 뮤츠 : 개발자라 컴퓨터가 사람인지 컴퓨터인지 헷갈린듯ㅋㅋ
2022. 6. 17. 오후 2:46, 초보 : 프론트 신입으로 취업하려면 백엔드쪽도 잘 알아야 할까요?
2022. 6. 17. 오후 2:47, 뮤츠 : 백엔드를 잘알기보단 백엔드랑 협업하는 방법을 잘알아야겠죵
2022. 6. 17. 오후 2:49, 초보 : 미니플젝 만드려고 노드랑 익스프레스로 백엔드 만들고 있는데 어렵네요.. 
2022. 6. 17. 오후 2:50, 포유 : 백엔드도 어느정돈 알아야 협업하기 쉬워용  ㅋㅋㅋ
2022. 6. 17. 오후 2:50, 초보 : 시간도 오래걸리고,, 파베로 하자니 뭔가 아쉽네요
2022. 6. 17. 오후 2:51, 뮤츠 : 나중에 다 도움이 되실거에요! 뭐든지 알아서 나쁠거하나없죠~
2022. 6. 17. 오후 2:52, 휘파람 프로도 : visible반대가 뭐엿죠.. 갑자기 생각이 안나서..
2022. 6. 17. 오후 2:52, 곰곰 : invisible
2022. 6. 17. 오후 2:52, 곰곰 : 맞...나?
2022. 6. 17. 오후 2:53, 초보 : hidden?
2022. 6. 17. 오후 2:54, 곰곰 : hidden이 맞네요
2022. 6. 17. 오후 2:57, 휘파람 프로도 : 아하 감사합니다!ㅎㅎ
2022. 6. 17. 오후 3:19, 으쓱으쓱 어피치 : 프론트 취준생인데, 플젝 중 파베로했던 백엔드를 익스프레스와 몽고디비로 바꿔보는 작업을했었어요 백엔드 이해와 웹서비스의 전체 사이클을 보는데 도움이된거같아요! 근데 저도 좀 어려워서 백엔드 코드 퀄리티는 포기하고 돌아가는것에 집중했어요ㅠㅠㅋㅋㅋ
2022. 6. 17. 오후 3:21, 프론돌이 : 둘다 해보시는건 좋지만, 현실적으로 사람에게 시간과 리소스가 한정되어 있으니
선택과 집중을 해보시는 것도 좋을 것 같아요
2022. 6. 17. 오후 3:31, 여의도개발 : 오우…. npm 버전관리하려했는데
husky commitlint에.. standard version에.. semantic-relase에… 여러개 있네요
2022. 6. 17. 오후 3:31, 여의도개발 : commitlint는 다들 사용중이신가요?
2022. 6. 17. 오후 3:31, 여의도개발 : 전 필수로 사용해야하는거같은데 이제야 발견했네요
2022. 6. 17. 오후 3:33, 허브의 개발 일지 : 커밋린트는 뭔가요??
2022. 6. 17. 오후 3:33, 개린이 : ios 사파리웹뷰에서 onclick 이벤트가 작동하지않는데 경험해보신분 계실까요 ..? cursor:pointer도 동작하지않아서요
2022. 6. 17. 오후 3:33, 여의도개발 : 삭제된 메시지입니다. 
2022. 6. 17. 오후 3:34, 여의도개발 : fix: xxx
refactor: xxx 
feat: xxx 로 강제하는거요
2022. 6. 17. 오후 3:34, 프론돌이 : commitlint도 사용중에 있어요!
2022. 6. 17. 오후 3:34, 여의도개발 : 보니까 좋네요.. 이걸 몰랐다니!
2022. 6. 17. 오후 3:35, 여의도개발 : 그리고 standard-version은 디플리케이트 되었네요
2022. 6. 17. 오후 3:35, 여의도개발 : 사진
2022. 6. 17. 오후 3:35, 프론돌이 : 애초에 커밋하기 전에 husky로 pre-commit 으로 

커밋메시지 형식에 맞는지 검사하기, 
npm run test 해서 꺠진 테스트 없는지 보기, 
ts 에러 나는거 없는지 보기,   해서 통과 못하면 로컬 커밋 fail
2022. 6. 17. 오후 3:35, 프론돌이 : 헉...
2022. 6. 17. 오후 3:36, 프론돌이 : 언제 봐서 옮겨가야겠네요
2022. 6. 17. 오후 3:36, 여의도개발 : 허스키가 자바스크립트 린트 체크해주는건줄알았는데 깃린트도 되네요 허허..
2022. 6. 17. 오후 3:37, 여의도개발 : ㅋㅋㅋㅋ 버전 메시지만 추가하는 기능 찾고 있었는데 뭐가 많네요ㅋㅋㅋㅋ..
2022. 6. 17. 오후 3:37, 프론돌이 : ㅋㅋ 한번에 마라톤 하지 마시고, 조금씩 늘려가심이?
2022. 6. 17. 오후 3:38, 여의도개발 : 아니에요 이참에 다끝내야할거같아요..
언젠간 해야하는기능이기 땜시
2022. 6. 17. 오후 3:38, 여의도개발 : 시멘틱 릴리즈까지만 좀 살펴보려고요
2022. 6. 17. 오후 4:04, 귀여운 라이언 : 지금 프론트 취중생인데, 자바스크립트로 프로젝트 해본거랑 typescript+react로 해본 토이 프로젝트 밖에 없는데 이걸로 지원하긴 아직 부족하겟죠?ㅠㅠ
2022. 6. 17. 오후 4:05, 프론트 지키미 : 지원하시면서 판단해보세요 
2022. 6. 17. 오후 4:06, 철진 : 기업마다 다르기 때문에 우선 지원해보면서 보충해보세요!ㅔ
2022. 6. 17. 오후 4:06, 프론트 지키미 : 지원하시면서 붙으면 좋고 떨어지신다면 어느부분을 보충할지 

최적화 하시면서 토이도 디벨롭해가는게 어떨까요??
2022. 6. 17. 오후 4:06, 델 : 저도 딱 그정도에서 첫 취업 했던 거 같아요
2022. 6. 17. 오후 4:06, 델 : 면접 보면서 폭풍성장했던 기억이
2022. 6. 17. 오후 4:08, 귀여운 라이언 : 아아
2022. 6. 17. 오후 4:08, 귀여운 라이언 : 감사합니다!
2022. 6. 17. 오후 4:11, 동동 : eslint, stylelint는 쓰는데 커밋린트는 안쓰거 있어요..

어차피 커밋로그 잘 안보더라구요 ㅎㅎ 스쿼시 머지 하고 있기도 하고…
PR 룰을 잘 지키는게 더 중요한거 같다고 판단했습니다! 
2022. 6. 17. 오후 4:15, 프론돌이 : 이게 팀바팀 & 사바사 라서,   저희는 스쿼시 머지를 안하고 있어서 더 커밋로그가 중요한 것 같기도 합니다 ㅋ 

코드 오래 되면, 커밋로그랑, 지라티켓 번호 보고 이게 왜 이렇게 됐지 하면서 파악해야될일이 많아서 ㅜ
2022. 6. 17. 오후 4:15, 프론돌이 : 스쿼시 머지하면, 그게 좀 힘듦
2022. 6. 17. 오후 4:15, 프론돌이 : 대신 git 그래프는 좀더 깔끔해지니
2022. 6. 17. 오후 4:15, 프론돌이 : 일장일단이 있는 것 같아요
2022. 6. 17. 오후 4:16, 유용태 (teo.yu) : 궁시렁 프로도님 반갑습니다 어서오세요 ㅎ
2022. 6. 17. 오후 4:18, 눈물바다에 빠진 라이언 : 취업하신분들 질문 하나 있습니다! 
포트폴리오 프로젝트에 테스트코드 있느냐 없느냐가 차이가 클까요? 하고는 있는데 뭔가 나 테스트 코드짜고 있어요 자랑하는 느낌이라...
2022. 6. 17. 오후 4:20, 다몬 : 자랑해야죠
2022. 6. 17. 오후 4:20, 프론트 지키미 : 혹시 컬쳐핏 면접 관련해서 팁 이라면 어떤게 있을까요???
너무 가고싶은 기업이라 간절해지내요 ㅜㅜ 
2022. 6. 17. 오후 4:21, 프론트 지키미 : 내x 네o
2022. 6. 17. 오후 4:21, 프론돌이 : 블라인드랑, 잡플래닛 이런데서 해당 기업 찾아보면, 면접후기나 각종 정보 나오는데, 
그런거 참고해보시면 좋을 것 같아요
2022. 6. 17. 오후 4:22, Hardy : 종종 기업에서 개발팀 or cto 인터뷰 하는 기업들도 있어요 그런거 참고하셔도 좋아요
2022. 6. 17. 오후 4:22, 프론트 지키미 : 잡 플래닛 조져보겠습니다!!
2022. 6. 17. 오후 4:22, 다몬 : 커피챗도 옵션일 것 같아유
2022. 6. 17. 오후 4:23, 프론트 지키미 : 개발팀  cto인터뷰 조져보겠습니다!!

제가 할수 있는 모든걸 알려주십쇼!!
2022. 6. 17. 오후 4:23, 프론트 지키미 : 커피챗 인성면접 조져보겠습니다!! 
감사합니다!!
2022. 6. 17. 오후 4:23, 알사탕 : 인원이 10명도 안되는 스타트업이고, 개발CTO가 계신 상황에서 이제 막 인원을 뽑아서 팀을 꾸리고 있는데, 첫 커리어로 이런 기업은 어떻게들
생각하시나요??
2022. 6. 17. 오후 4:23, 멋쟁이 프로도 : 저는 그 팀이 어떤 일을 해왔고 하는지 그리고 내가 여태 공부해온 역량들이 어떻게 도움이 될지를 많이 어필했던거 같아요. 해당 그룹 cto님 인터뷰 같은거도 찾아봤구요,
2022. 6. 17. 오후 4:24, 프론트 지키미 : 답변 감사합니다!!
기술면접이 아닌 컬쳐핏 면접은 처음이라 더 긴장되네요 
정보 감사합니다!!
2022. 6. 17. 오후 4:24, 프론돌이 : 이 방에서, 현직인 만나서 이것저것 이야기해보시는 것도 ㅋ
2022. 6. 17. 오후 4:26, 뮤츠 : 개발CTO분이 프론트엔드에 대한 이해도가 높으신분인지가 중요할 것 같아요!
2022. 6. 17. 오후 4:27, 눈물바다에 빠진 라이언 : 오 저도 궁금합니다
2022. 6. 17. 오후 4:30, 알사탕 : 그렇군요! 소규모 기업에 막 시작하는 단계라 해도, 대표님이나 CTO 분이 괜찮으시면 성장 가능성은 열려 있다고 보면 될까요??
2022. 6. 17. 오후 4:34, 델 : 기업 컬쳐 문서 잘 읽어보고 가시면 좋을 거 같아요!

개인적인 팁이라면 질문에 대한 답변만큼이나 (어쩌면 더) 그 사람의 말투라든가 시선처리라든가 말을 하는 속도라든가 그런 게 정말 중요한 거 같아요
2022. 6. 17. 오후 4:35, 뮤츠 : 제 생각이긴하지만 CEO나 CTO가 좋은 사람인거랑 사업이 성장할 가능성이랑은 별개의 문제인것 같아요. 사업성장성 보다는 내가 성장할 수 있는 환경인지에 집중하시는게 좋을 것 같아요!
2022. 6. 17. 오후 4:35, 프론트 지키미 : 말하는 속도는 제가 빠른 편이여서 주의해야겠네요 

개인적인 팁 정말 감사합니다!!
2022. 6. 17. 오후 4:36, 뮤츠 : 물론 그런건 면접에서 티내지는 마시구요
2022. 6. 17. 오후 4:36, 뮤츠 : ㅋㅋ
2022. 6. 17. 오후 4:36, 허브의 개발 일지 : 개인적으로 면접관도 사람인지라
2022. 6. 17. 오후 4:36, 허브의 개발 일지 : 제가 했던 실수중 하나가
2022. 6. 17. 오후 4:36, 허브의 개발 일지 : 너무 상투적이고 전문적으로 보일려고만 이야기하다보니
2022. 6. 17. 오후 4:36, 허브의 개발 일지 : 딱딱하고 재미없는 면접이 이어져서
2022. 6. 17. 오후 4:36, 허브의 개발 일지 : 조금 더 사람대 사람으로 기술적인 대화를 나누듯이 좋은 것 같더라구요
2022. 6. 17. 오후 4:37, 허브의 개발 일지 : 평가하는 자리이기 이전에 면대면으로 대화 하는거니..
2022. 6. 17. 오후 4:37, 웹린이 : 커피챗하니 생각나서 공유드립니다~
관심있으신 분들 신청하시면 좋을 것 같아요!
https://www.linkedin.com/posts/deanpark7_%EC%8B%A4%EB%AC%B4-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EC%BB%A4%ED%94%BC%EC%B1%97-line-frontend-dev-activity-6935153816119967744-Fzd-?utm_source=linkedin_share&utm_medium=member_desktop_web
2022. 6. 17. 오후 4:42, 백엔드! : 커피챗이 뭔가요?
2022. 6. 17. 오후 4:50, Vintz : 30분~1시간 정도 온라인 또는 오프라인에서 가볍게 대화하는 것을 의미해요! 당근마켓, 테오와 커피챗 해봤는데 시간 가는 줄 모르고 대화했던 기억이 있습니다. ㅎㅎ
2022. 6. 17. 오후 4:51, 백엔드! : 와 재밌겠군요 
2022. 6. 17. 오후 5:01, 초보 : 리덕스로 개발할때 컨테이너 컴포넌트랑 ui 담당하는 컴포넌트랑 분리해서 하나요??
2022. 6. 17. 오후 5:07, 햄햄 : 클래스형 컴포넌트를 쓸땐 그렇게 했다고 들었어요
2022. 6. 17. 오후 5:13, 초보 : 아하 감사합니다
2022. 6. 17. 오후 5:34, 신나는 프로도 : styled component 내부 로직 분리 관련 질문드립니다
styled component 내부 부분적으로 공통의 내용을 분리해서 사용하기도 하는지 궁금합니다

예를 들어,  아래 두 스타일드 컴포넌트의 공통부분인 h1을 한 파일에 작성하여 필요한 파일에 import해서 사용할 수 있나요?
2022. 6. 17. 오후 5:35, 신나는 프로도 : 사진 2장
2022. 6. 17. 오후 5:36, 박용준 : H1을 styled components로 만드시는것도
2022. 6. 17. 오후 5:45, 동동 : 가능합니다~ 근데 용준님이 말씀하신것처럼  컴포넌트 자체를 분리해서 쓰는게 더 일반적인거 같아요
2022. 6. 17. 오후 5:47, 허브의 개발 일지 : 네네 공통 적인 부분은 h1컴포넌트로 만드시고 상속이 되니깐 필요하다면 h1컴포넌트에 추가적인 스타일링 하셔서 쓰시면 되겠네요~
2022. 6. 17. 오후 5:47, 알사탕 : 감사합니다❤️
2022. 6. 17. 오후 5:49, 신나는 프로도 : 용준님 신통방통님 허브님 모두 감사드립니다 분리해서 사용하는것이 일반적이군요!!
2022. 6. 17. 오후 6:05, 빠밤 : 이번에 지인들끼리 모여서 팀프로젝트하나 해보려는데 저는 지금까지 인강에있는 내용을 토대로 필요한부분만 발췌해서 제가원하는 기능에 추가하는식으로 토이프로젝트를 만들어왔습니다

근데 이번에 지인들끼리하는 팀프로젝트는 팀프로젝트가 아에 처음이이기도하고 인강에 있는 내용이아니라 아에 처음부터 제가 프로젝트 설계부터 상태관리는 어떻게 할지 라우팅등 모든걸 다 제스스로해야하는데 고민이 많더라구요

부끄럽지만 지금까지 인강으로 배운내용만 할줄아는수준이고 아에 처음부터 코드를 짜본적이 이번 프로젝트가 처음인데 혹시 배우지않는 기능이나 내용을 프로젝트에 적용해보려하면 다들 어떻게 하시나요??

구글링이나 혹은 필요한부분이있는 인강을 찾아듣거나 그러시나요?
2022. 6. 17. 오후 6:10, 곰곰 : 모든걸 처음부터 다 할수있는 사람은 없어요. 다 하면서 배우는거죠. 구글링하면 웬만한건 다 나오고 요즘은 유튭도 잘되어있어서 비슷한 기능들을 하는 프로젝트들 보면서 참고하고 그러시면 좋을것 같습니다. 화이팅입니다!!
2022. 6. 17. 오후 6:12, 케챱될거야 : 아 또 떨어졌네요
2022. 6. 17. 오후 6:12, 케챱될거야 : ,,,,,,,
2022. 6. 17. 오후 6:12, 선풍기 : 처음이면 다른 프로젝트 구조를 참고하면 좋을듯요. 다 고민하지마셔요. 일단 남이 해둔걸 가져다 쓰다보면 어느 시점부터, 아 이건 이렇게하는건 좀 불편한거 같은데… 내 프로젝트엔 이렇게 하는게 필요한데… 싶은 느낌이 들거에요.
2022. 6. 17. 오후 6:15, 빠밤 : 처음에 상태관리나 라우팅같은것들도 예를들어 제가 로그인 기능을 구현하고싶으면 여러사이트보면서 어떻게 기능만들어졌는데 참고하는식으로 해보면 도움될까요? 상태관리를 어떻게해야할지 막막하네요
2022. 6. 17. 오후 6:19, 곰곰 : 저는 처음 로그인기능과 그에 따른 라우팅을 핸들링하는걸 구현할때 비슷한 예제를 한 4~5개 그대로 따라서 만들어본거같아요. 그러면서 이해하다보면 각각 장단점이 조금씩 보이는데, 그걸 개선하는 형식으로 만들었습니다.
2022. 6. 17. 오후 6:19, 빠밤 : 팁감사요
2022. 6. 17. 오후 6:19, 빠밤 : 그렇게해봐야겠네요
2022. 6. 17. 오후 6:21, 곰곰 : 해당 기능들을 쉽게해주는 라이브러리들은 찾으면 많지만, 한번쯤은 라이브러리를 쓰지 않고 손수 구현해보면 작동 원리를 근본적으로 이해하는데 더 좋은것같습니다.
2022. 6. 17. 오후 6:57, 프엔공부중 : 혹시 you don't know javascript 책 읽어보신 분 있으신가요?!
2022. 6. 17. 오후 6:59, 델 : 저 읽어봤어요
2022. 6. 17. 오후 6:59, 프엔공부중 : 괜찮은가요?! 코어 자바스크립트 여러번 읽고나서 다른 개념책도 읽어보려고 합니다!
2022. 6. 17. 오후 7:00, 델 : 자바스크립트 책을 유돈노자스밖에 안읽어봐서 딴책이랑 비교는 못해드리는데
2022. 6. 17. 오후 7:00, 델 : 난이도가 꽤 높고 재밌었어요!
2022. 6. 17. 오후 7:00, 프엔공부중 : 오 그렇군요 감사합니다!!
2022. 6. 17. 오후 7:07: 황준일님이 들어왔습니다.
2022. 6. 17. 오후 7:07, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오후 7:39, 동동 : 굉장히 tricky한 부분도 많이 나와 있어서 좋았습니다! 단순히 사실 열거가 아니라 저자의 철학을 매우 강하게 열변해주셔서 저는 좋았어요! 근데 그냥 기본서로 보시기에는 적합하지 않을거 같아요
2022. 6. 17. 오후 7:52, 프엔공부중 : 참고해야겠네요 상세한 후기 감사합니다!
2022. 6. 17. 오후 7:58, 델 : 맞아요 철학이 엄청 확고해서 그런지 워딩이 좀 센 편이긴 해요
2022. 6. 17. 오후 7:58, 델 : 저는 취향에 맞아서 재밌었어요 ㅋㅋㅋㅋ
2022. 6. 17. 오후 8:41: 무님이 들어왔습니다.
2022. 6. 17. 오후 8:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오후 8:49, 유용태 (teo.yu) : 황준일님 무님 반갑습니다!! 어서오세요 :)
2022. 6. 17. 오후 8:53, 유용태 (teo.yu) : 나는 나에요!! 일단 정말 나를 중심으로 생각을 해보세요 그리고 내 철학에 비추어 회사가 말하는 어떤 철학과 방향성이 좋았는지 생각해보세요. 내가 성장하고자 하는 방향과 그 성장이 회사의 성장에 어떻게 기여할수 있을 것 같은지 생각해보세요!! 나를 버리고 회사에 맞추는 것은 바로 간파가 됩니다~ 나를 중심으로 회사에 기여할 수 있는 것들을 한번 생각해보세요~
2022. 6. 17. 오후 8:55, 유용태 (teo.yu) : 저는 스택오버플로우나 깃헙 등에서 이미 되어 있는 코드로 부터 내것에 응용할수 있을때 까지 조금씩 변경해오면서 끌고 오는 편입니다. 인강이나 교재에서는 내가 구현하고자 하는 그 기능이나 내용이 없을때가 더 많아요~ 일단 돌아가는 샘플 코드를 가지고 한번 놀아보세요!
2022. 6. 17. 오후 8:57, 유용태 (teo.yu) : 떨어지더라도 면접경험이나 준비한 경험은 사라지지 않아요~ 자존심도 상하고 마상도 크겠지만 그냥 해보세요! 일단 뭐라도 하는게 중요하고 그게 쌓이다 보면 경험치가 되어 레벨업을 하실거에요!!
2022. 6. 17. 오후 9:13, 빠밤 : 감사합니다 혹시 깃헙등에서도 구현해보고싶은 구현같은게 많이있나요?? 
2022. 6. 17. 오후 9:13, 유용태 (teo.yu) : 평소에는 잘 모르겠지만 해야겠다고 마음먹고(!) 찾으면 많더라구요 ㅋㅋ
2022. 6. 17. 오후 9:14, 유용태 (teo.yu) : 그때만 보이는 심안이랄까? ㅋㅋ
2022. 6. 17. 오후 9:15, 멋쟁이 프로도 : 준일님이면 줌인터넷 출신 그분이시려나요. 블로그 굉장히 즐겨보고 있습니다..!
2022. 6. 17. 오후 9:18, 빠밤 : 여쭤보고싶은게있는데 지금까지는 계속 혼자하다가 이번에 팀프로젝트를처음하는데요 우선  어떻게 프로젝트를 설계할지부터 막막하더라구요.. 

대부분 구현하려는 기능도 큰틀에서는 있는데 디테일한부분은 당연히 구글링으로도 없는거같고..

이런경우 완전 백지에서 코드를작성하는것보다는 비슷한 레퍼런스(?)같은걸찾아서 거기서 부터 시작하는식으로 하는게 나을까요?

아에처음부터 코드를 제가 작성해서 하려니까 막막하네요ㅠㅠ
2022. 6. 17. 오후 9:22, 그레이 : 일단 헤딩해보시는 걸 추천드립니다
2022. 6. 17. 오후 9:23, 유용태 (teo.yu) : 1) 일단 화면을 중심으로 이름을 붙이고 간단한 페이지 이동을 중심으로 스토리보드를 짜둡니다

2) 각 화면별로 사용자가 할 수 있는 모든 액션을 일단 쭉 나래비를 해봅니다.(사실 대부분은 클릭) 그리고 각 동작마다 그 이후 무엇을 해야 하는지 옆에 쭉 적어봅니다

3) 같은 행동을 했는데 동작이 달라져야 하는 경우를 고민해봅니다. 조건이라는 항목으로 행동에 다시 매칭해봅니다

4) 조건 - 행동 - 예상되는 결과 형태로 태스크를 만들수 있습니다 이것을 구현해야 하는 태스크 및 진행사항 계획으로 만들수 있고 테스트 및 태스크 분배에 사용합니다

5) 화면에서 변화하는 값을 찾아서 데이터를 찾습니다 그리고 관련있는 값을 묶어서 스키마를 만들어 보세요
2022. 6. 17. 오후 9:25, 유용태 (teo.yu) : 글로만 설명하려니 내용이 길어지는데 시간 괜찮으실때 디코로 오시면 상세하게 설명 드릴게요 ㅎ
2022. 6. 17. 오후 9:25, 유용태 (teo.yu) : 이것도 좋아요 ㅎㅎ
2022. 6. 17. 오후 9:26, 빠밤 : 헐 정말요?? 혹시 언제가능하세요?? 
2022. 6. 17. 오후 9:26, 빠밤 : 미쳤다..
2022. 6. 17. 오후 9:26, 긱긱 : 😮😮😮😮
2022. 6. 17. 오후 9:26, 긱긱 : 최고당....0
2022. 6. 17. 오후 9:28, 유용태 (teo.yu) : 오늘 스프린트 11시에 있고 스프린트 끝나면 설계에 대해서 항상 설명하는 내용이 지금 내용이에요~ 같이 할테니 가능하시면 11시에 오세요 :)
2022. 6. 17. 오후 9:29, 빠밤 : 네 알겠습니다!!
2022. 6. 17. 오후 9:29, 유용태 (teo.yu) : 순서를 변경해서 먼저 설계에 대해서 설명할테니 11시에 오세요 원래대로 하는 12시에 들으시기에는 부담이시지 않을까 싶어서
2022. 6. 17. 오후 9:32, 유용태 (teo.yu) : BDD와 설계에 대해서 궁금하신 분들은 11시에 디코로 놀러오세요~ 오늘 스프린트에 원해 설명을 해야 되는 내용이라서 원하시면 같이 설명을 드릴게요 ㅎ
2022. 6. 17. 오후 9:35: HJ님이 들어왔습니다.
2022. 6. 17. 오후 9:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오후 9:35, 유용태 (teo.yu) : 안녕하세요 HJ님
반갑습니다 :)
2022. 6. 17. 오후 9:42, HJ : 안녕하세요! 반갑습니다😀😀
2022. 6. 17. 오후 9:49, 곰곰 : 안녕하세요. 질문이 있습니다. 보통 비즈니스로직은 재사용이나 테스트를 위해 분리하는걸로 알고있는데요. 재사용이 필요없는 컴포넌트일지라도 굳이 커스텀훅으로 비즈니스로직을 분리해야할까요? 비즈니스로직을 분리하고봤더니 오히려 컴포넌트간 의존성이 높아진것 같아서 고민입니다.
2022. 6. 17. 오후 9:49: 머리 빗는 네오님이 들어왔습니다.
2022. 6. 17. 오후 9:49, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오후 9:49: 머리 빗는 네오님이 나갔습니다.
2022. 6. 17. 오후 9:52: 힝구님이 들어왔습니다.
2022. 6. 17. 오후 9:52, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 6. 17. 오후 9:57, 동동 : 와 저도 참여하겠습니다!! 좋은 기회 말씀해주셔서 감사합니다~
2022. 6. 17. 오후 10:02, 유용태 (teo.yu) : 힝구님 반갑습니다 :)
2022. 6. 17. 오후 10:04, 유용태 (teo.yu) : 비지니스 로직을 분리하는 이유는 재사용이라기보다는 컴포넌트의 변경이 비지니스에 영향을 미치지 않도록 하기 위함입니다~ 가령 모바일용 화면이 PC와 완전히 다르다 하더라도 화면만 만들수 있도록 하기 위함 같은거에요. 의존성이 어떻게 높아졌는지 대략적으로 알려주실수 있나요?
2022. 6. 17. 오후 10:20, 곰곰 : 해당 로직을 같은 컨테이너 안의 다른 컴포넌트에서도 사용을 해야해서 상위컨테어너에서 커스텀훅을 선언해 함수들이나 state를 전부 props로 내려주고있는데요. 이전에는 리덕스를 이용해 변수부분만 전역적으로 관리하고 비즈니스로직을 컴포넌트 내에서 구현을 하는 방법으로 코드를 짰었습니다. 비즈니스로직의 상태를 공유해야하다보니 상위 컨테이너에서 생각보다 많은 props를 하위컴포넌트로 내려주고 있어서 이게 맞는건가 싶어서요..
2022. 6. 17. 오후 10:28, 유용태 (teo.yu) : 말씀해주신 내용은 container-presenter 패턴의 단점으로 props drill problem이라고 하는 내용을 얘기해주시는 것 같아요. 맞아요. 컴포넌트의 독립성을 유지하기 위해서 내부 로직을 비지니스와 무관하게 순수함수형태를 유지하려고 하다보니 결국 중간에 props가 필요하게 되고 이러한 문제를 해결하고자 2가지 방안이 나옵니다. 

1) 비지니스 로직을 가진 컴포넌트 - customHook이나 recoil, react-query등이 이러한 방식으로 풀고 있어요. 컴포넌트 종속성을 프로젝트 내로 고정하고 그냥 비지니스 로직을 처리하거나 비지니스 스키마를 가지는 컴포넌트라고 취급을 해버리는 거에요. 

2) context API - props가 아닌 Context를 공유해서 props 대신 공통 조상의 Context에서 값을 처리하는 방식입니다. 뭐가 낫냐는 트레이드 오프 같은거라서 취향껏 선택하시면 될것 같아요

뭐가 더 나은지는 한번 해보시고 판ㄷ
2022. 6. 17. 오후 10:34, 파이팅 : 이런식으로 html 동적 태그를 js로 수십개 만들어야 한다면, 어떻게해서 중복을 줄일 수 있을까요?ㅠ 함수화 해보려했는데, 제가 못하는건지 계속 에러가 나서 안되더라고요... 두시간째 검색해보는데도 잘 모르겠어서 질문드립니다ㅠ
2022. 6. 17. 오후 10:34, 파이팅 : 사진
2022. 6. 17. 오후 10:35, 파이팅 : 삭제된 메시지입니다. 
2022. 6. 17. 오후 10:35, 파이팅 : 이러한 태그들을 동적으로 수십개 만들어야 하는 상황입니다..
2022. 6. 17. 오후 10:35, 곰젤리 : innerHTML 에 그냥 넣으시면 안되나요?
2022. 6. 17. 오후 10:36, 파이팅 : 네ㅠ동적으로 만들어야해서..
2022. 6. 17. 오후 10:36, 파이팅 : 저런 코드의 중복을 없애는 방법이 있는지 정말 궁금합니다
2022. 6. 17. 오후 10:36, 곰젤리 : $container.innerHTML = '<div 10개>' 해도 동적으로 생성되는건 매한가지에요
2022. 6. 17. 오후 10:37, 동동 : 다 하신거 같은데요 ㅎㅎ 
element1 을 만드는걸 함수화 하신다음에, 
for문으로 원하는 횟수만큼 실행시키면 될것 같은데요..?
2022. 6. 17. 오후 10:37, 동동 : 뭐 불변하게 만들고 뭐 그런거는 일단 차치하고...
2022. 6. 17. 오후 10:37, 파이팅 : 아 그런가요!? innerHTML도 괜찮은가요
2022. 6. 17. 오후 10:38, 파이팅 : 오 그렇군요 이렇게 해보겠습니다!
그러다가 안된다면 innerHTML로...감사합니다!!
2022. 6. 17. 오후 10:39, 곰젤리 : 개수나 모양이 이미 정해져있다면 그냥 innerHTML 넣는게 제일 편하죠!
윗분 말씀대로 그냥 반복문으로 이미 짜신걸 반복해도되구요
2022. 6. 17. 오후 10:40, 파이팅 : 제가 함수화를 잘 못하는데,  연습할겸 신통님 말씀대로 시도해보겠습니다. 넵 innerHTML이 훨씬 간결하고 가독성도 좋을거같네요. 저는 innerHTML은 동적생성이 아니라고 생각했어서 다르방법을 계쏙 붙잡고있었거든요ㅠ 답변감사합니다♡
2022. 6. 17. 오후 10:48, 빠밤 : 혹시 스프린트 어떻게 들어가나요?? 
2022. 6. 17. 오후 10:49, 긱긱 : https://app.gather.town/app/BF5knX8KBmXFn5CU/teo
2022. 6. 17. 오후 10:49, 긱긱 : 여기요!
2022. 6. 17. 오후 10:50, 빠밤 : 감사합니다!!
2022. 6. 17. 오후 11:05, 곰곰 : 조언 감사합니다. 한번적용해볼께요!
2022. 6. 17. 오후 11:15, 햄햄 : 한국어로 번역된 BDD 관련 책 혹시 있나요? 검색해보니 원서만 나오네요🥲
2022. 6. 17. 오후 11:20, 블럭을 무너트리는 라이언 : 안녕하세요 이번에 자바스크립트에서 타입스크립트로 넘어가려고 하는데 좋은 자료나 서적, 강의 등 알고 계시는거 있으면 추천 부탁드려도 될까요??! 타입스크립트는 아예 처음입니당
2022. 6. 17. 오후 11:22, NEXT. : https://www.udemy.com/course/best-typescript-21/
2022. 6. 17. 오후 11:22, 그레이 : 튜토리얼이 꽤 좋습니다 https://www.typescriptlang.org/ko/docs/handbook/typescript-in-5-minutes.html
2022. 6. 17. 오후 11:22, NEXT. : 저는 이거 만오천원 할인할때 사서 듣고있어요!
2022. 6. 17. 오후 11:23, 블럭을 무너트리는 라이언 : 이모티콘 우와 감사합니다! 다 들어가볼게요!!
2022. 6. 17. 오후 11:24, 주니어 : https://joshua1988.github.io/ts/why-ts.html#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%9E%80
2022. 6. 17. 오후 11:46: 열심히 일하는 네오님이 들어왔습니다.
