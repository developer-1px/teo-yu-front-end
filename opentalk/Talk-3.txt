Talk_2022.2.24 21:48-3.txt
저장한 날짜 : 2022. 2. 24. 오후 9:50



2022년 2월 17일 목요일
2022. 2. 17. 오후 12:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 17. 오후 12:54, 유용태 (teo.yu) : 안녕하세요 뭉뭉님! 반갑습니다 :)
2022. 2. 17. 오후 1:57, 스타트업개발자 : 이번에 웹뷰에 들어갈 상태관리를 선택하려고하는데,,, redux-toolkit / recoil  어느게 나을까요? recoil 을 사용하고 싶긴한뎅,,, 1 버전이 아니라서,,, 조심스러운,,,
2022. 2. 17. 오후 1:57, 실무뿌론트 : recoil요
2022. 2. 17. 오후 1:58, 실무뿌론트 : 간편하고 보일러플레이트 코드가 거의 없어서 생산성 좋아요
2022. 2. 17. 오후 1:58, 제이 : 실서비스에서 recoil 꽤 많이들 사용하시는 것 같아요 저희도 사용하고 토스도 일부 사용하는 걸로 알고있어요
2022. 2. 17. 오후 1:59, Luke : recoil 강추입니다 진짜로...
2022. 2. 17. 오후 1:59, 스타트업개발자 : 아하!! 토스도 사용한다니,,, 당당하게 recoil을 선택해야겠습니다 ㅋㅋㅋㅋㅋ
2022. 2. 17. 오후 1:59, Luke : 코드가 그냥 이뻐요 너무너무 이뻐요
2022. 2. 17. 오후 2:00, 실무뿌론트 : 걍 useState 쓰는느낌ㅋㅋ
2022. 2. 17. 오후 2:00, 실무뿌론트 : 페북이 만든 리액트인데
2022. 2. 17. 오후 2:00, 실무뿌론트 : recoil도 페북에 있는 팀이만들었으니
2022. 2. 17. 오후 2:00, 실무뿌론트 : 안쓸이유 없다고 생각해요
2022. 2. 17. 오후 2:01, 제이 : 셀렉터에서 비동기콜하는건 좀 불편해보여서 swr이랑 섞어서 쓰면 좋은 것 같아요
2022. 2. 17. 오후 2:01, 실무뿌론트 : 넵 저도 비동기콜은 굳이 recoil안쓰고 swr이나 리액트쿼리 추천
2022. 2. 17. 오후 2:24, 유용태 (teo.yu) : https://2021.stateofjs.com/en-US/
2022. 2. 17. 오후 2:25, 유용태 (teo.yu) : 드디어 나왔습니다. 2021년 JS 트렌드! 한번씩 확인해보세요 :)
2022. 2. 17. 오후 2:26, 꺄 : 우와 감사합니당!!!
2022. 2. 17. 오후 2:37, 준 : 스벨트가 정말 무섭게 치고 올라오네요
2022. 2. 17. 오후 2:39, 프로로 : 스벨트 어마어마하네요
2022. 2. 17. 오후 2:49, Hyo : solid.js 란게 또 나왔나보네요;;;
2022. 2. 17. 오후 2:52, 유용태 (teo.yu) : https://www.solidjs.com/
2022. 2. 17. 오후 2:53, 유용태 (teo.yu) : 나온지는 5년이 넘었는데 속도면에서 주목을 지금 주목을 받고 있네요. React 문법을 쓴는데 현존 라이브러리 중에서는 제일 빠른것으로 컨셉을 잡고 있어요
2022. 2. 17. 오후 2:53, 유용태 (teo.yu) : 사진
2022. 2. 17. 오후 2:54, 유용태 (teo.yu) : 근데 React의 생태계를 그대로 쓸 수 있는 것은 아니라서 생태계 확장성을 얼마나 가져갈 수 있을지가 미지수라 조금 지켜봐야 되기는 합니다
2022. 2. 17. 오후 2:56, 유용태 (teo.yu) : React 생태계를 그대로 쓸 수 있는 Preact도 지분율이 얼마되지 않는데 과연 React 사용자들을 흡수할 수 있을지... Next라던가 Remix와 같이 서버사이드 생태계나 Framer와 같이 React 생태계가 단순 프레임워크만의 문제는 아니라서요
2022. 2. 17. 오후 2:56, Hyo : 아직은 쫌 지켜봐야 겠네요
2022. 2. 17. 오후 4:11, 제이 : 여러분 혹시 보통 dto (data transfer model)이라고 하면, 

api 호출할 때 input (command)랑 reponse interface 모두를 포괄하는 의미로 사용하는 것 맞나요~?
2022. 2. 17. 오후 7:30, 스타트업개발자 : flex를 이용해서 앨범? 을 만들고있는데,,,
한줄당 3개씩해서 쭉 보여주고 싶습니다.

그래서 gap을 이용해서 사이값을 주고
basis를 이용해서 기본값을주고 grow를 줘서 다음줄로 넘어가는 부분을 채우려고하는데,,, 사진의 개수가 2개인 줄은 grow 때문에 2개인 상태로 꽉차는 현상이 발생하는데 어떻게 하면 없앨 수 있을까요,,,

* grow 를 넣은 이유가 사진의 간격을 gap으로 했다보니 한 줄의 마지막 사진 오른쪽에도 gap 이 들어가서 넣었습니다.
2022. 2. 17. 오후 7:44, 돈다발 들고 좋아하는 무지 : width값을 33.3%로 고정하면 되지 않을까여?
2022. 2. 17. 오후 7:44, 동딩댕동 : 스크린샷 한번 보여주실 수 있나요?
2022. 2. 17. 오후 7:44, 최민석 : 전 margin padding 활용해서 했습니당
2022. 2. 17. 오후 7:46, 이엘로 : 그리드로 grid-template-columns: repeat(3, 1fr); 하시면 될 것 같아요!
2022. 2. 17. 오후 7:50: 숨님이 나갔습니다.
2022. 2. 17. 오후 8:54, 실무뿌론트 : 이엘로님 의견대로 그리드로 나누면 빈공간도 비율을갖고있어서 될듯
2022. 2. 17. 오후 9:36, 프엔공부중 : 안녕하세요 제가 올해 4학년 1학기인데 취업할 시기가 곧 다가오기도 해서 고민이 있습니다 ㅠ 평소에도 프론트엔드 취업 공고를 자주 보는데 요즘 네카라쿠배 등 큰 대기업을 제외하면 과제 전형도 많이 있더라구요, 그래도 아직 까지는 코테를 가장 중점적으로 준비하는게 맞는 선택이겠죠?
2022. 2. 17. 오후 9:38, j : 코테도 중요하지만 기술면접 준비도 하셔야할거에요
2022. 2. 17. 오후 9:39, 프엔공부중 : 아 그쵸.. 결국 코테나 과제보단 면접이 가장 중요하다고 하더라구요..
2022. 2. 17. 오후 9:40, j : 코테 공부하다보면 이론도 하게되서 너무 부담갖지마시구요ㅠㅠ
2022. 2. 17. 오후 9:41, 프론돌이 : 코테는 허들 같은 느낌이 강해요~!
2022. 2. 17. 오후 9:41, 프론돌이 : 정해진 기준을 못넘으면 탈락이지만, 그 이상이면 그 후는 비슷한!
2022. 2. 17. 오후 9:41, 프엔공부중 : 그렇군요.. 준비할게 생각보다 너무 많네요.. ㅠ
2022. 2. 17. 오후 10:41: Shy Ryan님이 들어왔습니다.
2022. 2. 17. 오후 10:41, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 17. 오후 10:43, 유용태 (teo.yu) : 안녕하세요 Shy Ryan 반갑습니다 :)
2022. 2. 17. 오후 10:45, Shy Ryan : 안녙하세요! 지금은 잡부이지만 언젠가 프론트 고수가 되고싶은 개발자입니다(grin)
2022. 2. 17. 오후 10:45, 유용태 (teo.yu) : 화이팅입니다!!
2022. 2. 17. 오후 10:52: 튭님이 들어왔습니다.
2022. 2. 17. 오후 10:52, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 17. 오후 10:52, 유용태 (teo.yu) : 삭제된 메시지입니다. 
2022. 2. 17. 오후 10:52, 유용태 (teo.yu) : 안녕하세요 튭님 반갑습니다 :)
2022. 2. 17. 오후 10:53, 튭 : 안녕하세요 반갑습니다 😊

2022년 2월 18일 금요일
2022. 2. 18. 오전 12:08, 유용태 (teo.yu) : 어서오세요~ 여기는 개발하다가 다른 개발자들에게 궁금한 것들을 물어보고 함께 얘기 나눠보는 공간입니다. ㅎ 편하게 글 남겨주세요 :)
2022. 2. 18. 오전 12:54, Hardy : https://www.depromeet.com/
2022. 2. 18. 오전 12:55, Hardy : 디자이너+개발자 팀으로 플젝하는 모임인데 이번에 11기 모집하네요 사이드플젝 관심있으시면 넣어보세요!
2022. 2. 18. 오전 6:57, 썰~~ : 저기서 가슴속 3천원 어플이 나왔어요 ㅎㅎㅎ
2022. 2. 18. 오전 9:01, 유용태 (teo.yu) : stateofjs 2021 리뷰 영상을 찍어 봤습니다. 
전문 녹화 환경을 갖춘게 아니라 영상이 급이 높지 않는 부분은 양해 부탁드려요. 편집도 아직은 잘 몰라서 그러니 가급적 2배속으로 들어주세요. 

https://www.youtube.com/watch?v=WKDWnoJoGlI&lc=UgyGI329O1yhAs-T01V4AaABAg
2022. 2. 18. 오전 9:03, 박성원 : 오오오오오오오오오 잘보겠습니다!!
2022. 2. 18. 오전 9:05, 꼬북 : 테오가 유튜브까지 진출하다니 😭
2022. 2. 18. 오전 9:06, 유용태 (teo.yu) : 진출은 아니구요ㅠㅠ 아 뭔가 장비도 탐나고 편집이랑 자막도 달아드리고 싶은데 요새 현업이 너무 바빠져서 ㅠ 블로그 대신이라고 생각해주세요
2022. 2. 18. 오전 9:07, yen : 오왕 넘 감사합니다 👍👍
2022. 2. 18. 오전 10:12, 결과보단 과정을 / React,JS : 리뷰 영상 잘 봤습니다. 
vite를 한번 써보고 싶다 할 정도로 vite가 가장 핫하네요.
2022. 2. 18. 오전 10:13, 유용태 (teo.yu) : 맞아요. 제가 맨날 얘기하는 거지만 회사가 아니라면 (사실 회사여도.. ㅋ) 그냥 npm init vite 한번만 해보세요 ㅋ
2022. 2. 18. 오전 10:15, 결과보단 과정을 / React,JS : 소규모 project에 꼭 한번 써보고 좋은점을 느껴보겠습니다 ㅎㅎ
2022. 2. 18. 오전 10:39, 준 : 정확히 Vite가 웹팩과 같은 모듈 번들러인가요?!
2022. 2. 18. 오전 10:42, 결과보단 과정을 / React,JS : CRA 같은 build tool이라고 합니다
2022. 2. 18. 오전 11:05, 디디 : 혹시 React에서 서버에서 받아온 값으로 map을 돌려 생성한 셀렉트박스의 경우 ohChange시 초기값을 어떻게 정해줘야 할까요..? 아무것도 선택하지 않은 상태에서 트리거했을때 값이 나타나야 하는데 셀렉트박스의 값을 바꾸지 않거나 setState에서 초기값을 하드코딩하지 않는이상 빈값이 나오더라구요... ref로 setState(selectRef.current?.value) 이렇게 지정해봤는데 비동기의 특성상 처음에는 빈값이 찍혀서ㅠ 질문드립니다..
2022. 2. 18. 오전 11:14, 결과보단 과정을 / React,JS : 혹시 setState로 초기값을 설정하지 않는 이유가 있나요?
2022. 2. 18. 오전 11:16, 디디 : 값이 유동적이라서요ㅠ 그때그때 데이터가 달ㄹ질수가 있어서..
2022. 2. 18. 오전 11:19, arthur : Api 응답 값으로 셀렉트박스를 생성하고 초기에 선택되어 있는 값을 받아오고 싶다는 말씀인가요..?
2022. 2. 18. 오전 11:20, 결과보단 과정을 / React,JS : 데이터가 달라진다면 서버에서 받아온 데이터를 초기값으로 설정하는건 어떠세여?
2022. 2. 18. 오전 11:34, 디디 : 감사합니다!.. 비슷한 방법으로 해결했어요ㅎ
2022. 2. 18. 오전 11:57, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 2. 18. 오전 11:57, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 18. 오전 11:57, 화가난다 화가나 그래서 난 화가임 : 구독인증
2022. 2. 18. 오전 11:57, 화가난다 화가나 그래서 난 화가임 : 이모티콘 
2022. 2. 18. 오전 11:58, 화가난다 화가나 그래서 난 화가임 : 혹시 웹소켓 채팅 기능 구현
2022. 2. 18. 오전 11:58, 화가난다 화가나 그래서 난 화가임 : 러닝커브 높나요?
2022. 2. 18. 오전 11:59, 썰~~ : 흠 그말씀은.. 비행기 타서 미국가는데 공부하는데 드는 비용이 많이드나요 이런느낌이에요
2022. 2. 18. 오후 12:00, 썰~~ : 어떤 기술을 학습하는것과 그걸 구현하는건 또 별개라서
2022. 2. 18. 오후 12:00, 화가난다 화가나 그래서 난 화가임 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 2. 18. 오후 12:00, 화가난다 화가나 그래서 난 화가임 : 바로 뇌를 때릴 만큼 비유가 이해가 되네용
2022. 2. 18. 오후 12:00, 썰~~ : 웹소켓 러닝커브 자체는 낮은편이 아닙니다
2022. 2. 18. 오후 12:00, 썰~~ : 네트워크에 대한 이해도도 있어야해서
2022. 2. 18. 오후 12:01, 화가난다 화가나 그래서 난 화가임 : 그렇군요. 지금 약간 이런상황이였어요
2022. 2. 18. 오후 12:01, 썰~~ : 근데 웹소켓 이해도 없이 구현하는건
2022. 2. 18. 오후 12:01, 썰~~ : 가능하긴합니다
2022. 2. 18. 오후 12:01, 화가난다 화가나 그래서 난 화가임 : 일주일 남았는데, 저는 배워서 익혀보자 마인드고
2022. 2. 18. 오후 12:01, 화가난다 화가나 그래서 난 화가임 : 다른 한 쪽은 현실적으로 시간이 안된다
2022. 2. 18. 오후 12:01, 화가난다 화가나 그래서 난 화가임 : 지금은 타이밍이 아니다
2022. 2. 18. 오후 12:27, 제이 : 고민할 시간에 일단 고!
2022. 2. 18. 오후 12:38, 화가난다 화가나 그래서 난 화가임 : 오케이
2022. 2. 18. 오후 12:38, 화가난다 화가나 그래서 난 화가임 : 고! 해보자고
2022. 2. 18. 오후 12:38, 화가난다 화가나 그래서 난 화가임 : 제안하겠습니다!
2022. 2. 18. 오후 12:38, 화가난다 화가나 그래서 난 화가임 : ㅋㅋ
2022. 2. 18. 오후 1:00, 꺄 : 오 도움이 되실지는 모르겠지만 작년에 프로젝트하면서 정리해둔 내용이 좀 있는데, 괜찮으시면 참고해보셔도 좋을 것 같아서 공유드립니다 호홍

- 웹소켓이란 무엇인가?
https://mingule.tistory.com/60

- 클라이언트에서 채팅 구현하기
https://iborymagic.tistory.com/93
2022. 2. 18. 오후 2:44, Kyle : 우와 테오 유튭저도 보자마자 구독눌렀습니다
2022. 2. 18. 오후 2:44, Kyle : 근데 vite 발음 바이트인줄 알았는데 비트였군요 어제 처음알았습니다 ㅋㅋ;
2022. 2. 18. 오후 2:45, 유용태 (teo.yu) : 사진
2022. 2. 18. 오후 2:46, 혜심 : ㅋㅋㅋ
2022. 2. 18. 오후 2:46, 리린이 : 이것도 에반유님이 만드신거죠? ㅋ
2022. 2. 18. 오후 2:46, 0_0 : 앗 프랑스엿굼요...
2022. 2. 18. 오후 2:46, 유용태 (teo.yu) : 네 맞아요~
2022. 2. 18. 오후 2:47, 유용태 (teo.yu) : 에반유 혼자라기 보다는 엄청 큰 팀으로 움직이는 것 같아요
2022. 2. 18. 오후 2:47, 유용태 (teo.yu) : vue 사단이라고 해야되나?
2022. 2. 18. 오후 2:47, 프론돌이 : 헉. 저게 그 사단?에서 만든거였군요
2022. 2. 18. 오후 2:47, 리린이 : 거기에 탑승하고싶네요..
2022. 2. 18. 오후 2:48, 유용태 (teo.yu) : 에반유보다 antfu가 더 눈에 띄는거 같기도 하구요 ㅋㅋ
2022. 2. 18. 오후 2:48, 유용태 (teo.yu) : https://github.com/antfu
2022. 2. 18. 오후 2:48, 유용태 (teo.yu) : vite 관련 안하는 프로젝트가 없어요. ㅋ
2022. 2. 18. 오후 2:49, Kyle : 오잉 vite 한국어 번역사이트가 있었군요
2022. 2. 18. 오후 2:49, Kyle : 공식문서 언어탭에 없어서 그냥 영어로 봤는데 테오 덕분에 좋은 정보 얻어가네요
2022. 2. 18. 오후 2:55, 리린이 : 잔디밭이.. 와..ㅋ
2022. 2. 18. 오후 2:59, 자율 : 2222 빈날이 없네요
2022. 2. 18. 오후 3:28, 여의도개발 : next12.1이 나왔군요 굉장합니다
https://nextjs.org/blog/next-12-1
2022. 2. 18. 오후 3:32, j : 어 나왔군요
2022. 2. 18. 오후 4:30, 0_0 : 오 스타일드컴포넌트!
2022. 2. 18. 오후 4:32, 여의도개발 : 와… 리코일 쓰기 엄청 간단하네여…ㅋㅋ
2022. 2. 18. 오후 4:49, 핸디(강경석) : 혹시 사전과제에서 리액트 컴포넌트 테스트를 작성안하는건 큰 하자일까요? ㅜㅜ
2022. 2. 18. 오후 4:50, 여의도개발 : 큰하자 같진 않아요 갠적으론
2022. 2. 18. 오후 4:51, 핸디(강경석) : 스토리북은 적용해서 프로젝트를 하고 있는데, 테스팅은 계속 미루다가 이런 상황이 되어보니 반성을 하게 되네요
2022. 2. 18. 오후 4:51, 핸디(강경석) : 기운 +1 을 얻고갑니다
2022. 2. 18. 오후 5:09, Vintz : 혹시 VSC 사용자 코드 스니펫 기능에 대해 알고계신가요?? 저는 개인적으로 너무너무 만족해서 글로 써서 공유해봅니다! ㅎㅎ 이 기능으로 스트레스를 좀 덜 받으셨으면 좋겠어요~😄

https://onlydev.tistory.com/133
2022. 2. 18. 오후 5:12, 성석민 : 선생님들 !! 혹시 typescript에서 type을 사용하시나요 interface를 사용하시나요 ??
2022. 2. 18. 오후 5:14, 준 : https://medium.com/humanscape-tech/type-vs-interface-%EC%96%B8%EC%A0%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-f36499b0de50
2022. 2. 18. 오후 5:14, 준 : 이 글이 정리가 잘 되어있는 것 같아요!
2022. 2. 18. 오후 5:14, Vintz : 저도 이 방에서 물어보기도 하고 찾아보니 회바회지만 interface를 더 많이 사용하시는 것 같더라구요. type은 interface에서 구현 안될 때 사용하시는 것 같고..
2022. 2. 18. 오후 5:14, 성석민 : 와우,, 감사합니다 ㅎㅎ
2022. 2. 18. 오후 5:15, 성석민 : 뭘 언제 어떻게 써야할지 모르겠네요,, 감사합니다 ㅎㅎ
2022. 2. 18. 오후 5:16, Vintz : 저도 저 글 읽고 개념을 좀 확실하게 잡아야겠어요! 질문해주셔서 감사해요~
2022. 2. 18. 오후 6:14: 안녕하세요!님이 들어왔습니다.
2022. 2. 18. 오후 6:14, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 18. 오후 7:28, 유용태 (teo.yu) : 안녕하세요!님 안녕하세요!
2022. 2. 18. 오후 7:48, 박성원 : 으아 rx로 해결해보려는 문제가있는데 쉽지않네요
2022. 2. 18. 오후 8:02, 맥줘 : 으으 git좀 물어보고싶어요. 

깃랩A사이트에서 소스 관리하다가 (소스그대로냅두고)
그소스 들고 B사이트깃랩에 새로올려서 커밋치면서 짜다가
다시 A싸이트에 커밋하려고하는데요
git remote 로 그냥 옮기기만 하면 되나요?
2022. 2. 18. 오후 8:05, 파이버 : remote 두개 관리하시는 게 제일 편하실거예요
2022. 2. 18. 오후 8:05, 파이버 : git pull B master && git push A master
2022. 2. 18. 오후 11:57, 스타트업개발자 : react router dom v6 버전을 사용중인데 헤더랑 푸터는 그대로 두고 main 에 네이버 같은 다른 페이지를 띄울 수가 있나요!?

2022년 2월 19일 토요일
2022. 2. 19. 오전 12:44, 최민석 : v6버전에 Outlet 컴포넌트 사용하면 가능합니다!
2022. 2. 19. 오전 12:45, 스타트업개발자 : 네이버 같은 다른 url 의 페이지도 outlet으로 가능한가요?
2022. 2. 19. 오전 12:47, 웹린이 : https://developer.mozilla.org/ko/docs/Web/HTML/Element/iframe
2022. 2. 19. 오전 12:48, 웹린이 : iframe 하시면 될 것 같은데 naver같은 일부 사이트는 iframe에서 호출하는걸 막아놓았다고 해요!
2022. 2. 19. 오전 12:50, 최민석 : 아아 제가 잘못이해했네요ㅠ
2022. 2. 19. 오전 12:52, 스타트업개발자 : 네네! 감사합니다!
2022. 2. 19. 오전 12:52, 스타트업개발자 : 아닙니다! 늦은시간에 감사합니다 ㅠㅠ
2022. 2. 19. 오전 12:54, 웹린이 : 하시면 => 쓰시면
2022. 2. 19. 오전 2:53: 부끄러운 어피치님이 들어왔습니다.
2022. 2. 19. 오전 2:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 19. 오후 12:46, 유용태 (teo.yu) : 안녕하세요 부끄러운 어피치님~ 반갑습니다 :)
2022. 2. 19. 오후 12:54, 부끄러운 어피치 : 이모티콘 안녕하세요~! 반갑습니다
2022. 2. 19. 오후 12:55, 유용태 (teo.yu) : 어서오세요~ 여기는 궁금하게 있으면 서로 편하게 질문하고 답변해보는 공간입니다~ 좋은 자료나 본인이 쓴 글이 있다면 또 얼마든지 올려주세요 :)
2022. 2. 19. 오후 12:58, 부끄러운 어피치 : 넵 알겠습니다!
2022. 2. 19. 오후 9:27: Goody님이 들어왔습니다.
2022. 2. 19. 오후 9:27, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 19. 오후 9:27: 엄지척 제이지님이 들어왔습니다.
2022. 2. 19. 오후 9:27, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 19. 오후 9:29: Goody님이 나갔습니다.
2022. 2. 19. 오후 9:47, 유용태 (teo.yu) : 안녕하세요 엄지척 제이지님! 반갑습니다 :)
2022. 2. 19. 오후 11:02: 조조님이 들어왔습니다.
2022. 2. 19. 오후 11:02, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 19. 오후 11:03, 유용태 (teo.yu) : 안녕하세요 조조님~ 반갑습니다
2022. 2. 19. 오후 11:04, 조조 : 안녕하세요~~
2022. 2. 19. 오후 11:04, 유용태 (teo.yu) : 반갑습니다 :)
2022. 2. 19. 오후 11:05, 조조 : 구글링 하다 블로그에서 글 읽고 들어왔습니다!
2022. 2. 19. 오후 11:07, 유용태 (teo.yu) : 감사합니다~~ :) 여기는 궁금한게 있을때 언제든지 물어보는 공간입니다. 언제든 궁금하거나 얘기 해보고 싶은 주제가 있다면 편하게 글 남겨 주세요
2022. 2. 19. 오후 11:09, 조조 : 감사합니다!!
2022. 2. 19. 오후 11:09, 조조 : 제가 프론트엔드 공부하면서 혼자 개발 조금 해보다가 이제 백엔드 한분이랑 같이 프로젝트를 진행하게 되었는데
2022. 2. 19. 오후 11:10, 조조 : 백엔드는 개발할때 MVC 패턴을 사용하는 걸로 알고있는데 그러면 프론트 백엔드가 협업할때는 프론트가 View를 맞게 되는 걸까요?
2022. 2. 19. 오후 11:14, 조조 : 아니면 백엔드는 백엔드대로 MVC로 개발하고, 프론트는 프론트대로 MV* 패턴으로 개발해서 교차되는 지점에서 상호작용하는 것인가요..?
2022. 2. 19. 오후 11:22, 유용태 (teo.yu) : MVC는 개념적인 부분이라서 범주를 어떻게 묶냐에 따라 달라지긴 합니다. 백엔드에서 MVC라고 하는 것은 아주 오래된 개념이긴 한데 M=DB, C=라우터, V=HTML의 개념이었어요.
2022. 2. 19. 오후 11:22, 유용태 (teo.yu) : 지금은 REST API만 만들다 보니 V=JSON 이 되었지요
2022. 2. 19. 오후 11:24, 유용태 (teo.yu) : 고전적인 MVC 개념에서는 V=HTML이고 프론트엔드가 거기에 JS(=jQuery), CSS를 얹어서 사용자 동작을 구성하는 식으로 개발을 했었습니다. (대략 7~8년)
2022. 2. 19. 오후 11:24, 유용태 (teo.yu) : 물론 지금도 이러한 방식의 웹사이트가 수치상으로는 더 많은 걸로 알고 있구요
2022. 2. 19. 오후 11:25, 유용태 (teo.yu) : 프론트엔드가 고도화되면서 Ajax가 보편화 되고 RES API가 너무 당연시 되면서 프론트엔드는 CSR로 독립적으로 성장하고 API를 통해서 데이터만 가져와서 화면에 뿌릴 수 있도록 발전하게 된게 요 최근 5년간이구요
2022. 2. 19. 오후 11:26, 유용태 (teo.yu) : 지금은 프론트엔드의 프레임워크 사용경험이 웹 개발관점에서 훨씬 좋기 때문에 이러한 프레임워크를 백엔드에서도 쓸 수 있도록 하는 메타 프레임워크로 발전하고 있습니다. Next나 Nest Nuxt, svelteKit 등이 그러한 프레임워크구요
2022. 2. 19. 오후 11:28, 유용태 (teo.yu) : 보통 백엔드와 협업을 하게 되면 대부분은 백엔드의 기술 스택에 더 맞춰주게 되는 편이라 어떠한 패러다임의 백엔드 MVC를 가지고 있는지에 따라 맞춰가면 될 것 같아요. 현재 대부분은 REST API를 만들어 주는 선이 가장 흔히 보이는 경우라고 생각합니다.
2022. 2. 19. 오후 11:36, 조조 : 아하 그러면 백엔드에서 자체적으로 MVC(혹은 다른 패러다임)를 이용해 REST API를 뿌려주면, 프론트가 그 JSON 데이터를 가지고 자체적인 아키텍처를 통해 작업해서 유저 화면에 렌더링한다...고 이해하면 될까요?
2022. 2. 19. 오후 11:37, 유용태 (teo.yu) : 네 그게 현재 제일 보편적인 방식이라고 생각합니다
2022. 2. 19. 오후 11:38, 조조 : 아하 감사합니다 이해했습니다! ㅎㅎ
2022. 2. 19. 오후 11:38, 조조 : 쉽지 않겠지만 재밌을거같네요
2022. 2. 19. 오후 11:49, arthur : 참고로 백엔드와 협업할 때 스웨거를 사용하니 편하더라고요 백엔드에서 생성된 스웨거 스펙가지고 모델이랑 api호출부분까지 자동생성되니 좋았어요
2022. 2. 19. 오후 11:50, 유용태 (teo.yu) : 맞아요 특히 java 하시는 분들은 거의 스웨거로 다 전달 주시더라구요
2022. 2. 19. 오후 11:57, 애교뿜뿜 어피치 : 질문이 하나 있습니다. 기존까지는 리액트 앱을 배포 할 때 보통 S3 이용했었는데, 이번에는 백엔드에서 구축한 웹서버에 빌드 파일을 배포하는 방식으로 해보자는 의견이 있더라구요. 후자로 하는 방식에서 어떤 장점이 있을까요.? 뭔가 웹서버 안에 갇히는 느낌이 들어서.. ㅎㅎ;; 실제 서비스는 보통 어떤식으로 배포를 하고 계신가요?
2022. 2. 19. 오후 11:58, 유용태 (teo.yu) : 아무래도 cors 문제에서 좀 편하겠죠?

2022년 2월 20일 일요일
2022. 2. 20. 오전 12:02, 유용태 (teo.yu) : 저는 사내 cdn에 배포하고 있어요 s3와 거의 유사한 방법이겠네요.
2022. 2. 20. 오전 12:03, 유용태 (teo.yu) : 제 주위에서는 git action이나 젠킨스 이용해서 ci/cd에 프론트를 같이 업로드 하는 것을 선호 하더라구요
2022. 2. 20. 오전 12:05, 애교뿜뿜 어피치 : 그렇군요.. !!! 왜 굳이 프론트가 백엔드와 같은 배를 타야하나 의문이 들었었는데 ,, 감사합니다 ㅎㅎ
2022. 2. 20. 오전 12:06, 파이버 : 저희는 쿠버네티스로 일괄 관리하려고 그렇게 처리하더라고요 인프라팀이 따로 있어서
2022. 2. 20. 오전 12:07, 유용태 (teo.yu) : 네 맞아요 사실 제가 회사에서는 재가 하는 방식이 좀 특이한 케이스에요
2022. 2. 20. 오전 12:07, 유용태 (teo.yu) : *제
2022. 2. 20. 오전 12:07, 조조 : 한번 찾아보겠습니다~ 감사합니다~~~!!
2022. 2. 20. 오전 12:08, 유용태 (teo.yu) : 뭔가 빌드랑 배포가 되는게 느린게 싫더라구요~
2022. 2. 20. 오전 12:08, 애교뿜뿜 어피치 : 그렇군요 저도 백엔드 쪽에서 당연시 하게 웹서버에 올라타라는 식으로 얘기를 해서 납득이 안됐었어요
2022. 2. 20. 오전 12:08, 애교뿜뿜 어피치 : 이런 이유라면 조금 납득이 되네요
2022. 2. 20. 오후 12:49, 스타트업개발자 : 삭제된 메시지입니다. 
2022. 2. 20. 오후 12:50, 여의도개발 : 옵션 제대로 안먹힌게 아닐까요? False이면 refetch 아님 못가져올텐데
2022. 2. 20. 오후 12:54, 스타트업개발자 : useEffect 안에 refetch 를 걸어두긴했는데 이것 떄문인 것 같은데 refetch 는 enabled 를 무시하는건가요!?
2022. 2. 20. 오후 12:54, 파이버 : 넵 refetch는 enabled 무시해요
2022. 2. 20. 오후 12:56, 스타트업개발자 : 그러면 궁금한게,,,
const idx = useRecoilValue();
const {data, refetch} = useQuery(idx);

useEffect(() => {
	refetch()
},[idx]);

이런형식인데 idx를 가져오고 난 후에 데이터를 가져오고 싶으면 어떻게해야하나요,,,!?
2022. 2. 20. 오후 12:57, 파이버 : enabled: !!idx 주시면 되지 않을까요?
2022. 2. 20. 오후 12:57, 파이버 : useEffect 부분이 없어야 맞을 거 같아요
2022. 2. 20. 오후 1:00, 스타트업개발자 : 저거 말고도 다른 조건들이있었는데,,, useState()가 바뀔떄마다도 useQuery를 실행하고 싶었었거든요? 근데 말씀하신대로 지금 useEffect 에 state값 만 바꾸도록 했는대도 렌더링 되면서 알아서 가져오는군요,,,
2022. 2. 20. 오후 1:01, 파이버 : 넵넵
2022. 2. 20. 오후 1:01, 스타트업개발자 : 감사합니다!!
2022. 2. 20. 오후 1:01, 파이버 : 몇번 말씀드렸던 거 같긴 한데.. 진짜 공식문서 한번만 읽어보시면 다 나와요ㅜㅜ 스타트업개발자님 고민하시는 시간이 괜히 아까워서
2022. 2. 20. 오후 1:10, 스타트업개발자 : 네네... 감사합니다 ㅠㅠ
2022. 2. 20. 오후 3:30, 진현 : https://github.com/qkraudghgh/clean-code-javascript-ko
클린코드 자바스크립트
2022. 2. 20. 오후 4:31, 남대영 : 이번에 webrtc native api를 연구하며 얻은 제 경험을 공유합니다!!

https://velog.io/@devdynam0507/WebRTC-Native-C-API%EB%A1%9C-SFU-%EB%B0%A9%EC%8B%9D1N-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0
2022. 2. 20. 오후 7:21, 화가난다 화가나 그래서 난 화가임 : webRTC
2022. 2. 20. 오후 7:22, 화가난다 화가나 그래서 난 화가임 : 공부기간 얼마나 되셨나용
2022. 2. 20. 오후 8:36, 남대영 : 한 2~3주정도 걸린것같아요
2022. 2. 20. 오후 8:49, 신난 어피치 : 오 저걸로 뭐 만들어보신건가요 그럼?
2022. 2. 20. 오후 9:17, 남대영 : 넵 강의시스템을 만들예정입니다
2022. 2. 20. 오후 9:23, 신난 어피치 : 오 멋있네요
2022. 2. 20. 오후 9:29, bb : 사진
2022. 2. 20. 오후 9:29, bb : 우아한테크세미나에서 리액트쿼리와 상태관리에 대해서 이야기한데요! 신청링크는 2/21(월)까지☞https://forms.gle/Nf27PfYs3cnJt7qh7 입니다
2022. 2. 20. 오후 10:56: 크크님이 들어왔습니다.
2022. 2. 20. 오후 10:56, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 20. 오후 10:59, PAPICO : react-query 를 통해 auth 를 구현해보려고 하는데 궁금증이 있습니다!

1. 일반 API 데이터를 mutation 하고 query 하는 케이스는 많은 것 같은데, 세션 및 권한쪽에서 해당 기술을 사용하는 케이스를 많이 못 찾아서, 혹시 참고할 만한 자료나 링크가 있을까요!!

2. 클라이언트에서 세션을 유지하는 기능을 구현하고 싶은데, 관련 키워드 던져주시면 감사드리겠습니다!
2022. 2. 20. 오후 11:26, 썰~~ : 토큰으로 많이 하죠..?세션을 프론트에서는 유지 못합니다
2022. 2. 20. 오후 11:27, 썰~~ : 백에서 유지하는건 가능한데
2022. 2. 20. 오후 11:27, 파이버 : 일단 리액트쿼리랑 무관한 질문인 거 같긴 해요
2022. 2. 20. 오후 11:42, PAPICO : 아 조금 설명이 미흡했던 것 같습니다!
기존 중앙에서 관리하던 상태를 (user 정보) 를 react query 로 대체 가능한지에 대한 질문이었습니다!

2022년 2월 21일 월요일
2022. 2. 21. 오전 12:22, 애교뿜뿜 어피치 : 다들 거의 대체가 가능할 정도로 연구해서 사용하고 있는 것 같아요. 저는 비동기처리만 리액트쿼리에서 하고 기타 전역 상태 관리는 별도로 합니다.
2022. 2. 21. 오전 12:25, 파이버 : "server state 관리"에 특화된 라이브러리니까, 내 정보를 불러오는 api 결과라면 react-query 를 사용할 만할 것 같고 그렇지 않다면 client state로 두는 게 맞지 않을까 싶어요
2022. 2. 21. 오전 12:29, 화가난다 화가나 그래서 난 화가임 : 혹시, 음악 스트리밍 사이트에서 한 곡 재생하다가 다른 음악 재생하면 재생 내용이 싹 바뀌잖아용? 데이터 관리를 어떻게 하는지 감이 안 오는데.. 도움 받을만한 사이트가 있을까요?
2022. 2. 21. 오전 12:39, PAPICO : 답변 감사합니다! 기존에 해오던 방식이랑 많이 달라서 이렇게 쓰는거 맞나? 에 대한 불안감이 있었는데, 일단 컨셉에 맞춰서 사용해보고 막히는 부분이 있으면 좀 더 구체화해서 질문드리도록 하겠습니다! 감사합니다 :)
2022. 2. 21. 오전 12:59, Joon : 혹시 현업에서 sass는 잘 쓰이나요?!
2022. 2. 21. 오전 1:04, 스타트업개발자 : 저희는 쇼핑몰이랑 웹뷰 둘다 잘 쓰이고 있습니다.
2022. 2. 21. 오전 1:09, Joon : 답변 감사합니다!🙇‍♂️ 그럼 혹시 sass 외에 잘쓰이는 pre processor 있을까요?
+ 쌩 css는 절대 안쓰나요?
2022. 2. 21. 오전 1:10, 최민석 : stylus도 쓰더라구용
2022. 2. 21. 오전 1:11, Joon : 민석님도 stylus 사용해본 경험 있으신가요??
2022. 2. 21. 오전 1:13, 최민석 : 저는 사용해보지는 않았습니당 ㅠㅎ
2022. 2. 21. 오전 1:15, Joon : 아하ㅎㅎ 알려주셔서 감사합니다~
2022. 2. 21. 오전 8:16, 유용태 (teo.yu) : 안녕하세요~ 크크님! 반갑습니다
2022. 2. 21. 오전 8:17, 유용태 (teo.yu) : 저는 sass대신 stylus 사용했었어요~
개인적으로는 좋다고 생각하는데 점유율이 워낙 낮긴하죠
2022. 2. 21. 오전 8:20, 유용태 (teo.yu) : 클라이언트에서 세션 유지를 하고 싶다면 localStorage나 쿠키를 통해서 access_token을 보관하는 방법이 있습니다. 클라에서 세션이나 키를 다루게 되면 콘솔이나 디버거 등에서 키 변경이 가능해서 보안에 취약하다는 점이 있어요
2022. 2. 21. 오전 8:32, 케이티 : 생 CSS 저는 좋아합니다 ^^ 그래도 많이 사용하는곤 sass 입니다 보기도 편하고 특히 nest기능 때문에 많이 사용합니다 곧 생 css에서도 되겠지만
2022. 2. 21. 오전 8:39, 우오 : 현재는 생CSS에서 nest기능을 사용할 수 없나요?! 제가 생CSS를 많이 써보지 않아서 기억이 가물가물합니다 ㅠ
2022. 2. 21. 오전 8:52, 애교뿜뿜 어피치 : 네
2022. 2. 21. 오전 8:56, 우오 : 감사합니다 :)
2022. 2. 21. 오전 9:01, 썰~~ : 오늘부터 프로그래머스 데브매칭 접수 시작하네요
2022. 2. 21. 오전 9:02, 썰~~ : 프론트엔드 취업하시는분들 한번 보시면 좋을거같아요
2022. 2. 21. 오전 9:03, 썰~~ : https://programmers.co.kr/competitions/2165
2022. 2. 21. 오전 9:09, 또리 : 안녕하세요 현업분들 의견이 궁금해서 여쭤봅니다ㅠㅠ 저는 지금 프엔 개발자로 신입 입사해서 이제 막 수습기간이 끝났는데요 현재 업무는 react를 위주로 하지만 이미 구축된 프로젝트여서 운영및 추가개발 정도만 하고있어요. 그런데 제가 개발한 코드를 리액트를 하실줄ㅇ ㅏ는분이 아무도 없어서 기능 테스트만 하고 배포하는식으로 계속 진행중인데 이 회사를 계속 다녀야할지.... 아니면 다른곳으로 이직을 하는게 좋을지 고민입니다..ㅠㅠ
2022. 2. 21. 오전 9:16, 썰~~ : 그회사에서 배울게 없다고 생각하시는건가요
2022. 2. 21. 오전 9:18, 또리 : 업무는 제가 어찌저찌 찾아보면서 해나가는데
2022. 2. 21. 오전 9:18, 또리 : 피드백을 주시는분이 한명도 없어요
2022. 2. 21. 오전 9:18, 또리 : 제가 못하는 부분은 외주 써서 완료 시키고
2022. 2. 21. 오전 9:18, 썰~~ : 문제점은 뭐라고 생각하시나요?
2022. 2. 21. 오전 9:18, 또리 : 회사 내 리액트를 하시는분이 없어요...
2022. 2. 21. 오전 9:18, 또리 : 저는 신입인데
2022. 2. 21. 오전 9:18, 썰~~ : 그게 문제점인가요?
2022. 2. 21. 오전 9:18, 또리 : 가이드라인도 없고
2022. 2. 21. 오전 9:19, 또리 : 있는코드에서 수정만 하는데
2022. 2. 21. 오전 9:19, 썰~~ : 그럼 바라는방향이 가이드라인을 줄수잇는사람인가요
2022. 2. 21. 오전 9:19, 또리 : 프론트앤드팀이 있는곳에
2022. 2. 21. 오전 9:19, 또리 : 가고싶은게 큽니다
2022. 2. 21. 오전 9:19, 또리 : ㅠㅠ
2022. 2. 21. 오전 9:19, 썰~~ : 프론트엔드 팀 있는곳에 가도 각자 개발하는곳도 많아요
2022. 2. 21. 오전 9:19, 썰~~ : 가도 코드리뷰 안해주는곳도 많습니다
2022. 2. 21. 오전 9:19, 썰~~ : 그래도 괜찮나요
2022. 2. 21. 오전 9:19, 또리 : 그래도 뭔가를 질문할수 있는 사람이
2022. 2. 21. 오전 9:20, 또리 : 한명이라도 있었으면 좋겠어요 ㅠㅠ
2022. 2. 21. 오전 9:20, 썰~~ : 여기 질문하시면 되는데요
2022. 2. 21. 오전 9:20, 또리 : 아....하
2022. 2. 21. 오전 9:20, 썰~~ : 솔직히 신입분들이 사수나 다른 개발자 있는 가이드라인 줄수있는 분들 찾는건 이해는 되지만 생각보다 그건 환상같습니다
2022. 2. 21. 오전 9:21, 썰~~ : 잘되어있는곳도 물론 있지만 그 사수라고 해도 또리님이랑 연차 많아야 6개월 차이일수도 있는데
2022. 2. 21. 오전 9:21, 썰~~ : 아니면 반대로 또리님보다 연차 아래일수도 있는거고요
2022. 2. 21. 오전 9:21, 썰~~ : 그럼 또리님이 리뷰해주셔야되는데
2022. 2. 21. 오전 9:21, 썰~~ : 가능하시낙요
2022. 2. 21. 오전 9:21, 썰~~ : 하신가요
2022. 2. 21. 오전 9:22, 쑥스럽게 인사하는 프로도 : 조심스레 의견 드리자면 신입때는 회사 내에서 작은 조언이라도 해주실 수 있는 분이 필요하다고 생각합니다.. 하지만 입사한지 얼마 되지 않아 이직하는 것은 후에 면접에서 분명 질문이 나올 것인지라 이 부분은 잘 생각해두셔야 될 것 같습니다
2022. 2. 21. 오전 9:22, Hola : 그래도 팀 내 혼자이시면 마음이 어렵긴 하겠네요.. 꼭 나보다 잘하지 않아도 같이 고민할 사람이 있고 없고의 차이는 크다 생각해서
2022. 2. 21. 오전 9:22, 썰~~ : 질문이야 나올수는 있지만 그런 가이드라인을 주는 회사는 생각보다 많이 없어서요
2022. 2. 21. 오전 9:23, 썰~~ : 그렇다고 그 질문에 대한 대답이 여기 질문하는거보다 양질의 답을 얻을수 있냐도 미지수라고 생각해요
2022. 2. 21. 오전 9:23, 썰~~ : 올라님 말씀대로 공감해줄수있고 같이 공감해줄수 있는 사람이 필요한거면 굳이 가이드해주는 윗사람이 아니어도 되는부분이라 ㅠㅠ
2022. 2. 21. 오전 9:23, 음악듣는 어피치 : 저도 이 의견에 동의합니다. 또리님은 꼭 사수가 아닐지라도 동료가 필요한것처럼 보여요..
2022. 2. 21. 오전 9:23, 썰~~ : 맞아요 동료가 필요하다면 윗사람이 아니어도 되는부분인거잖아요
2022. 2. 21. 오전 9:25, 파이버 : 저라면 이직했을 거 같아요. 다만 얼마 안 다니고 이직을 하게 된 다는 부분이 나중에 불리하게 적용되지 않기 위해 명분이 충분해야겠지만요
2022. 2. 21. 오전 9:25, 썰~~ : 저는 1년은 버티고 이직을 추천하긴 합니다 1년기간동안 더 준비하셔서
2022. 2. 21. 오전 9:25, 썰~~ : 더 큰 회사로 가시는편을 추천드립니다
2022. 2. 21. 오전 9:25, j : 음 제가 사수없이 버티고..이제 이직을 하긴 하는데
2022. 2. 21. 오전 9:26, j : 전 1년 버티거 이직하시는거 추천드려요
2022. 2. 21. 오전 9:26, 또리 : 사실 동료가 필요한것이 맞는거같네요
2022. 2. 21. 오전 9:26, 음악듣는 어피치 : 혼자 해야하는 회사가 많다고 하지만 그렇다고 모든걸 혼자하면서 +동시에 외주로 해결하는 회사는 신입으로 겪기에 힘든 상황같아 보이네요ㅠㅠ.. 

선택은 또리님이 하는거지만 프론트엔드 팀이 있는 혹은 더 많은 개발자가 있는 팀으로 이직 고려하시는게 맞는거 같네요.
2022. 2. 21. 오전 9:26, j : 사수가 모든걸 해결해주진 않아요..
2022. 2. 21. 오전 9:26, 썰~~ : 지금 당장 힘든거 이해합니다 저도 사수없이 했었고 저도 같은 고민을 했었는데
돌아보니 그게 저한테 더 큰 도움이 되었던거 같아요
2022. 2. 21. 오전 9:27, 썰~~ : 그래서 1년간 그회사에서 배울수잇는거 다배우시고
2022. 2. 21. 오전 9:27, 썰~~ : 준비 철저히 하셔서 더 큰회사로 도약하시는걸 추천드립니다
2022. 2. 21. 오전 9:27, j : 저도 이거에 공감합니다
2022. 2. 21. 오전 9:27, 또리 : 넵... 의견주셔서 다들 감사합니다!! 1년동안 업무해나아가면서 포트폴리오 정리해서 이직준비 해야겠네요..! 이 시간동안 잃는것보단 얻는게 많겠죠 열심히 해보겠습니다...ㅎㅎㅎ
2022. 2. 21. 오전 9:27, j : 리액트로 해보고싶은거 다 해보시고
2022. 2. 21. 오전 9:28, j : 공부하고싶은거 다 해보시고
2022. 2. 21. 오전 9:28, 썰~~ : 프로젝트도 많이 해보시고 화이팅입니다
2022. 2. 21. 오전 9:28, j : 이직하세요
2022. 2. 21. 오전 9:28, 썰~~ : 한방에 네카라쿠배 가시면 연봉도 6000이상 되실수도있으니 준비 철저히 하시면 됩니다
2022. 2. 21. 오전 9:29, j : 맞아요!
2022. 2. 21. 오전 9:32, 또리 : 넵 감사합니다!!ㅎㅎㅎㅎ
2022. 2. 21. 오전 9:41, TriplexLab : @또리 
음… 저의 과거 경험이 비슷해 보이시네요.. 
저는 약 3~4년을 혼자 사수 없고, 동료도 없는 에이전시에서 퍼블리셔로 일했습니다. 그 당시때는 저도 이직하고 싶다는 생각을 많이 했었는데. 코로나때문에 바로 취업하기 힘들것 같아서 1년만 버티자, 1년만 버티자 이런식으로 다녔던 기억이 나내요…
결론은 버티면 얻어가시는게 많습니다. 

그리고 제가 퇴사한 명분은 팀프로젝트를 할수 있는 곳으로 가고 싶다는 거였고,
자체서비스가 있는 곳으로 가고 싶다는 거였고, 우물 안 개구리가 되고 싶지 않다는거 였어요~ 
이점을 참고 하시고 1년 정도만 다니시고 이직 하시는걸 추천 합니다~
2022. 2. 21. 오전 9:56, 또리 : 답변 감사합니다!! 저도 사실 퍼블리셔일을 하다가 프론트엔드로 전향한것이였는데 직전 직장에서도 사수 없이 일하다보니 어려움이 많았었어요..... 열심히 준비한 후에 온 직장인데도 불구하고 전과 같은 상황이 되다보니 고민이 더 많아지는것은 사실이였지만 또 되돌아보니 저도 이전 직장에 근무할때 혼자 하면서 또 많이 경험해본것도 맞는 말이네요! 너무 안좋은부분만 생각하지않고 꾹참고 버텨보자 생각하며 버텨보겠습니다 ㅎㅎㅎ
2022. 2. 21. 오전 10:18, 썰~~ : 버티면서도 다음회사를 위한 준비는 꼭하세요!
2022. 2. 21. 오전 10:23, 리린이 : 혼자 하는거 정말 외롭고 힘듭니다. 이겨낼 수 있는 방법들을 꼭 강구하셔야해요. 아니면 번아웃이나 우울증 정말 쉽게 찾아와요. 경험담입니다. 힘 내시라는 말로 위로가 안되겠지만 .. 잘 이겨내셨으면 좋겠습니다. 응원할게요
2022. 2. 21. 오전 10:23, Hola : 람다랑 api gateway를 활용해서 간단한 api정의를 했는데요, 해당 api에서 악성 요청을 막는 방법이 있을까요? 

예를들면 초당 몇번 이상 호출을 제한한다던지 하는 방법이 있을까 하여 여쭤봅니다!
2022. 2. 21. 오전 10:29, TriplexLab : 아ㅎㅎ 지금은 과거 이야기 입니다~ 지금은 쉬면서 프론트로 이직 준비 하고 있어요ㅎㅎ 감사합니다 🙏
맞아요 저는 이때 번아웃이 제대로 왔었습니다ㅠ
2022. 2. 21. 오전 10:30, 리린이 : 아~ 원 질문자인 또리님께 말씀드린다는것이..
2022. 2. 21. 오전 10:30, 리린이 : 그래도 트리플렉스님도 이직준비 잘 하시길 바랄게요 ㅎㅎ
2022. 2. 21. 오전 10:31, 썰~~ : 프론트에서는 안될거같고 ip횟수별로 제한둬야될거같긴해요
2022. 2. 21. 오전 10:31, TriplexLab : 네네ㅎ 감사합니다 🙏👍
2022. 2. 21. 오전 10:31, 썰~~ : 이분은 그때 스님에게 한번 문의해보세요
2022. 2. 21. 오전 10:31, 썰~~ : 그분이 잘 아실거같아요
2022. 2. 21. 오전 11:31, Hola : 네네 찾아보았는데 딱히 없는것 같아가지구… 좋은 방법을 찾게되면 공유 드리겠습니다 감사합니다ㅎㅎ
2022. 2. 21. 오전 11:48, 또리 : 넵  응원감사드립니다!!
2022. 2. 21. 오후 1:08, 화가난다 화가나 그래서 난 화가임 : 혹시
2022. 2. 21. 오후 1:08, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 21. 오후 1:08, 화가난다 화가나 그래서 난 화가임 : 이거 지금 다들 사용되시나용?
2022. 2. 21. 오후 1:09, 화가난다 화가나 그래서 난 화가임 : 오.. 뭐야
2022. 2. 21. 오후 1:09, 화가난다 화가나 그래서 난 화가임 : 다시 된다
2022. 2. 21. 오후 1:09, 우오 : 잘됩니다!
2022. 2. 21. 오후 1:09, 화가난다 화가나 그래서 난 화가임 : 방금 우측하단에 뭐라고 메시지 떴는데, 못 읽었다가
2022. 2. 21. 오후 1:09, 화가난다 화가나 그래서 난 화가임 : 저 그림이랑 뭐가 떴는데 못 읽어서 무시했다가 리덕스 카테고리가 안 보이길래
2022. 2. 21. 오후 1:09, 화가난다 화가나 그래서 난 화가임 : 뭐지 뭐지 했는데 다시 보이네용
2022. 2. 21. 오후 1:09, 화가난다 화가나 그래서 난 화가임 : 감사함다
2022. 2. 21. 오후 1:12, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 21. 오후 1:12, 화가난다 화가나 그래서 난 화가임 : 이게 계속 뜨네용 ㅋㅋㅋ
2022. 2. 21. 오후 1:12, 화가난다 화가나 그래서 난 화가임 : 제 컴퓨터 뭔가 이상기운이 감지되네용 ㅋㅋ
2022. 2. 21. 오후 1:24, 진현 : 리덕스 툴처럼 유용한 크롬 확장프로그램 있으면 추천해주세요~ㅎㅎ
2022. 2. 21. 오후 1:30, 부끄러운 어피치 : Octotree 사용하시나요??
2022. 2. 21. 오후 1:31, 혜심 : 샵검색 : #builtwith
2022. 2. 21. 오후 1:31, 부끄러운 어피치 : 깃헙 레포지토리를 폴더화시켜주는 확장프로그램인데
2022. 2. 21. 오후 1:31, 부끄러운 어피치 : Vscode처럼 왼쪽에 배치해서 보는 프로그램이에요 ㅎㅎ
2022. 2. 21. 오후 1:32, 부끄러운 어피치 : 말이 이상하네요 잠시만요 ㅋㅋ
2022. 2. 21. 오후 1:32, 혜심 : 샵검색 : #leethub
2022. 2. 21. 오후 1:32, 부끄러운 어피치 : https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc
2022. 2. 21. 오후 1:33, 부끄러운 어피치 : 이거 사용 안해보신분들 사용해보세요~! 굉장히 편합니다
2022. 2. 21. 오후 1:33, TriplexLab : ㅋㅋㅋ 아 별게 다 있네요
2022. 2. 21. 오후 1:35, 부끄러운 어피치 : 그리고 네이버 영한사전도 확장프로그램에 있는데, 만약 모르는 영단어에 마우스 더블클릭하면 바로바로 단어 확인할수있어요
2022. 2. 21. 오후 1:35, 부끄러운 어피치 : https://chrome.google.com/webstore/detail/%EB%84%A4%EC%9D%B4%EB%B2%84-%EC%98%81%EC%96%B4%EC%82%AC%EC%A0%84-naver-english-di/jfibpeiddefellcfgnijpcpddoimbdij?hl=ko
2022. 2. 21. 오후 1:36, 부끄러운 어피치 : 영어로된 개발문서 읽을때마다 크게 도움돼요 ㅎㅎ 제가 워낙 영어를 못해서 ..
2022. 2. 21. 오후 1:43, 썰~~ : 영어로된 개발문서는.. 구글이 다 번역..
2022. 2. 21. 오후 1:46, 부끄러운 어피치 : 저는 개인적으로 구글 브라우저에서 지원하는 한글번역이랑 원본이랑 번갈아가면서 보는데 원본(영문)일때 모르는부분만 볼때도 있고 그래요~
2022. 2. 21. 오후 1:47, 썰~~ : 맞아요 저도 그래요
2022. 2. 21. 오후 1:47, 썰~~ : 일단 한글로 읽고
2022. 2. 21. 오후 1:47, 썰~~ : 영어로 다시읽고
2022. 2. 21. 오후 1:47, 부끄러운 어피치 : 가끔 잘못된 영단어 보여줄때도 있다보니
2022. 2. 21. 오후 1:47, 부끄러운 어피치 : 사전에서 찾는의미에서 비로소 이해될때도 있고 그러니까요 ㅎㅎ
2022. 2. 21. 오후 2:01, 진현 : 오..이거 짱편하네요ㅠㅠ 감사합니다
2022. 2. 21. 오후 2:02, 부끄러운 어피치 : 진현님도 좋은 확장 프로프램있으면 언제든지 추천해주세요!! ㅋㅋ
2022. 2. 21. 오후 2:02, 부끄러운 어피치 : 혹시 pr할 일 있다면 진가를 발휘할수도 있을거라 조심스레 생각해봅니다 ㅎㅎ
2022. 2. 21. 오후 2:03, 진현 : 사진
2022. 2. 21. 오후 2:03, j : 와 이거 진짜 저한테 필요했는데
2022. 2. 21. 오후 2:03, 진현 : 네이버는.. 제이쿼리를 사용하는군요..!??
2022. 2. 21. 오후 2:04, 진현 : https://chrome.google.com/webstore/detail/responsive-viewer/inmopeiepgfljkpkidclfgbgbmfcennb 

저는 반응형 모아서 편하게 볼 수 있는 확장프로그램 추천드려요 ㅎㅎㅎ..!!
2022. 2. 21. 오후 2:04, Vintz : 와..여러분 정말 효율적으로 개발하시는군요
2022. 2. 21. 오후 2:05, Vintz : 추천해주신 분들 감사드려요!!
2022. 2. 21. 오후 2:06, j : 좋은 프로그램들 감사해요!
2022. 2. 21. 오후 2:07, 진현 : 사진
2022. 2. 21. 오후 2:08, 진현 : https://chrome.google.com/webstore/detail/grid-ruler/joadogiaiabhmggdifljlpkclnpfncmj?utm_source=chrome-ntp-icon
2022. 2. 21. 오후 2:08, 진현 : 룰러 프로그램 추천드려용~!
2022. 2. 21. 오후 2:12, 결과보단 과정을 / React,JS : 우워… 추천해주신 확장 프로그램들 전부 좋네요 ㅎㅎ
2022. 2. 21. 오후 2:22, 부끄러운 어피치 : 감사합니다 !! 덕분에 편하게 개발할 수 있을것 같아요 ㅎㅎ 다른 분들도 잘 사용하고 있는 데브툴즈 있으면 추천부탁드립니다~!!
2022. 2. 21. 오후 2:23, 결과보단 과정을 / React,JS : 저도 너무 감사 드립니다 ㅎㅎ
2022. 2. 21. 오후 2:29, 보초개발 : 우왕 추천 감사합니다. 꿀팁이네요~
2022. 2. 21. 오후 2:35, 스타트업개발자 : 소스트리로 재배치를 하려고하는데,,, 파일이 누락되는 경우가 발생하는데 혹시 원인이 뭘까요,,,?
2022. 2. 21. 오후 2:40, 프론돌이 : octotree가 나와서 말인데...
2022. 2. 21. 오후 2:40, 프론돌이 : https://github1s.com/facebook/react
2022. 2. 21. 오후 2:40, 프론돌이 : github 뒤에 1s만 붙이면, vscode 처럼 나옵니다!
2022. 2. 21. 오후 2:40, 프론돌이 : 세상엔 능력자가 많은듯...
2022. 2. 21. 오후 2:43, 레몬사이다맛젤리 : 헉 넘신기해요
2022. 2. 21. 오후 2:49, 생못미 : github에서 . <- 이거 눌러도 웹 브라우저에서 vscode가 뜹니다
2022. 2. 21. 오후 2:50, 프론돌이 : 오. 이건 몰랐는데 감사합니다!
2022. 2. 21. 오후 2:51, TriplexLab : 와~ 그냥 url에 1s만 붙이니깐 바로 나오네요ㅎㅎ
2022. 2. 21. 오후 3:09, 박성원 : 테오 디스코드에 wordle챌린지를 진행하고있습니다! 아무나 오셔서 리뷰해주시면 되고 혹시 또 같이 프로젝트를 진행하신다면 그 프로젝트에 리뷰달러 가겠습니다!

https://github.com/pksung1/wordle/pull/2

관심있으신 분들은 디코통해 같이 참여해요~
2022. 2. 21. 오후 3:10, 박성원 : 만리부! (많은 리뷰 부탁!)
2022. 2. 21. 오후 4:58, one_dev : 삭제된 메시지입니다. 
2022. 2. 21. 오후 4:59, one_dev : 사진
2022. 2. 21. 오후 4:59, one_dev : 리액트 컴포넌트 관련 질문이 있습니다. 
이미지와 같이 등록 폼에 input 3가지가 있는데 
 이 input을 컴포넌트화 시키는게 좋을지 궁금해서 질문드립니다.
2022. 2. 21. 오후 5:00, one_dev : styled component 는 사용하고있지 않습니다
2022. 2. 21. 오후 5:05, 비옷입은 튜브 : 만약 저라면 hooks로 만들 것 같아욥 : )
2022. 2. 21. 오후 5:05, 화가난다 화가나 그래서 난 화가임 : 흠.. 여러 방법 다 시도해봤는데요
2022. 2. 21. 오후 5:05, 화가난다 화가나 그래서 난 화가임 : 혹시...
2022. 2. 21. 오후 5:05, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 21. 오후 5:05, 화가난다 화가나 그래서 난 화가임 : timer가 속한 블록이 다르기 때문에 발생한 문제인데,
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : 저 타이머 함수 종료할 기막힌 방법이 뭐 없을까용? 블록이 이리저리 만져봤는데
2022. 2. 21. 오후 5:06, 성석민 : let time머를 if문 밖에 선안하면 될꺼같아요 !!
2022. 2. 21. 오후 5:06, 성석민 : let timer;
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : 아
2022. 2. 21. 오후 5:06, 성석민 : if문 안에서 timer = setInterval …
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : 그것도
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : 해봤는데
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : timer가 undefined가
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : 되어서
2022. 2. 21. 오후 5:06, 화가난다 화가나 그래서 난 화가임 : 그 나름 대로 에러가 또 발생하더라고용
2022. 2. 21. 오후 5:07, 화가난다 화가나 그래서 난 화가임 : 넹 지금 다시 해봤는데, undefined된 타이머를 clearInterval(undefined)가 되어서
2022. 2. 21. 오후 5:07, 화가난다 화가나 그래서 난 화가임 : 타이머 안 꺼져용 ㅠ
2022. 2. 21. 오후 5:08, 성석민 : 분기를 하나 더 하면요 !?

if(timer !== undefined) clearInterval…
2022. 2. 21. 오후 5:08, 성석민 : 안되려나 ,,
2022. 2. 21. 오후 5:09, 화가난다 화가나 그래서 난 화가임 : 잠깐만요
2022. 2. 21. 오후 5:09, 화가난다 화가나 그래서 난 화가임 : 시도해볼게용
2022. 2. 21. 오후 5:10, one_dev : 괜찮으시다면 예시를 들어주실수 있나요 ??
2022. 2. 21. 오후 5:12, 화가난다 화가나 그래서 난 화가임 : 더 고민해보고, 제가 알게되면 공유하겠습니다 ㅠㅠ
2022. 2. 21. 오후 5:12, 결과보단 과정을 / React,JS : 해당 코드가 사용되는 장소가 여러곳이라면 저 같은 경우 ref안에 저장해두고 초기화를 사용합니다.

 timeRef.current = setInterval(() => setTimer(c => c + 1), 100);

요런 식으로
2022. 2. 21. 오후 5:13, 결과보단 과정을 / React,JS : 그럼 scope 관계 없이 사용 가능해요
2022. 2. 21. 오후 5:15, 화가난다 화가나 그래서 난 화가임 : 한번
2022. 2. 21. 오후 5:15, 화가난다 화가나 그래서 난 화가임 : 시도해보겠습니다
2022. 2. 21. 오후 5:16, 성석민 : 선생님들 !! 리액트 컴포넌트 설계가 너무 어렵습니다 .. 
도움될만한 책이나 블로그 있으면 부탁드려도 될까요 !?
(- -)(_ _)
2022. 2. 21. 오후 5:22, 비옷입은 튜브 : https://react.vlpt.us/basic/21-custom-hook.html
2022. 2. 21. 오후 5:23, one_dev : 방금 이내용 확인했습니다 !! 
 감사합니다
2022. 2. 21. 오후 5:30, 떨고있는 어피치 : 혹시 서비스에 들어온 유저들의 캐시를 프론트엔드 개발자가 한 번만 고의적으로 다 삭제 할 수 있나요? ㅎㅎ

context
디자이너가 다른 이미지를 같은 파일명으로 덮어쓰기를 함
일부 유저는 바뀐 이미지
일부 유저는 기존 이미지
가 보이는 상황입니ㅏㄷ.
2022. 2. 21. 오후 5:33, 파이버 : 어떤 거 써서 이미지 호스팅하셨어요?
2022. 2. 21. 오후 5:34, 파이버 : 살짝 첨언하면 ref 는 리액트에서 "굉장히 예외적인" 약간 그런 느낌이라
2022. 2. 21. 오후 5:34, 떨고있는 어피치 : s3에 이미지 올리고
클라우드프론트 사용중입니당
2022. 2. 21. 오후 5:35, 파이버 : 인터벌 사용하실 땐

https://overreacted.io/making-setinterval-declarative-with-react-hooks/ 

이거 한번 읽어보시면 도움될거같아요
2022. 2. 21. 오후 5:35, 프론돌이 : s3 이미지 올리신거면, s3 자체 캐시 날려주시면 될 것 같은데
2022. 2. 21. 오후 5:35, 파이버 : 아브라모브님이 진짜 훅 기깔나게 만들어주셨더라고요
2022. 2. 21. 오후 5:36, 프론돌이 : https://minholee93.tistory.com/entry/AWS-CloudFront-Cache-삭제하기
2022. 2. 21. 오후 5:36, 파이버 : 클라우드프론트 CDN 캐시 날려주시면 될 거 같긴 해요 create invalidation 하셔서
2022. 2. 21. 오후 5:37, 진현 : cloudfront 캐시 무효화 해보세용
2022. 2. 21. 오후 5:38, 떨고있는 어피치 : 아 ㅎㅎ 여기서 날리면 되겠군요!
감사합니당! ㅎㅎㅎ
2022. 2. 21. 오후 5:38, 파이버 : 아 여기 번역본도 있네요!

https://velog.io/@jakeseo_me/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%9B%85%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-setInterval-%EC%82%AC%EC%9A%A9-%EC%8B%9C%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90
2022. 2. 21. 오후 5:39, 엄지척 제이지 : setTimeout 쓰시는건 어떨까요
function f() {
  if (a.musicId === b.musicId) {
    // do something
    setTimeout(f, 1000);
  }
}
f();
2022. 2. 21. 오후 6:01, 결과보단 과정을 / React,JS : 구체적으로 어떤 의미인가요? 정말 궁금해서 여쭤봐요.
저는 주로 three.js를 많이 사용하는데, animation을 사용 할때, websocket으로 데이터를 주고 받으면 렌더링 없이 표현하기 위해 ref를 사용하거든요. 
리액트에서 ref가 말씀하신 느낌이라는걸 잘 모르겠어서 질문 드려요
2022. 2. 21. 오후 6:05, 화가난다 화가나 그래서 난 화가임 : 제가 setInterver을
2022. 2. 21. 오후 6:05, 화가난다 화가나 그래서 난 화가임 : 사용해야만해서용 ㅠㅠ
2022. 2. 21. 오후 6:05, 화가난다 화가나 그래서 난 화가임 : 덕분에 해결했어용 ㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠㅠ
2022. 2. 21. 오후 6:05, 화가난다 화가나 그래서 난 화가임 : 그거 아세용? 저 지금 하고 있는 작업에서 문제가 두 번 발생했는데, 두 번 다 ref로 해결됐네용
2022. 2. 21. 오후 6:05, 화가난다 화가나 그래서 난 화가임 : 코드는 이렇게됐습니다!
2022. 2. 21. 오후 6:05, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 21. 오후 6:06, 화가난다 화가나 그래서 난 화가임 : 감사합니다!
2022. 2. 21. 오후 6:06, 화가난다 화가나 그래서 난 화가임 : 한 번 읽어보겠습니다! 저도 이제 영어 읽기 시작했습니다!! ㅋㅋ
2022. 2. 21. 오후 6:06, 파이버 : 사진
2022. 2. 21. 오후 6:08, 결과보단 과정을 / React,JS : 아 막줄이 핵심이군요 ㅎㅎ
2022. 2. 21. 오후 6:08, 파이버 : 요거 말한거였어요! 기본적으로 리액트의 철학은 상태 변경과 상태 변경에 따라 무조건 다시 그리는 거인데 ref는 그거에 반하니까, 안 쓸 수 있으면 최대한 쓰지 말고 / 써야 한다면 잘 추상화해서 써야 한다고 알고 있어서요
2022. 2. 21. 오후 6:09, 화가난다 화가나 그래서 난 화가임 : 미디어의 재생을 관리할 때 쓰는 저는
2022. 2. 21. 오후 6:09, 화가난다 화가나 그래서 난 화가임 : 사용해야할 때에 포함되는 거 맞나용?
2022. 2. 21. 오후 6:09, 화가난다 화가나 그래서 난 화가임 : 휴..
2022. 2. 21. 오후 6:09, 결과보단 과정을 / React,JS : 넵, 감사합니다 ㅎㅎ
2022. 2. 21. 오후 6:46, 홀리몰리 : CSS Module을 사용하실때 어떤 컨벤션을 사용하시나요?  저는 보통 BEM 방식을 사용해서, 아래처럼 사용합니다.

.Header {
  height: 32px;

  &__link {
    padding: 16px;

    &--dark {
      background-color: black;
    }
  }
}

그런데, 요즘 드는 생각이 BEM을 극복하기 위해 탄생한게, CSS Module인데 같이 쓰는게 맞나 싶네요.

그래서 BEM이 아닌 CSS Module을 쓸 때 유명한 컨벤션 기법? 같은게 있거나 사용하시는게 있는지 궁금합니다!.
2022. 2. 21. 오후 7:45, 피자 먹다 자는 무지 : 해시코드가 자동으로 붙기 때문에 복잡하게 작업하지 않아요
코드 가독성과 간결함을 최우선으로 두는 편입니다
2022. 2. 21. 오후 7:45, 피자 먹다 자는 무지 : 컨벤션 기법같은건 모르겠네요
2022. 2. 21. 오후 8:06: 전연규님이 들어왔습니다.
2022. 2. 21. 오후 8:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 21. 오후 8:11: 프론트마스터님이 들어왔습니다.
2022. 2. 21. 오후 8:11, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 21. 오후 8:19, 유용태 (teo.yu) : 안녕하세요 프론트마스터님 반갑습니다 :)
2022. 2. 21. 오후 8:20, 유용태 (teo.yu) : 전여규님도 반갑습니다 어서오세요 :)
2022. 2. 21. 오후 8:21, 프론트마스터 : 안녕하세요!! 잘 부탁드립니다!!
2022. 2. 21. 오후 8:26, 전연규 : 안녕하세요! 전여규라고합니다! 잘부탁드립니다~
2022. 2. 21. 오후 8:27, 진현 : 안녕하세요~~!!!!
2022. 2. 21. 오후 8:27: 좌제님이 들어왔습니다.
2022. 2. 21. 오후 8:27, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 21. 오후 8:41, 유용태 (teo.yu) : 안녕하세요 좌제님~ 반갑습니다 :) 어서오세요
2022. 2. 21. 오후 8:42, 유용태 (teo.yu) : 여기는 다른 개발자들에게 궁금한 점을 서로 물어보고 답변을 하는 공간입니다. 뭐든 편하게 글 남겨주세요
2022. 2. 21. 오후 8:42, 유용태 (teo.yu) : 좋은 자료가 있다면 공유 부탁드립니다. 여기서 나온 질문이나 좋은 자료들은 디스코드에 아카이브를 하고 있어요
2022. 2. 21. 오후 8:42, 유용태 (teo.yu) : 디스코드에서는 스프린트나 고민상담 면접스터디 등 여러가지 이벤트등을 시도해보고 있습니다.
2022. 2. 21. 오후 8:43, 유용태 (teo.yu) : 혹시 혼자라서 하기 힘들었던 것들이 있다면 편하게 제안해주세요~ 온라인에서 함께 할 수 있는 편안한 커뮤니티가 되었으면 좋겠습니다 :)
2022. 2. 21. 오후 8:46: 이몬님이 들어왔습니다.
2022. 2. 21. 오후 8:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 21. 오후 8:55, 유용태 (teo.yu) : 안녕하세요~ 이몬님~~ 반갑습니다!
2022. 2. 21. 오후 8:57, 이몬 : 안녕하세요! 이제 막 프론트엔드 인턴 마치고 다시 무직으로 돌아간 취준생입니다! 반가워요!
2022. 2. 21. 오후 8:58, 유용태 (teo.yu) : 반갑습니다! 이제 경험을 쌓고 더 좋은데를 가려나봐요~~ 화이팅입니다
2022. 2. 21. 오후 8:59, 유용태 (teo.yu) : 궁금한게 있으면 뭐든 편하게 물어보세요 :) 여기는 다른 사람들은 어떻게 하는지 궁금한 것들을 물어보는 공간입니다~ 현업에 대한 이야기 취준에 대한 이야기 모두모두 환영합니다
2022. 2. 21. 오후 10:13, 최민석 : Jotai 사용해보신분 있으신가요? 요즘 상태관리는 이걸 쓴다는데 Recoil과 비슷무리해보이네요
2022. 2. 21. 오후 10:19: 불나게 일하는 네오님이 들어왔습니다.
2022. 2. 21. 오후 10:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 21. 오후 10:20, 유용태 (teo.yu) : 불나게 일하는 네오님! 반갑습니다 ;) 어서오세요~
2022. 2. 21. 오후 10:50, 조조 : 선배님들 질문이 하나 있습니다! 리액트로 프론트, 백 1명씩 하는 작은 토이 프로젝트를 진행하려하는데, 이런 작은 사이즈의 프로젝트에는 atomic 같은 디자인 패턴보다는 presentational 패턴이 나을까요?
2022. 2. 21. 오후 10:51: 개발짜님이 나갔습니다.
2022. 2. 21. 오후 10:52, 불나게 일하는 네오 : 넵!! 반갑습니다 🙇🏻‍♀️
2022. 2. 21. 오후 10:52, 최민석 : 목적이 공부라면 첫 번째도 재밌을 것 같아요 ㅋㅎㅎ
2022. 2. 21. 오후 10:53, 유용태 (teo.yu) : 맞아요 사이드 프로젝트라면 안해본걸 추천드립니다
2022. 2. 21. 오후 10:53, 박성원 : 공부라면 자유롭게 해보고싶은걸로? 하는게 좋을것같아요
2022. 2. 21. 오후 10:53, 유용태 (teo.yu) : 어차피 뭐가 더 좋다 이런게 아니라서 경험치를 쌓는게 좋은거 같아요 ㅋ
2022. 2. 21. 오후 11:18, 조조 : 아하 근데 둘다 안해봐서요...ㅋㅋㅋ
2022. 2. 21. 오후 11:19, 조조 : 답변 감사합니다!
2022. 2. 21. 오후 11:19, arthur : 그럼 Atomic 추천드립니다.
2022. 2. 21. 오후 11:19, 조조 : 이유가 있을까요??
2022. 2. 21. 오후 11:25, arthur : 취향이긴한데 저는 atomic이 다 좋터라고요. Presentational은 딱 2가지로 분리하게 되고 atomic은 좀더 세분화할 수 있어서 좀 더 고민해볼 거리가 많을 수 있을 것 같기도 해서요
2022. 2. 21. 오후 11:27, 파이버 : presentational pattern 리액트에서는 이제 별로 권장 안 되지 않나요??
2022. 2. 21. 오후 11:29, 조조 : 어차피 둘다 처음이라 고민은 많이 해보겠지만 더 끌리네요
2022. 2. 21. 오후 11:29, 조조 : 그런가요?? 오호..
2022. 2. 21. 오후 11:30, 파이버 : https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0 댄 아브라모브 피셜 이 방식 추천하지 않는다고 하더라고요

저도 아토믹 한표요!
2022. 2. 21. 오후 11:30, 파이버 : 훅 나오면서 그렇게 구분할 필요가 없어졌대요
2022. 2. 21. 오후 11:33, 유용태 (teo.yu) : 테오의 구글 스프린트 4기의 멋진 작품을 공개합니다! npm에 react-component 라이브러리를 도전한 4기의 작품에 관심을 가져주세요 :) 한번 들어와서 감상 부탁드려요!

https://www.npmjs.com/package/react-season-component
2022. 2. 21. 오후 11:33, 유용태 (teo.yu) : 톡게시판 '공지': 테오의 구글 스프린트 4기의 멋진 작품을 공개합니다! npm에 react-component 라이브러리를 도전한 4기의 작품에 관심을 가져주세요 :) 한번 들어와서 감상 부탁드려요!

https://www.npmjs.com/package/react-season-component
2022. 2. 21. 오후 11:34, 유용태 (teo.yu) : 공홈도 있답니다! 바쁘신 분은 공홈부터 들어와 보세요!! https://ppo-f-man.github.io/react-season-component-web/
2022. 2. 21. 오후 11:34, 유용태 (teo.yu) : 라이브러리를 사용해본 후기를 디스코드에 남겨주시면 선찬순 1명에게 치킨 기프티콘을 보내드리겠습니다! :)
2022. 2. 21. 오후 11:35, 조조 : 감사합니다!! 결정했어요 ㅎㅎ
2022. 2. 21. 오후 11:35, 신난 어피치 : 오...
2022. 2. 21. 오후 11:35, 신난 어피치 : 마! 이게 css다 하는 느낌이네여
2022. 2. 21. 오후 11:40, 이엘로 : 너무 이뻐요! 홈페이지까지 완전 잘 만드셨네요
2022. 2. 21. 오후 11:41, Vintz : 헐..이걸 어떻게 그 짧은 기간에 해내신거죠
2022. 2. 21. 오후 11:43, 해달 : 와 너무예뻐요!!! 어떻게 이런생각을..!! 4기분들 대단하십니다.. 박수 👏🏻👏🏻👏🏻
2022. 2. 21. 오후 11:43, 해달 : 사진
2022. 2. 21. 오후 11:43, 해달 : 공홈 구경하고있는데
2022. 2. 21. 오후 11:43, 해달 : 시즌부분에 타입 눌러도 안바뀌는건 아직인건가요..!?
2022. 2. 21. 오후 11:50, 0_0 : 보고 싶은데 모바일론 안 봐지군요ㅠㅠ
2022. 2. 21. 오후 11:51, j : 와..다들 아이디어들이..대단스하네요

2022년 2월 22일 화요일
2022. 2. 22. 오전 12:26, 박성원 : 1주일만에 나오는 결과물 퀄리티가 맞나요?? 진짜 대박 ㄷㄷ
2022. 2. 22. 오전 12:26, 박성원 : 제 wordle에 잘 쓰겠습니다 ㅎ
2022. 2. 22. 오전 12:29, 설아아빠 : 우와 이쁘네요! 결과물이 계속 발전하는것 같아요! ㅎㅎ
2022. 2. 22. 오전 12:29, 우오 : 대박...
2022. 2. 22. 오전 12:29, 우오 : 적용할 수 있는 부분을 찾아봐야겠네요!
2022. 2. 22. 오전 12:29, 웹린이 : 저게 1주일만에 ㄷㄷ!
멋집니다!
2022. 2. 22. 오전 12:32, 웹린이 : Weather 컴포넌트 비오는게 진짜 예쁘네요 ㅎㅎ
2022. 2. 22. 오전 12:32, 유용태 (teo.yu) : 저도요!
2022. 2. 22. 오전 12:39, 댄식 : 수정되었습니다~!
2022. 2. 22. 오전 8:56, 유용태 (teo.yu) : 구글 스프린트 5기 3/2(수) ~ 3/7(월) 모집 합니다! 5일간 다른 개발자와 디자이너와의 협업을 통해 아이디어를 한번 구현해 볼 열정넘치는 분들을 찾아봅니다! 많은 신청 부탁드려요 :)

https://docs.google.com/spreadsheets/d/1ZTGr6fFBANVlodjhz3lIsvdL1hC1HyCSoagqnqTf5MQ/edit#gid=0
2022. 2. 22. 오전 9:10, 여의도개발 : 신청서에 컬럼명이 없습니당...
2022. 2. 22. 오전 9:10, 결과보단 과정을 / React,JS : 와… 디자인 너무 예쁘네요
2022. 2. 22. 오전 9:11, 유용태 (teo.yu) : 앜... 금방 복구 할게요 ㅠㅠ
2022. 2. 22. 오전 9:15, 유용태 (teo.yu) : 복구 했어요
2022. 2. 22. 오전 9:19, 나정 : 헉 벌써다찼네요..
2022. 2. 22. 오전 9:21, 유용태 (teo.yu) : !
2022. 2. 22. 오전 9:21, j : 와..빠르다..
2022. 2. 22. 오전 9:21, j : 전 이사하고..참여하는걸류..
2022. 2. 22. 오전 9:23, 우오 : 짱빠르네유...
2022. 2. 22. 오전 9:26, 유용태 (teo.yu) : 하단에 6기도 미리 등록해두시면 반영해볼게요... 너무너무 많은 관심 감사합니다 :)
2022. 2. 22. 오전 10:11, 남대영 : 6기 바로 참여신청했습니다!!
2022. 2. 22. 오전 10:13, 옥수수 수염차 : 와우 벌써 다칫나요
2022. 2. 22. 오전 10:14, 단테 : 인기가 대단하군요
2022. 2. 22. 오전 10:14: 단테님이 나갔습니다.
2022. 2. 22. 오전 10:15: 단테님이 들어왔습니다.
2022. 2. 22. 오전 10:15, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오전 10:16, 화가난다 화가나 그래서 난 화가임 : 혹시 리덕스 스토어의 initialState에 함수는 담을 수 없나용?
2022. 2. 22. 오전 10:16, 화가난다 화가나 그래서 난 화가임 : initialState : {play: 함수 }
2022. 2. 22. 오전 10:16, 화가난다 화가나 그래서 난 화가임 : 이런식으로요
2022. 2. 22. 오전 10:16, 화가난다 화가나 그래서 난 화가임 : 시도했는데, 자꾸 값이 사라집니다.
2022. 2. 22. 오전 10:17, 화가난다 화가나 그래서 난 화가임 : 처음 리덕스 스토어에 null 값은 봤는데, 액션함수를 호출하면 값이 사라지는..
2022. 2. 22. 오전 10:23, 파이버 : 담아야 하는 이유가 있나요??
2022. 2. 22. 오전 10:28, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 2. 22. 오전 10:29, 화가난다 화가나 그래서 난 화가임 : 재생 정지 기능을
2022. 2. 22. 오전 10:29, 단테 : 미들웨어를 만드시는게 어떤가요
2022. 2. 22. 오전 10:29, 화가난다 화가나 그래서 난 화가임 : 전역에서 동작하게끔 하려고용
2022. 2. 22. 오전 10:30, 파이버 : 그럼 상태에 함수를 넣는거보다 액션으로 처리하는 게 낫지 않으려나요..?
2022. 2. 22. 오전 10:33, 화가난다 화가나 그래서 난 화가임 : 액션으로 처리하고 있었는데
2022. 2. 22. 오전 10:33, 화가난다 화가나 그래서 난 화가임 : 이번에 음악 재생을 또 다른 플레이어 바? 그런 ui가 생겨서
2022. 2. 22. 오전 10:34, 화가난다 화가나 그래서 난 화가임 : 그 플레이어 바에서도 재생과 정지기능을 사용할 수 있게끔 스토어에 정지 재생 함수를
2022. 2. 22. 오전 10:34, 화가난다 화가나 그래서 난 화가임 : 넣을 수 있나 궁금했습니다
2022. 2. 22. 오전 10:34, 화가난다 화가나 그래서 난 화가임 : 재생되는 음악은 매번 달리지는 전제상황도 있고해서용
2022. 2. 22. 오전 10:37, 파이버 : 그럼 그 전제상황을 state에 넣고 액션 함수도 어차피 전역에서 사용 가능하니까 thunk가 state에 있는 전제상황에 따라 동작하도록 하는 건 어떨까요?
2022. 2. 22. 오전 10:40, 화가난다 화가나 그래서 난 화가임 : 오
2022. 2. 22. 오전 10:40, 화가난다 화가나 그래서 난 화가임 : 잠깐만용
2022. 2. 22. 오전 10:46, 화가난다 화가나 그래서 난 화가임 : 오..
2022. 2. 22. 오전 10:47, 화가난다 화가나 그래서 난 화가임 : 해결했어용. 함수가 아니라 재생 상태를 스토어에 공유해서
2022. 2. 22. 오전 10:47, 화가난다 화가나 그래서 난 화가임 : 그 상태에 따라 음악이 정지되게끔 했어용
2022. 2. 22. 오전 10:47, 화가난다 화가나 그래서 난 화가임 : 감사합니다
2022. 2. 22. 오전 10:52, jjin : 지금 bottom-top으로 면접보고 있고, 앞으로도 면접이 몇개 더 있는데 처음 봤던 곳에서 합격 연락이 왔습니다. 아직 다른 면접도 있고 엄청 가고싶은 회사는 아니라서 안갈까 싶은데, 연봉까지 협상해보고 생각하는게 좋을까요?
2022. 2. 22. 오전 10:55, 떨고있는 어피치 : 모든 옵션은 다 열고 최종에 결정하는 것이 가장 좋을 것같습니다!

다만, 진행하다보면 타이밍이 안맞는 경우가 있을거에요…(ex. 금요일에 B회사 면접인데 A회사에서 목요일까지 대답을 달라고 한 경우 등)

이럴 때는 본인 선택에 대해 약간의 도박…?이 필요할 수 있습니다…..
2022. 2. 22. 오전 10:59, 콘솔 : react-router-dom v6 를 사용하고 있습니다, 혹시 뒤로가기시(실제 history에 담긴 Url 이 아닌) 특정 url 로 보내는 것이 가능 할까여..? ㅠㅠ 이것저것 시도해봤는데 잘 안되네요 ㅠㅠ
2022. 2. 22. 오전 11:02, 최민석 : 스택에 밀어넣는게 아니라 현재 history를 교체하신다는 말일까용?
2022. 2. 22. 오전 11:03, 최민석 : 특정 URL에 보내신다는게 그냥 navigate 사용해서 이동한다는 뜻일까용
2022. 2. 22. 오전 11:03, jjin : 감사합니다! 일단 가능성을 열어두고 생각해보겠습니다:)
2022. 2. 22. 오전 11:04, Hardy : 그 회사 연봉이 다른 회사 면접에서 무기가 될 수 있어서 연봉 협상까진 하는게 좋을거 같아요 

저 같은 경우엔 다른 면접 일정까지 고려해서 입사 결정 일정을 넉넉하게 불렀고 타이트하게 원하시면 상황보고 컷했습니다.
2022. 2. 22. 오전 11:08, 개발닥 : popState 보고있다가 이벤트 발동하면 location.href로 보낼 수 있는데 까다로울것 같아요
2022. 2. 22. 오전 11:20, 콘솔 : 네네 교체 하는거에용..ㅠ ㅠ navigate 해서 이동도 이것저것 설정해봣는데 뒤로가기시 인식을 못하는 것 같습니당..
2022. 2. 22. 오전 11:20, 콘솔 : 하..popState 보긴햇는데 좀더 살펴보겠습니다 ㅠㅠ 다들 감사합니당 ㅠ
2022. 2. 22. 오전 11:22, 개발닥 : 브라우저는
2022. 2. 22. 오전 11:23, 개발닥 : 뒤로가기만 따로 인식하는걸 못할거에여 보안상 이유로 지원 안한다고 하더라구여
2022. 2. 22. 오전 11:24, 최민석 : history.action 통해서 POP 추적하는 방향도 좋겠네요!
2022. 2. 22. 오전 11:25, 개발닥 : POP이
2022. 2. 22. 오전 11:25, 콘솔 : 아 history.action .. 도 한번 찾아볼게요!
2022. 2. 22. 오전 11:25, 개발닥 : 뒤로가기, 앞으로가기 다 해당하는걸로 알아서..
2022. 2. 22. 오전 11:25, 개발닥 : 까다로울것 같아여
2022. 2. 22. 오전 11:25, 콘솔 : 아 ㅠㅠ 어렵네여ㅠ
2022. 2. 22. 오전 11:25, 최민석 : 아 그렇네요 새로고침도 포함이네..
2022. 2. 22. 오전 11:25, 최민석 : ㅎㅎ..
2022. 2. 22. 오전 11:25, 콘솔 : 아 ㅠㅠ
2022. 2. 22. 오전 11:25, 개발닥 : 꼭 필요한 기능인지 물어보고..
2022. 2. 22. 오전 11:26, 개발닥 : 버튼으로 해결할수 있으면 깔끔할것 같아요 ㅠㅠ
2022. 2. 22. 오전 11:26, 최민석 : 그런것도 있을거같아요 앞으로가기는 locationKey 필요로하는데
2022. 2. 22. 오전 11:26, 최민석 : 그거 없으면 뒤로가기 + 새로고침 이니까..
2022. 2. 22. 오전 11:26, 콘솔 : 버튼이 있기도 한데 브라우저에서 (업무를완료한 후에 ) 뒤로가기를 해버리면 안돼서 ㅠㅠ
2022. 2. 22. 오전 11:26, 최민석 : 뒤로가기+새로고침 까지는 추적가능할꺼같아요
2022. 2. 22. 오전 11:27, 콘솔 : history.action 으로 추적 하라는 말씀이신가용?
2022. 2. 22. 오전 11:27, 콘솔 : 뒤고가기 + 새로고침 ?.?
2022. 2. 22. 오전 11:28, 최민석 : 네네 
1. history.action 통해서 POP 추적
2. location.key가 존재하는지 확인. 있을 시 (앞으로가기)
3. 없을 시 (뒤로가기+새로고침) 경우
2022. 2. 22. 오전 11:28, 최민석 : 이렇게 분기처리하면 어떨까요
2022. 2. 22. 오전 11:28, 최민석 : 뒤로가기+새로고침은 다른 차이점이 없을라남..?
2022. 2. 22. 오전 11:29, 콘솔 : 오오 감사합니다, 우선 한번 저 방향으로 작동하는지 적용해보겠습니다~~
2022. 2. 22. 오전 11:38, 콘솔 : https://developer.mozilla.org/ko/docs/Web/API/History

혹시 history.action 이 이 history인가용..? react-router-dom v6 는 따로 history 가 없네여 ㅠㅠ
2022. 2. 22. 오전 11:39, 최민석 : 앗 넵 historyAPI 말한거였어용
2022. 2. 22. 오전 11:41, 콘솔 : history API 에 action 프러퍼티가 있나용..?! ㅠ ㅠ 안나와성
2022. 2. 22. 오전 11:41, 최민석 : history 객체욥!
2022. 2. 22. 오전 11:42, yen : V6 에는 navigate 으로 통일됐던거 같아요
2022. 2. 22. 오전 11:45, 최민석 : 사진
2022. 2. 22. 오전 11:45, 최민석 : 요렁게있네용
2022. 2. 22. 오전 11:47, 개발닥 : https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigation/type
2022. 2. 22. 오전 11:47, 개발닥 : 이걸로도 볼수있어요
2022. 2. 22. 오전 11:47, 개발닥 : 2번값 "TYPE_BACK_FORWARD" 이게 뒤로가기, 앞으로가기 한 상태에요
2022. 2. 22. 오전 11:48, 콘솔 : 옿…진짜 많네요 다들 감사드려요 ㅠㅠ !
2022. 2. 22. 오후 12:05, 음악듣는 어피치 : 삭제된 메시지입니다. 
2022. 2. 22. 오후 12:07, 음악듣는 어피치 : 앗 요구사항이 분명하게 있었네요 제가 뒤로가기만 보고 잘못 대답해서 삭제했어용!🥲
2022. 2. 22. 오후 1:24, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 22. 오후 1:25, 화가난다 화가나 그래서 난 화가임 : 유튜브의 재생바인데요
2022. 2. 22. 오후 1:25, 화가난다 화가나 그래서 난 화가임 : 삭제된 메시지입니다. 
2022. 2. 22. 오후 1:25, 화가난다 화가나 그래서 난 화가임 : 처음의 재생바를 구현하려 했을 때, input[type='range']나 progress 태그를 생각했다가
2022. 2. 22. 오후 1:25, 화가난다 화가나 그래서 난 화가임 : 커스텀을 해야함을 느끼기 시작해서 div 박스로 커스텀을 하려고 하는데용
2022. 2. 22. 오후 1:26, 화가난다 화가나 그래서 난 화가임 : 혹시 div 박스로 구현한다 했을  때, 특정 지점을 클릭하면 그 위치 값을 value로 전달한다 했을 때
2022. 2. 22. 오후 1:26, 화가난다 화가나 그래서 난 화가임 : value로써 event 객체에서 이용할 요소가 있나용?
2022. 2. 22. 오후 1:27, Hardy : value를 콘솔로 찍어서 보시면 클릭한 좌표 정보가 있을거에요 그걸 이용하면 되지 않을까요
2022. 2. 22. 오후 1:42, 화가난다 화가나 그래서 난 화가임 : 아 제가 말을 잘못 했네용. div 박스에서 특정지점을 클릭한다 했을 떄, 그 위치를 구할 수 있는 이벤트 객체 요소가 있는지 궁금했어용
2022. 2. 22. 오후 1:43, Hardy : 그니까 div 박스 내에 마우스로 클릭 한 좌표를 얻고싶다는거 아닌가요?
2022. 2. 22. 오후 1:47, 이엘로 : https://stackoverflow.com/questions/23744605/javascript-get-x-and-y-coordinates-on-mouse-click
2022. 2. 22. 오후 1:47, 최민석 : offsetX? ofeesetY?
2022. 2. 22. 오후 1:48: 메테오님이 들어왔습니다.
2022. 2. 22. 오후 1:48, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오후 1:50, 이엘로 : clientX clientY는 페이지에서의 위치네요 offsetX offsetY 이용하시면 될 것 같아요
2022. 2. 22. 오후 1:51, 결과보단 과정을 / React,JS : onClick props를 사용해서 mouse event를 받아오고 원하시는 좌표를 사용하시면 될꺼 같은데요.
2022. 2. 22. 오후 1:52, 화가난다 화가나 그래서 난 화가임 : 감사합니다!!!
2022. 2. 22. 오후 1:52, 결과보단 과정을 / React,JS : 아 onClick이 아니고
2022. 2. 22. 오후 1:52, 화가난다 화가나 그래서 난 화가임 : 범위를 조절하는 부분이 재생 progressbar랑 오디오 부분 두 부분이 있는 거 같아서 한 번 커스텀 작업을 시도해봐야겠네용 오늘은 ㅠㅠ
2022. 2. 22. 오후 1:53, 화가난다 화가나 그래서 난 화가임 : 며칠간 못해본 기능만 계속 시도하게 되네융
2022. 2. 22. 오후 1:53, 화가난다 화가나 그래서 난 화가임 : 막힐 때마다 알려주셔서 감사합니다 ㅠㅠ
2022. 2. 22. 오후 1:53, 결과보단 과정을 / React,JS : onMouseDown쓰시면 될듯 하네요
2022. 2. 22. 오후 1:55, 화가난다 화가나 그래서 난 화가임 : 넹!! omMouseUp Donw 각각 이용해서 함수로 만들 거 같은 느낌이 나융
2022. 2. 22. 오후 1:55, 화가난다 화가나 그래서 난 화가임 : 감사합니다!!
2022. 2. 22. 오후 2:26, 화가난다 화가나 그래서 난 화가임 : const x = e.clinetX - e.target.getBoundingClientRect().left
2022. 2. 22. 오후 2:27, 화가난다 화가나 그래서 난 화가임 : 이 로직을 작성해서 원하는 값을 구할 수 있었네용
2022. 2. 22. 오후 2:40, 이엘로 : 사진
2022. 2. 22. 오후 2:40, 이엘로 : offsetX로 더 간단하게 할 수 있어요!
그래도 편한대로 쓰세요 :)
2022. 2. 22. 오후 2:46, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 22. 오후 2:46, 화가난다 화가나 그래서 난 화가임 : offsetX 이거 맞지 않나용?
2022. 2. 22. 오후 2:46, 화가난다 화가나 그래서 난 화가임 : undefined가 자꾸 떠용
2022. 2. 22. 오후 2:46, 이엘로 : console.log에 X가 대문자가 아니에요!
2022. 2. 22. 오후 2:46, 이엘로 : 엇
2022. 2. 22. 오후 2:46, 이엘로 : 엥 이상하네요
2022. 2. 22. 오후 2:47, 화가난다 화가나 그래서 난 화가임 : 사진
2022. 2. 22. 오후 2:48, 화가난다 화가나 그래서 난 화가임 : getBounding 값을 콘솔로 찍어보면 e가
2022. 2. 22. 오후 2:48, 화가난다 화가나 그래서 난 화가임 : 잘 먹히는데
2022. 2. 22. 오후 2:48, 화가난다 화가나 그래서 난 화가임 : e.offsetX만 undefined
2022. 2. 22. 오후 2:48, 화가난다 화가나 그래서 난 화가임 : 가뜨네용
2022. 2. 22. 오후 2:48, 이엘로 : e.nativeEvent.offsetX 해보세요
2022. 2. 22. 오후 2:48, 화가난다 화가나 그래서 난 화가임 : 제가 뭘 잘못했나봐융
2022. 2. 22. 오후 2:48, 이엘로 : 리액트에서 안된다는 것 같아요
2022. 2. 22. 오후 2:49, 화가난다 화가나 그래서 난 화가임 : 떠용
2022. 2. 22. 오후 2:49, 이엘로 : 네네네 좋습니다
2022. 2. 22. 오후 2:49, 화가난다 화가나 그래서 난 화가임 : 364, 454 등 수치가
2022. 2. 22. 오후 2:49, 화가난다 화가나 그래서 난 화가임 : 떠용
2022. 2. 22. 오후 2:50, 여의도개발 : 혹시 리액트쿼리에서 한번 조회한 데이터를 계속 캐싱처리해보신분 계신가요?
2022. 2. 22. 오후 2:50: 하자코딩님이 들어왔습니다.
2022. 2. 22. 오후 2:50, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오후 2:50, 파이버 : 음 얼마나 계속이요? 짧게는 해봤었어요
2022. 2. 22. 오후 2:51, 여의도개발 : useQuery로 조회한 데이터를
같은 페이지에서 onClick 이벤트에getQueryData로 접근하면 캐싱된 데이터가 보이고

페이지 이동해서 getQueryData로 접근하면 undefined 뜨네욤…
2022. 2. 22. 오후 2:51, 파이버 : 음 페이지 이동해서 getQueryData 로 처리하시는 이유가 따로 있나요?
2022. 2. 22. 오후 2:51, 여의도개발 : 페이지 전환이 되도 getQueryData(key)값 넣으면 이전 값을 가져오고 싶거든요
2022. 2. 22. 오후 2:52, 파이버 : 아하 그냥 useQuery 로 하면 안되는 이유가 따로 있으신거군요
2022. 2. 22. 오후 2:52, 여의도개발 : 궁극적인건 한번 조회했던건 다시 조회 안하게 하고싶숩니다
2022. 2. 22. 오후 2:52, 여의도개발 : 정적인 데이터라서 한번 조회하면 또 조회할 필요 없기 때문입니당
2022. 2. 22. 오후 2:53, 파이버 : 해당 쿼리의 stale time 을 길게 주시면 될 거 같아요
2022. 2. 22. 오후 2:54, 파이버 : 사진
2022. 2. 22. 오후 2:54, 파이버 : infinity 로
2022. 2. 22. 오후 2:54, 여의도개발 : 엇~ stale을 줘야하려나요?
2022. 2. 22. 오후 2:54, 여의도개발 : cacheTime: Infinity 로 줬는데 ㅎㅎ
2022. 2. 22. 오후 2:54, 여의도개발 : const query = useQuery(
    "test",
    async () => {
      const response = (
        await axios.get(
          "https://api.github.com/repos/tannerlinsley/react-query"
        )
      ).data;

      console.log("response!", response);
      return response;
    },
    {
      cacheTime: Infinity,
      onSuccess: (data) => {
        console.log("onSuccess!!", data);
        //queryClient.setQueryData("test", data);
      },
    }
  );
2022. 2. 22. 오후 2:54, 여의도개발 : 요렇게요
2022. 2. 22. 오후 2:54, 파이버 : 앗 캐시타임은.. ㅋㅋㅋㅋㅋ 웬만하면 건드릴 일 없는 친구라고 하더라고요
2022. 2. 22. 오후 2:55, 여의도개발 : 캐싱을 무한으로 한다…가 아닐까요? 움ㅎㅎㅎㅎ
2022. 2. 22. 오후 2:55, 파이버 : 넵 그냥 cacheTime 은 빼고 staleTime 만 infinity 로 주시면 될거같긴 한데 해본적이 없어서 확실하진 않네요
2022. 2. 22. 오후 2:55, 여의도개발 : 결국 stale이 이미 조회해온 데이터인거잖아요?
2022. 2. 22. 오후 2:56, 파이버 : 캐시타임은 inactive 를 언제 메모리에서 아예 제거할 건지고 stale 은 언제 얘를 fresh -> stale 로 둘 건지 일거예요
2022. 2. 22. 오후 2:57, 파이버 : https://tkdodo.eu/blog/using-web-sockets-with-react-query#increasing-staletime
2022. 2. 22. 오후 2:58, 최민석 : 리액트 쿼리 재밌네요..
2022. 2. 22. 오후 2:58, 최민석 : 많이 배웁니당 ㅠ
2022. 2. 22. 오후 2:58, 파이버 : useQuery 도 최대한 선언적인 api를 제공하려고 해서 웬만하면 옵션 주는 걸로 다 가능하고 따로 명령적으로 뭔가 해줘야 되는 상황은 거의 없더라구요
2022. 2. 22. 오후 2:59, 파이버 : https://tkdodo.eu/blog/practical-react-query#the-defaults-explained 앗 링크 잘못 보냈네요 ㅎㅎ..
2022. 2. 22. 오후 3:01, 결과보단 과정을 / React,JS : https://velog.io/@jkl1545/React-Query
2022. 2. 22. 오후 3:01, 결과보단 과정을 / React,JS : 누가 이방에서 공유해주신건데, 한글로 되어 있어 영어가 익숙하지 않으시면 이해하기가 좀 더 편하실꺼예요
2022. 2. 22. 오후 3:02, 결과보단 과정을 / React,JS : 저도 여길 참조해서 헷갈렸던 부분 명확하게 이해 했어요
2022. 2. 22. 오후 3:04, 결과보단 과정을 / React,JS : 물론 공홈이 짱이지만요…ㅎㅎ
2022. 2. 22. 오후 3:40, Hardy : https://www.youtube.com/watch?v=MArE6Hy371c
2022. 2. 22. 오후 3:41, Hardy : 오늘 7시 react query로 우아한테크세미나 진행하네요
2022. 2. 22. 오후 3:47, jjin : Vue js 로 커리어 시작하는거랑 react로 시작하는거랑 차이가 클까요? 대부분 큰화사는 react 써서 react 쓰는 회사 위주로 보고있는데 간혹 vue를 사용하는 회사도 있어서 궁금합니다!
2022. 2. 22. 오후 3:48, 개발닥 : 별로 차이 없을것 같아여
2022. 2. 22. 오후 4:02, 동딩댕동 : 리액트 하면 손해는 안보는거 같아요
2022. 2. 22. 오후 4:03, 최민석 : 뷰도 많이쓰더라고용
2022. 2. 22. 오후 4:16, 애교뿜뿜 어피치 : 안녕하세요,, ! 한가지 질문이 있습니다.

const object = {
  c1 : 10000,
  c2 : 10000,
}

이라는 객체가 있고,

const items = [
 {name : 'sera', code : 'c1'},
 {name : 'sera', code : 'c2'}
]

라는 배열이 있습니다.

그리고 이것을 이용해서 특정 컴포넌트에서

{items.map((item)=>{
  return <div>{object[item.code}</div>
})}
2022. 2. 22. 오후 4:16, 애교뿜뿜 어피치 : 이런식으로 접근하려고 하는데 eval()을 사용하지 않고 어떤식으로 가능할까요..
2022. 2. 22. 오후 4:16, 애교뿜뿜 어피치 : 아예 접근법이 잘못됐을까요.
2022. 2. 22. 오후 4:17, jjin : 그럼 뷰로시작해도 크게 상관은없을까용
2022. 2. 22. 오후 4:18, 박성원 : 저렇게 실행 안되는 이유가있나요???
2022. 2. 22. 오후 4:19, 박성원 : eval안쓰고 가능할것같은데 질문의 힌트가 부족한것같아요
2022. 2. 22. 오후 4:19, 애교뿜뿜 어피치 : 음 다시 한번 오류 내용을 보겠습니다. 원래대로라면 움직여야할 코드라는 말씀이시군요
2022. 2. 22. 오후 4:19, 최민석 : 저 코드대로면 object[item.code]
2022. 2. 22. 오후 4:19, 박성원 : return을 안한거 아닐까요??
2022. 2. 22. 오후 4:19, 최민석 : ] 빠진거같아요
2022. 2. 22. 오후 4:20, 박성원 : 오 ] 이게없네요
2022. 2. 22. 오후 4:20, 애교뿜뿜 어피치 : 아 이 메시지에서만 제가 오타가 났네요 ㅎㅎ 감사합니다. 저 코드 자체가 js에서 작동안하나? 싶었는데 타입 에러.. 인것같습니다.
2022. 2. 22. 오후 4:22, 애교뿜뿜 어피치 : 사진
2022. 2. 22. 오후 4:22, 애교뿜뿜 어피치 : 메시지는 이러하네요. 제가 좀 더 보겠습니다 ㅠㅠ
2022. 2. 22. 오후 4:23, j : 삭제된 메시지입니다. 
2022. 2. 22. 오후 4:23, 박성원 : const object: {[key: string]: number} = {
  c1 : 10000,
  c2 : 10000,
}
2022. 2. 22. 오후 4:24, 파이버 : 저라면 items 의 타입을 정의해줄 거 같아요

const items: {name: string, code: keyof object}[] = [
 {name : 'sera', code : 'c1'},
 {name : 'sera', code : 'c2'}
]
2022. 2. 22. 오후 4:26, 박성원 : 파이버님 방법이 더 명확하네요!
2022. 2. 22. 오후 4:26, 유용태 (teo.yu) : 메테오님 반갑습니다~ :)
2022. 2. 22. 오후 4:26, 유용태 (teo.yu) : 하자코딩님도 반갑습니다!! :)
2022. 2. 22. 오후 4:28, 파이버 : 아니면 배열 정의가 어떻게 돼 있냐에 따라서 `{ name: 'sera', code: 'c1' } as const` 이런 식으로 처리하는 방법도 있고.. 그건 앞에 코드가 어떻게 돼 있냐에 따라 다를 거 같네요!
2022. 2. 22. 오후 4:35, 애교뿜뿜 어피치 : 네 타입 지정이 잘못되어서 발생한게 맞네요 감사합니다! ㅎ
2022. 2. 22. 오후 5:47: React취준이님이 들어왔습니다.
2022. 2. 22. 오후 5:47, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오후 5:48, 유용태 (teo.yu) : 안녕하세요 청소하는 튜브님 반갑습니다 :)
2022. 2. 22. 오후 5:48, React취준이 : 안녕하세요 테오님!!!
2022. 2. 22. 오후 5:49, 유용태 (teo.yu) : 반갑습니다 :)
2022. 2. 22. 오후 5:49, 유용태 (teo.yu) : 네!
2022. 2. 22. 오후 5:51, React취준이 : 현재 리액트공부하면서 프로젝트만들고있습니다!
잘부탁드립니당:-)
2022. 2. 22. 오후 5:54, 파이버 : 혹시 이직 준비하시는 분들 사이드프로젝트 활동 경력은 얼마나 작성하시나요? 개발 처음 시작할 때쯤 했던 (지금은 눈 배릴까봐 레포 열어보지도 않는..) 사이드 프로젝트들이 있는데 이력서에 쓸지 말지 고민중입니다ㅠㅠ
2022. 2. 22. 오후 5:55, 파이버 : 개발 처음 시작할 때 짰던 못난 코드들이 제 성장을 보여주는 지표가 될지 쓸데없는 소음이 될지 감이 잘 안 잡히네요..
2022. 2. 22. 오후 5:56, 파이버 : 아 이력서랑 포폴에 어느 정도 작성하시는지 질문드린 거였어요!
2022. 2. 22. 오후 5:57, 결과보단 과정을 / React,JS : 회사 면접자 입장에선, 사이드프로젝트는 오히려 독이 된다는 얘기를 어디서 본적이 있는거 같은데… 그것도 케바케 일꺼 같긴 한데… 애매하군요…
2022. 2. 22. 오후 5:58, 결과보단 과정을 / React,JS : 저라면 사이드보단 메인에서의 경험이나 업무에서의 역활을 부각되서 쓸꺼 같네요. 그게 더 저라는 사람에 대해서 어필할 수 있지 않을까 싶어요.
2022. 2. 22. 오후 6:36, 파이버 : 앗 감사합니다..! 좀더 그런 쪽을 중심으로 작성해 보겠습니다 조언 감사드려요
2022. 2. 22. 오후 6:50, 결과보단 과정을 / React,JS : 꼭 원하는 곳에 취업 되셨으면 좋겠네요 ㅎㅎ
2022. 2. 22. 오후 6:50, 결과보단 과정을 / React,JS : 아..취업이 아니라 이직…ㅎㅎ
2022. 2. 22. 오후 7:00, Hardy : https://www.youtube.com/watch?v=MArE6Hy371c
2022. 2. 22. 오후 7:01, Hardy : 시작하네요
2022. 2. 22. 오후 7:01, 파이버 : 감사합니다 ㅎㅎ
2022. 2. 22. 오후 7:19, 부끄러운 어피치 : 사이드 프로젝트를 통해 얻고자 했던게 무엇인지를 고민하고, 포트폴리오에 적는 것도 좋을것 같아요
예를 들어 회사에 혼자 개발해서, 협업을 통해 커뮤니케이션 스킬 및 협업도구에 대해 공부하고자 사이드프로젝트를 할 수도 있을것이고, 사용해보지 못한 기술스택을 사용해서 작은 프로젝트를 하고싶어서 한 걸수도있구요~
여러군데 면접 보니까 질문들이 다 다른걸 보면 딱히 정답은 없는 것 같습니다. ㅋㅋ
2022. 2. 22. 오후 7:23, 파이버 : 오 넵넵 감사합니다 어피치님..! 👍👍
2022. 2. 22. 오후 7:27, 부끄러운 어피치 : 앗ㅋㅋ 그래서 제 말은 사이드 프로젝트의 의도가 충분히 어필할 수 있을만한 요소라면 넣는 것을 추천드립니다 ㅎㅎ
제일 중요한 결론을 빼먹었네요 ㅜㅜ
2022. 2. 22. 오후 7:33, 파이버 : 앗 ㅋㅋㅋㅋㅋ넵넵 조언 감사드려요
2022. 2. 22. 오후 7:46, 프로로 : 혹시 모바일 사파리에서 css 적용이 안되는 에러가 생각보다 많은데 정리된 사이트 아시는분 있을까요??
2022. 2. 22. 오후 7:51, 동딩댕동 : Caniuse.com 에서 하나씩 검색하는데.. 정리된 사이트 저도 궁금하네요!
2022. 2. 22. 오후 9:01: 졸린 라이언님이 나갔습니다.
2022. 2. 22. 오후 9:04: 튜으브님이 들어왔습니다.
2022. 2. 22. 오후 9:04, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오후 9:18, 박성원 : 코드리뷰 해주실분 구합니다..! wordle 두번째 PR입니다!
https://github.com/pksung1/wordle/pull/3
2022. 2. 22. 오후 9:30: 106님이 들어왔습니다.
2022. 2. 22. 오후 9:30, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오후 9:31, 유용태 (teo.yu) : 안녕하세요 튜으브님 반갑습니다 :)
2022. 2. 22. 오후 9:31, 유용태 (teo.yu) : 106님 반가워요! ㅎ
2022. 2. 22. 오후 9:35, 106 : 안녕하세요 ! 벨로그에서 글 보다가 궁금해져서 들어왔습니다 ㅎㅎ
2022. 2. 22. 오후 10:03: hustle-dev님이 들어왔습니다.
2022. 2. 22. 오후 10:03, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 22. 오후 10:04, 유용태 (teo.yu) : 안녕하세요 hustle-dev님 반갑습니다 :)
2022. 2. 22. 오후 10:06, 유용태 (teo.yu) : 감사합니다! 여기는 다른 사람들은 어떻게 할지 궁금할때 서로 물어보고 답하는 공간입니다! 현업이든 취준이든 편하게 편하게 물어보세요
2022. 2. 22. 오후 10:06, hustle-dev : 안녕하세요~
2022. 2. 22. 오후 10:06, 유용태 (teo.yu) : 좋은 링크들이 있거나 본인의 블로그 글들이 있다면 자유롭게 공유 해주세요 :) 좋은 자료들은 모아모아서 디스코드에 아카이브 중이랍니다~
2022. 2. 22. 오후 10:07, 유용태 (teo.yu) : 안녕하세요!! 반갑습니다 :)

2022년 2월 23일 수요일
2022. 2. 23. 오전 2:41, 진현 : https://so-so.dev/react/import-react-from-react/
2022. 2. 23. 오전 3:11, 코린이 : 사진
2022. 2. 23. 오전 3:11, 코린이 : nextjs에서 html태그가 왜 안먹힐까요 .. ㅠㅠ
2022. 2. 23. 오전 9:03, 제이 : global css에서 싹 다 리셋하신거 아닐까요?
2022. 2. 23. 오전 9:14, 이엘로 : 사진
2022. 2. 23. 오전 9:14, 이엘로 : 여기 때문인 것 같아요!
2022. 2. 23. 오전 9:16, 코린이 : 리셋?..암것도 안만졌는데요ㅠㅠ...
2022. 2. 23. 오전 9:16, 이엘로 : globals.css 가셔서 이 부분 지워주면 될 것 같아요
2022. 2. 23. 오전 9:17, 코린이 : Globals.css를 조져야 되는군요
2022. 2. 23. 오전 9:17, 이엘로 : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ아마 그런 걸로 보여요
2022. 2. 23. 오전 9:18, 코린이 : 감사해요..! 집에가서 빨리 해봐야겠네요
2022. 2. 23. 오전 9:25, 떨고있는 어피치 : https://velog.io/@teo/2022-CSS-Reset-%EB%8B%A4%EC%8B%9C-%EC%8D%A8%EB%B3%B4%EA%B8%B0
2022. 2. 23. 오전 9:26, 떨고있는 어피치 : 테오님의 이 글을 추천드립니다 ㅋㅋㅋ
2022. 2. 23. 오전 9:27, 코린이 : 오옷..ㅋㅋㅋㅋ감사드러요
2022. 2. 23. 오전 9:31, 보초개발 : 좋은 글 감사합니다. 도입배경을 알게 되니깐 더 이해가 잘되네요
2022. 2. 23. 오전 10:38, 부탁하는 무지 : 혹시.. next js에서 pages/index.js에서 작업하는 것과 pages/index.js -> component로 분리하는 중에 어떻게 처리하시는 편이세요?
2022. 2. 23. 오전 10:51, 핸디(강경석) : 저는 최대한 별도의 파일로 분리하려고 합니다. pages 내에서는 어떤 컴포넌트를 쓴다는 내용으로도 역할을 다했다고 생각해서요.
2022. 2. 23. 오전 10:53, 주니어개발자 : 저도 index.js에는 template, page 단위의 컴포넌트만 불러와서 관리하고 있어요
2022. 2. 23. 오전 11:00, 부탁하는 무지 : 답변 감사드립니다!!
현재 container, presenter 패턴을 쓰고 있는데 뎁스가 너무 길어지는 것 같아서 view로 끝나는건 pages/index.js에서 처리하면 좋겠다 싶어서 그렇게 바꾸고 있는데,

pages/index.js에서 return 구문으로 수정하고 저장을하면 화면이 새로고침 되면서 업데이트가 되더라고요? 혹시 이러한 이유나 영향 가는 부분에 대해서 알고 계신분 계실까요?
2022. 2. 23. 오전 11:03, 파이버 : fast refresh 말씀하시는 건가요? https://nextjs.org/docs/basic-features/fast-refresh
2022. 2. 23. 오전 11:16, 부탁하는 무지 : 음.. 아닌 것 같아요

원래 코드 수정하고 저장하면 화면은 동적으로 바로 수정이 되다가
pages/index.js에서 수정하고 작업하면 화면이 새로고침되서 수정이 되더라고요….

큰 문제가 있는건 아니지만 원인이 궁금해서요ㅠ
2022. 2. 23. 오전 11:36, 파이버 : 아하 딴건 안그러는데 pages/index.js 는 화면이 새로고침된다는게 문제신거군요
2022. 2. 23. 오전 11:36, 파이버 : pages/에 있는 다른 라우트들은 안 그러나요?
2022. 2. 23. 오후 12:30, 부탁하는 무지 : 다른 라우터에는 컴포넌트 형태로 분리를 했을땐 안그러는데 직접 index.js에 수정했을땬 그러더라고요
2022. 2. 23. 오후 2:11, 혜심 : 그 사이트 처음에 접속하면 모달처럼 전체 짙은 회색 음영되면서 버튼이나 이용가이드를 설명하는 방식을 특정해서 부르는 단어가 있나요?
2022. 2. 23. 오후 2:12, 최민석 : 스플래시 스크린
2022. 2. 23. 오후 2:12, 최민석 : 일까요?
2022. 2. 23. 오후 2:12, 박성원 : 오버레이?
2022. 2. 23. 오후 2:13, 팬더 : 온보딩이나 워크스루라고도 많이 하는것같아요!! ㅎㅎ
2022. 2. 23. 오후 2:13, 혜심 : 오 이건거 같네요 감사합니다 ㅎㅎ
2022. 2. 23. 오후 2:13, 혜심 : 아 코치마크라고 부르는것같아용
2022. 2. 23. 오후 2:14, 프론돌이 : 사진
2022. 2. 23. 오후 2:16, yen : ㅋㅋㅋㅋ
2022. 2. 23. 오후 2:16, yen : 혹시 어제 우아한 테크 리액트 쿼리 들으셨던 분들 자료 공유 받으셨나요? 아직 이메일 안보내준건가 해서요!
2022. 2. 23. 오후 2:16, 최민석 : 아직 안주셨어용!
2022. 2. 23. 오후 2:16, yen : 아하 감사합니다!
2022. 2. 23. 오후 2:38: ALX님이 들어왔습니다.
2022. 2. 23. 오후 2:38, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 23. 오후 2:38, 유용태 (teo.yu) : 안녕하세요 ALX님~~ 반갑습니다 :)
2022. 2. 23. 오후 2:38, ALX : 네 안녕하세여
2022. 2. 23. 오후 2:40, 유용태 (teo.yu) : 개발을 하다보면(혹은 다른 일을 하다보면) 다른 사람들은 도대체 어떻게 하고 있을까 궁금할때가 참 많은것 같아요. 여기에서는 그러한 갈증과 궁금함을 해결해보고자 하는 공간으로 마련해보았습니다.
2022. 2. 23. 오후 2:41, 유용태 (teo.yu) : 편하게 질문 남겨주시고 내가 아는 거다 말할 수 있겠다 싶으면 바로바로 답변 남겨주세요. ㅎ
2022. 2. 23. 오후 2:41, 유용태 (teo.yu) : 좋은 자료나 공유하고픈 내용 본인이 작성한 글들로 링크 남겨주시면 저희 모두가 보기 위해서 디스코드등에 아카이브를 하고 있습니다.
2022. 2. 23. 오후 2:42, 유용태 (teo.yu) : 혼자 하기 힘든 협업 경험등을 위해서 스프린트나 스터디 등 여러가지 이벤트로 해보려고 하고 있어요~ 필요하신게 있다면 언제든 제안 주세요 :)
2022. 2. 23. 오후 3:14, 화가난다 화가나 그래서 난 화가임 : 넹!!
2022. 2. 23. 오후 3:35, bb : 액세스토큰과 리프레쉬 토큰을 어디에 저장하시나요 ? 로컬스토리지나 쿠키에 저장해서 사용하는지 아니면 따로 스토리지 클래스를 만들어서 사용하는지 관리 방법이 궁금해요~~
2022. 2. 23. 오후 3:42, 개발닥 : 리프레시는 서버에두고
2022. 2. 23. 오후 3:43, 개발닥 : 액세스는 메모리에 올려둬요
2022. 2. 23. 오후 4:07, one_dev : 혹시 윈도우에서 개발하시는분 중에 
 터미널 추천 해주실만한게 있나요 ? 
현재는 git bash 사용하고있는데, 어떤거 사용하시는지도 궁금합니다 !
2022. 2. 23. 오후 4:12, 프린이 : tabby도 괜찮고, hyperterm, cmder 등 대안이 쫌 있어요!
그리고 ms store에서 받는 windows terminal도 많이 좋아졌습니다
2022. 2. 23. 오후 4:13, one_dev : 답변 감사합니다 !
2022. 2. 23. 오후 4:13, 혜심 : powershell
2022. 2. 23. 오후 4:19, bb : 프론트쪽에서 보관할때도 그런가용?!
2022. 2. 23. 오후 4:20, 개발닥 : 리프레시는
2022. 2. 23. 오후 4:20, 개발닥 : 프론트에 두면 안돼죵
2022. 2. 23. 오후 4:26, 스타트업개발자 : 리프레시를 따로 테이블에 저장한다고 이해하면되나요?
2022. 2. 23. 오후 4:26, 스타트업개발자 : 아니면 레디스에?
2022. 2. 23. 오후 4:41, 파이버 : 리프레시를 프론트에 안 두면 자동로그인 구현이 가능한가요??
2022. 2. 23. 오후 4:43, yen : 엑세스 만료되면 리프레스 요청하고 그게 유효하면 자동로그인으로 넘어갈수 있지 않나요? 저도 궁금하네요
2022. 2. 23. 오후 4:48, 엉망장자 : 리프레시가 프론트에 있어야 액세스가 만료되었을 때 리프레시 토큰을 제출하면서 재발급해줄 근거가 생기는거 아닌가요?.. 어떤식인지 저도 궁금해요 ㅜㅜ
2022. 2. 23. 오후 4:50, 결과보단 과정을 / React,JS : 저도 궁금…
2022. 2. 23. 오후 5:06, 썰~~ : 서버에 두면 프론트에서 요청할때 어떻게 어세스토큰 요청하시나요
2022. 2. 23. 오후 5:06, 썰~~ : 다들 똑같은 질문이셨군요 ㅋㅋ
2022. 2. 23. 오후 5:07, 개발닥 : 프론트에서
2022. 2. 23. 오후 5:07, 개발닥 : 엑세스토큰을 들고있잖아요?
2022. 2. 23. 오후 5:07, 개발닥 : 그걸로 대조해서 재발급 해줘야죵
2022. 2. 23. 오후 5:08, 개발닥 : 리프레시 토큰이 생긴 이유가
2022. 2. 23. 오후 5:09, 개발닥 : 엑세스 토큰 탈취당하면 큰일나기 때문에
2022. 2. 23. 오후 5:09, 개발닥 : 엑세스 토큰을 짧게 주고 리프레시를 길게 주잖아요? 근데 리프레시를 클라이언트에 주면 탈취당하니까 서버에 숨겨야해요
2022. 2. 23. 오후 5:10, 파이버 : 엑세스토큰이 메모리에 있으면 새로고침하거나 브라우저 껐다키면 날라가지 않나요??
2022. 2. 23. 오후 5:10, 개발닥 : 네 그렇죠
2022. 2. 23. 오후 5:10, 파이버 : 아 그럼 브라우저 껐다켜면 자동 로그인이 안되는 방식인건가요?
2022. 2. 23. 오후 5:10, 파이버 : 새로고침하면 로그아웃되고
2022. 2. 23. 오후 5:10, 개발닥 : 그래서 블라우저랑 서버간 통신엔 엑세스/리프레시를 안쓰는게 좋다고 생각이 듭니다
2022. 2. 23. 오후 5:11, 개발닥 : 유지 시키고 싶다면
2022. 2. 23. 오후 5:11, 썰~~ : 리프레시를 서버에 숨기면
2022. 2. 23. 오후 5:11, 개발닥 : 쿠키나 세션, 로컬 스토리지에 넣어야 하고요..
2022. 2. 23. 오후 5:11, 썰~~ : 엑세스토큰은 어떻게 받아오는지가 궁금한거에요 ㅎㅎ
2022. 2. 23. 오후 5:12, 개발닥 : 로그인할때 발급해주거나
2022. 2. 23. 오후 5:12, 개발닥 : 액세스토큰을 계속 들고 잇어야겠죠
2022. 2. 23. 오후 5:12, 썰~~ : 만료되면
2022. 2. 23. 오후 5:12, 썰~~ : 리프레시 토큰 받아와야되잖아요?
2022. 2. 23. 오후 5:12, 개발닥 : 들고있다가 서버에 요청 -> 만료되었음 ( 리프레시는 살아있음 ) -> 응답과 함께 엑세스 토큰 발급
2022. 2. 23. 오후 5:12, 썰~~ : 그때..
2022. 2. 23. 오후 5:12, 개발닥 : 리프레시 죽어있으면 종료 이런 흐름아닐까요?
2022. 2. 23. 오후 5:13, 썰~~ : 그럼 만료된 access토큰으로
2022. 2. 23. 오후 5:13, 썰~~ : 유저 판별을 하는건가요?
2022. 2. 23. 오후 5:13, 썰~~ : 서버에서는??
2022. 2. 23. 오후 5:13, 개발닥 : 그래야 하지 않을까요?
2022. 2. 23. 오후 5:13, 파이버 : 그럼 리프레시토큰의 형식은 JWT 인가요?
2022. 2. 23. 오후 5:13, 개발닥 : 토큰이 로그인 유지를 위한거라면
2022. 2. 23. 오후 5:13, 썰~~ : 그럼 어세스토큰이 만료된게 의미가 없지 않나요..
2022. 2. 23. 오후 5:13, 개발닥 : 맞아요
2022. 2. 23. 오후 5:13, 썰~~ : 그게 탈취 당하면
2022. 2. 23. 오후 5:14, 썰~~ : 결국 똑같은거라
2022. 2. 23. 오후 5:14, 개발닥 : 그래서 저는 프론트 - 서버간 통신엔
2022. 2. 23. 오후 5:14, 결과보단 과정을 / React,JS : ;;;
2022. 2. 23. 오후 5:14, 개발닥 : JWT 필요없다고 생각이 들어요
2022. 2. 23. 오후 5:14, 썰~~ : 기간이 짧아도 의미가 없다생각합니다..
2022. 2. 23. 오후 5:14, 썰~~ : 그래서 저는 더 리프레쉬 토큰을 프론트 한테 주고
2022. 2. 23. 오후 5:14, 개발닥 : 차라리 쿠키 세션이 더 좋아요
2022. 2. 23. 오후 5:14, 개발닥 : 네 근데 리프레쉬 토큰이 프론트에서 털리면요?
2022. 2. 23. 오후 5:14, 썰~~ : 그럼 프론트가 로그인 관리가 안됩니다
2022. 2. 23. 오후 5:14, 썰~~ : 애초에 털릴 위험이
2022. 2. 23. 오후 5:14, 개발닥 : 리프레쉬 토큰 짧으면 2주 길게는 1달 주는데
2022. 2. 23. 오후 5:14, 썰~~ : 쿠키에 httponly로 주면
2022. 2. 23. 오후 5:14, 썰~~ : 자바스크립트로 털리지 않고
2022. 2. 23. 오후 5:15, 파이버 : 사실 리프레시 토큰 털릴 걱정이랑 쿠키 털릴 걱정이랑 똑같아 보이긴 하는데
2022. 2. 23. 오후 5:15, 개발닥 : 맞아요
2022. 2. 23. 오후 5:15, 썰~~ : 그정도 털사람이면 어떻게든 털수있습니다
2022. 2. 23. 오후 5:15, 개발닥 : 리프레시 토큰은
2022. 2. 23. 오후 5:15, 개발닥 : 음
2022. 2. 23. 오후 5:15, 썰~~ : 구글이나 네이버도 그정도의 좀비컴퓨터급이면..
2022. 2. 23. 오후 5:15, 썰~~ : 책임 안져요..
2022. 2. 23. 오후 5:15, 전연규 : 질문이 있는데요..
axios로 요청을 보낼때 header에 'referer' 속성을 넣어서 보내고 있는데요 요청을 보낸 후 네트워크 탭을 살펴봐도 header에 'referer'가 담겨 있지 않네요 ㅠ

Referrer-Policy를 설정해도 나오지 않고있고, 다른 키 밸류를 넣으면 그건 잘 나오는데..
referer만 나오지 않아요..

사용중인 프레임워크는 nuxt입니다.
무슨 보안문제라도 있는걸까요? ㅠ
2022. 2. 23. 오후 5:15, 개발닥 : 맞아요 그래서 근데 그건 JWT를 쿠키처럼 쓰는것 같다는 생각이 드네요
2022. 2. 23. 오후 5:16, 썰~~ : 쿠키에 넣는거죠 ㅎㅎ
2022. 2. 23. 오후 5:16, 개발닥 : 쿠키랑 다를게 없는
2022. 2. 23. 오후 5:16, 파이버 : 그쵸 리프레시를 httpOnly 쿠키에 넣죠
2022. 2. 23. 오후 5:16, Hola : 저도 이 방식으로 쓰고있어염
2022. 2. 23. 오후 5:16, 썰~~ : jwt리프레쉬 토큰을
2022. 2. 23. 오후 5:16, 썰~~ : 쿠키는 저장소라서
2022. 2. 23. 오후 5:16, 썰~~ : 프론트와 백이 공유하는 저장소라서
2022. 2. 23. 오후 5:16, bb : 그럼 액세스토큰과 리프레쉬 토큰 둘다 헤더에 넣어서 관리한다는건가용 ?!
2022. 2. 23. 오후 5:16, 개발닥 : 근데 그러면
2022. 2. 23. 오후 5:16, 썰~~ : 저는 access자체는 프론트가 자스에서 알아서 관리하ㅗㄱ
2022. 2. 23. 오후 5:16, 개발닥 : 그냥 쿠키에 데이터 박는게 낫지 않나요?
2022. 2. 23. 오후 5:16, 썰~~ : refresh만
2022. 2. 23. 오후 5:17, 썰~~ : 그럼 프론트에서 못쓰거든요
2022. 2. 23. 오후 5:17, 썰~~ : httponly하면
2022. 2. 23. 오후 5:17, Hola : 저는 액세스토큰은 데이터로 받아와서 메모리에 저장하고, 리프레시토큰은 httponly로 서버에서 박아주기
2022. 2. 23. 오후 5:17, 파이버 : 저도
2022. 2. 23. 오후 5:17, Hola : 로 쓰고있어요
2022. 2. 23. 오후 5:17, 파이버 : 요렇게 합니당
2022. 2. 23. 오후 5:17, 썰~~ : 저도 이게 가장 안전하다고 생각합니다
2022. 2. 23. 오후 5:17, 썰~~ : 세션을 사용하면 프론트에서 로그인 처리관리가 힘들어서
2022. 2. 23. 오후 5:18, 개발닥 : httpOnly에 대해서 공부해야겠네요
2022. 2. 23. 오후 5:18, 썰~~ : 그렇게 쓰려고하지만.. 지금 회사는 세션체제라서
2022. 2. 23. 오후 5:18, 개발닥 : 저는 저런 생각이 있어서
2022. 2. 23. 오후 5:18, 파이버 : 앗 궁금한건데 로그인 처리관리는 오히려 세션이 편하지 않나요?
2022. 2. 23. 오후 5:18, 개발닥 : 프론트에 토큰발급은 절대 안한다고 생각해요
2022. 2. 23. 오후 5:18, 썰~~ : 저희 로그인 관리가 힘들어요..
2022. 2. 23. 오후 5:18, 개발닥 : JWT 까지 쓸려면 MSA처럼 복잡한 백엔드에서 써야지..
2022. 2. 23. 오후 5:18, 썰~~ : 저도 그점 공감해서 고민했는데 애초에 탈취 당하는곳이
2022. 2. 23. 오후 5:19, 썰~~ : https에서는
2022. 2. 23. 오후 5:19, 썰~~ : 통신중 탈취는 거의 불가능하고
2022. 2. 23. 오후 5:19, 썰~~ : 서버나 프론트에서 탈취밖에 안되는데
2022. 2. 23. 오후 5:19, 개발닥 : httpOnly 쓰면
2022. 2. 23. 오후 5:19, 썰~~ : js에서 못뽑아간다면
2022. 2. 23. 오후 5:19, 개발닥 : XSS 완전 차단이 가능한가요?
2022. 2. 23. 오후 5:19, 파이버 : JWT의 장점이 서버 리소스를 줄이고 MSA나 SSO에 대응하기 적합하다는 거 대신 로그아웃에 대한 처리가 불가능해진다는 점인 걸로 알고 있어서
2022. 2. 23. 오후 5:19, 개발닥 : 네 맞아요 근데 프론트는 MSA가 아니잖아요
2022. 2. 23. 오후 5:20, 개발닥 : 저희는 서버 하나 바라보잖아요 보통
2022. 2. 23. 오후 5:20, 파이버 : 그게 이제 서버가 여러개일땐 세션 방식을 못쓰니까요 ㅎㅎ
2022. 2. 23. 오후 5:20, 썰~~ : 요새 도커 쿠버네티스 많이 쓰잖아요
2022. 2. 23. 오후 5:20, 개발닥 : 아 서버를 여러개 보고 통신하는 케이스도 있나요?
2022. 2. 23. 오후 5:20, 썰~~ : 서버컴퓨터가 여러개면
2022. 2. 23. 오후 5:20, 개발닥 : 공개 api 말구요?
2022. 2. 23. 오후 5:20, 썰~~ : 항상 문제가 되는게 많죠..
2022. 2. 23. 오후 5:21, 썰~~ : 인하우스 개발자들은
2022. 2. 23. 오후 5:21, 썰~~ : 백앤드에게 요청해야죠
2022. 2. 23. 오후 5:21, 파이버 : 컴퓨터 한개로 모든 서비스가 돌아가진 못하죠
2022. 2. 23. 오후 5:21, 개발닥 : 네네 근데 보통
2022. 2. 23. 오후 5:21, 썰~~ : api 엔드포인트는 하나지만
2022. 2. 23. 오후 5:21, 개발닥 : 뒤에 bff 통해서 통신하잖아요
2022. 2. 23. 오후 5:21, 썰~~ : 뒷단에서 서버컴퓨터는 나뉘니까요
2022. 2. 23. 오후 5:22, 썰~~ : 맨날 그거클러스터링 이슈 문제때문에
2022. 2. 23. 오후 5:22, 썰~~ : 세션할때...
2022. 2. 23. 오후 5:22, 피카츄돈까스/React,RN : API 게이트웨이 같은거나 리버스프록시 사용하는거같더라구욤
2022. 2. 23. 오후 5:22, 썰~~ : 프론트에서 로그인 처리 문제 있었던 기억이있네요..
2022. 2. 23. 오후 5:22, 피카츄돈까스/React,RN : 프론트가 바라보는 api주소는 하나로 쓰고
2022. 2. 23. 오후 5:23, 파이버 : 서비스가 글로벌 지역에 걸쳐 있거나 트래픽이 많을 경우 등등에는 서비스를 백엔드 한 개로 절대 돌릴 수가 없으니까 뒷단 컴퓨터를 많이 쓰는 케이스는 드물진 않다고 봐요
2022. 2. 23. 오후 5:25, 파이버 : 세션은 컴퓨터 한대에 갇혀 있기 때문에 여러 컴퓨터의 백엔드가 같이 세션 정보를 공유하게 하려면 (아마도 썰님 회사가 이거때문에 고생하신 것 같은데) 여러 이슈가 터지게 되고
2022. 2. 23. 오후 5:25, 파이버 : 그런 문제점을 보완하기 위해서 JWT가 나온 걸로 알고 있어요. 물론 아직 좀 힙하고 보안상 찝찝한 느낌이 있긴 하지만요
2022. 2. 23. 오후 5:26, 개발닥 : 힙은 아닌것 같아요
2022. 2. 23. 오후 5:26, 개발닥 : 요즘은 쿠키 세션파가 더 힙한 느낌?
2022. 2. 23. 오후 5:27, 파이버 : 그냥 나온지 이제 10년 좀 넘은 신생기술이라고 봐서 그렇게 표현했어요 ㅎ
2022. 2. 23. 오후 5:27, 파이버 : 예를 들어서 JWT에서 로그아웃을 대체 어떻게 처리할 것인가 <- 되게 빡센 주제인 거 같더라고요
2022. 2. 23. 오후 5:27, 썰~~ : 그런가요?? 쿠키 세션이 저는 오래된걸로 알고있어서요
2022. 2. 23. 오후 5:27, 개발닥 : 요즘 포트폴리오 보면
2022. 2. 23. 오후 5:27, 파이버 : 쿠키가 JS보다 나이가 많죠
2022. 2. 23. 오후 5:27, 개발닥 : 쿠키 세션으로 로그인/로그아웃은 거의 드물잖아요 다 JWT 써서요
2022. 2. 23. 오후 5:28, 파이버 : 그건 요즘 학원이나 강의들이 JWT를 가르쳐서 그런게 아닐까 싶네요 쿠키가 분명 전통적이고 정석인거고
2022. 2. 23. 오후 5:29, 썰~~ : 그렇긴해요 학원에서도 가르치키도 편한감은 있을거같아서
2022. 2. 23. 오후 5:29, 썰~~ : 그래도 프 백 나뉜 상황에서는 저는 jwt가 좀더 좋지 않나라는 생각을 가지고있습니다
2022. 2. 23. 오후 5:29, 리린이 : 갑자기 뜬금없는 질문인데, 프로그래머스에 채용공고 올리는 회사들은 프로그래머스 코테 문제들 얼마나 풀었는지? 보고싶기도 하고 아니면 코딩테스트를 시행하는 회사인 경우가 많은가요?
2022. 2. 23. 오후 5:31, 파이버 : 아 혹시 말나온김에 궁금해진건데 실무에서 JWT 쓰시면 로그아웃 처리 어떻게 하시나요? 세션 방식이면 그냥 세션 날려버리면 되는데, JWT 는 이미 세상에 나가버려서 못 건드려서 레디스나 DB 써서 좀 복잡하게 처리해야 된다고 하더라구요
2022. 2. 23. 오후 5:31, 개발닥 : 아무튼 제 생각은 대충 이래요 

1.리프래시 토큰 쓸려면 서버에 두어야한다 ( 클라에 노출되면 다 털린걸로 봐도 무방 )

2. 자동로그인은 액세스 토큰 호출후 리프레시 토큰 생존 여부로 구현

3. 근데 그럴바에 쿠키 세션이 더 관리에 수월..
2022. 2. 23. 오후 5:34, 개발닥 : 이건 방법이 없다고 알아요
2022. 2. 23. 오후 5:34, 개발닥 : 그래서 액세스 토큰 짧게 주는 정책으로 해결해요
2022. 2. 23. 오후 5:34, 피카츄돈까스/React,RN : 저도 요방법 생각했어염
2022. 2. 23. 오후 5:34, 개발닥 : 정책으로 해결해야하는 문제 같아요
2022. 2. 23. 오후 5:34, 썰~~ : 저도 같은 방법으로 합니다
2022. 2. 23. 오후 5:35, 썰~~ : 길어야 30분이고 평균 10~15분으로해달라고 항상 요청합니다
2022. 2. 23. 오후 5:35, 썰~~ : 그래서 자동 만료되도록
2022. 2. 23. 오후 5:35, 피카츄돈까스/React,RN : 첨에 암것도 모를 때는 계정에 유효한 accessToken정보를 같이 넣어놨었는데..
중복 로그인 방지도 필요했어서 ..ㅋㅋㅋ
로그아웃하면서 계정에 token 정보 날려버리는 식으로 관리하긴 했어염 ..헿..
2022. 2. 23. 오후 5:35, 썰~~ : 그쵸 모를땐 그냥 문자 덩어리 그이상도 이하도 아니니..
2022. 2. 23. 오후 5:35, 썰~~ : 알면 그거 다 정보 까볼수 있어서 ㅋㅋ
2022. 2. 23. 오후 5:37, 파이버 : 근데 궁금한게 또 있는데
2022. 2. 23. 오후 5:38, 파이버 : 쿠키 세션 방식도 SESSION_ID 가 클라에 노출된 상태인건데
2022. 2. 23. 오후 5:38, 파이버 : 세션 id 가 httpOnly 에 있는 거랑 리프레시 토큰이 httpOnly 에 있는 거랑 보안상 유의미한 차이가 있나요??
2022. 2. 23. 오후 5:39, 개발닥 : 관리의 용이함에 있겠죠
2022. 2. 23. 오후 5:39, 파이버 : 앗 요거 다들 답변 감사드립니다..! 저도 좀더 고민해봐야겠어요 😲🙇
2022. 2. 23. 오후 5:39, 개발닥 : CS들어오면 저희가 세션을 지울수 있잖아요? 그리고 리프레시랑 엑세스 토큰은 로직이 좀 복잡하잖아요..
2022. 2. 23. 오후 5:39, 썰~~ : 그 관리의 용이함이 프론트쪽은
2022. 2. 23. 오후 5:39, 썰~~ : 해당이 안되는거같아요..
2022. 2. 23. 오후 5:39, 썰~~ : 오히려 관리의 용이함이 토큰이 더 좋은거같아요
2022. 2. 23. 오후 5:39, 개발닥 : 프론트도 오히려 그게 더 편하지 않나요?
2022. 2. 23. 오후 5:39, 파이버 : 그러니까 보안상 리프레시토큰이 노출되면 다 털린 거라고 말씀하셨는데
2022. 2. 23. 오후 5:40, 개발닥 : 계속 주고받고 핸드쉐이킹 해야하잖아요
2022. 2. 23. 오후 5:40, 파이버 : session id 가 노출된 상황은 왜 다 털린 거라고 안 보시는 건지?
2022. 2. 23. 오후 5:40, 파이버 : 그게 궁금한 거였어요!
2022. 2. 23. 오후 5:40, 썰~~ : 그럼 인증 인가처리를 항상 백에서 하기때문에
2022. 2. 23. 오후 5:40, Luke : refresh token 프론트에 저장해서 사용하는 게 정석입니다. access token이랑 같이 return 받아요
2022. 2. 23. 오후 5:40, Luke : 사진
2022. 2. 23. 오후 5:40, 피카츄돈까스/React,RN : 넹넹 마자염
2022. 2. 23. 오후 5:40, 썰~~ : 저희가 필요할때 불가능해요..
2022. 2. 23. 오후 5:40, 개발닥 : 리프레시는
2022. 2. 23. 오후 5:40, 개발닥 : 텀이 길지 않나요?
2022. 2. 23. 오후 5:40, 썰~~ : 그래서 쿠키에 넣어야죠
2022. 2. 23. 오후 5:41, 피카츄돈까스/React,RN : access token 익스파이어드 되면 refreshtoken 사용해서 재발급받는거니까염
2022. 2. 23. 오후 5:41, 개발닥 : 이것도 다 털린건데 음
2022. 2. 23. 오후 5:41, 파이버 : 사실 쿠키도 텀이 아무리 짧아도 1~2시간은 줄텐데
2022. 2. 23. 오후 5:41, 개발닥 : 리프레시는
2022. 2. 23. 오후 5:41, 피카츄돈까스/React,RN : 프론트가 갖고 있어야죠
2022. 2. 23. 오후 5:41, 개발닥 : 지금 리프레시를 프론트에 준 케이스는
2022. 2. 23. 오후 5:41, 개발닥 : 로그인도 다 프론트에서 준거잖아요?
2022. 2. 23. 오후 5:41, 개발닥 : 근데 리프레시는 텀이 길잖아요? 1달정도 주는데
2022. 2. 23. 오후 5:42, 개발닥 : 털리면 1달동안 해커가 맘대로 로그인 하겠죠 토큰은 발급취소도 안되구요
2022. 2. 23. 오후 5:42, 썰~~ : 터는 방법이 궁금합니다
2022. 2. 23. 오후 5:42, 개발닥 : 너무 많잖아요
2022. 2. 23. 오후 5:42, 피카츄돈까스/React,RN : 아 jwt 공부한지 너무 오래됐넹
2022. 2. 23. 오후 5:42, 썰~~ : 터는 방법을 생각하시는게 궁금해요
2022. 2. 23. 오후 5:42, 썰~~ : 예시로 말씀해주시면요..
2022. 2. 23. 오후 5:42, 파이버 : 저도 터는 방법이 없다고 보긴 해요
2022. 2. 23. 오후 5:42, 파이버 : 물론 보안이란 틀어막는 게 아니라 뚫릴 확률을 낮추는 작업이지만
2022. 2. 23. 오후 5:42, 개발닥 : httpOnly에 넣어서 그런거져?
2022. 2. 23. 오후 5:42, 썰~~ : cookie httponly로 보내면 자바스크립트로 자동으로 못가져가요
2022. 2. 23. 오후 5:42, 썰~~ : 맞아요
2022. 2. 23. 오후 5:43, 파이버 : 암튼 대중적인 의미에서 보안성이 충분하다고 보긴 합니다
2022. 2. 23. 오후 5:43, 개발닥 : 근데 httpOnly 쓰면
2022. 2. 23. 오후 5:43, 개발닥 : 프론트에서도 쿠키 읽어올수있나요?
2022. 2. 23. 오후 5:43, 썰~~ : 그걸 가져가려면 개발자 창 열어서 직접 복붙해야되는건데
2022. 2. 23. 오후 5:43, 파이버 : 못읽어요
2022. 2. 23. 오후 5:43, 개발닥 : 그럼 리프래시는 아무런 값 없이
2022. 2. 23. 오후 5:43, 썰~~ : 못읽어요
2022. 2. 23. 오후 5:43, 피카츄돈까스/React,RN : 앗 요건 db 쪽 얘기였습니당 ㅋㅋㅋㅋ
2022. 2. 23. 오후 5:43, 개발닥 : 빈 JWT고
2022. 2. 23. 오후 5:43, 개발닥 : 로그인 했다는 용도네요?
2022. 2. 23. 오후 5:43, 개발닥 : 로그인 했었다 인증해주는 용도?
2022. 2. 23. 오후 5:43, 썰~~ : 비어있다는 아닐거같고
2022. 2. 23. 오후 5:44, 썰~~ : 백엔드에서 노출되도 되는정보가 들어가지 않을까요
2022. 2. 23. 오후 5:44, 개발닥 : 음.. 어떤걸까요?
2022. 2. 23. 오후 5:44, 개발닥 : 근데 쿠키에다가 리프레시 토큰 발급하면
2022. 2. 23. 오후 5:44, 썰~~ : uuid정도?
2022. 2. 23. 오후 5:44, 썰~~ : 만료시간이랑
2022. 2. 23. 오후 5:44, 개발닥 : 쿠키 만료되는 시점까지만 자동로그인이 되겠네요?
2022. 2. 23. 오후 5:45, 썰~~ : 맞아요
2022. 2. 23. 오후 5:45, 개발닥 : 아니면 쿠키를 영구로 주는걸까요?
2022. 2. 23. 오후 5:45, 썰~~ : 아니면 새로 리프레쉬로 토큰 요청할때 연장하는 곳도 봤어요
2022. 2. 23. 오후 5:45, 개발닥 : 그러면 거기에 꼭 리프레시 토큰을 넣어야 하는 이유가 뭐에요?
2022. 2. 23. 오후 5:45, 썰~~ : 관리의 용이성입니다
2022. 2. 23. 오후 5:45, 파이버 : 관리의 용이성이죠
2022. 2. 23. 오후 5:46, 개발닥 : 아하 액세스 리프레스 토큰이 더 편하신거군요
2022. 2. 23. 오후 5:46, 썰~~ : 프론트측에서는
2022. 2. 23. 오후 5:46, 썰~~ : 그게 더 편합니다 백에서 해주니까 더 편한거 아냐?
2022. 2. 23. 오후 5:46, 썰~~ : 이런생각하시는 저희 팀장님 같은분 있는데
2022. 2. 23. 오후 5:46, 개발닥 : 근데 그게 쿠키/세션에 비해서 어디가 편리한가요?
2022. 2. 23. 오후 5:46, 개발닥 : 저는 불편했어요
2022. 2. 23. 오후 5:46, 썰~~ : 절대 그게 편한게 아닙니다..
2022. 2. 23. 오후 5:46, 썰~~ : 프론트가 인증 인가 관리가 안됩니다..
2022. 2. 23. 오후 5:46, 파이버 : 사실 저는 프론트는 쿠키가 더 편하다고 보긴 합니다
2022. 2. 23. 오후 5:46, 개발닥 : 인증 인가 관리라 함은 로그인 용도에요?
2022. 2. 23. 오후 5:47, 파이버 : 아까 이얘기인거같아요
2022. 2. 23. 오후 5:47, 개발닥 : 뭐 저멀리 뒤에 있는 다른 서버 인증용은 아니져?
2022. 2. 23. 오후 5:47, 썰~~ : 그렇기도 하고
2022. 2. 23. 오후 5:47, 썰~~ : 그쵸
2022. 2. 23. 오후 5:47, 썰~~ : 만약에 저희 회사 의 서버가 여러종류가 있다면
2022. 2. 23. 오후 5:47, 썰~~ : 다른서버가 될수도 있지만
2022. 2. 23. 오후 5:47, 개발닥 : 흠..
2022. 2. 23. 오후 5:47, 개발닥 : 근데 그러면 레디스 같은 세션 서버는
2022. 2. 23. 오후 5:47, 썰~~ : 검색서버 따로있고
2022. 2. 23. 오후 5:47, 썰~~ : 이런느낌이면..
2022. 2. 23. 오후 5:49, 개발닥 : 이건 근데..
2022. 2. 23. 오후 5:49, 개발닥 : 보통 bff에서 처리하지 않나여..?
2022. 2. 23. 오후 5:49, 개발닥 : 아니면 프론트에서 토큰 들고있다 브라우저 -> bff -> 어떤 서버 -> 저기 서버 요렇게 릴레이 가나요..?
2022. 2. 23. 오후 5:50, 썰~~ : 저도 설계까진 들어가봤는데
2022. 2. 23. 오후 5:50, 썰~~ : 백엔드 설계까진 몰라서
2022. 2. 23. 오후 5:50, 썰~~ : 엔드포인트 요청이 달라지는 경우는 있었어요
2022. 2. 23. 오후 5:50, 파이버 : 근데 사실 bff가 어떻게 처리되어 있든
2022. 2. 23. 오후 5:51, 파이버 : 암튼 브라우저에서 출발해서 인증서버에 도착한다는 사실은 변함이 없어서
2022. 2. 23. 오후 5:51, 파이버 : 이건 크게 중요한 이슈가 아닐 거 같아요
2022. 2. 23. 오후 5:51, 개발닥 : 저는 이게 핵심이라고 보거든요
2022. 2. 23. 오후 5:52, 피카츄돈까스/React,RN : 음 bff에서 인증서버를 통해 한번 인증 하지 않을까요?
2022. 2. 23. 오후 5:53, 피카츄돈까스/React,RN : 제가 bff 에대해서 잘모르는데 bff가 데이터에 필요한 api호출 까지 모두 하는 식인가욤?
2022. 2. 23. 오후 5:53, 피카츄돈까스/React,RN : UI에 대한 부분을 bff를 사용하여 하는 것은 들었는데
2022. 2. 23. 오후 5:54, 피카츄돈까스/React,RN : 요 상황에서는 토큰이 필요 없을 것 같고
2022. 2. 23. 오후 5:54, 개발닥 : 이게 왜 핵심이냐면 저희는 보통 도메인 서버 1개 바라보기 때문에 JWT가 필요하지 않고 서버는 여러 서버 거쳐서 바라보니까 JWT가 필요하다고 보거든요
2022. 2. 23. 오후 5:54, 피카츄돈까스/React,RN : 요 상황에서는 토큰인증이 필요하니까 bff에서 인증서버를 거쳐야 하지 않을까요?
2022. 2. 23. 오후 5:54, 파이버 : bff여도 어차피 브라우저가 서버한테 "내가 권한이 있다" 라는 걸 입증해야 한다는 근본적인 원칙은 달라지지 않잖아요
2022. 2. 23. 오후 5:55, 썰~~ : bff 저도 용어를 몰랐어서 검색해봤는데 거기서 처리할거같아요..
2022. 2. 23. 오후 5:55, 피카츄돈까스/React,RN : 권한이 필요한 부분이 있고 그렇지 않은 부분이 있을텐데
2022. 2. 23. 오후 5:56, 피카츄돈까스/React,RN : 저는 요건 무슨말인지 모르겠어욤 jwt가 1개냐 여러개냐에따라 필요여부를 가를 수 없다고 생각해욤
2022. 2. 23. 오후 5:56, 개발닥 : jwt가
2022. 2. 23. 오후 5:56, 피카츄돈까스/React,RN : 서버갯수
2022. 2. 23. 오후 5:56, 개발닥 : stateless를 위해서 나온거잖아요?
2022. 2. 23. 오후 5:56, 파이버 : 그쵸
2022. 2. 23. 오후 5:56, 개발닥 : 쿠키 세션은 반대이구요
2022. 2. 23. 오후 5:56, 파이버 : 그쵸
2022. 2. 23. 오후 5:56, 개발닥 : stateless가 유리한 시점은
2022. 2. 23. 오후 5:57, 개발닥 : MSA처럼 복잡한 시스템에서 유리하잖아요? 인증 인가가 제각각 다르면 어지러우니까요
2022. 2. 23. 오후 5:57, 개발닥 : 그렇기에 서버에서는 JWT가 필요하궁 클라이언트는 도메인 서버 1대 바라보니 필요없다는 말이였어요
2022. 2. 23. 오후 5:57, 개발닥 : 개인적인 생각입니다
2022. 2. 23. 오후 5:57, 파이버 : 근데 클라이언트가 도메인 서버 1대를 바라보는게 의미가 있나요?
2022. 2. 23. 오후 5:58, 파이버 : api는 백엔드 서버한테 쏘는건데
2022. 2. 23. 오후 5:58, 피카츄돈까스/React,RN : 오호 이 부분은 제가 정확히 모르는 부분이네염 그냥 jwt가 편해서 썼는데 왜를 생각해보지 않았네욤 고부분도 생각을 해봐야겠습니다. 감사합니다 개발닥님
2022. 2. 23. 오후 5:58, 개발닥 : 그게 많다고 보거든요
2022. 2. 23. 오후 5:58, 파이버 : 사실 도메인 서버 1대를 제대로 이해를 못한거같은데
2022. 2. 23. 오후 5:58, 개발닥 : 서버 1대는 아니고
2022. 2. 23. 오후 5:58, 개발닥 : 도메인 서버만 이라고 정정해도 될까요?
2022. 2. 23. 오후 5:58, 파이버 : 아하
2022. 2. 23. 오후 5:59, 파이버 : 왠지 논의가 세션이 좋냐 JWT가 좋냐 쪽으로 넘어온거같네요 ㅋㅋㅋㅋㅋㅋ
2022. 2. 23. 오후 5:59, 개발닥 : 제 생각은 그래요 리프레시 토큰도 활용도를 연구해봐야할것 같아요
2022. 2. 23. 오후 5:59, 개발닥 : httpOnly도 공부해야할것 같아요 ㅋㅋㅋㅋ
2022. 2. 23. 오후 6:00, 파이버 : 저는 요거는 중립이긴 합니다.. 상황 맞게
2022. 2. 23. 오후 6:00, 파이버 : MSA면 토큰 쓰고 한대로 돌려도 되면 세션 쓰고 하고 있어요
2022. 2. 23. 오후 6:00, 파이버 : 암튼 리프레시 토큰이 클라이언트에 있는 게 왜 보안에 문제가 되는가 하는 부분이 궁금했었는데 답변 감사드립니다 개발닥님!
2022. 2. 23. 오후 6:01, 파이버 : 같이 논의해주셨던 썰님이랑 피돈님이랑 다른분들도 다들 감사드려요 👍👍
2022. 2. 23. 오후 6:01, 개발닥 : 제가 더 감사하죠 새로운 키워드 많이 얻어가요
2022. 2. 23. 오후 6:06, bb : 답변 감사합니당!
2022. 2. 23. 오후 6:09, 리린이 : 아까 열띤 토론에 묻혀서..간단한 질문하나 드리고 싶습니다. 프로그래머스에 채용공고 올리는 회사들은 프로그래머스 코테 문제들 얼마나 풀었는지? 보고싶기도 하고 아니면 코딩테스트를 시행하는 회사인 경우가 많은가요?
2022. 2. 23. 오후 6:27, 썰~~ : 저도 이건 중립이긴합니다. 웹개발자 한명이 만드는 사황에서는 세션이 훨씬 낫다고 생각은 하고있어서요 
뭐든 상황에 맞는게 제일 중요한거같아요 ㅎㅎ
2022. 2. 23. 오후 6:36, 썰~~ : 좋은의견 주셔서 감사합니다 ㅎㅎ
2022. 2. 23. 오후 7:05, 유용태 (teo.yu) : 오랜만에 블로그 글을 쓰네요. :)
Typescript는 어떻게 공부해야 하나요?
https://velog.io/@teo/typescript
2022. 2. 23. 오후 9:40, 꼬북 : 오와 진짜 기다렸는데 ㅠ
2022. 2. 23. 오후 9:41, 꼬북 : 잘읽겠습니다
2022. 2. 23. 오후 9:46, 최민석 : 기다리고기다리던 타스네요 잘읽겠습니당~~

2022년 2월 24일 목요일
2022. 2. 24. 오전 1:13: fefe님이 들어왔습니다.
2022. 2. 24. 오전 1:13, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 24. 오전 8:52, yen : 제가 어떤 repo 를 fork 했는데, upstream repo 의 브랜치가 생성될때마다 이를 제 repo에 가져올수 있는 방법이 있나요? 
Fetch upstream 은 원래 있던 브랜치에서만 fetch할 수 있는 거 같아서요
2022. 2. 24. 오전 8:56, 비옷입은 튜브 : https://bioconductor.org/developers/how-to/git/pull-upstream-changes/
2022. 2. 24. 오전 9:13, yen : 해당 브랜치만 fetch 하는 부분인 것 같아요! Upstream 브랜치랑 똑같은 브랜치 만들어서 fetch 하는 방식으로 일단 했습니다
2022. 2. 24. 오전 10:35, 알모 : git remote update upstream —p
2022. 2. 24. 오전 10:35, 알모 : 하시면 upstream 레파지토리 전체를 업데이트 할 수 있습니다
2022. 2. 24. 오전 10:41, yen : 다음에 한번 해볼게요! 감사합니다~!
2022. 2. 24. 오후 12:59: remix님이 들어왔습니다.
2022. 2. 24. 오후 12:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 24. 오후 12:59, 유용태 (teo.yu) : 안녕하세요! remix님 반갑습니다 ~
2022. 2. 24. 오후 1:00, remix : 안녕하세요!!
2022. 2. 24. 오후 1:00, remix : fe를 시작하는 주니어입니다 잘부탁드립니다!
2022. 2. 24. 오후 1:00, 유용태 (teo.yu) : 반갑습니다. 어서오세요. ㅎ +_+
2022. 2. 24. 오후 1:01, 유용태 (teo.yu) : 네 여기는 개발하다가 다른 개발자님들을 어떻게 하고 있을지 궁금할때 서로 물어보고 좋은 자료나 정보가 있으면 또 공유하고 그런 공간입니다
2022. 2. 24. 오후 1:01, 유용태 (teo.yu) : 언제든 편하게 글 남겨주세요 :)
2022. 2. 24. 오후 1:07, 유용태 (teo.yu) : vite in 100 seconds
https://youtu.be/KCrXgy8qtjM
2022. 2. 24. 오후 1:11, 꼬북 : 올려주신 타입스크립트 글에 vite 나와서 알아보려고했는데 바로 올려주셨네요 ㅎㅎ
2022. 2. 24. 오후 1:35, remix : 혹시 vite랑 함께 모노레포 구성 경험은 있으실까요? 지금 lerna를 쓰고 있는데 빌드가 느려서 한번 바꿔보려고 해요
2022. 2. 24. 오후 1:36, 유용태 (teo.yu) : 아뇨.. npm workspace를 가지고 툭닥투닥하다가 '굳이 라이브러리를 따로 배포해야하나?? 그냥 빌드할때 묶이면 되지 않아?' 싶어서 그냥 repo를 통일하고 빌드 세팅만 2개로 나누는 식으로 처리해버렸어요.
2022. 2. 24. 오후 1:37, 유용태 (teo.yu) : 원하는 방향성이랑 제 상황이랑 맞지 않아서 monorepo가 필요하신거라면 답변을 드리기 어렵겠네요 (안해봤어요 ㅎㅎ)
2022. 2. 24. 오후 1:38, remix : 아하 그렇군요 패키지들간에 디펜던시가 있는 경우여서 버전 관리라던지 이런게 러나가 좋긴 하더라구요
2022. 2. 24. 오후 1:38, remix : vite lerna 키워드로 검색해도 잘 안나오긴 했어요
2022. 2. 24. 오후 1:56, 유용태 (teo.yu) : 혹시 성공하시면 글 한번 공유 부탁드려요 ^^;; ㅋ +_+bb
2022. 2. 24. 오후 2:44, 영보떼 : 잠시 배터리 때문에 나갔다 올게요 !
2022. 2. 24. 오후 2:44: 영보떼님이 나갔습니다.
2022. 2. 24. 오후 2:50, 자율 : 자바스크립트 고차함수를 잘 써보고 싶은데, 물론 많이 써보는거 밖에 없다는 걸 알아서.. 어떻게 연습해보면 좋을까요? ㅠ0ㅠ
2022. 2. 24. 오후 2:52, 유용태 (teo.yu) : 일단은 array method를 가급적 많이 써보시길 바래요.
2022. 2. 24. 오후 2:52, 유용태 (teo.yu) : 그리고 필요에 의해서 해야 하는 거긴 한데 연습을 하신다고 하는 거니까.
2022. 2. 24. 오후 2:53, remix : 습관이 중요한 것 같습니다 쓰다보면 자연스럽게 쓸 수 있을꺼에요
2022. 2. 24. 오후 2:54, 자율 : 막상 써야될 순간에 생각이 안나서 못 쓰더라구요 ㅠㅠ 많은 연습이 필요할거 같네요 감사합니다!
2022. 2. 24. 오후 2:57, 유용태 (teo.yu) : 1)
일단... 구현 내용을 하드코딩으로 짠다.

.... foo(3939)
... foo("abc")


2)
하드코딩된 값을 변수로 올린다.

const num = 3939
const abc = "abc"

.... foo(num)
... foo("abc")


3)
변수를 인자로 하는 함수를 만든다.

const MyFunc = (num, abc) => {
  .... foo(num)
  ... foo("abc")
}


4)
함수를 인자로 받는 함수를 만든다.

const getFoo = (id) => {
  const num = 3939
  const abc = "abc"
  
  return  {num, abc}
}

const MyFunc = (fn) => {
  const {num, abc} = fn(id)

  .... foo(num)
  ... foo("abc")
}
2022. 2. 24. 오후 2:57, 유용태 (teo.yu) : 약간 이런식으로 코드를 정리하면서 필요할 때만 쓰는 거긴 한데... 설명이 참 어렵네요 ㅠ
2022. 2. 24. 오후 2:58, 유용태 (teo.yu) : 아니면 lodash와 같은 함수형 라이브러리 중에서 유용하다 싶은 함수를 하나 구현해보세요. groupBy라던가 distinct라던가
2022. 2. 24. 오후 2:59, 유용태 (teo.yu) : distinct([a,b,c,d,e], value => value.key)
2022. 2. 24. 오후 2:59: 나그네님이 들어왔습니다.
2022. 2. 24. 오후 2:59, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.

환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 2. 24. 오후 3:00, 유용태 (teo.yu) : 안녕하세요~ 반갑습니다. 나그네님~ 어서오에ㅛ :)
2022. 2. 24. 오후 3:00, 나그네 : 이모티콘 
2022. 2. 24. 오후 3:00, 유용태 (teo.yu) : 잘 부탁드립니다~
2022. 2. 24. 오후 3:00, 유용태 (teo.yu) : 여기는 개발하다가 궁금한게 있을때 물어보고 또 내가 아는거다 싶으면 또 바로 답변남기고 하는 그런 공간입니다. 편하게 글 남겨주세요
2022. 2. 24. 오후 3:01, 나그네 : 넵 ㅎㅎ 반갑습니다~~
2022. 2. 24. 오후 3:01, 유용태 (teo.yu) : 좋은 자료나 링크 있다면 얼마든지 공유해주세요. 그냥 링크만 던져좋으면 알아서 디스코드에 좋은 자료들은 아카이브를 하고 있습니다! ㅎ
2022. 2. 24. 오후 3:02, 파이버 : 저 궁금한 게 있는데 테오 인사글은 매번 새로 쓰시나요..? 누구 들어오실 때마다 내용이 매번 바뀌는 거 같아서 ㅋㅋㅋㅋㅋ
2022. 2. 24. 오후 3:02, 유용태 (teo.yu) : 네~ 리얼타임 접니다!! ㅋㅋ
2022. 2. 24. 오후 3:02, 나그네 : 와우...!
2022. 2. 24. 오후 3:04, 유용태 (teo.yu) : 스프린트나 면접 스터디와 같은 이벤트등도 여기 사람들과 함께 진행해보고자 하고 있습니다. 혹시 혼자서는 하기 힘들었던 것들이 있다면 얼마든지 제안 주세요 한번 진행해보겠습니다!
2022. 2. 24. 오후 3:06, j : 혹시 다들 웹팩 바벨은 어떻게 공부하시나요..?
2022. 2. 24. 오후 3:08, 최민석 : 홍보는아닌데 저는 유인동 강사님 Inflearn 강의 좋더라고용 추천드립니다
2022. 2. 24. 오후 3:17, 보초개발 : 저는 이걸로 공부했습니다

https://youtu.be/MpGLUVbqoYQ
2022. 2. 24. 오후 3:18, 보초개발 : 저 영상이 최신 버전이랑 조금 다른지 잘 안되는 게 하나 있었는데 공식문서랑 댓글 참고해서 해결했어요
2022. 2. 24. 오후 3:19, j : 앗 감사합니다!
2022. 2. 24. 오후 3:20, 나그네 : 웹팩 바벨은 목적없이 공부하면 힘들어요~

- 다른 사람이 설정한 보일러플레이트 한 줄 보고
- 웹팩, 바벨이 왜 생겨났고 쓰이는지 또 보고
- 구글링할때는 꼭 검색 옵션 필터링 걸어서 6개월~1년 이내 자료로만 보는게 좋아요
2022. 2. 24. 오후 3:21, Luke : 번들러가 진짜 설정 바뀌는게 헬이라... ㅋㅋㅋㅋ 저도 6개월 이전 자료는 신뢰하지 않습니다 ㅋㅋㅋ
2022. 2. 24. 오후 3:26, j : 공감합니3ㅏ..
2022. 2. 24. 오후 3:43, 결과보단 과정을 / React,JS : 네카쿠라배는 자녀 학자금지원(대학) 해주나요??
2022. 2. 24. 오후 3:50, Vintz : 배민은 해주는 걸로 알고 있어요
2022. 2. 24. 오후 3:53, 개발닥 : 삭제된 메시지입니다. 
2022. 2. 24. 오후 4:28, 보초개발 : i18next 쓰시는 분 계신가요?
2022. 2. 24. 오후 4:31, 보초개발 : 일렉트론+CRA로 앱 만들고 있는데 빌드한 앱을 처음 켜면 번역된 텍스트가 아니라 key값이 그대로 뜨고, 아무 input 창이나 마우스로 클릭하면 그제서야 번역된 텍스트가 뜹니다...
2022. 2. 24. 오후 4:48, 비옷입은 튜브 : 나그네님 말씀 ㅠㅠ너무 공감합니다…
2022. 2. 24. 오후 4:49, 또리 : 저 질문드려도될까요??
2022. 2. 24. 오후 4:50, 또리 : 리액트에서 수정모달을 띄우려고하는데
2022. 2. 24. 오후 4:50, 또리 : class형으로되어있구요 constructor내부에서 api호출해서 값을 받아와서 매핑해주고있는데 찾아보니까 didmount로 호출해서 하라고 그러던데
2022. 2. 24. 오후 4:51, 또리 : 두개 차이가 혹시 뭘까요,.,.??
2022. 2. 24. 오후 5:01, 유용태 (teo.yu) : constructor는 컴포넌트가 생성될때 실행이 되구요. didMount는 컴포넌트가 DOM으로 만들어져 붙은 이후에 발생합니다.
2022. 2. 24. 오후 5:03, 무지개귀여워 : 저 궁금한게 있는데요 레거시 프로젝트로 개발중인데 nvm을 사용하고있고package.json에 기재한대로 라이브러리도 잘 받아지는 걸 확인했습니다.(캐럿등 원하는 버전으로 받아짐) 근데 젠킨스 빌드 후에 확인해보면 버전이 다르게 받아지는 모양인데요 젠킨스 빌드 후에 node_modules폴더를 지워서 매번 새로 받는데 무슨 문제일까요..? ㅜㅜ
2022. 2. 24. 오후 5:07, 또리 : 답변감사합니다!! 다시 찾아보니 렌더링전에 결정된 값을 셋팅해줄경우에는 constructor을 사용해서 state설정을 해준다고 되어있네요,,!!
2022. 2. 24. 오후 5:10, 결과보단 과정을 / React,JS : 답변 감사합니다 ㅎㅎ
2022. 2. 24. 오후 5:11, 유용태 (teo.yu) : 구글 스프린트 4기 회고 글입니다 :)
https://velog.io/@teo/google-sprint-4
2022. 2. 24. 오후 5:42, 자율 : 앗 지금 확인했네요! 감사합니다!!! 함수형프로그래밍도 궁금했는데 봐야겠어요!
2022. 2. 24. 오후 5:43, 자율 : 매번 다른 내용으로 진행되나요? 저번에는 음식룰렛같은거였던거 같은데 ㅎㅎ
2022. 2. 24. 오후 5:52, 유용태 (teo.yu) : 네~ 참가자가 각자 생각해온 아이디어를 첫날에 경진대회(?)를 열어서 그거 하나를 만들어보는 식으로 진행됩니다~
2022. 2. 24. 오후 6:43, 핸디(강경석) : https://jobs.class101.net/dev/event/secret_codereview?fbclid=IwAR09vvpYxkwAqcx6B6nXWeKqDG5XMc_fZhV9DP8FT8BpsLdjVyiE-h_QFQc
2022. 2. 24. 오후 6:43, 핸디(강경석) : 좋은 회사의 코드리뷰와 스타일가이드가 있길래 공유드립니다
2022. 2. 24. 오후 6:49, 프론돌이 : 배민 대학 지원은 없습니다~
2022. 2. 24. 오후 6:49, 프론돌이 : 대학 지원은 삼성 처럼 대기업으로 가야 있을듯?
2022. 2. 24. 오후 6:50, Vintz : 아 그런가요? 제가 잘못 알고있었나보네요..정정 감사합니다!
2022. 2. 24. 오후 6:50, 결과보단 과정을 / React,JS : 아…그런가요 ;; 그럼 이름있는 IT 회사는 보통 학자금 지원은 없나보죠?
2022. 2. 24. 오후 6:51, 프론돌이 : 아직 애기 대학갈정도로 오래 지속된 IT 회사 & 근속년수 되신 분이 드물다 보니까 
관련 복지도 없을 것 같아요. 

요새는 조금씩 IT 회사들도 오래된 회사들 생기면서 & 근속년수 오래 되면서, 서서히 생길 수도 있겠는데, 

그게 아닌 이상은 기존의 대기업들이 있을 것 같네요
2022. 2. 24. 오후 6:52, 프론돌이 : 당장 결혼 안한 상태에서 내가 저 직장평생 다닐 것도 아닌데, 
자녀 대학 학자금 지원~  이라는 복지가 있다고 했을 때, 
우와~ 좋다~~  라고는 할 수 있지만, 당장 와닫는 복지가 아니다보니, 
회사 입장에서도 그 비용으로 다른 와닫는 복지를 추가하는게 더 낫다고 생각할 수도 있구요 ㅋ
2022. 2. 24. 오후 6:53, 결과보단 과정을 / React,JS : 아… 그렇군요
2022. 2. 24. 오후 6:53, 떨고있는 어피치 : 저도 동일한 생각입니다 !
아마 직원 중 그나마 큰 애기가
초등학생 수준일것같아요 ㅎㅎ
2022. 2. 24. 오후 6:53, 결과보단 과정을 / React,JS : 제가 나이가 있는지라 궁금해서 여쭤봤어요 ㅎㅎ 저 같은 틀딱은 IT회사서 뽑아주지도 않겠지만…
2022. 2. 24. 오후 6:53, 프론돌이 : 오히려 그렇게 먼? 복지보다는 어린이집 복지가 더 나을듯? ㅋ
2022. 2. 24. 오후 6:53, 프론돌이 : 아...그러셨군요 ㅜ
2022. 2. 24. 오후 6:54, 프론돌이 : 틀딱은 아니십니다! ㅋ
2022. 2. 24. 오후 6:54, 결과보단 과정을 / React,JS : 여기는 복지가 있는곳인데, IT회사가 아니다 보니
2022. 2. 24. 오후 6:54, 개발닥 : 약간 학자금 이런건
2022. 2. 24. 오후 6:54, 개발닥 : SK나 삼성같은곳 가야 주는것 같아여
2022. 2. 24. 오후 6:54, 프론돌이 : 전통의 대기업들!
2022. 2. 24. 오후 6:55, 결과보단 과정을 / React,JS : 저는 SK나 삼성은 아니자만 비슷한 대기업중에 한곳을 다니고 있긴 합니다.
2022. 2. 24. 오후 6:55, 프론돌이 : 한화! 롯데!
2022. 2. 24. 오후 6:55, 프론돌이 : 사랑해요 LG
2022. 2. 24. 오후 6:55, 결과보단 과정을 / React,JS : 근데 IT회사가 가고 싶어서요 ㅎㅎ
2022. 2. 24. 오후 6:55, 결과보단 과정을 / React,JS : 엌
2022. 2. 24. 오후 6:55, 결과보단 과정을 / React,JS : 도망쳐요 헬쥐에 다닙니다 ㅋ
2022. 2. 24. 오후 6:55, 프론돌이 : ㅋㅋㅋ
2022. 2. 24. 오후 6:56, 떨고있는 어피치 : CNS? 인가용? ㅎㅎㅎ
2022. 2. 24. 오후 6:56, 결과보단 과정을 / React,JS : 문득 궁금했어요. 오늘 팀원들이랑 얘기하다가
2022. 2. 24. 오후 6:56, 결과보단 과정을 / React,JS : 네카쿠라배는 학자금 준다는 얘기가 나와서
2022. 2. 24. 오후 6:56, 결과보단 과정을 / React,JS : 물어보게되었어요
2022. 2. 24. 오후 6:56, 결과보단 과정을 / React,JS : 아니요 ㅎㅎ
2022. 2. 24. 오후 6:56, 프론돌이 : 최고의 복지는 연봉 아닐까요!
2022. 2. 24. 오후 6:56, 떨고있는 어피치 : 아하 ㅎㅎ
네이버, 카카오는 나이 많으신 분들이 꽤 계셔서 줄 지도 모르겠네용
2022. 2. 24. 오후 6:57, 떨고있는 어피치 : 2222
2022. 2. 24. 오후 6:58, 나그네 : 자녀 대학 지원은 정말 오래된 회사에 종종 있어요
2022. 2. 24. 오후 6:58, 나그네 : SK에 있다고 했었던 것 같은데 요즘도 있는지 모르겠네요
2022. 2. 24. 오후 6:59, 비옷입은 튜브 : 2222 자율 출퇴근제도도 좋아요 : )
2022. 2. 24. 오후 6:59, 개발닥 : 네이버는 없다고 알아여
2022. 2. 24. 오후 6:59, 개발닥 : SK가 자녀관련 복지가 많다고 하더라구요
2022. 2. 24. 오후 7:00, 결과보단 과정을 / React,JS : 저희도 복지는 꽤 괜찮아여
2022. 2. 24. 오후 7:00, 결과보단 과정을 / React,JS : 다만 연봉이 헬이라서...
2022. 2. 24. 오후 7:00, 결과보단 과정을 / React,JS : IT연봉 얘기하는거 들어보면 상대적 박탈감이 심하더라구요 ㅎㅎ
2022. 2. 24. 오후 7:02, 비옷입은 튜브 : 많이 차이 나나요??
2022. 2. 24. 오후 7:02, 결과보단 과정을 / React,JS : LG 연봉 작년에 일괄 올려준다고 했던거 기억하시나요?
그래도 중견 IT회사에 비하면 많이 낮아요 ㅎㅎ
2022. 2. 24. 오후 7:02, 결과보단 과정을 / React,JS : 제가 입사한지 12년 찬데
2022. 2. 24. 오후 7:03, 결과보단 과정을 / React,JS : 연봉 수준이 IT 6~7이랑 비슷한거 같아요
2022. 2. 24. 오후 7:03, 결과보단 과정을 / React,JS : 6~7년차
2022. 2. 24. 오후 7:07, 떨고있는 어피치 : It업계가 편차가 워낙 큰것같아요
2022. 2. 24. 오후 7:07, 프론돌이 : 십입 6천이상에서 시작하시기도 하니까 ㅜ
2022. 2. 24. 오후 7:07, 프론돌이 : 그분을은 나중에 어디까지 올라가실까 ㄷ ㄷ
2022. 2. 24. 오후 7:08, 결과보단 과정을 / React,JS : 와.. 얼마나 실력이 빠방하실까
2022. 2. 24. 오후 8:28, Yul : 일단 경험상 삼성 엘지 SK 포스코는 있었어요.
2022. 2. 24. 오후 8:29, Yul : 문제는 내 자녀가 대학을 갈때까지 
'과연 내가 이 회사를 다닐 수 있을까' 가 아닐까요 ㅎㅎㅎ
2022. 2. 24. 오후 8:29, Joon : Kt&g에서도 유치원부터 대학까지 지원 나온대요
2022. 2. 24. 오후 8:33, Yul : 혜택 받으시는 분들 보면 일찍 20대때 결혼하셨거나, 임원으로 회사에 오래 남아계신 분들을 제외하고는 잘 못 본 듯해요~
2022. 2. 24. 오후 9:17, 유용태 (teo.yu) : SVG 최적화 도구
svg의 용량이 클때 사용해보세요.
https://jakearchibald.github.io/svgomg/
2022. 2. 24. 오후 9:20, remix : 이모티콘 
2022. 2. 24. 오후 9:34, 민민 : 프론트 개발자로 B2B 프로덕트를 개발할때 장점이나 배울점은 어떤 것들이 있나요?
B2C 개발에서 경험할 수 있는 것들로는 더 화려한 UI/UX 구현이나, 구매전환율을 높이기 위한 개선 경험을 할 수 있다 정도로 이해하고 있는데, B2B 프로덕트는 아직 사용해 본 경험이 없어서 그런지 어떤 특징들이 있을지 잘 모르겠어서 궁금합니다!
2022. 2. 24. 오후 9:38, 김동현 : 좋게말해서 즉각적 피드백, 나쁘게 말해서 무한 요구사항을 경험하게 됩니다. 이 경험이 저는 결국 처음부터 잘 짜자 라는 교훈으로 남게됐고, 요구사항을 정확히 파악하고 확장이 어디까지 될지 선제적으로 파악하게됐습니다
2022. 2. 24. 오후 9:39, 이프노즈 : B2B/B2C로 딱 나눠지는 것들은 아니라고 보여지네요. 
더 화려한 UI(ux는 아닙니다) -> B2B에서도 가능하고요.
구매전환율 높이기 위한 개선경험 -> 이것도 커머스플랫폼일 경우에 해당이 될 것 같아요. B2B를 위한 커머스도 물론 있습니다.
2022. 2. 24. 오후 9:42, 이프노즈 : 일례로 채널톡, 도도포인트 등은 B2B서비스이면서도 짜임새있는 UI를 구성해놨다 생각해요.
2022. 2. 24. 오후 9:45, 유용태 (teo.yu) : B2B는 구매결정권자가 사장이다보니 일반적인 요구사항의 우선순위가 좀 다르게 흘러가는 경항이 있습니다. 사용성보다는 좀 더 높은 보안 수준을 요구한다는 점, 핵심 기능 보다는 가능한 많은 요구사항을 다 받아줘야 한다는 점 (JIRA을 생각해보세요), 완성도보다 마감이 더 중요하다는 특징이 있는 것 같아요
2022. 2. 24. 오후 9:45, remix : ui난이도는 b2b 가 높은 경우가 많은것 같습니다 애니메이션 그런거 빼구요
2022. 2. 24. 오후 9:47, 팬더 : b2b는 저희회사와 상대회사의 사정에 따라.. 일정과 우선순위가 달라지는 경우가 많습니다..!! ㅎㅎ 그리고 b2b마다 다르겠지만 보통 차트나 대시보드, 폼을 다루는 경우가 많은 것 같아요~~ 데이터를 많이 다루게 되는 것 같아요! (제가 있는 곳은 그렇습니다!)
2022. 2. 24. 오후 9:48, 팬더 : 근데 좋은점은.. (회사마다 다를수도있어요!!) 상호간에 일하는 시간에 일한다고 해야하나.. B2C처럼 클라가 24시간 장애에 대응해야하는 일은 상대적으로 적은 것 같습니다! 피드백도 워킹타임에 들어와요~!
