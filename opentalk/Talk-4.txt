Talk_2022.4.17 14:59-4.txt
저장한 날짜 : 2022. 4. 17. 오후 5:08



2022년 4월 10일 일요일
2022. 4. 10. 오후 7:55, 유용태 (teo.yu) : 다만 개발자들이 많이 필요한 곳이 그런 웹 어플리케이션을 만드는 곳이다 보니 ㅋ 목표하는 바가 네카라쿠배? 뭐 그런곳이라면 jQuery를 해야할 이유는 없겠죠 ㅎ
2022. 4. 10. 오후 8:01, 빠밤 : 답변감사합니다 ㅋㅋ
2022. 4. 10. 오후 8:02, 빠밤 : 제이쿼리는그럼.. 어쩔수업싱(?)계속 쓰긴써야겠네요
2022. 4. 10. 오후 8:03, 유용태 (teo.yu) : jQuery를 쓸 상황이라면 바닐라로 처리하기를 권장하고 있구요. jQuery는 자바스크립트의 DOM API가 아직 미성숙했을때 필요했던거라
2022. 4. 10. 오후 8:03, 유용태 (teo.yu) : 이미 DOM  API나 fetch API 등 좋은 Native API가 만들어진 이상 반드시 써야 하는 라이브러리는 아닙니다.
2022. 4. 10. 오후 8:04, 빠밤 : 아그렇군요
2022. 4. 10. 오후 8:05, 빠밤 : 바닐라자바스크립트는 어쩔수없이 빡공해야겠네요
2022. 4. 10. 오후 8:05, 빠밤 : 리액트나 뷰같은 라이브러리는 언제든 바뀔수있으니..
2022. 4. 10. 오후 8:05, 디디 : 저도 제이쿼리 지금 쓰고엤어요 ㅠㅠㅋㅋ 금요일에도 건드리고왔습니다
2022. 4. 10. 오후 8:05, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 4. 10. 오후 8:05, 디디 : 실무에서 레거시 만날일이 생각보다 많아서
2022. 4. 10. 오후 8:05, 디디 : 너무 리액트나 프레임워크에서만 종속되는 개념에 갇혀있지 않는것도 중요한것 같아요
2022. 4. 10. 오후 8:50: 넉스트님이 들어왔습니다.
2022. 4. 10. 오후 8:50, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 10. 오후 8:50, 넉스트 : 안녕하세요!
2022. 4. 10. 오후 8:50, 유용태 (teo.yu) : 안녕하세요 눈빛 애교 어피치님!! 반갑습니다 :)
2022. 4. 10. 오후 8:50, 유용태 (teo.yu) : 네! 안녕하세요~ ㅎ
2022. 4. 10. 오후 9:12, 유용태 (teo.yu) : 여기는 프론트엔드에 관심있는 사람들끼리 궁금한것들 묻고 답하고 얘기를 나눠보고자 만들어본 공간입니다.
2022. 4. 10. 오후 9:12, 유용태 (teo.yu) : 어떤 얘기든 좋으니 해보고 싶은 주제나 궁금한 이야기 있으면 편하게 글 남겨주세요 :)
2022. 4. 10. 오후 10:08, 파이버 : https://overreacted.io/ko/the-wet-codebase/

댄 아브라모브 연설인데 되게 좋은 내용인 거 같아서 공유합니다!
2022. 4. 10. 오후 10:16, 프엔공부중 : 혹시 emotion이나 styled-components 사용하시는 분들은 어떻게 쓰시나요? 

저같은 경우에는 styled로 크게 하나 만들고 그 안에서 class와 같은 기능은 적절하게 활용하면서 styled을 최대한 남발하지 않으려고 하는데 이런 방향으로 사용하는게 맞을까요?
2022. 4. 10. 오후 10:32, 스타트업개발자 : 각 페이지나 컴포넌트별로 styles 파일 만들어서 사용하고있습니다
2022. 4. 10. 오후 11:12, Hola : 컴포넌트 별로 styles라는 폴더를 만들어서 따로 관리하고 있어요!
2022. 4. 10. 오후 11:14, 최민석 : 저도 요렇게합니당
2022. 4. 10. 오후 11:19, 음악듣는 어피치 : 저도요
2022. 4. 10. 오후 11:19, 프엔공부중 : 아 그러면 각 컴포넌트마다 다 따로 styles 파일에서 꺼내서 쓰는건가요?
2022. 4. 10. 오후 11:21, 유지남 : 저도요
2022. 4. 10. 오후 11:22, 음악듣는 어피치 : 넹
2022. 4. 10. 오후 11:24, 프엔공부중 : 아하 그렇군요..
2022. 4. 10. 오후 11:24, 프엔공부중 : 그럼 하나의 styled를 만들때 그안에 클래스도 많니 사용하시나요?
2022. 4. 10. 오후 11:26, 음악듣는 어피치 : 네 거의 다 클래스로 사용해요!
2022. 4. 10. 오후 11:26, 최민석 : toggle 기능 정도 쓰는거같아요
2022. 4. 10. 오후 11:29, 프엔공부중 : 오호..그렇군요 다들 너무나 감사합니다!!
2022. 4. 10. 오후 11:30, 조조 : 혹시 이게 무슨뜻일까요?
2022. 4. 10. 오후 11:31, 리액트 유치원생 : 하나의 styled를 만들고
그 안에 자식 요소들은 class로 사용한다는 얘기 같아요
2022. 4. 10. 오후 11:31, 리액트 유치원생 : 그 안에 자식 요소들도 styled로 관리해야하는 건지

아니면 부모 styled 안에 class로 관리해야하는 건지
2022. 4. 10. 오후 11:31, 리액트 유치원생 : 아닐까요 ?
2022. 4. 10. 오후 11:38, 스타트업개발자 : 저도 이렇게 이해했고 저희는 각 페이지 별로는 클래스로 하고있고 컴포넌트들은 최대한 styled로 관리하고있습니다. 같이 협업하시는 분들끼리 룰만 정하시면 될 것 같아여!
2022. 4. 10. 오후 11:43, 조조 : 아하! 답변 감사합니다~~

2022년 4월 11일 월요일
2022. 4. 11. 오전 12:00, 유용태 (teo.yu) : 톡게시판 '투표 종료': 요새 무슨 공부 하세요? 항목을 추가해주세요 :)
2022. 4. 11. 오전 12:13, 프엔공부중 : 넵 맞습니다! 제가 좀 더 설명을 했어야 했네요 ㅠ
2022. 4. 11. 오전 4:37, 코린이 : 아...... 멘탈관리 다들 어떻게 하시나요?..
2022. 4. 11. 오전 5:26, 찬 : 산책하거나 노트에다가 머릿속 생각을 계속 끄적이면 좀 낫더라구요 ㅎㅎ..
2022. 4. 11. 오전 5:44, 코린이 : ㅠ-ㅠ 그래도 아직 해결안된 문제를 보면 다시 열받지 않으시나요...
2022. 4. 11. 오전 5:44, 코린이 : 전 아직 초딩멘탈인가 봐요
2022. 4. 11. 오전 5:54, 찬 : 산책할때나 끄적일때 그 문제 해결을 위한 시나리오를 몇 개 생각해서 다시 보면  살짝끔 도전욕이 생기는 ㅎㅎ..
2022. 4. 11. 오전 5:55, 찬 : 그런데도 도저히 답이 안나오면 주변 분들한테 도움 요청합니다 ㅠㅠ
2022. 4. 11. 오전 6:15, 코린이 : 그러시군요 ..ㅋㅋㅋ 조언 감사드려요 ㅠ_ㅠ
2022. 4. 11. 오전 6:15, 코린이 : 드럽게..어렵네요 공부
2022. 4. 11. 오전 7:23, 썰~~ : 안되는게 당연하다고 생각하고 시작하며
2022. 4. 11. 오전 7:23, 썰~~ : 좀 낫더라고요
2022. 4. 11. 오전 7:32, 화가난다 화가나 그래서 난 화가임 : 아! '이거는 4번 반복해서 부딪혀야지 알 수 있는 문제구나'라고 말하면서 아직 딱 1번 부딪혔다고 인지해보세욥.
2022. 4. 11. 오전 7:32, 화가난다 화가나 그래서 난 화가임 : 다른 사람도 여러 번 부딪혀서 해결했겠거니 하면서용~
2022. 4. 11. 오전 7:32, 화가난다 화가나 그래서 난 화가임 : 어려운 게 당연하다!
2022. 4. 11. 오전 7:41, 코린이 : 아...앜ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 11. 오전 7:42, 코린이 : 당연하다..!!ㅠㅠㅜ 나 바보 아니다..
2022. 4. 11. 오전 7:42, 화가난다 화가나 그래서 난 화가임 : 네! 위로 차원이 아니라 이성적으로 생각해도 당연하다고 생각해요!
2022. 4. 11. 오전 7:42, 화가난다 화가나 그래서 난 화가임 : 저도 어려운 거 마주치면, 이거 여러 번 해봐야겠다.. 싶은 마음으로 대해용 ㅋㅋ
2022. 4. 11. 오전 7:43, 화가난다 화가나 그래서 난 화가임 : 같이 화이팅 해욥!!
2022. 4. 11. 오전 8:14, 코린이 : 퐈이링ㅋㅋㅋㅋ!
2022. 4. 11. 오전 8:20, 민석 : 파이팅이에요!!
2022. 4. 11. 오전 8:21, 민석 : 너무 공부시간도 길어지고 막막하게 느껴지면, 목표치 세워서 공부하기 보다.. 하루 이틀 정도는 시간 정해서 그 시간되면 쉬시는 것도 좋아요!
2022. 4. 11. 오전 8:26, 코린이 : 그게 맘편하고 좋은거 같아요...ㅠㅠㅠ 절대 목표치만큼 못채우겠던데요
2022. 4. 11. 오전 8:27, 코린이 : 모르는게 꼬리에 꼬리를 무는..
2022. 4. 11. 오전 8:27, 유용태 (teo.yu) : 저는 잘 안풀리는 문제가 있으면 내가 아는 지인들중 한명을 만들어두고 화이트보드에 그려가면서 설명하거나 걸으면서 음성녹음켜두고 설명을 찬찬히 해보는 편입니다 그렇게 설명하고 말하다보면 스스로 해법이 떠오르더라구요
2022. 4. 11. 오전 8:28, 유용태 (teo.yu) : 나중에 내가 한말 2배속으로 들으면 좀 스스로 똑똑한것 같고 그렇습니다 ㅋㅋ
2022. 4. 11. 오전 8:28, 유용태 (teo.yu) : 목표치는 가급적 세우지 않기를 바랍니다
2022. 4. 11. 오전 8:28, 유용태 (teo.yu) : 그것보다는 오늘 한 것을 기록해두는게
2022. 4. 11. 오전 8:28, 코린이 : 오옼ㅋㅋㅋㅋㅋ 성공한 사람들의 특징을 어디서 본게 있는데 설명을 꼭 해보라고 했던게 기억이 나네요
2022. 4. 11. 오전 8:29, 유용태 (teo.yu) : 여러모로 정신건강상에도 좋고 개발할때도 마감이 있는 것보다 진행속도를 체크하는게 훨씬 더 고오급(!) 기법이지요 ㅎ
2022. 4. 11. 오전 8:29, 유용태 (teo.yu) : 목표치 방식은 뺄셈이라서 충족을 시켜야 본전이고 못하면 충격이라서 멘탈관리하기 힘들어요 ㅎ
2022. 4. 11. 오전 8:30, 유용태 (teo.yu) : 뭔가 쌓여가듯이 경험치 채워가듯이 시각적으로 장치를 하나 만들어두시면 훨씬 더 멘탈관리 하기 좋으실거에요
2022. 4. 11. 오전 8:32, lucky.jun : 혹시 시각적인 장치로 사용하시는 툴이 있으신가요??
2022. 4. 11. 오전 8:33, 코린이 : 꿀팁이군요..!
2022. 4. 11. 오전 8:33, 코린이 : 저도 궁금합니다
2022. 4. 11. 오전 8:33, lucky.jun : 전 최근에 시각적장치를 notion으로 구현해보려고 하는 중입니다
2022. 4. 11. 오전 8:33, lucky.jun : 근데,,, 데이터들이 전부 notion에 귀속되는게 너무 걱정되서 obsidian도 생각중인데 이건 tracking 기능이 너무 약해서 ㅠㅠㅠ
2022. 4. 11. 오전 8:34, 유용태 (teo.yu) : 꿈은 구체적으로 상상하고 목표로 나아가되
2022. 4. 11. 오전 8:34, 유용태 (teo.yu) : 뭐라고 해야하지... 음 실패경험을 할 수 있는 방식으로 플랜이 짜여져 있다면 좀 바꾸시는게 좋을 것 같아요
2022. 4. 11. 오전 8:35, 유용태 (teo.yu) : 아뇨 저는 P형이기 때문데 ㅋㅋㅋ 별거없습니다 그냥 메모장에 태스그를 잘게 적어두고 체크해서 지워나가는 그런거요. 그런거 안 모아둔게 살짝 후회되요 ㅋㅋ
2022. 4. 11. 오전 8:36, 유용태 (teo.yu) : 태스크*
2022. 4. 11. 오전 8:37, lucky.jun : 극 P가 극히 공감합니다…ㅎㅎ
2022. 4. 11. 오전 8:39, 유용태 (teo.yu) : 메모지 대신에 A4지로 그냥 생각날때마가 정리하고 낙서하고 태스크 정리하고 지우고 하던 시절이 있었는데 그걸 안 버리고 모아두니 내용은 하나도 알아볼수가 없는데 그냥 쌓여있는걸 보는 것만으로도 뭔가 뿌듯하더라구요 ㅋ
2022. 4. 11. 오전 9:05, 서경 : 사진
2022. 4. 11. 오전 9:05, 서경 : ㅋㅋㅋ 앗 저돈데 저도 하나도 못알아보는데 못버리겠어요 ㅋㅋㅋ
2022. 4. 11. 오전 9:05, 유용태 (teo.yu) : 와!
2022. 4. 11. 오전 9:05, 썰~~ : ㅋㅋㅋ 저는 쓰레기 아까워서 아이패드로…
2022. 4. 11. 오전 9:05, 썰~~ : 거기 쌓여이쓴게 좀 많아요 ㅋㅋ
2022. 4. 11. 오전 9:05, 유용태 (teo.yu) : 유명해지면 저게 다 돈이다 생각하고 모아두세여 ㅋㅋㅋㅋ
2022. 4. 11. 오전 9:06, 유용태 (teo.yu) : 그렇게 쌓여있던것들을 한번씩 돌이켜 보면 진짜 에너지 생깁니다 ㅋㅋ
2022. 4. 11. 오전 9:06, 유용태 (teo.yu) : 내가 이만큼 하긴 했구나...
2022. 4. 11. 오전 9:07, 서경 : ㅋㅋㅋ 전역 후엔 첨단 문물 사용하지만 저거 보면 흐뭇하긴 하더라고요
2022. 4. 11. 오전 9:07, 유용태 (teo.yu) : ㅋㅋㅋㅋ 뭔가 만지고 보고 느낄 수 있는게 남는다는것은 아날로그의 큰 매력이죠
2022. 4. 11. 오전 9:09, 서경 : 그러니까요 손때 타서 너덜너덜해진 것도 지금 보면 오히려 매력적인 것 같아요
2022. 4. 11. 오전 9:13, 화가난다 화가나 그래서 난 화가임 : 저 작은 노트는 군번 상관없이 예전부터 디자인이 비슷한가요?
2022. 4. 11. 오전 9:13, 그레이 : 러버덕 디버깅과 비슷하네요! ㅎㅎㅎ
2022. 4. 11. 오전 9:19, 손을 번쩍 든 무지 : https://javascript.plainenglish.io/8-javascript-tricks-to-make-you-a-better-programmer-948b5a3c35b4
2022. 4. 11. 오전 9:19, 손을 번쩍 든 무지 : 기본적인 건데 내용 좋아서 공유드립니당
2022. 4. 11. 오전 9:20, 유용태 (teo.yu) : 오오!! 그런게 있네요~ 맞아요 인형대신 내가 아는 실제인물을 좀 떠올리면 몰입감이 생겨서 하는 편인데 좋은 방법이라고 생각해요!
2022. 4. 11. 오전 9:20, 유용태 (teo.yu) : 마치 제가 쓴 글인거 마냥 쓰여있네요 ㅋㅋ 여기에 있는 방법대로 하고 있어요 https://onwah.tistory.com/m/9
2022. 4. 11. 오전 9:22, 시에스에스 : 혹시 1분 코딩 채널 즐겨듣는 분 계실까요? 저는 사실 백엔드 개발자인데, 실제 요즘 프론트엔드 개발을 어떻게 하고 계신지 궁금한 부분이 많아서 들어오게 되었어요. 제일 궁금했던 질문이긴한데, 저는 일반적인 정적페이지 개발 (html, css, js, jq)를 이용한 방식으로만 개발을 하였는데, 실제로 리액트를 사용하면 어떤 부분이 편리해지고, 또는 어떤 단점이 생기는지 궁금합니다.
2022. 4. 11. 오전 9:26, 유용태 (teo.yu) : jquery에서 하는 element를 찾아서 이벤트를 연동하고 값을 바꿔서 dom을 찾아서 텍스트나 클래스 값등을 바꾸는 작업을 상당히 직관적으로 그리고 선언적으로 작업을 할수 있도록 도와줍니다
2022. 4. 11. 오전 9:27, 유용태 (teo.yu) : 프론트엔드가 굉장히 복잡한 경우에는 DOM을 찾아서 이벤트를 관리하고 DOM조작 작업이 상당히 복잡해지는데 이 작업을 프레임워크레 맡겨버리고 비지니스로직에만 집중 할 수 있다는 장점이 있어요
2022. 4. 11. 오전 9:28, 유용태 (teo.yu) : 그리고 협업시 코드가 어쨋든 리액트에서 추구하는 방식으로 일관성있는 코드를 짜야한다는 이점이 있습니다
2022. 4. 11. 오전 9:29, 유용태 (teo.yu) : 대신 그냥 단순한 원페이지나 복잡한 인터렉션 없이 폼 검증 정도만 필요한 수준의 패이지라면 리액트를 쓰는 게 오바엔지니어링이 됩니다
2022. 4. 11. 오전 9:30, 유용태 (teo.yu) : 라이브러리 크기가 적지도 않고 그냥 바닐라나 jquery에 비해 초기비용이 필요하니까요
2022. 4. 11. 오전 9:30, 시에스에스 : 아 정말 중요한 말씀 많이 해주셨네요. 비슷한 경험을 이전 회사에서 한 적이 있어서.
2022. 4. 11. 오전 9:30, 파이버 : 뷰를 선언형으로 관리할 수 있고 + flux 패턴을 이용하기 때문에 버그도 적고 디버깅이 아주 쉬워지는 장점이 있지만 성능이 안 좋다고 생각해요
2022. 4. 11. 오전 9:31, 파이버 : 레이어를 추가할수록 성능이 안 좋은 건 아주 당연한 이야기긴 한데 리액트는 성능을 정말 쿨하게 버린 거 같아요

딱 "대부분의 상황에서 충분히 빠를" 정도만 챙기고
2022. 4. 11. 오전 9:32, 유용태 (teo.yu) : 사진
2022. 4. 11. 오전 9:32, 시에스에스 : 그러면 일반적인 웹페이지에서는 자신이 jq js에 대한 충분한 이해도로 일반적인 방식으로 개발하는게 맞다 라고 이해가 되어지는데
2022. 4. 11. 오전 9:32, 시에스에스 : 리엑트를 써야하는 이상적인 경우는 어떤 서비스를 개발할 때 일까요?
2022. 4. 11. 오전 9:33, 유용태 (teo.yu) : 왠만한 어드민 류 페이지나 대형 포털 등 데이터 변화가 잦은 페이지들이요
2022. 4. 11. 오전 9:34, 썰~~ : 서비스가 소규모로 개발자가 적을때는 이전의 방식으로 하는게 더 나은 방식이라고 생각합니다. 
그래야 빠르게 적용해보고 검증하고 빠르게 수정하는게 한사람이 다 하니까 더 빠르게 됩니다
2022. 4. 11. 오전 9:34, 썰~~ : 근데 규모가 커지면 커질수록 컴포넌트화를 진행하는게 더 낫다고 생각합니다.
2022. 4. 11. 오전 9:35, 썰~~ : 빠르게 검증하는건 똑같지만 모든것을 전부 수정할 필요는 없으니 컴포넌트화를 진행하여 필요한 부분만 얼른 수정하는게 나은방법이라 생각해요
2022. 4. 11. 오전 9:35, 유용태 (teo.yu) : 사용자가 주로 읽기만 하면 되는 문서류나 인터렉션이 하나만 있는 종류(폼 방식)이 아니면 그냥 요새는 그냥 대부분 쓰신다고 보면 될거에요
2022. 4. 11. 오전 9:36, 유용태 (teo.yu) : 유지보수를 하고 계속 성장해나갈거라면 안해야할 이유는 별로 없어요
2022. 4. 11. 오전 9:36, 유용태 (teo.yu) : jquery를 쓰고 있는 페이지를 개발한다고 하면 개발자 채용에서 이미 힘드니까요 ㅋㅋ
2022. 4. 11. 오전 9:37, 유용태 (teo.yu) : 요새는 jquery할 줄 아는 개발자를 뽑긱가 더 힘들걸요 ㅋ
2022. 4. 11. 오전 9:37, 프린이 : $
2022. 4. 11. 오전 9:37, 썰~~ : 저도 제이쿼리 할줄 모릅니다.. 차라리 바닐라 자스로 하는게 더 편해서..
2022. 4. 11. 오전 9:38, arthur : jquery할 줄 아는 개발자는 많을거예요~ 경력이 5년 이상이면 대부분 하실거예요 예전에는 다 jquery여서..
2022. 4. 11. 오전 9:38, 프엔이될테야 : 근데 제이쿼리쓰는곳을 안가는게 함정이죠
2022. 4. 11. 오전 9:39, 유용태 (teo.yu) : 5년차 개발자가 이직을 그런 곳으로 하려고 할까요 ㅋㅋ
2022. 4. 11. 오전 9:39, arthur : 그렇킨하네요^^;
2022. 4. 11. 오전 9:39, 유용태 (teo.yu) : 요새 프론트엔드 5년차면 엄청 귀한데요 ㅋ
2022. 4. 11. 오전 9:39, 시에스에스 : 프론트엔드 쪽 개발자 분들 기준에서는 확실히 중요한 부분이군요
2022. 4. 11. 오전 9:39, 프엔이될테야 : 저는 신입인데도 제이쿼리에 j만 보여도 지원안했어용..
2022. 4. 11. 오전 9:39, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 11. 오전 9:41, 유용태 (teo.yu) : 신입이든 아니든 개발자에게는 성장이
가능한 환경이라는게 엄청 중요한 요소인데 여기는 기술도 많이 필요하지 않으니까 적당한 개발자를 뽑아서 쓰면 되지 않을까?로 접근했다가는 망하죠 ㅋ 결국 외주로 돌리기 되다가 업체로 맡기는 식으로 흘러가고... 그렇게.. 음
2022. 4. 11. 오전 9:42, 시에스에스 : 프론트엔드 개발자분들 사이에서는 바보같은 질문이겠지만 jq를 사용하시지 않는 이유는 뭘까요?
2022. 4. 11. 오전 9:42, 유용태 (teo.yu) : 바닐라가 jq기능을 거의 다 흡수를 했엉ㅅ
2022. 4. 11. 오전 9:42, 유용태 (teo.yu) : 했어요
2022. 4. 11. 오전 9:43, 유용태 (teo.yu) : jquery의 가장 큰 매력이 쉬운 API, IE 크로스 브라우징, ajax인데
2022. 4. 11. 오전 9:43, 유용태 (teo.yu) : IE는 이제 필요가 없고
2022. 4. 11. 오전 9:44, 유용태 (teo.yu) : ajax는 더 쉬운 fetch API도 있고 axios라는 확실한 대체제가 있고
2022. 4. 11. 오전 9:44, 유용태 (teo.yu) : quertySelectorAll classList closest matches 등 jquery 핵심 기능이 다 네이티브 기능이 되었어요
2022. 4. 11. 오전 9:45, 유용태 (teo.yu) : jquery를 쓰는 이유가 이제는 프레임워크를 쓰는 것보다 가볍다는 이유라면
2022. 4. 11. 오전 9:45, 유용태 (teo.yu) : 사실 jquery가 가볍지 않기 때문에 그냥 안 쓰는게 나은거죠
2022. 4. 11. 오전 9:46, arthur : 그러면 axios랑 fetch 중 어떤걸 선호하시나요..?
2022. 4. 11. 오전 9:46, 실무뿌론트 : axios자체도 fetch기반이라..
2022. 4. 11. 오전 9:46, 프엔이될테야 : 리엑트 코드들 보면 대부분 axios쓰긴 하더라구요
2022. 4. 11. 오전 9:46, 실무뿌론트 : 옵션을 좀더 제공해주는측면에서
2022. 4. 11. 오전 9:46, 유용태 (teo.yu) : 저는 fetch인데 주류는 아직 axios인듯해요
2022. 4. 11. 오전 9:47, 파이버 : 사진
2022. 4. 11. 오전 9:47, 실무뿌론트 : axios가 편하긴하죠
2022. 4. 11. 오전 9:47, 파이버 : 선호도가 갈리는 느낌이 있긴 해요 전 axios요!
2022. 4. 11. 오전 9:47, arthur : 예전에는 axios가 완전 대세였는데 요즘은 fetch도 좀 보여서요~
2022. 4. 11. 오전 9:47, 디디 : 저는 실무에선axios쓰고 간단한 바닐라 사이드환경에서는  fetch요!
2022. 4. 11. 오전 10:03, 민석 : 생김새가 좀 귀엽기도 하고.. 인터셉터 쓸 일 생기면 axios 로 바꾸는거 같아요! 사실 fetch 랑 axios 랑 디테일 한 차이가 있다고는 하지만, 아직 사용상에 큰 베네핏은 느껴보지 못한거같아요.
2022. 4. 11. 오전 10:05, 유용태 (teo.yu) : 맞아요. axios가 fetch보다 나은 것은 IE 크로스 브라우징과 cancel이 가능하다 정도이고
2022. 4. 11. 오전 10:06, 유용태 (teo.yu) : 나머지는 api 쓰임새의 차이라서 조금더 쓰기 편하고 익숙한 axios를 많이 쓰는것 같더라구요
2022. 4. 11. 오전 10:08, 민석 : ㅋㅌㅋㅌ진짜 그런거같아요.. 전 개인 작업할때, VSC 에서 axios.get() axios.post() 이 부분에... 색깔로 친해진게 눈에 잘들어와서 쓰는거같아요
2022. 4. 11. 오전 10:08, 민석 : 진짜 별거 아닌데.... 뭔가 달콤합니다 ㅠㅠ...
2022. 4. 11. 오전 10:08, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 4. 11. 오전 10:10, 제이 : 혹시 셀링페이지 제작을 노코딩툴로 대응하고있는 회사계신가여
2022. 4. 11. 오전 10:11, 제이 : 셀링에 시간좀 덜 쓰고싶다는 생각이..
2022. 4. 11. 오전 10:32, 포유 : 저는 axios 인터셉터랑 업로드프로세싱 기능도 좋더라구영
2022. 4. 11. 오전 10:39, lucky.jun : cancel은 fetch도 가능한걸로 아는데 아닌가요?
2022. 4. 11. 오전 10:39, 유용태 (teo.yu) : https://developer.mozilla.org/ko/docs/Web/API/AbortController/abort
2022. 4. 11. 오전 10:39, 유용태 (teo.yu) : 이게 최근에 만들어지기도 했고 여전히 IE에서는 안되고 있는거라서
2022. 4. 11. 오후 12:09, 쵸키 : 안녕하세요 저 질문사항이있습니다!
현재 storybook 사용해서 공통 컴포넌트를 원격저장소에 올린후 프로젝트에 적용시켜서 사용중인데요, 
storybook 컴포넌트를 빌드할 때 혹시 css파일은 포함되어 빌드파일이 만들어지지 않나요??
같은 css를 컴포넌트에도 적용하고 따로 프로젝트에도 적용해야되는지 궁금해서 여쭤봅니다!
2022. 4. 11. 오후 12:15, 프론트 공부 : storybook webpack 설정 에서 따로 셋팅할수 있어요!
2022. 4. 11. 오후 12:37, 쵸키 : 아하 설정하는부분을 찾아봐야겠네요 ㅎㅎㅎ감사합니다
2022. 4. 11. 오후 1:13, 리액트 유치원생 : react framer-motion 사용하시는 분들께 질문 한 가지 드립니다 ㅜㅜ
2022. 4. 11. 오후 1:14, 리액트 유치원생 : 혹시 x나 y값을 조정하는 부분을
2022. 4. 11. 오후 1:14, 리액트 유치원생 : 부모를 positon: relative; 로 설정해둔 후
2022. 4. 11. 오후 1:14, 리액트 유치원생 : bottom, top 으로 제어가 불가할까요 ?
2022. 4. 11. 오후 1:14, 리액트 유치원생 : 사진
2022. 4. 11. 오후 1:14, 리액트 유치원생 : 이건 동작이 되는데
2022. 4. 11. 오후 1:15, 리액트 유치원생 : 사진
2022. 4. 11. 오후 1:15, 리액트 유치원생 : 이건 안 먹네요 ㅜㅜ
2022. 4. 11. 오후 1:15, 리액트 유치원생 : translateY 조절이 아니라
2022. 4. 11. 오후 1:15, 리액트 유치원생 : bottom을 옮기고 싶은데
2022. 4. 11. 오후 1:15, 리액트 유치원생 : 이건 불가한 걸까요 ?
2022. 4. 11. 오후 2:10: 룰루님이 들어왔습니다.
2022. 4. 11. 오후 2:10, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 11. 오후 2:11, 룰루 : 안녕하세요 ㅎㅎ
2022. 4. 11. 오후 2:49, 엉망장자 : 잡플래닛 평점 4점 이상 회사 A vs 2점 중반 회사 B
둘다 서비스 회사이고, 각각 시리즈A, B급입니다.

그런데 B회사가 연봉을 신입기준 1000이상 더 제시했습니다.

경영진에 대한 불만으로 B회사의 안좋은 리뷰가 많은데 최근 개발팀에 좋은 cto가 들어오고 채용도 공격적으로 하는 것 같습니다.
( 잡플래닛 평균 임금의 거진 2배 수준의 오퍼를 받았습니다 )

A 회사는 지인이 다니고 있고 모두 만족하며 다니고 있습니다.

안전하게는 좋은 문화의 A회사에서 성장하는게 좋아보이지만 한편으로는 연봉 숫자도 중요해 보여서 고민이 되네요. 여러분은 어떤 선택을 하시겠나요?ㅜㅜ
2022. 4. 11. 오후 2:50, 엉망장자 : 전 신입입니다
2022. 4. 11. 오후 2:51, 행복한 돌거북 : b가 a보다 연봉이 천만원 높은건가여?
2022. 4. 11. 오후 2:53, 엉망장자 : 네 맞아요! 평점은 낮지만 연봉이 높다
2022. 4. 11. 오후 2:53, 나그네 : 일단 정보력 차이가 있네요
믿을 만한 지인인지는 모르겠지만 B 회사 정보가 부족해보입니다
2022. 4. 11. 오후 2:54, 리린이 : 네임밸류는요 ?
2022. 4. 11. 오후 2:54, 행복한 돌거북 : b회사가 두배를 제시했는데 a랑 천만원 차이면 a도 높은편인거아니에여?
2022. 4. 11. 오후 2:54, 행복한 돌거북 : 전 차라리 시리즈a 냐 b냐에 주목할거같습니다만
2022. 4. 11. 오후 2:54, 나그네 : 링크드인 크레딧잡 블라인드 thevc 등 더 뒤져보시고  평점이나 잡플래닛 연봉말고 최근 퇴사율처럼 실질적으로 나오는 데이터를 더 찾아보세요
2022. 4. 11. 오후 2:54, 리린이 : 222
2022. 4. 11. 오후 2:55, 리린이 : 잡플래닛 후기 조작이많이들 하나요 ?
2022. 4. 11. 오후 2:55, 엉망장자 : 이게 잡플래닛 평균이 많이 낮더라구요. 그래서 기대 안하고 면접 연습하력후 했는데 오퍼레터 보고 좀 놀랬네요
2022. 4. 11. 오후 2:56, 행복한 돌거북 : 잡플래닛 거긴 인증도 딱히 안하는데 신용이 그닥.. 둘다 표본도 적을 것 같은데용?
2022. 4. 11. 오후 2:56, 엉망장자 : 오옹.. 그렇군요
2022. 4. 11. 오후 2:56, 엉망장자 : 혹시 연봉정보 말고 고려할 중요한 사항이 있을까요? 신입이라 판단기준이 잘 서질 않습니다 ㅜㅜ
2022. 4. 11. 오후 2:56, 눈빛 애교 어피치 : 하는 회사들은 엄청 합니다
2022. 4. 11. 오후 2:57, 떨고있는 어피치 : 저는 개발자 인원수 중요하게 봅니다
2022. 4. 11. 오후 2:57, 파이버 : 얼마나 개인의 성장을 챙겨주는지?
2022. 4. 11. 오후 2:57, 나그네 : 일단 B회사 정보가 상대적으로 없습니다
2022. 4. 11. 오후 2:57, 행복한 돌거북 : 회사가 하는일이 마음에 드냐 안드냐도 중요한거같아요
2022. 4. 11. 오후 2:57, 떨고있는 어피치 : theVC같은 곳에 직원 200명이라고 했는데,
개발자 막 5명 있는 회사도 많습니다.....
2022. 4. 11. 오후 2:57, 나그네 : 정보를 더 수집하시고 비교해보시는게 좋겠어요
2022. 4. 11. 오후 2:58, 행복한 돌거북 : 저도 b회사 정보를 좀 더 알아보시는게 좋을 것 같습니당
2022. 4. 11. 오후 2:58, 파이버 : 정말 신중하시다면 철판깔고 B회사 개발자 한분 어떻게든 붙잡고 밥 한끼라도 사드리는것도..
2022. 4. 11. 오후 2:58, 행복한 돌거북 : 잡플래닛 2점대면 일단 그런 평점은 신경도 안쓴다 이거네여ㅋㅋㅋㅋㅋ
2022. 4. 11. 오후 2:59, 행복한 돌거북 : 조작은 안한게 확실합니다
2022. 4. 11. 오후 2:59, 떨고있는 어피치 : 혹시 B 회사가 코인이나 금융계 회사인가요…..?ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ

그쪽 분야가 돈을 많이 줍니닼ㅋㅋ
2022. 4. 11. 오후 2:59, 프린이 : b 설마 101인가요?
2022. 4. 11. 오후 3:00, 엉망장자 : 헉 ㅋㅋ 맞아요
2022. 4. 11. 오후 3:00, 나그네 : 저도 확 101 떠오른..
2022. 4. 11. 오후 3:00, 떨고있는 어피치 : 101 안좋나요?ㅋㅋㅋ소문이 있는 것같긴 하던데.....
2022. 4. 11. 오후 3:00, 떨고있는 어피치 : 이제 반말은 안한대욬ㅋㅋㅋㅋㅋ
2022. 4. 11. 오후 3:00, Hanelle : 삭제된 메시지입니다. 
2022. 4. 11. 오후 3:00, 행복한 돌거북 : 엇 101이면 거긴 들리는 얘기들이 잇기는한듯요
2022. 4. 11. 오후 3:01, 나그네 : CTO 새로 바뀐지 1년 다 될거에요
2022. 4. 11. 오후 3:01, 엉망장자 : 네네 cto 오시고 조직도 다 갈긴 한거 같더라구요..
2022. 4. 11. 오후 3:02, 파이버 : 길게 보시는 거 추천해요
2022. 4. 11. 오후 3:02, 엉망장자 : 한별님 조언 감사드려요 참고할게요!
2022. 4. 11. 오후 3:03, 파이버 : 다음이직 다다음이직까지 멀리 보고
2022. 4. 11. 오후 3:03, Hanelle : 빠이팅!
2022. 4. 11. 오후 3:03, 나그네 : 블라인드 확인해보세요
2022. 4. 11. 오후 3:03, 파이버 : 그 회사에서 얼마나 성장할 수 있을지 잘못하면 시간 날리는 거 아닐지?
2022. 4. 11. 오후 3:03, 나그네 : ㅇㅇㅇ101 이야기는 블라인드에도 많으니 거기서 요즘 어떤지 확인해보시면 조금 더 괜찮은 최신 정보 얻으실 수 있을겁니다
2022. 4. 11. 오후 3:05, 프린이 : 지인이 이번에 갔는데 생각보다 만족하긴하더라구요 ㅋㅋ 팀바팀이긴하겠지만
2022. 4. 11. 오후 3:05, Hola : 오 이제 반말 안하는군요…
2022. 4. 11. 오후 3:06, 엉망장자 : 네네 하나 더 여쭤볼거는 A회사 연봉을 원하는대로 맞춰주겠다 불러봐라 해서 잠정 결정된 연봉이었는데 추가 협상 같은 것은 불가능하나요? 
아직은 전화로 서로 이야기만 해보았고 계약서나 오퍼레터는 안받은 상태이구요
2022. 4. 11. 오후 3:06, 포유 : 진짜 한 1년전인가..? 101 얘기로 블라에서 핫했던거 같은뎅ㅋㅋㅋ
2022. 4. 11. 오후 3:06, 엉망장자 : 네네 저도 그건 봤어요 ㅋㅋ ㅜ
2022. 4. 11. 오후 3:06, 나그네 : 그 시절 소문의 대부분은 사실에 가깝더라고요..
2022. 4. 11. 오후 3:06, 나그네 : 지금은 다 퇴사하셔서 아는 분이 없네요;;
2022. 4. 11. 오후 3:07, 포유 : 맞춰주겠다 했으면 더불러보면 되지 않나요 ㅋㅋㅋ
2022. 4. 11. 오후 3:08, 프린이 : b에서 받은걸 카운터오퍼 해보세요!
2022. 4. 11. 오후 3:09, 엉망장자 : 이게 궁금한 거긴 했는데 어떤식으로 해야 무례하지 않을까요?!ㅜㅜ
2022. 4. 11. 오후 3:09, 떨고있는 어피치 : 저는 그래도 웬만해서는 찍먹파입니다 ㅋㅋㅋ

다른 사람이랑 안 어울려도 나랑 잘맞을 수도 있고, 내가 잘 맞아도 다른 사람이 와서 잘 안맞을 수도 있습니당….ㅋㅋㅋ
2022. 4. 11. 오후 3:10, 썰~~ : 혹시
2022. 4. 11. 오후 3:10, 떨고있는 어피치 : (그래서 더 어려운 것같아요.....)
2022. 4. 11. 오후 3:10, 썰~~ : 사진
2022. 4. 11. 오후 3:10, 썰~~ : 깃허브에서 폴더가 이렇게 나오는이유를 알수있을까요
2022. 4. 11. 오후 3:10, 썰~~ : 아시는분 ㅠㅠ
2022. 4. 11. 오후 3:11, 최민석 : github submodule 쳐보시면 나와요!
2022. 4. 11. 오후 3:11, 서경 : 서브모듈이네용
2022. 4. 11. 오후 3:11, 썰~~ : 아 서브모듈인가요
2022. 4. 11. 오후 3:11, 썰~~ : 흠
2022. 4. 11. 오후 3:11, 썰~~ : 서브모듈 지우고싶은데
2022. 4. 11. 오후 3:11, 썰~~ : 감사합니다!!
2022. 4. 11. 오후 3:11, 포유 : 그냥 tosolist 폴더 안으로 들어가서 github이랑 연결하면 될걸용..?
2022. 4. 11. 오후 3:12, 최민석 : 아니면 하위 폴더 .git 지우시면 되는걸로압니당
2022. 4. 11. 오후 3:12, 포유 : 이모티콘 
2022. 4. 11. 오후 3:12, 썰~~ : 아 바깥쪽에서 연결하고 싶어서요
2022. 4. 11. 오후 3:12, 썰~~ : js로 투두리스트 만든거랑 ts로 만든거랑 비교해주고 싶어서
2022. 4. 11. 오후 3:13, 썰~~ : 감사합니다 검색 키워드도 몰랐는데
2022. 4. 11. 오후 3:13, 썰~~ : 검색해서 해결했습니다!!
2022. 4. 11. 오후 3:14, 부끄러워하는 라이언 : 면접질문 찾아보다가 질문드립니다!

질문이 "리액트에서 함수형 컴포넌트라고 부르지 않고 함수 컴포넌트라고 부르는 이유가 무엇인가요?"라고 적혀있는데, 실제로 함수형 컴포넌트와 함수 컴포넌트가 다른가요?🤔
2022. 4. 11. 오후 3:15, 썰~~ : 함수형 프로그래밍이 순수 함수쪽을 지향하는데
2022. 4. 11. 오후 3:15, 썰~~ : 함수 컴포넌트는 순수 함수가 될수 없어서 그런게 아닐까요
2022. 4. 11. 오후 3:15, 썰~~ : useEffect 엄청 남발해서..
2022. 4. 11. 오후 3:15, 썰~~ : 저는 그렇게 이해하고 있었어요
2022. 4. 11. 오후 3:16, 프린이 : 함수형 프로그래밍이 보통 상태를 갖지않는데
2022. 4. 11. 오후 3:16, 프린이 : 리액트에서 구현할때 useState처럼 상태를 갖고있어서 구분하는거같아요
2022. 4. 11. 오후 3:16, 인성(현파랑) : 원래 리액트 진영에서는 함수형 컴포넌트라는 단어를 썼었어요
2022. 4. 11. 오후 3:17, 인성(현파랑) : 그런데 이 네이밍이 함수형 프로그래밍과 비슷했고, 충분히 혼란을 야기할 수 있었어요. 이러한 이유였죠. "함수형 컴포넌트를 사용하면 함수형 프로그래밍이 가능해진다"
2022. 4. 11. 오후 3:17, 인성(현파랑) : 그러나 저희가 사용하는 컴포넌트에는 hook이 들어가고, 이 훅으로 사이드 이펙트를 빈번히 일으키기 때문에 함수형 프로그래밍이라고 볼 수 없습니다
2022. 4. 11. 오후 3:18, 인성(현파랑) : 그래서 리액트 진영에서도 최근-그래도 1년전이지만 함수 컴포넌트라고 다시 명명했어요
2022. 4. 11. 오후 3:18, 인성(현파랑) : 그 뒤로 공식 문서에도 Functional Component 가 아닌 Function Component라고 기재되어있습니다
2022. 4. 11. 오후 3:25, 나그네 : https://github.com/reactjs/reactjs.org/pull/863
2022. 4. 11. 오후 3:26, 나그네 : 참고해보시면 됩니다
2022. 4. 11. 오후 3:36, 부끄러워하는 라이언 : 모두들 답변 감사합니다 :)
2022. 4. 11. 오후 3:45, 웅세 : css grid에서 2 / 3 / 2 식으로 배열하는게 가능할까요? 첫번째 row에는 column이 2칸 두번째는 3칸 세번째는 2칸 이렇게요!!
2022. 4. 11. 오후 3:45, 유용태 (teo.yu) : 반갑습니다. 답장이 늦었네요 어서소세요. ㅎㅎ
2022. 4. 11. 오후 3:49, 오엠쥥 : 국비 카드 신청해보신분들
2022. 4. 11. 오후 3:50, 오엠쥥 : 결과 얼마정도 기다려야되나요 ?
2022. 4. 11. 오후 3:50, Vintz : 안녕하세요! 이게 며칠전에도 나온 주제이긴 한데 저도 막상 맞닥뜨리니 고민이 은근 되네요. 🤣

반응형을 하다보면 줄바꿈을 임의로 넣어주어야 할 때가 있는데 다들 <br /> 태그를 사용하시는지 아니면 \n + pre-line을 통해 해결하시는지 궁금합니다! 사실 br태그가 더 쉽게 해결이 가능한데 선호하는 방법이 아닌 것 같아서 이렇게 질문드려요!
2022. 4. 11. 오후 3:50, 오엠쥥 : 일주일 됐는데 아직 접수상태네요 ..
2022. 4. 11. 오후 3:59, 쵸키 : 아까 질문에 연속인데 혹시 css가 제가 작성한 별도의 css파일도 빌드에 포함시킬수 있는건가요?!
2022. 4. 11. 오후 4:00, 떨고있는 어피치 : 전 br태그 쓰는 편이에요ㅎㅎ
2022. 4. 11. 오후 4:01, 프린이 : 저는 그때마다 다른것 같아요!!
2022. 4. 11. 오후 4:01, 파이버 : 저는 특별한 이유 없으면 css요!
2022. 4. 11. 오후 4:02, 리액트 유치원생 : 저도 css로 사용합니다 ㅎㅎ
2022. 4. 11. 오후 4:06, 이엘로 : 전체 column을 6칸으로 하시고 row마다 column이 2개면 3칸씩 3개면 2칸씩 나눠 갖게 하시면 될 것 같아요
2022. 4. 11. 오후 4:08, Vintz : 그렇군요..! br 태그가 문단 구분용으로 남발하지만 않으면 크게 문제는 없을 것 같네요. 목적 자체가 줄바꿈이니까요..!

다들 경험 공유 감사드립니다!! :D
2022. 4. 11. 오후 4:09, Vintz : 여러 방법을 사용해보고 저도 상황에 맞게 사용해야겠어요~!
2022. 4. 11. 오후 4:11, 웅세 : 답변감사합니다 시도해보겠습니다!!!
2022. 4. 11. 오후 4:36, 유용태 (teo.yu) : 서버데이터가 엔터를 입력하는 형태라면 pre 아니면 br 저는 이렇게 하는 편입니다
2022. 4. 11. 오후 4:36, 유용태 (teo.yu) : 서버든 클라든..
2022. 4. 11. 오후 4:43, Vintz : 허..명료한 답변이네요 정말..감사합니다 테오 😍 관련 글을 쓸 생각인데 참고해도 될까요??
2022. 4. 11. 오후 4:44: 손흔드는 라이언님이 들어왔습니다.
2022. 4. 11. 오후 4:44, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 11. 오후 4:52: 즐거운 네오님이 나갔습니다.
2022. 4. 11. 오후 4:54, 멋쟁이 프로도 : 혹시 vue에서 tailwind를 css프레임웍으로 사용하시는 분이 계신가요??
2022. 4. 11. 오후 5:07, 유용태 (teo.yu) : 안녕하세요 손흔드는 라이언님~~ 반갑습니다. :)
2022. 4. 11. 오후 5:15, 부끄러워하는 라이언 : 실무에서 high order component를 자주 사용하나요? 들어는 봤는데 써본 적이 없어서 익히는 데 약간 어렵네요.

공식문서 보면서 뭔지 배우고 있는데 "기존에 있는 컴포넌트에서 props를 추가해서 새로운 컴포넌트를 만들어서 사용할 수 있다." 이정도만 알겠는데 더 알아야 할 사항이 있다면 알려주실 수 있으신가요?🙏
2022. 4. 11. 오후 5:16, 나그네 : Hooks 생태계로 넘어오면서 많이 쓰이고 있지는 않습니다
2022. 4. 11. 오후 5:16, 나그네 : 다만 클래스 컴포넌트를 필수로 써야하고 에러 바운더리 컴포넌트를 사용해야할때는 필요할 수 있고요
2022. 4. 11. 오후 5:17, 부끄러워하는 라이언 : 아 그럴 때 사용하는군요. 제가 클래스 컴포넌트를 자주 안 써봐서 몰랐던 거 같네요. 감사합니다☺️
2022. 4. 11. 오후 5:17, 나그네 : 다만 공식문서를 보고 설명하신 것을 봤을때는 조금 더 이해가 필요해보입니다
2022. 4. 11. 오후 5:17, 나그네 : 열심히 공부하시는군요 ㅎㅎ
2022. 4. 11. 오후 5:19, 부끄러워하는 라이언 : 더 읽어보겠습니다! 사실 공식문서 읽는 것도 약간~ 어렵네요 아하하 프로젝트를 하다 보니까 아는 선 내에서 계속 해결하려는 모습이 보여서 코드 개선을 하려면 더 알아야겠다는 생각이 들어 공식문서를 읽고 있습니다. 칭찬 감사합니다! 공부할 힘이 나네요!!!
2022. 4. 11. 오후 5:19, 김동현 : 하이어 컴포넌트 정말 가끔
2022. 4. 11. 오후 5:19, 김동현 : 라이브러리에서 등장하긴합니다
2022. 4. 11. 오후 5:19, 김동현 : 정말 가끔은 아니고 종종..?
2022. 4. 11. 오후 5:20, 나그네 : 보통 이제 안쓰이니까 공부 안해도 되겠죠?
라는 공부하지 않을 이유에 대한 답정너 질문으로 받는 이야기라서
2022. 4. 11. 오후 5:20, 나그네 : 좋은 자세를 가지신 것으로 보입니다 ㅎㅎ
2022. 4. 11. 오후 5:44, 시간없음 : depth가 3인 array를 리스팅할때 삼중 for loop문을 만들어야하나요? 너무오래걸릴꺼같은데...
2022. 4. 11. 오후 5:45, 파이버 : 배열 크기가 얼마 정도 되나요?
2022. 4. 11. 오후 5:47, 시간없음 : 카테고리라서 가늠이안됩니다..
2022. 4. 11. 오후 5:50, 파이버 : depth 가 3 인 array 를 펼치는 작업이라면 전체 원소 개수에 대해서 O(n) 일 거 같은데 혹시 어떻게 구현하셨나요?
2022. 4. 11. 오후 6:00, ㄹㄸ : 혹시 실무에서도 CRA를 많이 사용하는 편인가요 ?
사수가 없는 상태에서 새롭게 React + TypeScript 로 새롭게 프로젝트를 시작해야 하는데 webpack으로 필요한 부분을 모두 설정을 다해주어야 하는지, 아니면 CRA로 초기 세팅을 하고 craco와 같은 도구들로 필요할 때마다 추가적으로 Webpack 설정을 해주는 방식으로 처리하는지 궁금합니다.
2022. 4. 11. 오후 6:06, 최준경 : 전 CRA와 react-app-rewired로 구성했습니다.
2022. 4. 11. 오후 6:13, 나그네 : 자신있으시면 밑바닥부터해도 되고 그게 아니라면 CRA 같은 도구의 힘을 빌리는게 더 좋을 수 있죠 ㅎㅎ
2022. 4. 11. 오후 6:13, 나그네 : 저는 CRA + CRACO 조합으로 프로덕션 운영한 경험이 있어요
2022. 4. 11. 오후 6:14, Hola : 저도 이걸로 프로덕션 운영해본 경험이 있습니다 :)
2022. 4. 11. 오후 6:21, 비옷입은 튜브 : 저도요 : )
2022. 4. 11. 오후 6:58, 민석 : 동일 경로로 
{ "description": "대충 이거 내 자기소개에요" } 하고 Bearer Token 을 보넀는데, insomnia 에서는 정상 작동하고 axios 상에서는 Unahturoized(401 error) 가 발생하고 있는데.. 혹시 제가 모르고 있는 부분이 따로 있는 걸까요?"
2022. 4. 11. 오후 6:58, 민석 : 사진
2022. 4. 11. 오후 6:58, 민석 : 사진
2022. 4. 11. 오후 7:06, 민석 : 원인을.. 모르겠네요 http 라서 그런가...
2022. 4. 11. 오후 7:12, mean : 콘솔에서는 토큰 잘 나오나요?
2022. 4. 11. 오후 7:14, 민석 : 하하... 죄송합니다
2022. 4. 11. 오후 7:14, 민석 : 애초에 잘못넣었네요
2022. 4. 11. 오후 7:14, 민석 : 넵,,,,, config 파라미터로 넘겨야 하는데...
2022. 4. 11. 오후 7:14, 민석 : 정상작동됩니다.. 번거롭게 해서죄송합니다
2022. 4. 11. 오후 7:29, 이준희 : 정말 좋은 주제와 정보 공유 감사합니다. 

너무 큰 주제라 이게 함수형이야? 하면서도 그냥 그런가 보다 하고 썼었는데, 후회가 되네요 ㅋㅋㅋ ㅜㅜ
2022. 4. 11. 오후 8:44: 게으름(lifeisnovel)님이 들어왔습니다.
2022. 4. 11. 오후 8:44, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 11. 오후 8:45, 유용태 (teo.yu) : 안녕하세요~ lifeisnovel님! 반갑습니다 :)
2022. 4. 11. 오후 8:46, 게으름(lifeisnovel) : 이모티콘 안녕하세요! 예전 AdorableCSS 테크톡 때부터 블로그 글 흥미롭게 읽다가 오랜만에 봤더니 오픈채팅방이 있어서 들어오게 되었어요!
2022. 4. 11. 오후 8:47, 유용태 (teo.yu) : 와!!! 감사합니다 고맙습니다 :)
2022. 4. 11. 오후 8:47, 유용태 (teo.yu) : 여기는 프론트엔드나 개발자들에게 궁금한 것들을 물어보고 또 대답해주면서 함께 성장하고자 만든 공간입니다~
2022. 4. 11. 오후 8:48, 유용태 (teo.yu) : 학습이나 진로 실무에 대해서 궁금한것들이 있다면 언제든지 편하게 글 남겨주세요~~
2022. 4. 11. 오후 8:48, 게으름(lifeisnovel) : 이모티콘 4년차 프론트엔드... 개발자라고 말하고 싶지만 아직 jquery와 IE지원에서 올해 막 모던 js와 css로 어떻게든 올라타려고 발버둥치고 있습니다!
많은 얘기 나눌 수 있으면 좋겠어요, 좋은 공간 감사합니다!
2022. 4. 11. 오후 8:49, 유용태 (teo.yu) : 그 밖에 뭐든 좋아요!! 내가 아는
거다 싶으면 또 답을 달아주세요~ 설명할 줄 아는 지식이 정말 본인의 지식이라고 합니다!!
2022. 4. 11. 오후 9:42, 고래 : 취준 중인데 혹시 원티드 프리온보딩 프론트엔드 코스에 대해 아시는 분 계실까요? 아신다면 어떻게 생각하시나요??
2022. 4. 11. 오후 9:51, 최민석 : 기업에서 내준 과제 해결하면서 개인/팀으로 참여하면서 합니답
2022. 4. 11. 오후 10:26: 윤님이 들어왔습니다.
2022. 4. 11. 오후 10:26, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 11. 오후 10:28, 윤 : 삭제된 메시지입니다. 
2022. 4. 11. 오후 10:29, 유용태 (teo.yu) : 안녕하세요~ 윤님 반갑습니다 :)
2022. 4. 11. 오후 10:29, 윤 : 앗 ㅠㅠ 저는 단체방인지 늦게 깨달아서 글을 지워버렸어요 죄송합니다!!!
2022. 4. 11. 오후 10:30, 유용태 (teo.yu) : 아니에요~
2022. 4. 11. 오후 10:30, 유용태 (teo.yu) : 구글 스프린트는 4월달 신청을 받았고 마감이 된 상태입니다 :)
2022. 4. 11. 오후 10:31, 유용태 (teo.yu) : 톡게시판 '글 공유': 구글 스프린트 6기를 모집합니다.

날짜
4월 13일 (수) ~ 4월 18 (월) 까지
(디자이너님의 참가를 절실히 원하옵니다! +_+bb)

원래 스프린트는 (월~금)으로 이루어진 구성이나 저희가 사이드 프로젝트로 하는 만큼 
주말을 이용해 조금 더 개발에 할애할 수 있도록 
수요일날 시작하는 구성으로 만들어보았습니다.

저의 개인적인 사정으로 인해서 시간은 저녁 11시 고정입니다. ㅠㅠ 
(죄송해요 애들을 꼭 재워야만 해서.. 10시 45분 정도도 고민해보고 있습니다.)

알림
6명의 인원이 확보되면 스프린트는 시작할 예정이며 인원이 부족할 경우에는 스프린트 시작 날짜가 미뤄질 수 있습니다.

최소조건
스프린트인 만큼 매일 최소 1시간 30분 이상의 온라인 미팅 시간 확보는 꼭 필요합니다.
(지난 번의 경험으로는 보통 1시간은 항상 넘어가고 1시간 30분~2시간 정도는 쓰는 것 같아요)
*주말은 모두 비워둘 필요는 없지만 경험상 시간을 많이 비워두시면 좋을 것 같아요

주니어건 
2022. 4. 11. 오후 10:31, 윤 : 아하 !!! 감사합니다 :)!!!
2022. 4. 11. 오후 10:32, 유용태 (teo.yu) : 혹시 신청을 원해서 이메일을 남겨놓으시면 자리가 빠지거나 추가 모집을 하게 되면 또 공지를 드리도록 하겠습니다
2022. 4. 11. 오후 10:32, 윤 : 넵!!!! 감사합니다:)!!
2022. 4. 11. 오후 10:39, 고래 : 앗 감사합니다:) 6주를 투자할 만큼 메리트가 있을지 궁금했습니다..!
2022. 4. 11. 오후 10:39, 프론트 공부 : 취업에는 엄청 도움될거같네욥!!
2022. 4. 11. 오후 10:40, 서경 : 스프린트 관련해서는 프론트엔드는 거의 모르고 백엔드랑 인프라쪽만 가능한데 지원 가능한가요??
2022. 4. 11. 오후 10:40, 유용태 (teo.yu) : 네~ 백엔드 디자이너는 언제나 환영입니다 ㅎ
2022. 4. 11. 오후 10:41, 서경 : 다행이네요 ㅎㅎㅎ
2022. 4. 11. 오후 10:42, 유용태 (teo.yu) : 대신 스프린트를 하시게 되면 백엔드를 하셔야 합니다. ;) 스프린트는 각자의 전문성을 가지고 최대환 활용을 하는 협업방식을 배우는 곳이며 내가 못하는 스터디는 아닙니다 오셔서 프론트엔드를 하지는 않게 될거에요
2022. 4. 11. 오후 10:42, 유용태 (teo.yu) : 최대한*
2022. 4. 11. 오후 10:43, 유용태 (teo.yu) : 오히려 백엔드로 지원을 해서 인프라와 DB쪽을 지원을 해주시면 훨씬 더 풍성한 협업 경험과 서비스를 만들수 있을 거라고 생각합니다
2022. 4. 11. 오후 10:44, 유용태 (teo.yu) : 그렇지만 아이데이션부터 개발까지 가는 과정을 배우는 스프린트 과정은 백엔드를 하셔도 프론트엔드나 기획 디자인을 또 익힐 수 있는 좋은 기회가 될거에요!
2022. 4. 11. 오후 10:48, 시에스에스 : 혹시 electron사용해보신 분 계신가용? 되게 관심있게 보고 있는데, 사용해보신 분들의 후기가 궁금합니다!
2022. 4. 11. 오후 11:03, 서경 : 아 넵 저도 슥 봤는데 스프린트가 생각보다 더 촉박해서 프론트를 배우기 보다는 각자 역할에 집중해서 프로덕트 자체에 집중하게 될 것 같더라구요 ㅎㅎ
2022. 4. 11. 오후 11:03, 서경 : 그것도 좋은 경험일 것 같아서 조만간 참여해보고 싶네요
2022. 4. 11. 오후 11:09, 리린이 : 안녕하세요.
2022. 4. 11. 오후 11:10, 리린이 : 삭제된 메시지입니다. 
2022. 4. 11. 오후 11:10, 진현 : 안녕하세요.. 올해 초에 원티드 프리온보딩을 했었는데  저는 개인적으로 동료분들에게 많이 배우고, 보다 성장할 수 있던 기회였던 것 같습니다! 참여기업들이 좋다면 참여해보시는 걸 추천드려요ㅎㅎ 하지만 참여기업에 취업이 된다는 보장은 없고(해당 코스 수료시기에도 채용을 진행하지않음)또 진정 뽑으려고 참여한 것이 맞는지는 의문이 들더라구요. 체면치레(?)만 하려고 참가한 기업들도 많더라구요..! 제가 했던 기수에선 중간에 기업들이 나간다던가 과제의 요구사항이 바뀐다던가 했던 기억이 있습니다!
2022. 4. 11. 오후 11:10, 리린이 : 질문 올렸다가 검색하니 바로 나와서.. 삭제합니다 죄송합니다 ( _ _ )
2022. 4. 11. 오후 11:23, 고래 : 중간에 기업들이 나가기도 하는 군요...ㅠㅠ 기업 수가 많지 않아서 더 고민이 되더라고요.. 말씀 너무 감사합니다! 동료학습 경험으로 생각하고 고민해봐야겠네요..!
2022. 4. 11. 오후 11:25, 진현 : 혹시나 더 궁금한거 있으시면 1:1대화 걸어주세요 ㅎㅅㅎ)!!
2022. 4. 11. 오후 11:27, 프론트 공부 : 공짜라서 더 괜찮은거같네요!!
2022. 4. 11. 오후 11:57, 고래 : 50만원을 내고 어느 정도 수료하면 돌려받는 식인 것 같아요..! 감사합니다🙏
2022. 4. 11. 오후 11:59, 리린이 : 채용과정 중에 과제전형으로 제출하시는분들은 어떤식으로 하셨나요 ?
2022. 4. 11. 오후 11:59, 리린이 : git repo를 public으로 하면 안될 것 같은데 어떤식으로 commit을 해야할지 모르겠네요

2022년 4월 12일 화요일
2022. 4. 12. 오전 12:00, 최민석 : 제출방식이 뭔가요?
2022. 4. 12. 오전 12:00, 리린이 : 커밋로그 남겨서 마지막엔 아카이브해서 이메일로 제출입니다!
2022. 4. 12. 오전 12:00, 리린이 : 일단 프라이빗 레포만들어서 remote add origin 으로 추가해서 하고있는데 마지막에 압축해서 보내려면 커밋로그가 남을지 모르겠네요 ..!!
2022. 4. 12. 오전 12:01, 그레이 : .git 폴더만 들어있으면 될겁니다
2022. 4. 12. 오전 12:01, 리린이 : 아 그런가요? ㅎ 감사합니다
2022. 4. 12. 오전 12:02, 리린이 : 일단 비공개 repo에 remote origin 연결하는건 맞는거겠죠!?
2022. 4. 12. 오전 12:04, 그레이 : remote origin 으로 연결할 곳이 있어요?
2022. 4. 12. 오전 12:04, 그레이 : 이메일 제출이라고 말씀하신거 보면 그냥 local repo 로 작업하셔도 될듯?
2022. 4. 12. 오전 12:06, 파이버 : 저였으면 리모트 레포 연결 안했을거같아요
2022. 4. 12. 오전 12:06, Hola : 레포 주소 적어서 같이 내라고 한게 아닌이상 로컬에서 작업하셔도 될 것 같아요!
2022. 4. 12. 오전 12:42, 리린이 : 아 그렇군요!! 감사합니다
2022. 4. 12. 오전 12:42, 리린이 : 늦은시간에 답변 감사드립니다! 편안한밤 되세요 :)
2022. 4. 12. 오전 12:43, 나그네 : 과제는 대외비일 수 있어서 .git 만 남기는게 안전합니다
2022. 4. 12. 오전 12:44, 리린이 : 넵 아무리 프라이빗이라도 올리면 안되겠네요 답변 감사드려요!
2022. 4. 12. 오전 12:45, 나그네 : 면접 전형이 모두 종료되고나서 그때 비공개 저장소로 관리하시거나 별도 클라우드로 올려도 늦지 않으니까요 ㅎㅎ
2022. 4. 12. 오전 12:46, 리린이 : 나중에 제가 따로 관리하는게 제일 좋겠네요 ㅎ
2022. 4. 12. 오전 8:31, 비옷입은 튜브 : 조은님 포스팅이 있어서 공유드립니다. : )

https://euncho.medium.com/%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%ED%95%99%EC%8A%B5-%EB%A1%9C%EB%93%9C%EB%A7%B5-91c3bc11dec0
2022. 4. 12. 오전 8:32, 빠밤 : 엥 기업들이 나가는건 뭔가요 ㄷ
2022. 4. 12. 오전 8:33, 진현 : 그러게요..ㅎㅎ 당일 과제공개 시간에 갑자기 나간 기업도 있었어요!!
2022. 4. 12. 오전 8:43, 비옷입은 튜브 : 혹시 moment js에서 day js로 마이그레이션 해보신 분 게신가요?
2022. 4. 12. 오전 8:43, 유용태 (teo.yu) : 저요!
2022. 4. 12. 오전 8:43, 비옷입은 튜브 : 저도 모듈 사이즈 때문에 마이그레이션을 하고 싶은데 혹시 이슈는 따로 없으셨는지 궁금합니다. ㅎㅎ
2022. 4. 12. 오전 8:45, 유용태 (teo.yu) : 저는 Date관련 필요한 함수를 만들고 내부적으로 monent를 썼다가 dayjs 함수로 바꾼거라 어렵진 않았는데요. ex) isSameDate = (a,b) => monent... -> dayjs, dateFormat(date, format) => monent.format(...) -> dayjs.format(...)
2022. 4. 12. 오전 8:46, 유용태 (teo.yu) : 나중에 dayjs는 ufc랑 timezone 플러그인이 따로 있기 때문에
2022. 4. 12. 오전 8:46, 유용태 (teo.yu) : 서버에서는 monent를 써서 만든 포맷이 dayjs로 그냥 해석을 했을때 미묘하게 틀린적이 있어서
2022. 4. 12. 오전 8:47, 유용태 (teo.yu) : utc 확장을 설치하고 dayjs.parse("YYYYMMDD....") 어쩌고 해서 포맷을 정확하게 맞춰서 했던 거정도 기억이나네요
2022. 4. 12. 오전 8:49, 비옷입은 튜브 : 오 …공유해주셔서 감사합니다. : )
2022. 4. 12. 오전 8:53, 떨고있는 어피치 : 저도 moment -> dayjs로 변경했습니다.
거의 똑같아서 마이그레이션 하기 어렵지않으실 것같습니다 ㅎㅎ ㅎ
2022. 4. 12. 오전 8:54, lucky.jun : 오 dayjs는 date-fns에 비해 어떤신거 같나요??
2022. 4. 12. 오전 8:54, 유용태 (teo.yu) : 어피치님이 말씀하신 이유랑 동일합니다. ㅋ
2022. 4. 12. 오전 8:54, 유용태 (teo.yu) : monent는 만능이나 너무 무거워서 마이그레이션이 필요했고
2022. 4. 12. 오전 8:55, 유용태 (teo.yu) : dayjs가 거의 monent랑 비슷하다보니 택하게 되었습니다.
2022. 4. 12. 오전 8:55, 유용태 (teo.yu) : date-fns는 함수형으로 만들어졌으니 나중에 트리쉐이킹을 하기에는 더 용이할거라고 생각해요
2022. 4. 12. 오전 8:55, 유용태 (teo.yu) : 근데 마이그레이션을 해야하다보니 그냥 좀 편한걸 찾게 되더라구요 ^^;;
2022. 4. 12. 오전 8:55, 떨고있는 어피치 : 2222222222
2022. 4. 12. 오전 8:55, 떨고있는 어피치 : 일단…..옮기는게 우선이다
2022. 4. 12. 오전 8:56, 유용태 (teo.yu) : 빨리 Temporal이 ES Native에 포함되길 바랍니다. ㅠㅠ
2022. 4. 12. 오전 8:56, 유용태 (teo.yu) : Javascript Date는 진짜 쓰레기에요!
2022. 4. 12. 오전 8:56, lucky.jun : 22222222........
2022. 4. 12. 오전 8:57, 유용태 (teo.yu) : 오죽하면 StateofJS에서 JS개선 과제중에 Date 개선만 따로 있겠습니까? ㅋㅋㅋㅋ 무려 Static Type과 나란히 할 토픽감!!
2022. 4. 12. 오전 10:40, 핸디(강경석) : 선배님들 혹시 내 로컬에 빌드한 프로젝트를 외부로 간단히 노출?할수 있는 익스텐션이 있을까요?
2022. 4. 12. 오전 10:41, 썰~~ : ngrok
2022. 4. 12. 오전 10:41, 핸디(강경석) : 예전에 한번 여기서 언급되었던거같은데요. 찾아보려니 배포쪽 내용만 나와서요
2022. 4. 12. 오전 10:41, 유용태 (teo.yu) : https://ngrok.com/
2022. 4. 12. 오전 10:42, 핸디(강경석) : 역시 빠르십니다!! 감사합니다!!
2022. 4. 12. 오전 10:46, 썰~~ : 프론트가 배포하지 않아도 테스트링크를 만들어볼수있어서
2022. 4. 12. 오전 10:46, 썰~~ : 유용하게 쓰고 있어요
2022. 4. 12. 오전 10:46, 썰~~ : 그리고 로컬에서 바로 저장해서 적용되면 저링크에서도 바로 적용돼서 좋습니다
2022. 4. 12. 오전 10:52, 비옷입은 튜브 : 오 신기하다 : ) 공유해주셔서 고맙습니다
2022. 4. 12. 오전 10:53, 프론트 지키미 : 리액트에서 함수형 컴포넌트와 훅은 동시에 등장한 것인가요??

공식문서에 훅이 등장한 이유에 대해 나와있는데요
1. 컴포넌트간에 생명주기 메서드 로직을 재사용하기 어려움
2. 복잡해진 컴포넌트 (생명주기 class 메서드 간의 코드 중복, 그에따른 재사용 불가 등)
3. Class의 this는 사람과 기계모두 이해하기 어렵다 (this는 사람이 이해하기 어렵고 컴파일 후에 배포하는 식으로 진행을 하게 되면 Class는 지연을 일으킬 가능성이 있다)


정도로 저는 이해를 했는데
2,3의 내용은 훅에 대한 내용이 아니라 함수형 컴포넌트의 이점이 아닐까 생각이 들어서요

아래 사항중 어떤 순서로 진행이 되었는지 알고싶습니다
1. 클래스형 컴포넌트 -> 함수형 컴포넌트의 등장 -> 훅의 등장
2. 클래스형 컴포넌트 -> 함수형 컴포넌트, 훅의 등장
2022. 4. 12. 오전 10:54, 썰~~ : 함수 컴포넌트는 원래부터 있었습니다.
2022. 4. 12. 오전 10:54, 썰~~ : 상태관리가 클래스 컴포넌트밖에 안되다가 context를 이용한 방법이 나와서
2022. 4. 12. 오전 10:54, 썰~~ : 함수 컴포넌트에서도 훅을 통하여 상태를 관리할수있게 되었고 그래서 권장하게 되었습니다.
2022. 4. 12. 오전 10:55, Luke : 함수 컴포넌트에서는 정말 state를 관리할 수 없었습니다. 그러다가 hook이 나오면서 함수 컴포넌트를 사용하는 쪽으로 패러다임이 바뀐거죠 라고 쓰고 있었는데 썰님이 빨랐급니다
2022. 4. 12. 오전 10:55, 썰~~ : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 12. 오전 10:55, 썰~~ : 예전에 김민태님이라고 우형개발자분이 훅의 작동방식을 구현해주셨는데 신기하더라고요
2022. 4. 12. 오전 10:56, 썰~~ : 그런방법을 생각해내다니?! 이러면서 봤습니다 ㅋㅋ
2022. 4. 12. 오전 10:56, 프론트 지키미 : 그럼 이전에 함수 컴포넌트의 역할은 상태관리가 불가능했으므로 크지 않았을것 같은데 맞을까요??

이후에 훅이 등장하면서 권장되기 시작한 것이구요
2022. 4. 12. 오전 10:57, 썰~~ : 역할이 크지 않았다라기 보단 아예 사용을 할수 없었다..? ㅋㅋㅋㅋ 비슷한 말인거같기도 하고
2022. 4. 12. 오전 10:57, Luke : 네 함수컴포넌트는 정말 프레젠테이션만 담당했습니다 컨테이너&프레젠테이션 스타일로 주로 사용됐어요
2022. 4. 12. 오전 10:57, Luke : props 내려주는대로 그냥 보여만 줬었습니다
2022. 4. 12. 오전 10:58, 프론트 지키미 : 두분다 친절한 설명 감사합니다!! 

클래스형, 함수 컴포넌트 존재 -> 훅의 등장 으로 머릿속에서 정리할게요!!
2022. 4. 12. 오전 11:16, 나그네 : SFC 라는 키워드로 검색해보시면 도움될겁니다
2022. 4. 12. 오전 11:18, 나그네 : 클래스컴포넌트는 너무 뚱뚱하고 무거워
라이프싸이클도 상태도 존재하지 않는
Stateless Functional Component 를 사용하자!
라는 바람이 불었고

상태라고 해봤자 props만 내려받아서 렌더링하는 가벼운 함수 컴포넌트가 먼저 등장했었습니다
2022. 4. 12. 오전 11:20, 프론트 지키미 : 감사합니다!!
2022. 4. 12. 오전 11:27, 프론트 지키미 : Seoul Finance Center가 먼저 떠오른건 반성하겠습니다
2022. 4. 12. 오전 11:38, 쵸키 : 안녕하세요 저 질문하나만 하겠습니다ㅠㅠ 현재 web이랑 mobile을 react-device-detect의 isMobile을 통해서 분기처리를 해서 브라우저에 띄우고 있는데 분기처리는 잘 되지만 웹 화면에서 모바일 css를 계속해서 호출하는 이슈가있어서요ㅠㅠ mobile.css는 모바일컴포넌트 내에서 선언되어있는데 얘가 왜자꾸 웹에서 호출되는지를 모르겠습니다ㅠㅠ
2022. 4. 12. 오전 11:39, 떨고있는 어피치 : react-device-detect 레포 들어가셔서 어떻게 구분하고있는지 확인해보시면 아마 도움 되실 것같아용...
2022. 4. 12. 오전 11:54, 쵸키 : true false로 분기처리가 되어지는데 컴포넌트가 생성될때 생성자에서 import하니까 잘 먹히네요ㅠㅠ이게 맞는 방법인진 모르겟지만..
2022. 4. 12. 오전 11:55, 떨고있는 어피치 : 그렇군요 ㅎㅎ 추가로 생각해본 방법은 하나에만 의존하지않고, 약간의 방어 로직(이라고 해야하나..)을 얹는건 어떠세요…?

예를 들어 width가 450px 이하일 때는 모바일,
그 이상일 때는 PC로 간주한다.
2022. 4. 12. 오전 11:57, 떨고있는 어피치 : 만약 제가 그런 상황이라면, 뭐 그런식으로 보완장치를 같이 만들어서 처리할 것같습니다. 아니면 userAgent를 추가로 확인한다거나.거나…
2022. 4. 12. 오전 11:58, 쵸키 : userAgent는 처음들어봤어요!! 조언 감사합니다 방어코드에 대해서도 생각해보는게 좋겠네요 ㅎㅎㅎ
2022. 4. 12. 오전 11:58, 떨고있는 어피치 : 다른 분들의 조언도 들어보시면 좋겠네용 ㅋㅋㅋ
저도 늅늅이라서…..ㅋㅋㅋㅋㅋ 아는게 이게 전부입니다
2022. 4. 12. 오전 11:59, 쵸키 : ㅋㅋㅋㅋㅋ넵 감사합니다!
2022. 4. 12. 오후 12:23, 진현 : 오늘 정말 정말 좋은 회사에 최종합격하게돼서 연봉협상을 하게되었는데요 원하는 연봉을 알려달라고 하시는데 어떤걸 기준으로 결정하면 좋을까요??? (로켓펀치 공고에는 네카라베쿠배급 연봉 이라고 써져있고 제가 지원했던 포지션은 경력3년차 이상 포지션이었습니다!)
2022. 4. 12. 오후 12:24, 최민석 : 축하드립니다~~
2022. 4. 12. 오후 12:24, 진현 : 저는 0년차 신입입니다!
2022. 4. 12. 오후 12:24, 진현 : 감사합니다ㅜㅜ
2022. 4. 12. 오후 12:24, 썰~~ : 오 축하드립니다~~
2022. 4. 12. 오후 12:24, 빠밤 : 축하드립니다!
2022. 4. 12. 오후 12:24, 유용태 (teo.yu) : 와!!! 일단은 먼저 축하드려요!!!
2022. 4. 12. 오후 12:24, 썰~~ : ㅠㅠ 오래되셨네요 그때 프로젝트 같이했었는데
2022. 4. 12. 오후 12:24, 썰~~ : 더 기쁘실듯
2022. 4. 12. 오후 12:24, 빠밤 : 네카라쿠배급이면 5천이상불러도되는거아닌가요?
2022. 4. 12. 오후 12:24, 진현 : 네..취준하면서 정말 너무 힘들었어요ㅠㅠㅠ
2022. 4. 12. 오후 12:24, 준 : 와 3년차 이상인데 신입으로 합격하시다니 엄청난 실력자시군요!!!…
2022. 4. 12. 오후 12:25, 준 : 축하드립니다.. 얼마나 고생하셨을지 가늠도 안되네요
2022. 4. 12. 오후 12:25, 진현 : 5천을 제가 감히 불러도 될까요..????
2022. 4. 12. 오후 12:25, 빠밤 : 밑져야본적아니겠습니까
2022. 4. 12. 오후 12:25, 엉망장자 : 충분할 것 같아요! 저도 오퍼레터 보고 놀랬어요
2022. 4. 12. 오후 12:25, 빠밤 : 로켓펀치에 대놓고 그정도급맞춰준다하면
2022. 4. 12. 오후 12:25, 썰~~ : 내가 할수있는게 그만큼인지 생각해보고 부르는건 좋습니다 ㅋㅋ 그래도 일단 불러보고 ㅋㅋ 협상하는걸로
2022. 4. 12. 오후 12:25, 빠밤 : 5천이상ㄱㄱ하시죠
2022. 4. 12. 오후 12:25, 진현 : 마음같아선 업계평균받아도 정말 행복할 것 같은데 이러면 후회한다고 주변에서 말려서요ㅠㅠ
2022. 4. 12. 오후 12:25, 엉망장자 : 6은 어떠세요 네카라 친구들 그정도 받던데..ㅎㅎ
2022. 4. 12. 오후 12:26, 썰~~ : 저는 4천 생각하고 5천 부를거같아요
2022. 4. 12. 오후 12:26, 썰~~ : 떨어질거 생각하고 확 불러서
2022. 4. 12. 오후 12:26, 썰~~ : 4000천까지는 오케이 이런느낌?
2022. 4. 12. 오후 12:27, 빠밤 : 이거굿
2022. 4. 12. 오후 12:28, 진현 : 우왓.. 조언 감사합니다!!!!!
2022. 4. 12. 오후 12:28, 진현 : 이모티콘 
2022. 4. 12. 오후 12:34, 긱긱 : 축하드려요!!!!
2022. 4. 12. 오후 12:36, 진현 : 감사합니다!!!!!
2022. 4. 12. 오후 12:36, 신입생 : 축하드립니다 ~!
2022. 4. 12. 오후 12:36, 진현 : 감사합니다!!!
2022. 4. 12. 오후 12:39, 파이버 : 축하드려요! 저도 최근에 이직하면서 같은 고민 했는데, 기존 연봉 두배 불렀는데 주더라고요 ㅋㅋㅋㅋㅋ 생각보다 요즘 프론트 개발자 귀한 거 같아요 연봉협상 화이팅입니다
2022. 4. 12. 오후 12:39, 조조 : 축하드립니다!!! 분발해야겠어요 ㅎㅎ
2022. 4. 12. 오후 12:39, 조조 : 두배...와...
2022. 4. 12. 오후 12:39, Vintz : 오 휴파 드디어!! 정말 축하드립니다 🥳🥳🎉 믿고 있었어요!!
2022. 4. 12. 오후 12:40, mean : 축하드립니다 🎉🎉 혹시 서류 몇개 넣으셨는지 여쭤봐도될까요?
2022. 4. 12. 오후 12:48, 우오 : 축하드려요..!!!!
2022. 4. 12. 오후 12:51, 핸디(강경석) : 두분다 축하드립니다~~
2022. 4. 12. 오후 12:52, 긱긱 : 와…축하드려요…….
2022. 4. 12. 오후 12:59, 여의도개발 : 축하드려요 ㅎㅎ
2022. 4. 12. 오후 1:00, 진현 : 축하해주셔서 감사합니다ㅜㅜ !!!
2022. 4. 12. 오후 1:00, hustle-dev : 축하드려요!!
2022. 4. 12. 오후 1:00, 여의도개발 : 신입은 보통 연봉협상 개념이 없는데
말이 안되도 일단 부르는게 좋다고 생각합니다.
(생각하셨던 마지노선 밑으로만 안가게 잘 협상하시면 될듯요)
2022. 4. 12. 오후 1:04, 조조 : 진현님 혹시 기술 스택이 어느정도 되시는지 여쭤봐도 될까요? 취업준비중인데 궁금합니다..!
2022. 4. 12. 오후 1:05, 진현 : 저.. 90개정도 넣어서 서류(코테/과제포함) 30개 면접은 10곳 조금 넘게 본 것 같아요..
2022. 4. 12. 오후 1:06, 진현 : https://better-chamomile-2c5.notion.site/bae03824f7cd4ad492276db9a0c39365
제 이력서입니당..!
2022. 4. 12. 오후 1:07, mean : 자세하게 알려주셔서 감사합니다! 연봉현상 좋은 결과 있으시길!!
2022. 4. 12. 오후 1:07, 빠밤 : 와우 ㄷ
2022. 4. 12. 오후 1:08, 조조 : 감사합니다!!!
2022. 4. 12. 오후 1:23, 진현 : 엇..비밀번호가 들어있어서 삭제하려고 했는데 안되는군여...ㅠㅠ
2022. 4. 12. 오후 1:25, 호잇 : 진현님 깃헙 팔로우 해도 되나요?
2022. 4. 12. 오후 1:25, 호잇 : ㅎㅎㅎ
2022. 4. 12. 오후 1:26, 진현 : 앗 넵!!ㅎㅎㅎㅎ
2022. 4. 12. 오후 1:26, 광대승천 : 진현님 너무 축하드립니다~~
2022. 4. 12. 오후 1:27, 진현 : 감사합니다(__)!!!
2022. 4. 12. 오후 1:27, 광대승천 : 고생하신만큼 보상 받은신거 같아요!! 앞으로 더 화이팅입니다
2022. 4. 12. 오후 1:27, 떨고있는 어피치 : 진현님 ㅎㅎ
혹시 하나만 오지랖을 부리자면……
이력서가 가운데정렬이 안되어있어서 가운데 정렬 되면 더 좋을 것같습니당
2022. 4. 12. 오후 1:27, 떨고있는 어피치 : 의도하신거라면 죄송합니다
2022. 4. 12. 오후 1:28, 광대승천 : 같은 부트캠프 후배님이라 더 반갑네요 ㅎㅎ
2022. 4. 12. 오후 1:30, 김동현 : 노션사이트라서 중앙정렬하기가 여려울거에요
2022. 4. 12. 오후 1:30, 김동현 : 고생하셨습니다
2022. 4. 12. 오후 1:33, 떨고있는 어피치 : 워니님 이력서 템플릿인데, 워니님 이력서 들어가서 보시면 모니터가 와이드라도 가운데 정렬?(Max-width가 있는 느낌?)이 되어있거든용…

그 부분을 그냥 말씀드린 것입니당 ㅋㅋㅋ
사소한거니까 뭐 보강하셔도 되고 안하셔도 상관없습니당 ㅋㅋㅋ
2022. 4. 12. 오후 1:36, 썰~~ : 워니님 커피챗 해보고싶은분중 한분..
2022. 4. 12. 오후 1:36, 김동현 : 노션에서 전체 width 로 할지 좁은 width 로 할지 설정하는게 있는데, 그걸 설정하신것뿐일거에요. 노션에서 css styling 할려면 아예 템플릿 자체를 사거나 oopy 등의 써드파티를 사용해야할겁니다
2022. 4. 12. 오후 1:37, 진현 : 헛..감사합니다 제가 이력서 제출할땐 a3로 출력해서 뽑아서 가운데 정렬이 안되어있는줄 몰랐습니다ㅠㅠ
2022. 4. 12. 오후 1:37, 서경 : 이력서 잘봤습니다 ㅎㅎㅎ
2022. 4. 12. 오후 1:38, 떨고있는 어피치 : 앗 아닙니다 ㅎㅎ
가운데 정렬의 의미는 아니었고 동현님께서 말씀하신 width설정의 차이였던 것같습니당 ㅎㅎㅎ 너무너무 사소한거니까…무시하셔도 됩니당!
2022. 4. 12. 오후 1:41, 웹린이 : 와 축하드립니다🎉🎉🎉🎉🎉
2022. 4. 12. 오후 1:42, Hola : 와!! 정말 축하드려요!!!
2022. 4. 12. 오후 1:45, 프론트엔드되고싶어요 : 코드스테이츠 부트캠프 이번에 프론트엔드 과정으로 들어갈예정인 사람인데 커리큘럼이나 안에서 하는 과정들이 어떠셨나요????
2022. 4. 12. 오후 1:45, 빠밤 : 국비합격하셨나요?
2022. 4. 12. 오후 1:46, 웹린이 : 공고에 어느정도 급으로 맞춰주겠다고 했으니 생각하신 만큼 자신있게 얘기하셔도 될 것 같아요~
2022. 4. 12. 오후 1:46, 프론트엔드되고싶어요 : 아직 합격은 아니긴한데 국비지원이 맞긴해요
2022. 4. 12. 오후 1:47, 고래 : 와 축하드립니다!!
2022. 4. 12. 오후 1:48, 화가난다 화가나 그래서 난 화가임 : 축하드려요!!!!
2022. 4. 12. 오후 1:59, 진현 : 코드스테이츠를 믿지 마세요..
2022. 4. 12. 오후 2:00, 진현 : 제 주변 수료하신분들 중에선 추천한다고 하신분들은 안계셨어요..ㅠㅠ..
2022. 4. 12. 오후 2:01, 음악듣는 어피치 : 국비면 뭐..
2022. 4. 12. 오후 2:08, 화가난다 화가나 그래서 난 화가임 : 코드스테이츠 국비에요? 최근에 바뀐 건가?
2022. 4. 12. 오후 2:10, 빠밤 : 이번년부터 국비로바꼈더라구요
2022. 4. 12. 오후 2:12, 프론트 공부 : 그래도 저는 팀프로젝트, 파이널 프로젝트 는 재미있었어요!! 들인 돈에 비하면 그 두개만 남았지만,
2022. 4. 12. 오후 2:12, 비옷입은 튜브 : 코스마다 달라요
2022. 4. 12. 오후 2:14, 비옷입은 튜브 : ?
2022. 4. 12. 오후 2:14, 비옷입은 튜브 : 질문입니다 ㅎㅎ
2022. 4. 12. 오후 2:23, 프엔공부중 : 정말 축하드립니다!! 곧 취준인데 너무나 부럽고 두렵네요 ㅠㅠ 축하드립니다!
2022. 4. 12. 오후 2:24, 0_0 : 축하드려요!!
2022. 4. 12. 오후 2:25, 진현 : 축하해주셔서 감사합니다ㅠㅠㅠㅠ
2022. 4. 12. 오후 2:25, 프론트엔드되고싶어요 : ㅠㅠ 어떤점이 별로였다고 하던가요… 커리큘럼 자체는 괜찮은것 같던데
2022. 4. 12. 오후 2:26, 진현 : 음.. 제가 느꼇을때는 개개인에 대한 케어가 전혀 없고.. 실시간 세션에서 강의 해주시는 강사들도 수료하신 분들이여서 전혀 개발에대한 지식이 있다고 볼 수 없는 상태이고.. 네 그랬습니다..  한번은 코드스테이츠내 문서들이 너무 성의가 없어서 제가 문의해서 따졋더니 참..네.. 그랬습니다..
2022. 4. 12. 오후 2:26, 나그네 : 그래도 될놈될이긴해요
코드스테이츠 나와도 잘 하는 애들은 잘되긴합니다
2022. 4. 12. 오후 2:26, 나그네 : 근데 저도 지인들 몇명이 후회한다고 하는 경우를 많이 보긴했어요
2022. 4. 12. 오후 2:26, 진현 : 맞습니당..!! 어디든 자기 하기 나름인 것 같아요
2022. 4. 12. 오후 2:27, 진현 : 코드스테이츠 내 컨텐츠 보여드리면 다들 이게 850만원짜리가 맞냐? 라는 반문을 하십니다..
2022. 4. 12. 오후 2:27, 진현 : 아무튼.. 저는 개인적으로는 비추천드려요!
2022. 4. 12. 오후 2:28, 나그네 : 위윈 제도?? 자체가 문제도 많다 그러고
다 그런건 아니겠지만 적어도 제 주변에서는 상대적으로 수료 후에 만날때마다 욕하는 분들이 대다수이셔요
2022. 4. 12. 오후 2:30, 비옷입은 튜브 : 네 빡칩니다 ㅎㅎ
2022. 4. 12. 오후 2:30, 비옷입은 튜브 : 17프로씩 2년동안 내야합니다
2022. 4. 12. 오후 2:32, 기뻐하는 라이언 : 이정도 열심히 해야 합격을 하는군요 분발 해야겠네요
2022. 4. 12. 오후 2:32, 빠밤 : 저정도는해야 네카라급가는구나라는 생각이드네요
2022. 4. 12. 오후 2:33, 프론트엔드되고싶어요 : 국비지원이라 돈이 아깝진 않을것같고 배운다는 마음가짐으로 열심히 해야겠습니다 ..ㅜㅜ 국비되는데는 저기만한데가 없는것 같아성
2022. 4. 12. 오후 2:34, 진현 : 국비가 된다면 저만한 선택지는 없을 것 같아요..
2022. 4. 12. 오후 2:34, 리린이 : 그래도  국비지원이 되는곳을 찾으신다면 커리큘럼으로만 봤을 때 요즘 생기는 기관들이 기존에 있던 컴퓨터학원에서 실력없는 강사들 데려와서 책만 읽어주는 곳보다는 낫습니다. (남궁성님 학원 제외)
2022. 4. 12. 오후 2:35, 최민석 : 데브코스 좋아용
2022. 4. 12. 오후 2:36, 프론트엔드되고싶어요 : 답변 감사드립니다!!! 선배님들
2022. 4. 12. 오후 2:44, 0_0 : 22...
국비 경험자인데 국비는 참 아쉬운점이 많아요
2022. 4. 12. 오후 2:44, 비옷입은 튜브 : 저는 코드스테이츠 추천은 안하지만 배울 것은 많다고 생각합니다.

비전공자에 대학도 안나왔지만 코드스테이츠에서 배운 지식으로 취업까지 했고, 현재 계속해서 배우고 있습니다.

안에서 동기분들과 많이 토론하시면서 공부하시면 분명 좋은 결과 있으실거에요.
2022. 4. 12. 오후 2:51, 음악듣는 어피치 : 될놈될이 맞아요 ㅎㅎ..
2022. 4. 12. 오후 2:52, 음악듣는 어피치 : 코드스테이츠 윈윈으로 한 사람 중에 매달 돈 감사한 마음으로 보내는 사람이 있을까요 ㅋㅋㅋㅋ 피같은 내 월급에서 심지어 세전으로 성과급까지 떼가는데 말이죠.
2022. 4. 12. 오후 2:53, 음악듣는 어피치 : 커리큘럼 퀄리티나 케어해주는거에 비해 2년에 (최대) 1500만원인데
이런데는 전세계 어디서도 없을거같네요 ㅋㅋ
2022. 4. 12. 오후 2:53, 리린이 : 오우… 매월 급여명세서라도 확인하나요..?
2022. 4. 12. 오후 2:53, 0_0 : 몇개월과정이죠..?
2022. 4. 12. 오후 2:54, 음악듣는 어피치 : 6개월 과정이고요 매월 급여명세서는 확인안하지만 연말에 소득급여명세서 받아가요~
2022. 4. 12. 오후 2:54, 빠밤 : 6개월아닌ㄴ가요??
2022. 4. 12. 오후 2:54, 음악듣는 어피치 : 건보료 확인증이랑 ㅋㅋ
2022. 4. 12. 오후 2:54, 리린이 : 와 그렇군요.. ㄷㄷ
2022. 4. 12. 오후 2:54, lucky.jun : 우와!! 진현님 축하드립니다!!!!!!!
2022. 4. 12. 오후 2:54, 빠밤 : 이번에 프론트엔드는 국비로 아에바뀐거같던데 좋은거겠죠..?
2022. 4. 12. 오후 2:54, 음악듣는 어피치 : 약속은 약속이니 내는거지만 연협이라도 잘되면 다른의미로 눈물납니다ㅋㅋㅋ 하루빨리 끝나길!!
2022. 4. 12. 오후 2:54, one_dev : 국비면 괜찮지만 아니면 다른게 더 좋을것 같아여
2022. 4. 12. 오후 2:56, 빠밤 : 저같은경우 사실 금액이부족해서 유료부트캠프는 생각도못했는데 국비로 바껴서 무료면 확실히 좋은거같긴하네요..
2022. 4. 12. 오후 2:57, 화가난다 화가나 그래서 난 화가임 : @진현  혹시 코테는 어느 수준까지 준비하셨나요?
2022. 4. 12. 오후 2:57, 0_0 : 다른 국비보단 그대로 분위기 낫지 않을까(?)하는 기대는 있을 듯 해요.
국비에서 반 분위기 잘못 만나면 피눈물나요.....
2022. 4. 12. 오후 2:57, 진현 : 기업들이 내준 코테를 풀어보니 너무 어렵더라구요..그래서 따로 준비안하고 코테 안보는 곳만 넣었습니다!!
2022. 4. 12. 오후 2:57, 화가난다 화가나 그래서 난 화가임 : 과제랑 포폴 전형
2022. 4. 12. 오후 2:58, 화가난다 화가나 그래서 난 화가임 : 그런 느낌인가요?
2022. 4. 12. 오후 2:58, 진현 : 넵!!!
2022. 4. 12. 오후 2:58, 화가난다 화가나 그래서 난 화가임 : 저도 그런 수순을 생각중이라
2022. 4. 12. 오후 2:58, 리린이 : 진현님 혹시 기술면접 질문리스트는 따로 정리하셨나요? 아니면 어디서 많이 참고하셨나요 ?
2022. 4. 12. 오후 3:00, 진현 : 벨로그에 있는 면접질문 글들 많이 참고했습니다.. 그리고 면접에서 받았던 질문들을 따로 정리했는데 결국엔 다들 같은 것을 물어보시더라구요!!  항상 받았던 질문중에 기억나는건
1. 리액트/브라우저 렌더링 과정
2. 라이프사이클이 뭔지
3. 렛바콘스트차이 
4. 호이스팅이 무엇인지? 
요것들은 꼭 물어보셨던 것 같아요
2022. 4. 12. 오후 3:01, 0_0 : 단골질문들이군용
2022. 4. 12. 오후 3:02, 리린이 : 아 감사합니다 ㅎ클로져도 많이 물어보죠?!
2022. 4. 12. 오후 3:03, 진현 : 넵!! 클로저/스코프 ,  https http차이, 세션, oauth 프로세스 들도 많이 물어보셨어요
2022. 4. 12. 오후 3:10, Luke : 핵어렵습니다 요즘 코테
2022. 4. 12. 오후 3:12, 썰~~ : 실행컨텍스트쪽은 개발하면서 알면 계속 이용가능해서
2022. 4. 12. 오후 3:12, 0_0 : 신입 때 스타트업 위주로 면접 봤는데, 몇 군데 보다보면 면접 질문이 비슷비슷해서 최대한 많이 지원해서 경험치 쌓는게 중요한 것 같아요
2022. 4. 12. 오후 3:13, 빠밤 : 헉 그정돈가요
2022. 4. 12. 오후 3:19, 엄지척 제이지 : 임원 면접 준비중인데 성격의 단점부분에서 막혔습니다…. 단점같지도 않은 단점을 적거나 뻔한걸 적으면 안되고 솔직히 말해야하는 것을 좋아한다고 해서 솔직한 저의 단점을 의견 관철 능력이 떨어진다 로 말을 하려고 생각중입니다. 의사소통이 강조되는 프엔 직무에서 이 단점을 말하는것이 치명적일수도 있을 것 같은데 조언 주실 수 있으실까요? 
다른 분들은 단점 어떤거 말하셨는지도 궁금합니다
2022. 4. 12. 오후 3:20, Luke : 처음 취업할 때는 대충 string, array 메서드로 잘 조작해서 풀면 어느 정도 풀리는 문제들이 많았는데 최근에 이직 준비하면서는 bfs, dfs 활용은 기본으로 하나씩 나오는 것 같구요, dp로 풀어야하는 문제들도 나오고 있구요. 단순히 맞고 틀리고의 문제만이 아니라 효율성 점수를 따로 매기는 기업들도 많아졌어요. 최근에 3문제 중에 3문제 다 풀었는데 효율성 점수에서 fail이 많았던 적이 있었는데 결국 탈락이었습니다 ㅋㅋㅋ
2022. 4. 12. 오후 3:21, 빠밤 : 허허.. 경력직 이직이면 코테는 무조건 자바스크립트로 봐야하나요?
2022. 4. 12. 오후 3:21, 썰~~ : 회바회이긴하지만
2022. 4. 12. 오후 3:21, 유용태 (teo.yu) : 단점 = 나쁜 점 이라고 생각하지 말아보세요. 함께할때 미리 알아두면 좋은 점. 그래서  이렇게 받아줬으면 좋겠다거나 이런식으로 케어를 받는 다거나 이런 환경에서 더 잘하고 못하고 이런식으로 좀 생각해보시면 좀 편할수 있습니다
2022. 4. 12. 오후 3:22, 썰~~ : 그런 회사가 늘어나는걸로 알고있습니다
2022. 4. 12. 오후 3:22, Luke : 단점은 진짜로 단점을 말하라는 얘기가 아닙니다. 적절한 예인지는 모르겠지만 '저는 너무 일만 많이하는 것 같아요' 처럼 관점에 따라서 장점으로도 단점으로도 보일 수 있는 것 같은 걸 말하시는게 좋아요
2022. 4. 12. 오후 3:22, 떨고있는 어피치 : 단점 자체보다는 단점을 극복하려는 방법이나 노력 같은 것도 같이 말씀하시면 좋을 것 같아요 제 경우에는 덜렁대는 걸 말했는데 (메일 첨부파일 빼먹는다거나...ㅋㅋ) 체크리스트를 만드는 습관을 들였다 요런 식으로 풀었어요
2022. 4. 12. 오후 3:22, 유용태 (teo.yu) : 굳이 말하고 싶지 않는 단점은 적지 마세요~
2022. 4. 12. 오후 3:23, 떨고있는 어피치 : 저는 사실 퍼블리셔인데 혹시 인터렉션 구현 자주 하시는 분 계신가요? 원래 간단한 스크롤 효과같은 건 aos로 처리하다가 복잡한 애니메이션이 필요해져서 gsap의 scrollTrigger를 같이 사용하기 시작했는데 aos와 gsap가 병행사용이 안되네요ㅜㅜ gsap를 aos처럼 쓰고싶은데 혹시 이렇게 만들어 쓰기도 하시는지 궁금합니다..ㅎㅎ
AOS :: https://michalsnik.github.io/aos/
gsap(scrollTrigger) :: https://greensock.com/docs/v3/Plugins/ScrollTrigger
2022. 4. 12. 오후 3:23, Luke : 아뇨 파이썬이 편하시면 파이썬으로 하시고 cpp가 편하시면 cpp로 하시면 됩니다. 근데 자스 개발자가 굳이 저걸 코테를 위해서 배울 필요까지 있을까는 의문이에요
2022. 4. 12. 오후 3:23, 파이버 : 저 알고리즘 딥해지길래 그냥 자바로 봤어요!
2022. 4. 12. 오후 3:25, DARTZ : 코테.. 저도 요즘 개발공부보다 코테 준비하고 있는데 괜찮은 교육과정이나 회사 지원하려면 전부 코테 보더라고요.. 또 이런 알고리즘이 기본적으로 필요한 지식이라고들 하니 안할 수도 없네요 ㅠㅠ
2022. 4. 12. 오후 3:32, 엄지척 제이지 : 조언해주셔서 감사합니다!
2022. 4. 12. 오후 3:32, 썰~~ : 혹시 amplify할때 iam권한 뭐뭐필요한지 아시는분 있나요
2022. 4. 12. 오후 3:49, 웅세 : 정말 죄송한데 이거에 대한 구현을 현재못하고있어서... 리액트 프로젝트에서 styled-components 사용중입니다
2022. 4. 12. 오후 3:49, 웅세 : 사진
2022. 4. 12. 오후 3:58: 그니님이 들어왔습니다.
2022. 4. 12. 오후 3:58, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 12. 오후 3:58, 유용태 (teo.yu) : 안녕하세요~ 그니님 반갑습니다 :)
2022. 4. 12. 오후 4:00, 그니 : 이모티콘 
2022. 4. 12. 오후 4:01: 노이님이 들어왔습니다.
2022. 4. 12. 오후 4:01, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 12. 오후 4:01, 유용태 (teo.yu) : 안녕하세요 노이님~~ 반갑습니다 :)
2022. 4. 12. 오후 4:01, 노이 : 안녕하세요 노이입니다~
2022. 4. 12. 오후 4:01, 유용태 (teo.yu) : 네~ 어서오세요 반갑습니다~
2022. 4. 12. 오후 4:03, 김태현 : grid-template-areas를 이용해 보시거나
grid-column-start, end 로 시도해보시면 될거같아요
2022. 4. 12. 오후 4:04, 유용태 (teo.yu) : 그니님 노이님~~ 어서오세요!! 여기는 프론트엔드나 개발을 하면서 궁금한 얘기들 취준이나 커리어 고민들 뭐든 함께 이야기하고 또 답하는 공간입니다
2022. 4. 12. 오후 4:04, 유용태 (teo.yu) : 하고 싶은 이야기 궁금한 이야기 뭐든 좋으니 편안하게 글 남겨주세요~~
2022. 4. 12. 오후 4:05, 웅세 : 이게 제가 카드 컴포넌트를 map으로 7장 받아와서 2/3/2로 배치하려고하는데 그렇게 진행해도될까요??
2022. 4. 12. 오후 4:11, 이엘로 : 사진 2장
2022. 4. 12. 오후 4:11, 이엘로 : 그냥 css입니다 제가 스타일드 컴포넌트를 몰라서.. 참고하세요!!
2022. 4. 12. 오후 4:12, 웅세 : 앗 이렇게 친절히 예시까지... 감사합니다ㅜㅜㅜㅜ
2022. 4. 12. 오후 4:12, 이엘로 : 아 2/3/2네요 그러면 숫자만 바꿔주시면 돼요!!
2022. 4. 12. 오후 4:39, . : 안녕하세요 
혹시 vue2에서 customElements.define() 사용해보신 분 계실까요?
custom Element를 가져오기 위해 vue2 백엔드 서버가 꼭 필요한지 궁금합니다! 아니라면 구현한 커스텀 엘리먼트를 프론트 서버만 이용하여 가져오는 방법이 있을까요?
2022. 4. 12. 오후 4:41, 프엔공부중 : 웹 기반 xr 개발이면 리액트가 아닌 xr관련 라이브러리 등을 사용하여 개발하는건가요?
2022. 4. 12. 오후 9:50: 비옷입은 튜브님이 나갔습니다.

2022년 4월 13일 수요일
2022. 4. 13. 오전 2:12, 애교뿜뿜 어피치 : 선배님들께 조언을 구해봅니다... 저희 프로젝트가 사용자 모바일 웹 / 사용자 웹 / 관리자 웹 3개가 필요합니다. 보통 이런경우에는 하나의 프로젝트로 구성을 하는지 아니면 별도로 각각 구성을 하시는지 궁금합니다.
2022. 4. 13. 오전 2:22, 음악듣는 어피치 : 어떤 프로젝트인가요? 커질 가능성이 있다면 혹은 장기적으로 가져가야하는 프로젝트라면 적어도 관리자단은 분리하는게 좋다고 생각합니다.
2022. 4. 13. 오전 2:28, 게으름(lifeisnovel) : 모바일은 적응형(PC 뷰포트와 디자인뿐만 아니라 노출할 내용도 많이 다른 경우)이 아니라면 반응형으로 같이 하시고 관리자단을 분리해서 2개의 프로젝트로 구성하시는 게 좋을 것 같아요!
2022. 4. 13. 오전 2:28, 애교뿜뿜 어피치 : B2B 기업용 서비스입니다. 개발 기간 1~2년 최소 5년~10년 이상 유지보수 할 것 같습니다. 그렇군요.. !!
2022. 4. 13. 오전 2:36, 애교뿜뿜 어피치 : 감사합니다. 조금 더 지엽적인 부분일 수 있는데.. 위 프로젝트에 스토리북을 도입해보고자 하는데요. 2개의 클라이언트 단에서 1개의 스토리북을 바라 보는 것이 가능할까요.?
2022. 4. 13. 오전 6:43, 프론트 공부 : 모노레포로 구성하고, 
스택 버전만 잘맞추면 충분히가능합니다!!
2022. 4. 13. 오전 8:52, 썰~~ : 모바일이랑 데탑웹은 반응형으로 하면 안되는건가요/??
2022. 4. 13. 오전 9:08, arthur : 모바일과 데탑의 UX가 다른 경우가 많아서 대부분 적응형으로 가는 것 같아요. 최근 진행한 프로젝트 중 데탑과 모바일을 반응형으로 묶어서 간 적은 없는 것 같네요. 반응형은 폰이랑 패드 정도 선에서만 사용한 것 같아요
2022. 4. 13. 오전 9:09, 썰~~ : 너무 다르면 어쩔수 없죠 ㅠㅠ
2022. 4. 13. 오전 9:42: 젤리님이 들어왔습니다.
2022. 4. 13. 오전 9:42, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 13. 오전 9:43, 유용태 (teo.yu) : 안녕하세요 젤리님~~ 반갑습니다 :)
2022. 4. 13. 오전 9:43, 젤리 : 안녕하세요 ! 벨로그 글 보다가 찾아 들어왔습니다  ◡̈
2022. 4. 13. 오전 9:43, 유용태 (teo.yu) : 와!!! 그러시군요 너무너무 감사합니다 :)
2022. 4. 13. 오전 9:44, 유용태 (teo.yu) : 여기는 프론트엔드에 대해서 궁금한 내용들을 듣고 또 대답을 해주려고 만든 공간입니다.
2022. 4. 13. 오전 9:44, 유용태 (teo.yu) : 언제든 편하게 글 남겨주시면 간단한 것은 답변 드리고 호흡이 길만한 내용들을 블로그로 작성을 하고 있어요
2022. 4. 13. 오전 9:44, 유용태 (teo.yu) : 지금은 사람들이 많이 모여주셔서 서로 서로 묻고 답하면서 함께 성장하고 있는 곳이 되었습니다. :)
2022. 4. 13. 오전 9:45, 젤리 : 네 참고할게요 ! 저도 다른분들께 도움을 드릴 수 있으면 좋겠네요 ㅎㅎㅎ
2022. 4. 13. 오전 9:46, 유용태 (teo.yu) : 네! 감사합니다. 내가 아는 거다 싶으면 답변 달아주시고 궁금한게 생기면 언제든 글 남겨주세요~~
2022. 4. 13. 오전 9:48, 젤리 : 네 ~~
2022. 4. 13. 오전 9:59, 카타나 : 이모티콘 
2022. 4. 13. 오후 12:30, 여의도개발 : 보통 스크럼회의는 어떻게 진행되나요?
2022. 4. 13. 오후 12:35, 유지남 : 어제 한 일의 결과와 오늘 할 일을 간단하게 공유하고, 프로젝트 이슈와 새롭게 알게된 프론트 기술 공유, 각자의 컨디션 공유로 팀규모에 따라 다르겠지만, 약 20분 정도 합니다.
2022. 4. 13. 오후 12:45, 스타트업개발자 : 백엔드 개발자분 여력이 안돼서,,, 이번에 어드민 관련 api 들은 노드로 구축을 할 예정입니다. 하나의 테이블을 유저들이 사용하는 스프링부트와 어드민 서버 이렇게 두개가 보게되는데 미리 고려해야할 사항들이 있을까요?
2022. 4. 13. 오후 1:34, 유지남 : 어떤 프레임워크를 쓰는 것 보다는 태이블 설계가 고민이 될 것 같습니다.

유저 권한, 역활, 계정 설정 등에 따라 메뉴, 컨텐츠 표시, 테이블 백업 및 롤백 시나리오 등이 고려 될 것 같아요.
2022. 4. 13. 오후 1:35, 유지남 : 시스템 환경 설정에 따른 ci/cd도 고민이 되겠네요.
2022. 4. 13. 오후 1:40, Vintz : 다들 디자이너분과 협업하실 때 피드백은 어떤 방식으로 하고 계신가요?

저희 회사는 피그마로 디자인 받고, 궁금한건 댓글을 통해 해결하고 구현이 완료된 후 피드백(수정사항)은 pptx 파일로 받아서 하고 있어요. 다른 분들은 어떤식으로 하시는지 궁금합니다!
2022. 4. 13. 오후 1:41, j : 피그마로 디자인 리소스 받고 그 안에 코멘트 기능으로 주의사항과 수정사항 받고 있습니다.
2022. 4. 13. 오후 1:45, Vintz : 아 감사합니다! ㅎㅎ 두 가지만 질문드려도 될까요?

1. 코멘트에서 그 둘을 구분짓는 방법은 없을까요?
2. 피그마에서 모두 해결하시면 불편한건 없으셨나요?

이 두 가지가 궁금합니다!
2022. 4. 13. 오후 1:46, Vintz : 저희 회사는 기능 설명이나 애니메이션이 필요할 경우에도 코멘트를 써서 피드백까지 코멘트로 하면 뭔가 복잡해질 수도 있겠단 생각이 들어서요..!
2022. 4. 13. 오후 1:48, j : 1번은 우선 코멘트 목록에서 미리보기 편하게 헤드에 라벨링을 달아서 구별하고 있고, 완료된 사항들은 확인이 완료되면 완료처리로 없애버립니다.
2번은 아무래도 코멘트 상으로만 전달하기에는 문맥이나 의도파악이 어려운 경우들도 많고 코멘트가 쌓여서 파악이 힘든 경우도 있어서 지라나 깃헙 이슈로 따로 관리하고 있습니다.
2022. 4. 13. 오후 1:54, Vintz : 오..그렇군요 정말 감사합니다!! 😆 정말 좋은 방법같은데 이제 어떻게 설득하고 얘기를 꺼내야 할지가 문제네요..ㅋㅋㅋ 감사합니다 j님!
2022. 4. 13. 오후 1:54, j : 저희는 디자이너분이 제안하셨어요 부터!
2022. 4. 13. 오후 1:54, j : 우선은 깃이나 이런 이슈 관리는 개발자들은 보기 편하지만 디자인상 리소스 수정은 해당 페이지내 어떤 범위인지 확인하고 들어가는게 편하니까
2022. 4. 13. 오후 1:55, j : 요새 코멘트도 범위 설정해서 남길 수 있더라구요!
2022. 4. 13. 오후 2:00, Vintz : 사진
2022. 4. 13. 오후 2:00, Vintz : 헐..진짜네요
2022. 4. 13. 오후 2:00, Vintz : 감사합니다 j님!!
2022. 4. 13. 오후 2:00, j : 아닙니다 ㅎㅎㅎ
2022. 4. 13. 오후 2:01, j : 도움이 되었다니 다행이네요 ㅠㅠ
2022. 4. 13. 오후 2:06, Vintz : 도움이 완전 됐습니다!! ㅎㅎ 생각못한 부분이 많았어요!! 지금 벌써 동기분이랑 얘기 해보고 너무 좋다고 하셔서 디자이너분 설득 해보려구요!
2022. 4. 13. 오후 2:09, 티비보는 무지 : 안녕하세요. chrome devtool performance로 성능 측정중 이해가 잘 안되는 부분이 있어서 질문드립니다.

아래 사진을 보면 web vitals에 측정된 FCP(파란색 화살표)와 Timings의 FCP(빨간색 화살표)의 시간 측정이 다르게 된것을 볼 수 있는데요. 1644ms에는 이미 페이지가 다 로딩되어서.. 어느것으로 봐야 맞는지가 고민이 됩니다. 구글 레퍼런스를 보면 파란색, 빨간색 화살표의 시간이 동일해서 차이가 많이나는 이유를 잘 모르겠습니다. 왜 이런 차이가 발생할까요? ㅠㅜ
2022. 4. 13. 오후 2:10, 티비보는 무지 : 사진
2022. 4. 13. 오후 3:14, Vintz : j님 디자이너분도 긍정적으로 생각해주셔서 다음 프로젝트 때 피그마로 다 하기로 결정했습니다! 좋은 방향을 알려주셔서 감사합니다~!!
2022. 4. 13. 오후 3:14, j : 아닙니다 다 빈츠님이 어느정도 큰 방향성을 잘 잡고 계셔서 그런걸요!
2022. 4. 13. 오후 3:19, 애교뿜뿜 무지 : 리액트 쿼리를 공부하려고 하는데 추천하시는 사이트 있을까요? 
공식문서는 영어로 되어있고 필수로 공부해야 되는 부분을 모르겠어서요. 벨로 퍼트님 같은 분을 찾아봐도 모르겠네요 ㅜㅜ
2022. 4. 13. 오후 3:21, 파이버 : https://react-query.tanstack.com/overview

https://tkdodo.eu/blog/practical-react-query

이거 두개가 진짜 알찬데.. 한글로 돼 있는 좋은 문서가 있는지는 저도 잘 모르겠네요ㅜㅜ
2022. 4. 13. 오후 3:21, 파이버 : 공식문서 번역본 찾아보면 있을 거 같기도 하구요
2022. 4. 13. 오후 3:22, 시에스에스 : 최대한 공식문서 기준으로 보시는걸 추천드립니다
2022. 4. 13. 오후 3:22, 빠밤 : 혹시 다들 css공부하실때 mdn문서많이보시나요?
2022. 4. 13. 오후 3:22, 빠밤 : w3cschool도있던데 mdn이랑 w3cschool둘다 내용은 별차이없나요??
2022. 4. 13. 오후 3:22, 파이버 : 근데 진짜 공식문서 잘 돼 있고 거를 내용이 하나도 없어요
2022. 4. 13. 오후 3:23, 시에스에스 : 그냥 한번해본다 라는 느낌으로
2022. 4. 13. 오후 3:23, 시에스에스 : 시작해보시는거면
2022. 4. 13. 오후 3:24, 시에스에스 : 쉬운내용찾아서 해보시는것도 개인적으로 좋다는 생각이긴합니당
2022. 4. 13. 오후 3:26, 애교뿜뿜 무지 : 예전에 리덕스 영문공식문서로 했다가 너무 힘들었어서 ㅠ 자료가 저 2뿐이라면 한번 도전해보겠습니다 😂 감사합니다 !
2022. 4. 13. 오후 3:33, 파이버 : 정 힘드시면 아마 벨로그 잘 찾아보시면 공부 차원에서 공식문서 한글로 번역한 분들 블로그 있을 거라 그거 보셔도 될 거 같긴 해요
2022. 4. 13. 오후 3:34, 파이버 : 근본적인 해결책은 영어를 견뎌내는거겠지만
2022. 4. 13. 오후 3:34, 파이버 : https://hyesech.postype.com/post/10986706 이런거..? 있긴 하네요!
2022. 4. 13. 오후 3:36, 애교뿜뿜 무지 : 오오 ㅎㅎ 친절하게 알려주셔서 감사합니다 ㅋㅋ 한번 도전해보겠습니다 후덜덜 ㅋㅋ
2022. 4. 13. 오후 3:38, Vintz : 덕분에 좋은 방법을 제시해서 시도할 수 있었어요! 감사합니다 😍
2022. 4. 13. 오후 3:56, 리린이 : 인녕하세요. 이 방안에 현업에서 vue 사용하시는분이 많으실까 싶은데요, 질문이 있어서요! 
렌더링성능을 조금이라도 개선하고 싶은데, 첫 렌더링 이후에 값이 변하지않는 곳에 v-once 태그 이용하려고 하는데 어디어디에 적용하는게 좋을지 고민이됩니다.
2022. 4. 13. 오후 3:57, 리린이 : 예를들어.. index.html 파일이 있다고 가정하에
<h1>이곳은 제목입니다.</h1>
<span> {{ message }} </span>

요렇게 있다고치면. 제목부분에 적용하면 될 것 같은데
컴포넌트가 한두개가 아니니까, 각컴포넌트마다 다 찾아가서 제목부분에 v-once를 걸어줘야할지..? 그런게 좀 고민이되네요
2022. 4. 13. 오후 3:58: 모카님이 들어왔습니다.
2022. 4. 13. 오후 3:58, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 13. 오후 3:58, 유용태 (teo.yu) : 안녕하세요 ~~ 모카님~~ 반갑습니다 :
2022. 4. 13. 오후 3:58, 유용태 (teo.yu) : :)
2022. 4. 13. 오후 3:58, 모카 : 안녕하세요~~ 많이 배우겠습니다^^
2022. 4. 13. 오후 3:59, 유용태 (teo.yu) : 환영합니다~ 배울때는 뭘 모르고 있는지 아는게 필요하고 그럴때는 물어보는게 최고지요. ㅋ 많이 질문 부탁드려요 :)
2022. 4. 13. 오후 5:12, 전연규 : 안녕하세요! 질문이 있는데요~
알림이 업데이트가 된 것을 어떻게 확인하고 계신가요?
소켓통신을 이용하고 있지 않아 다른 페이지로 이동시마다 알림을 조회하려고 하는데요
혹시 더 좋은방법이 있을까요?
2022. 4. 13. 오후 5:12, 전연규 : 모든 페이지 이동시마다 알림을 조회하는건 낭비같아서요..
2022. 4. 13. 오후 5:15, 전연규 : 사진
2022. 4. 13. 오후 5:16, 전연규 : 알림이 업데이트 되었다는 표시만 나오면 될 것 같은데.. 어떤 방법이 좋은지 모르겠네요..
2022. 4. 13. 오후 5:17, 나그네 : 인터벌 리페칭을 하는게 좋겠네요
2022. 4. 13. 오후 5:18, 나그네 : 페이지 이동시마다 확인한다면 알림의 목적을 다하지는 못하는게 아닐까 싶어요
2022. 4. 13. 오후 5:18, 최민석 : 리액트쿼리에 리패칭 기능 있던거같은데
2022. 4. 13. 오후 5:18, 썰~~ : 풀링을 쓰거나
2022. 4. 13. 오후 5:18, 나그네 : 네이버 같은 경우에도 아무 이유없이 안터벌로 페이지를 전체 새로고침시키거든요
2022. 4. 13. 오후 5:18, 여의도개발 : 자칫잘못하면 잡담으로 끝날수도 있을거같은데 꼭 지켜야할 규칙이 있을까용?
2022. 4. 13. 오후 5:19, 전연규 : 인터벌 리페칭이라면 일정 시간마다 재요청을 한다는 것일까요?
2022. 4. 13. 오후 5:19, 나그네 : 넵!
2022. 4. 13. 오후 5:19, 전연규 : Nuxt와 vuex를 사용하고 있습니다 .. ㅠ
2022. 4. 13. 오후 5:20, 나그네 : Nuxt 사용하시면 미들웨어 조합해서 가능하겠네요!
2022. 4. 13. 오후 5:21, 인성(현파랑) : push notification 활용할 것 같네요
2022. 4. 13. 오후 5:21, 전연규 : 웹에서는 푸시알림을 사용하지 않고있어서요..
2022. 4. 13. 오후 5:23, 전연규 : 넵 감사합니다! 미들웨어에서 1분마다 호출하면 되겠네요!
2022. 4. 13. 오후 5:29, 프론돌이 : 이야기가 세지 않게, 할말만 딱 하고 넘어간다.
2022. 4. 13. 오후 5:29, 프론돌이 : 사진
2022. 4. 13. 오후 5:29, 프론돌이 : 그래서 프랭크 자세로 스크럼 하는 짤도 생겼죠...
2022. 4. 13. 오후 5:29, 최민석 : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 13. 오후 5:29, 프론돌이 : 근데, 전 잡담도 나름 필요하다고 생각해서.
2022. 4. 13. 오후 5:29, 프론돌이 : 팀원들/파트원들끼리 어느정도 친해져야 일도 더 잘되기 나름이라고 생각하거든요 ㅋ
2022. 4. 13. 오후 5:30, 프론돌이 : https://gmlwjd9405.github.io/2018/06/01/agile-dailyscrum.html
2022. 4. 13. 오후 5:39, 파이버 : 스크럼에서 잡담 하고 안하고 둘다 겪어 봤는데 장단점이 있는 거 같았어요
2022. 4. 13. 오후 5:42, 핸디(강경석) : https://all-dev-kang.tistory.com/entry/%EB%A6%AC%EC%95%A1%ED%8A%B8-useEffect%EC%99%80-useLayoutEffect-%EB%B9%84%EA%B5%90%EC%8B%9C%EB%A6%AC%EC%A6%88
2022. 4. 13. 오후 5:42, 핸디(강경석) : 오랜만에 글을 작성했습니다.. 정확히 덧붙였는데요.
2022. 4. 13. 오후 5:43, 핸디(강경석) : useEffect와 useLayoutEffect에 대해 비교글을 적다가 코드단에선 어떤 차이점이 있는가 궁금해서서 react 코드를 따라가며 비교해봤습니다. 한번씩 읽어보시고 부족한 부분이 있으면 일침 부탁드립니다.
2022. 4. 13. 오후 5:49, 여의도개발 : ㅋㅋ 확인 감사합니다.
2022. 4. 13. 오후 6:07, 나그네 : 평소에 쓰시는 글 수준이 훌륭하시네요
2022. 4. 13. 오후 6:07, 나그네 : 결론에 오타 하나 있습니다!
2022. 4. 13. 오후 6:46: Goody님이 들어왔습니다.
2022. 4. 13. 오후 6:46, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 13. 오후 6:47: Goody님이 나갔습니다.
2022. 4. 13. 오후 6:53, 유용태 (teo.yu) : 저희는 스크럼 15분 정도 이루 잡담으로 1시간 넘게 떠들어요 ㅋ
2022. 4. 13. 오후 6:54, 프론돌이 : 사진
2022. 4. 13. 오후 7:22, 유용태 (teo.yu) : 이건 재택이라서 가능한것 같기도 하구요~ 음.. 집중해서 떠든다기보다는 뭔가 모각코? 처럼 각자 일을 하는데 이어폰만 끼고 있다가 점심식사 오면 알아서 빠지고 있어요
2022. 4. 13. 오후 7:46, 부끄러워하는 라이언 : 안녕하세요 ! 궁금한 점이 있습니다 ! 전역 스토어를 쓰는 이유가 무엇일까요..? (redux, mobx 등등..) 예를들어 인풋창이 500개 정도 될 때, 하나의 객체에서 관리하면 500개 중에 하나의 값이 바뀔 때마다 새로쓰고 지워 성능에.. 그렇게 좋아 보이지 않아서요..! 오히려 컴포넌트 마다 각각 상태를 가지고 있으면 더 좋지 않을까? 생각이 들었습니다.. 전역 스토어를 쓰면 관리하는 측면에선 더 좋아보이긴 합니다.. 혹시 여기에 대해 고민 해보신 분 있으시면 의견 주시면 감사하겠습니다 !
2022. 4. 13. 오후 7:50, 포유 : 전역으로 사용할것만 전역으로 써야죠.. 모든 state를 redux에 넣는건 아닙니당
2022. 4. 13. 오후 7:52, 프론돌이 : 말씀하신거에서 살펴볼 관점은 두가지가 있는데, 

1. 컴포넌트별로 각자의 상태를 가지고 있어야 되는 것은 전역 상태로 가지고 있을 필요가 없습니다. 말씀하신 것처럼 각각의 상태를 가지고 있는게 낫지요. 
컴포넌트별로 공통의 상태를 공유하고 있어야 되는 것. 즉, 회원ID나 로그인 정보 같은 것들은 각각의 컴포넌트별로 가지고 있는게 아니라 여러 컴포넌트에서 같이 사용을 해야 좀더 낫겠죠.

2. 여러 컴포넌트가 전역스토어를 참고한다고 하여도, 자신과 상관없는 스토어가 바뀌면 새로쓰고 지워 성능에... 이런게 발생하지 않도록. 즉, 리렌더링 되지 않도록 해주는게 좋습니다.
전역상태 - 일기장
전역상태 - 가계부
두개의 스토어가 있는데(mobx는 별개의 스토어가 있지만, redux는 하나의 root 스토어에 있으니까 그냥 하나에 여러 스토어가 있다고 가정하겠습니다)
일기장 컴포넌트에서는 가계부의 상태가 바뀌었을 때, 리렌더링이 되면 안됩니다. 
가계부 컴포넌트 역시 일기장의 상태가 바뀌었을 때, 리렌더링이 되면 안되구요. 
그래서 이건 스토어와 컴포넌트를 얼마나 잘 잘라서 조립해두냐도 중요합니다.
2022. 4. 13. 오후 7:56, 부끄러워하는 라이언 : 음.. 그렇군요..!
2022. 4. 13. 오후 7:57, 부끄러워하는 라이언 : 많은 도움 되었습니다 !! 감사합니다 !!
2022. 4. 13. 오후 7:57, 프론돌이 : 요즘은 그런 전역 상태 중에서도 성격에 따라서 react-query나 swr로 대체하기도 합니다. ㅋ 
그런것도 같이 찾아보세요~!
2022. 4. 13. 오후 7:58, 부끄러워하는 라이언 : 넵넵 알겠습니다 !! 감사해요 !!
2022. 4. 13. 오후 8:05, 동딩댕동 : 리덕스처럼 단일 스토어인 경우에, react-redux 같은 라이브러리에서 useSelector 에서 반환하는 값이 변경될 때에만 컴포넌트를 리렌더링하도록 최적화가 되어 있기 때문에 너무 리렌더링 이슈에 대해서 고민 안하셔도 됩니다 ㅎㅎ (useSelector를 잘 써야하긴 하지만요..)
2022. 4. 13. 오후 8:06, 포유 : 맞습네다
2022. 4. 13. 오후 8:07, 부끄러워하는 라이언 : 리덕스는 따로 최적화를 하는군요…!
2022. 4. 13. 오후 8:09, 포유 : 네네 그래도 용도에 맞게 쓰셔야죠
2022. 4. 13. 오후 9:19: 호뚜기님이 들어왔습니다.
2022. 4. 13. 오후 9:19, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 13. 오후 9:20, 호뚜기 : 안녕하세요~ 반가워요!
2022. 4. 13. 오후 9:20, 유용태 (teo.yu) : 안녕하세요~ 호뚜기님~~ 반갑습니다 :)
2022. 4. 13. 오후 9:20, 유용태 (teo.yu) : 네~ 어서오세요!
2022. 4. 13. 오후 9:21, 유용태 (teo.yu) : 프론트엔드와 개발에 대해서 얘기하고 싶어서 만든 공간입니다~ 궁금한게 있거나 하고 싶은 대화주제가 있다면 얼마든지 편하게 글 남겨주세요 :)
2022. 4. 13. 오후 9:24, 동딩댕동 : 저희는 git flow를 사용하고 있는데요, 저희팀에서 2주마다 배포를 해요. 가끔씩 QA일정이 밀려서 개발을 해도 다음 배포때 배포가 나가지 못하는 경우가 있는데요, 그러면 저희는 해당 feature 브랜치는 develop 으로 머지를 안하고 있어요. 그랬더니 시간이 지날수록 develop이랑 해당 feature 브랜치 사이에 갭이 너무 커져서 나중에 머지하려고 하면 코드 충돌도 많고 그래서 어떻게 좀 해보자 라고 얘기를 하고 있는데, 다들 이런 경험이 있으신지 궁금합니다..!
2022. 4. 13. 오후 9:25, 호뚜기 : 네, 안내 감사합니다! 😄
2022. 4. 13. 오후 9:34, 프린이 : https://twitter.com/i/status/1514122208712478720
웃겨서 공유해요 ㅋㅋㅋㅋ 😂
2022. 4. 13. 오후 9:34, 애교뿜뿜 무지 : 혹시 현재 리액트 18에는 리액트 쿼리에 에러나는 상황이 맞을까요? 4.0 베타 버전(?) 나오기 전까지 리액트 쿼리 못쓰는건지 궁금합니다..
2022. 4. 13. 오후 9:44, 프론트 지키미 : 저도 typescript + react18 + react query에서 에러나더라구요...
2022. 4. 13. 오후 9:45, 최민석 : 엇 무슨에러 나나요
2022. 4. 13. 오후 9:45, 최민석 : 진행중이라 궁금합니다..
2022. 4. 13. 오후 9:45, 프론트 지키미 : 아 저는 reactDom.createRoot.render
2022. 4. 13. 오후 9:45, 프론트 지키미 : 사용하고 잇었는데
2022. 4. 13. 오후 9:45, 최민석 : 아아 저도 그래서 17로 내렸습니다...
2022. 4. 13. 오후 9:46, 최민석 : 뭔지알겠네요 ㅠ
2022. 4. 13. 오후 9:46, 프론트 지키미 : QueryClientProvider에서 client쪽이였나 없다고 나왔었나
2022. 4. 13. 오후 9:46, 프론트 지키미 : 여튼 에러가 있었어쇼
2022. 4. 13. 오후 9:46, 프론트 지키미 : js로 우회해서 해결했었어요
2022. 4. 13. 오후 9:46, 프론트 지키미 : 기억이 명확히 안나네요 ㅜㅜ
2022. 4. 13. 오후 9:48, 엉망장자 : https://youtube.com/shorts/fJqh-4bkEkE?feature=share
2022. 4. 13. 오후 9:50, 포유 : 그럼 feature로 배포 나가는건가용?
2022. 4. 13. 오후 9:52, 동딩댕동 : 아뇨 배포일이 되면 develop 에서 release 브랜치를 만들어서 배포하고 있어요. 그래서 배포일 기준 develop 에 머지가 안되어 있으면 해당 기능은 배포가 안나가는 구조입니다
2022. 4. 13. 오후 9:53, 프론돌이 : 제가 팀 이동할 때, 그 팀의 전신팀? 에서 그렇게 사용하고 있었어서, 바꿨네요. 
전통적인 git flow 대신 커스터마이징 해서 사용하고 있습니다.
이거 관련해서도 여러명이랑 이야기 나눴었는데,
팀마다의 상황에 따라 / 선호에 따라 다르게 정해질 수 있을 것 같네요.
2022. 4. 13. 오후 9:53, 프론돌이 : 이거 관련해서 외부글도 따로 작성해놓으면 좋을텐데 귀차니즘...
2022. 4. 13. 오후 9:53, 프론돌이 : 그런 점에서 테오님은 대단하신듯 ㅜ
2022. 4. 13. 오후 9:55, 동딩댕동 : 어떤 느낌인지 간단하게 말씀해주실수 있을까요..?
2022. 4. 13. 오후 10:01, j : 저희는 develop은 개발 후 배포 전 테스트 용으로 사용해서 개발서버 배포는 자유롭고, 그 안에서 qa가 완료된걸 production으로 올려서 배포하고있습니다.
2022. 4. 13. 오후 10:01, 유용태 (teo.yu) : 팀 규모가 얼마나 되나요? 그러니까 실제로 git에 push하는 멤버수?
2022. 4. 13. 오후 10:01, j : 우선은 해당 레포를 사용하시는 분들이 자주 리베이스 하고 동기화 하는 습관이 들어야 편해요ㅜㅜ
2022. 4. 13. 오후 10:01, 프론돌이 : 간단히 풀면, 
develop을 따로 두지 않고, 
master를 기반으로 deploy 브랜치를 생성해서, 
deploy/20220413, deploy/20220420 같은 배포 날짜 기준으로 브랜치를 생성합니다.
해당 날짜에 나가는거에 대해서는 해당 deploy 브랜치에서 feature 브랜치 따서 작업하고, PR 날려서, 코드리뷰 후 해당 deploy 브랜치에 머지하고, 
QA도 해당 deploy 브랜치에서 나가게 합니다.
QA까지 완료되면, deploy/20220413 브랜치로 운영에 배포를 하고, master로 합쳐줍니다. 
그러면 이 시점에 deploy/20220420 브랜치는 예전 master에서 땄을 테니까 최신화가 안되어 있을테니(0413꺼의 코드가 반영되지 않았을테니)
master를 기준으로 rebase를 시켜줍니다. 
(이 때, git rebase master -r 옵션을 붙여주어야, 기존의 코드리뷰 했던 것들이 그대로 살아있게 되고, -r 안붙이면 일렬로 주루룩 붙어서 대참사가...)
이런식으로 쭉 하고 있어요. 

근데, 가끔 deploy/20220413, deploy/20220420 브랜치 같이 날짜가 아니라, 배포 예정일이 명확치 않을 수 있으면, 
deploy/동동동,     deploy/댕댕댕  이런식으로 따로 만들어두고 
각각의 deploy에 PR을 통해서 코드리뷰 후 머지 한 다음, 
먼저 나가기로 결정되는게 생기면 그 deploy 브랜치에서 최종 QA 진행하고, 배포 합니다. 
이렇게 하면, 두 deploy 브랜치의 순서가 바뀌어도 꼬일게 없지요. 

단, 한 deploy 브랜치에서 여러 커밋 & PR들이 있을텐데, 
특정 기능에 대해서는 나가지 않아야 한다. 라고 하면, 
그 기능에 대한 PR이 있을거니, 
그 PR을 revert 커밋 시킵니다. 

나중에 다시 나갈 수 있을 때, revert한 것을 다시 revert 해서 원복하고 사용하구요.
2022. 4. 13. 오후 10:02, 프론돌이 : 이게 그림이 같이 있는 상태에서 들어야 더 잘 이해가 될텐데...
사내에선 그렇게 공유를 했는데, 
그냥 글로만 쓰니까 잘 전달이 안 될 수도 있겠네요 ㅜ
2022. 4. 13. 오후 10:02, j : 이방법 한번 팀 내에 건의해 봐야겠어요!
2022. 4. 13. 오후 10:03, j : 안그래도 master 배포나갈때 너무 뭉텅이로 나가서 고민하고 있었는데
2022. 4. 13. 오후 10:04, 프론돌이 : 일단 develop에 몰아두고... 를 하면,   그 develop에  배포가 다른 것들이 있는 상황에서 분리해서 테스트를 진행할 때 골치거리긴 하더라구요.
2022. 4. 13. 오후 10:04, j : 그게 골치이긴 했어요ㅠㅠ
2022. 4. 13. 오후 10:04, 프론돌이 : 전통적인 git flow 상에는 develop이 무조건 있으니까, 
저도 바꾸려고 할 때, develop을 master와 deploy 상에 두었는데(초안에서는)
생각해보면, 저 flow 상에는 develop이 아예 의미가 없어져서, 과감히 없앴습니다.
2022. 4. 13. 오후 10:05, j : 프론돌이님의 방법 저는 멋진거 같아요!
2022. 4. 13. 오후 10:05, j : 제가 고민하고 있었던 상황이라
2022. 4. 13. 오후 10:09, 포유 : 저희는 버전 별로 배포가 나가고 있어서 버전별로 develop 만들어서 진행합니당
2022. 4. 13. 오후 10:09, 동딩댕동 : 총 6명입니다!
2022. 4. 13. 오후 10:11, 동딩댕동 : 프론돌이님 설명 감사합니다! 글만 읽어도 충분히 이해가 갔습니다! 
배포 브랜치를 먼저 따두고 거기서 feature 브랜치를 만들 생각은 못했었는데 한 대 얻어맞은거 같네요 ㅎㅎ.. 
좋은 방법 공유해주셔서 감사합니다!
2022. 4. 13. 오후 10:30, 프론트 지키미 : 오픈소스 활동을 명시할때 이슈 생성이나 pr을 생성한 것들도 오픈소스 활동에 명시해도 괜찮을까요??


이력서에 오픈소스 활동을 명시할때 입니다
2022. 4. 13. 오후 10:31, 나그네 : 적어도 이슈나 PR이 일부 반영이 되어야 명시할만하다고 생각해요!
2022. 4. 13. 오후 10:32, 프론트 지키미 : 이슈는 좀 그런것 같고

pr의 경우에는 해당 pr에서 논쟁이 발생하거나 해야 한다는 뜻인거죠??

일부 반영이라는게 어떤 것일지 궁금해서요
2022. 4. 13. 오후 10:35, 유용태 (teo.yu) : 이력서에 적는 것은 내가 이거에 대해서 말할게 있을때 적는게 좋아요~ 이력서에 적는다 = 나에게 질문해달라니까요. 그래서 어떤 활동을 해보신거에요? +_+ 라고 했을때 대화는 될만한 경험이 있다면 reject을 당하샸더라도 적을만 하다고 생각해요
2022. 4. 13. 오후 10:35, 프론트 지키미 : 대화는 될만한 경험 => 이해가 팍 되네요 감사합니다!!
2022. 4. 13. 오후 10:35, 나그네 : 이슈도 무시못할만큼 좋은 영향력을 끼쳐서 향후 오픈 소스에 새로운 스펙에 반영될때도 있어요~
2022. 4. 13. 오후 10:36, 유용태 (teo.yu) : 맞아요~
2022. 4. 13. 오후 10:36, 프론트 지키미 : 감사합니다 나그네님!
2022. 4. 13. 오후 10:37, 유용태 (teo.yu) : 오픈소스는 적극성이나 개발 생태계에 관심이 있거나 사내기여 같은 것을 할만한 찐 개발자 스멜을 풍기는 거라서
2022. 4. 13. 오후 10:38, 유용태 (teo.yu) : 그런 태도나 스토리나 본인 관심사와 열정만 드러낼수 있다면 충분히 플러스가 될거라고 생각합니다
2022. 4. 13. 오후 10:39, 프론트 지키미 : 단순 issue 제기는 쳐내고 contribute 된거와
말씀해주신대로 이야기 하고 싶은 것들만(대화하고 싶은 것들만) 남겨놔야 하지 않을까 싶네요
2022. 4. 13. 오후 10:39, 프론트 지키미 : 감사합니다!
2022. 4. 13. 오후 10:39, 유용태 (teo.yu) : 이력서에 썼는데 사실 별 생각이 없거나 그냥 해봤다가 가장 최악인듯 해요 ㅋ
2022. 4. 13. 오후 10:39, 프론트 지키미 : 그런사례도 있으셨나요?
2022. 4. 13. 오후 10:39, 유용태 (teo.yu) : 좋네요!
2022. 4. 13. 오후 10:41, 유용태 (teo.yu) : 제가 말한 정도는 아니었구요 어떤 라이브러리고 어떤 내용이었는지 물어봤는데 명확치 않고 얼버무리는 대답은 들은 적이 있어서 - 버그 수정 오타 수정 같은거 했는데 리젝 당했다 정도로만 끝나버랴서 - 기대를 했는데 실망도 좀 했었어요
2022. 4. 13. 오후 10:43, 유용태 (teo.yu) : 이력서에 쓸거라면 얘기거리는 만들어 두자 정도로 순화햐야겠습니다 워딩이 오해를 살만큼 센거 같아요 ^^;;
2022. 4. 13. 오후 10:43, 유용태 (teo.yu) : 해야*
2022. 4. 13. 오후 10:43, 프론트 지키미 : 얘기거리는 만들어 두자 확인했습니다! ㅎㅎ 
작성중인 이력서에 공을 들여볼게요 ㅎㅎ
2022. 4. 13. 오후 10:45, 유용태 (teo.yu) : 근데 그런 경험이 있다는 것만으로도 충분히 느낌 있으실것 같아요 뺄걸 빼도 할 얘기가 있다면!!
2022. 4. 13. 오후 10:48, 프론트 지키미 : 한두개라도 0과 1은 다르지 않을까 싶어서 지푸라기라도 잡아보려고 넣는 상황인것 같아요 ㅎㅎ 

떨어지면 피드백 받아가면서 이력서 수정하면 되니까 점차 좋아지리라 생각합니다!
2022. 4. 13. 오후 10:49, 웹린이 : 구독을 하면 매주 FE 관련 글을 번역해 제공하는데, 언어 압박 없이 좋은 글 읽어 볼 수 있어 좋은 것 같아 공유합니다~
https://kofearticle.substack.com/
2022. 4. 13. 오후 10:49, 웹린이 : 구독을 하지 않아도 글 목록에서 찾아 볼 수 있네요 ㅎㅎ
2022. 4. 13. 오후 11:03, 유용태 (teo.yu) : 오늘 스프린트 6기 열렸습니다. 다츠님 럭키님~ 기다리고 있어요! +_+
2022. 4. 13. 오후 11:11, DARTZ : 헉 저 선정되면 따로 연락이 오는줄알고 선정 안되었는줄 알았습니다.. 지금 진행중인가요? 30분내로 빨리 들어가도 될까요?? 정말 죄송합니다
2022. 4. 13. 오후 11:11, 유용태 (teo.yu) : 적어둔 메일로 연락을 드렸었는데 메일주소가 잘못되었을까요ㅠㅠ 언제든 오시면 환영합니다 :)
2022. 4. 13. 오후 11:21: 돈다발 들고 좋아하는 무지님이 들어왔습니다.
2022. 4. 13. 오후 11:21, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 13. 오후 11:21, 유용태 (teo.yu) : 안녕하세요 돈다발 들고 좋아하는 무지님~~ 반갑습니다 :)
2022. 4. 13. 오후 11:34, 돈다발 들고 좋아하는 무지 : 이모티콘 안녕하세요~ 프론트엔드 주니어 개발자입니다 velog 글 보고 여기까지 왔네요 ㅎㅎ 잘 부탁드립니다~
2022. 4. 13. 오후 11:35, 유용태 (teo.yu) : 감사합니다~ 궁금하게 생기시거나 개발 애기하고픈게 있다면 편하게 얼마든지 물어보고 글 남겨주세요 ㅎ
2022. 4. 13. 오후 11:35, 유용태 (teo.yu) : 짧은 얘기는 바로 답변 드리고 긴 호흡이 필요한 것들은 블로그로 작성을 하고 있습니다.
2022. 4. 13. 오후 11:41, 돈다발 들고 좋아하는 무지 : 네~(굿)

2022년 4월 14일 목요일
2022. 4. 14. 오전 7:00: 건배하는 프로도님이 들어왔습니다.
2022. 4. 14. 오전 7:00, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 14. 오전 7:37: 권노미님이 들어왔습니다.
2022. 4. 14. 오전 7:37, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 14. 오전 7:58, 유용태 (teo.yu) : 건배하는 프로도님~ 권노미님!! 모두 모두 반갑습니다 :)
2022. 4. 14. 오전 8:00, 권노미 : 이모티콘 안녕하세요 !
2022. 4. 14. 오전 8:06, 건배하는 프로도 : 안녕하세요!! 좋은 커뮤니티 만들어주셔서 감사합니다:)
2022. 4. 14. 오전 8:13, 유용태 (teo.yu) : 고맙습니다!! :) 여기는 프론트엔드 관련 궁금한 내용들 질문하고 또 답하면서 성장하고 관련 얘기들이 하고플때 함께 하려고 만들게 되었습니다~ 많은 참여와 관심 부탁드려요 ㅎ
2022. 4. 14. 오전 8:59, 유용태 (teo.yu) : 스프린트 6기 메일 전달했습니다. 놓치지 않길 바래요 :) 매일 9시 전후로 리뷰와 과제가 전달될 예정입니다!
2022. 4. 14. 오전 10:26, 실무뿌론트 : 과거에 redux프로젝트를 할때는 불변성관리가 중요했는데(immutable, immer 등 사용)
2022. 4. 14. 오전 10:26, 실무뿌론트 : 이후에 나온 최근 상태관리들은 어떤가요? recoil, zustand, jotai..
2022. 4. 14. 오전 10:51, 유용태 (teo.yu) : 불변성은 여전히 적용되는 것 같아요
2022. 4. 14. 오전 10:51, 유용태 (teo.yu) : https://velog.io/@teo/agile-feedback-game
2022. 4. 14. 오전 10:52, 유용태 (teo.yu) : 조금은 다른 방향의 글을 써보았습니다. 이번에는 기술 얘기는 아니지만 제가 관심을 가지고 있는 주제라 많은 관심 부탁드려요 :)
2022. 4. 14. 오전 10:53: 최마오님이 들어왔습니다.
2022. 4. 14. 오전 10:53, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 14. 오전 10:53, 유용태 (teo.yu) : 안녕하세요 최마오님~~ 반갑습니다 :)
2022. 4. 14. 오전 10:53, 최마오 : 안녕하세요~~~!
2022. 4. 14. 오전 10:55, 유용태 (teo.yu) : 어서오세요~ 여기는 프론트엔드에 대해 서로 묻고 얘기하고 또 공감을 나누고 함께 성장을 하는 곳입니다. ㅎ
2022. 4. 14. 오전 10:55, 유용태 (teo.yu) : 언제든 편하게 글 남겨 주세요 :)
2022. 4. 14. 오전 11:00: 오카이님이 나갔습니다.
2022. 4. 14. 오전 11:12, 엄지척 제이지 : 인턴 경험조차 없는 생신입인데 회사내 유일한 첫 (그 전까지는 외주로 했었다고 하십니다) 프론트 개발자로 들어가는 건 많이 비추천 하시나요? 아니면 신입때 겪어보면 그래도 많은 도움이 될까요 안간다고 하고 다른곳 준비해야할지 이 곳에 가도 될지 너무 고민됩니다..
2022. 4. 14. 오전 11:13, 유용태 (teo.yu) : 혼자서 어디까지 만들 수 있으신지에 따라서 달라질것 같아요
2022. 4. 14. 오전 11:15, 엄지척 제이지 : 사실 역량도 능숙하고 빠르게 만들어내지 못해서도 걱정입니다..
2022. 4. 14. 오전 11:20, 동딩댕동 : 멘탈이 강하신지도 중요한거 같습니다..
이런 말도 안되는걸 나한테 시킨다고? 라는 생각에 멘탈이 흔들리면 너무 괴롭더라구요..
2022. 4. 14. 오전 11:20, 동딩댕동 : 내가 보여주겠어 라는 멘탈을 보유하신다면 괜찮을거 같기도 하구요 ㅎㅎ..
2022. 4. 14. 오전 11:21, 유용태 (teo.yu) : 맞아요. 시니어가 없더라면 최소한 동료나 백업은 꼭 요구하시길 바래요
2022. 4. 14. 오전 11:29, 프로로 : 일정 조정도 하셔야 할텐데 ..
2022. 4. 14. 오전 11:30, 유용태 (teo.yu) : 그리고 함께 할 수 있는지 일을 오더 받는 입장인지도 좀 중요해요
2022. 4. 14. 오전 11:30, 파이버 : 저도 커리어 관련 질문드려요! 이제 1년 좀 넘었고 나이는 많이 어린데, 회사를 몇 군데 합격했는데 다들 너무 좋은 회사라 어디로 가야 할지 고민이 많이 되더라고요

어느 정도 이미 완성되었고 잘하시는 분들이 정말 많은 (프론트 50명 이상) 스타트업이랑 아주 빠르게 성장중인 유망한 (프론트 10명 정도) 스타트업 중에 며칠째 고민중인데, 알려드리는 정보가 너무 부족해서 질문이 애매한 거 같지만 조언해주시면 정말정말 감사하겠습니다..!
2022. 4. 14. 오전 11:33, 나그네 : 전자는 토ㅅ 느낌이 나네요ㅎㅎ
2022. 4. 14. 오전 11:34, 나그네 : 후자로 빠르게 성장 중이라고 하는데 파이버님이 그 성장 속에서 누리실만한게 있나요?
처우나 실력적으로요
왜냐하면 회사는 성장하는데 구성원은 그 어떤 것도 보장안되는 경우가 꽤 많아요
2022. 4. 14. 오전 11:39, 엄지척 제이지 : 네 감사합니다… 일단 한번 해보고 정 죽겠으면 나와야겠습니다..혹시 백업은 git을 말씀하시는 걸까요? 제가 잘 몰라서 추가로 여쭤봅니다
2022. 4. 14. 오전 11:39, 디디 : 엇 저가 딱 이런 케이스인데 1년까지는 딱 괜찮은것 같아요 아무도 안알려주고 물어볼곳도 없는 상황에서 혼자 문제를 해결하려고 정말 다양한 방법도 시도해봤고 자립심을 키울수 있다..인데 장기적으로 보면 별로 좋지 않은것 같아 저는 1년차를 막 넘긴 지금 시점에서 이직을 준비중입니다ㅠㅠ 근데 만약 작성자분이 동료도 많고 팀 규모가 큰 환경으로 갈 수 있는 조건이다라고 하면 저는 무조건 후자를 가라고 말씀드리고싶어요..
2022. 4. 14. 오전 11:41, 파이버 : 감사합니다!!

오퍼는 적당히 비슷했고, 실력은 두 회사 다 기술 블로그도 쓰고 내부 세미나도 하고 등등 많이 챙겨주는 거 같았어요

그래서 유일한 차이는 가서 조직에 큰 영향을 미치진 못하겠지만 프론트엔드쪽으로 좋은 체계 하에서 엄청 배우냐 / 조직에 어느 정도 영향을 미치면서 프론트엔드쪽으로도 적당히 성장하냐 이 정도일 거 같아요
2022. 4. 14. 오전 11:42, 으쓱으쓱 어피치 : 안녕하세요~벨로그 보고 들어와서 눈팅만 하다기 조심스럽게 고민을 남겨봅니다. 저는 html, css 배워서 이것저것 해보고 바로 바뀌는게 좋아서 프론트엔드 쪽으로 취업하려고 이제 막 시작합니다. 자바스크립트 deep dive도 1회독 했는데 모르는게 너무 많아서 그냥 흘려보내듯 가볍게 읽었네요ㅠㅠ 아무튼 최근 자바스크립트 간단한 문제를 하나씩 풀어보려고 하는데 별찍기마저 너무 오래 걸리네요...풀고 싶은 문제나 만들어 보고 싶은 걸 구글링해서 다른 분들의 코드를 보고 살짝 바꿔보고 오류 나면 아예 복붙해서 그 코드 고민해보고...이러다가 제가 스스로 코드를 짜는 걸 아예 못할 것같아서 두려워집니다 ㅠㅠ 이런 경우에는 어떻게 공부를 해야 할까요? 지금 이 시점에서 처음부터 끝까지 못 짜는게 맞는 건가요 제가 너무 못하는 걸까요...ㅠㅠ 전문적인 질문들만 보다가 이런 질문 남기니 좀 민망하지만..ㅠ 조언 부탁드립니다...!
2022. 4. 14. 오전 11:43, 디디 : 그리고 저는 제 코드에 대한 불안감도 많이 크고 레퍼런스를 얻을 곳이 정말 단 하나도 없었어서 (입사하자마자 저혼자 신규 프로젝트의 프론트 개발을 혼자해야하는 상황이였음) 초기에는 정말 미치는줄 알았습니다 사수는 바라지도 않고 동료라도 있으면 했는데 그 아무것도 없으니까 너무 힘들긴 했었어요...근데 이건 제가 입사 당시에 리액트로 투두리스트도 혼자 못만들었던 사람이라 많이 버거웠을수도 있긴 한데..여러모로 부담감이 생기는건 사실이더라고요 ㅠㅠ또 제 입장을 이해해주는 사람도 없으니까 저혼자 모든걸 설명하고 책임져야 할떄도 있어서 그게 많이 힘들긴해요 이런 말도 안되는걸 나한테 시킨다고?  < 이런 생각이 들때가 정말 많았던..
2022. 4. 14. 오전 11:44, 준 : 혹시 공부를 시작하신지 얼마나 됐을까요??
2022. 4. 14. 오전 11:46, 으쓱으쓱 어피치 : 자바스크립트를 시작한 건 2월입니다...! deep dive 1회독하면서 모르는게 너무 많아서 그냥 무작정 읽기만 했습니다...ㅎㅎ
2022. 4. 14. 오전 11:52, 엄지척 제이지 : 사실 취업준비 극초반에 이곳에 붙어서 더 큰 규모에 갈 수 있는지 가늠조차 못해봤습니다….. 해주신 말씀들 잘 생각해보고 결정하겠습니다 감사합니다!
2022. 4. 14. 오후 12:00, 준 : 저도 엄청난 경력을 가지고 있는것도 아니라서 엄청난 조언을 드릴 수 있을지는 모르겠는데, 우선 저는 대학교때부터 자바스크립트를 공부해서 2년정도? 넘은 것 같아서 얘기를 드리자면…

우선 딥다이브 책은 초보자가 읽기 정말 어려운 책입니다. "기본서"라고는 하지만 정말 "딥"한 내용들을 다루기 때문에 이해가 안가는게 충분히 있을 수 있어요! html과 css를 간단하게 배우고, js를 이제 막 시작하셨다면 어려운게 당연해요!

현재 html과 css로 바뀌는 게 재미있어서 공부를 시작하셨다고 했는데 저도 처음엔 그렇게 시작헀어요! 우선에는 클론 코딩을 한번 해보시는 건 어떨까요? 자신이 좋아하는 웹 사이트나, 평소에 만들고 싶었던 것 정말 간단한거라도 그 사이트의 구조를 보면서 어떤식으로 짜야하고, 어떤식으로 구성되어있고, 이런 것들을 알 수 있어서 좋은 것 같습니다.

이렇게 클론 코딩을 하다보면 기본적인 js로는 효율적으로 코딩하기가 어렵다는 걸 느끼시게 될텐데 그러다보면 자연스럽게 리액트나, 뷰나 스벨트같은 라이브러리, 프레임워크에 한번 공부를 해보세요!

그리고 처음부터 끝까지 못짠다고 하셨는데 처음엔 누구나 그렇다고 생각합니다ㅎ.. 처음부터 코드를 구조적으로 짜고, 웹을 보자마자 어떤식으로 짜야할지 생각나고, 코딩테스트 문제를 보면 어떤 알고리즘이 생각나고 그러지 않거든요.. 저는 지금도 알고리즘이 어렵다고 생각합니다.

그럴 땐 남의 코드를 참고하는것이 정말 중요한 역량중에 하나라고 생각합니다. 남의 코드를 보는 것을 두려워하지말고, 자신이 못짜는걸 두려워하지마세요. 그리고 만약에 모르는 것을 참고해서 썼다면, 블로그나 개인적인 공간에 몰랐던 것과 해결했던 방법을 글로 간단하게 남겨보세요 그럼 몰랐던 것도 하나하나 자신의 것으로 만들수있어요. 그렇게 하나하나 채워가면 됩니다. 너무 조급해하지 않아도 될 것 같아요.

그리고 알고리즘 문제를 연습하실때는 30분정도 고민을하다가 정말 생각이 안나면 다른 사람 코드를 보는 것도 좋은 방법이라고 생각합니다. 처음에는 그 알고리즘을 푸는 “길"을 모르기 때문에 아무리 고민을 해도 떠오르지 않을 수 있거든요. 그래서 다른 사람을 코드를 보면 그런 “길"을 알 수 있고, 아 이렇식으로 풀수있겠구나, 이런 방법도 있구나 라는 것을 깨달으면서 하시는게 좋을 것 같아요. 다른 사람 코드를 보는 걸 무서워하지마세요. 처음부터 그냥 참고를 하는 건 문제가 되지만, 조금의 고민과 다른 사람의 코드를 참고를 하는 건 정말 괜찮은 것 같습니다!

저도 지금 막 글을 쓰느라, 두서가 없지만 궁금한 것 있으면 또 편하게 질문주세요!
2022. 4. 14. 오후 12:04, 나그네 : 음 정보가 너무 없어서 무슨 말을 못드리겠지만 커피 타임하자고 하셔서 구성원분들과 얘기하는 시간을 가져보시고 피부로 느껴보는걸 추천합니다 ㅎㅎ

사실 개발 문화도 기술 블로그나 세미나는 열심히 하는데 까보면 내부적으로는 시궁창인 경우도 굉장히 많이 봤습니다
2022. 4. 14. 오후 12:05, 나그네 : 또 어느정도 인지도가 있는 회사면 링크드인 뒤져보시면서 그 회사에 누가 근무하는지 요즘 무슨 고민을 가지고 계신지 공부는 따로 하시는지 다 찾아보세요 ㅎㅎ
2022. 4. 14. 오후 12:07, 설아아빠 : 저라면 무조건 전자로 갈것 같습니다. 많이 성장할 수 있으면서 급여도 비슷한 수준이라면 ..! 조직에 영향을 미치는건 더 성장한 후에 해도 되지 않을까용
2022. 4. 14. 오후 12:13, 부끄러워하는 라이언 : 이 방엔 좋으신분들이 많은 것 같습니다…
2022. 4. 14. 오후 12:15, 으쓱으쓱 어피치 : 헉 이런 긴 조언 감사드려요ㅠㅠ 물어볼 곳이 없어서 민망하지만 여기다 조언 구해봤는데 잘한것 같아요 공부하면서 깊이 새길 조언 같습니다ㅎㅎ 일단 클론코딩을 해봐야겠네요 감사합니다!!
2022. 4. 14. 오후 12:16, 유용태 (teo.yu) : 혼자면 이직을 하려고 해도 책임감이나 압박감 때문에 쉽지 않을거고 아프거나 휴가를 쓰는 것도 눈치가 보여서 백업 = 내가 없어도 대신 할 수 있는 사람이 있는가를 확보하라는 것이었어요
2022. 4. 14. 오후 12:16, 준 : 누구나 처음은 있으니까요ㅎㅎㅎㅎㅎ민망하지 않아도 됩니다 그리고 이 방에는 저말고도 정말 좋은분들이 너무 많기 때문에 적극적으로 물어보는 것도 좋을 것 같아요
2022. 4. 14. 오후 12:18, 유용태 (teo.yu) : 좋은 체계라는 것은 안 겪어보면 모르는 것이라서 처음에는 큰 곳으로 가보시는게 좋지 않을까 생각은 합니다. 작은 곳의 경험은 상대적으로 더 하기가 쉬우니까요. 물론 체계와 경험 측면에서만 한정한 이야기입니다. 저는 내가 뭘 더 할 수 있는 쪽으로 가고 싶어 해서 체계가 너무 빡센 쪽은 지양했었어요
2022. 4. 14. 오후 12:22, 유용태 (teo.yu) : 할 수 있는만큼에서 만들고 싶은 것들을 생각해보고 만들어 보기를 바랍니다. html, css로 적당히 내 개인 이력서를 만들어 본다거나, js 이용해서 오늘 점심 뭐 먹지 랜덤 짜보는 거나... 그냥 소소하게 배운 것을 이용해서 '아 오늘 OO 배웠는데 아... 이런거는 할 수 있지 않을까?' 이렇게 생각해서 도전해보시기 바랍니다. 뭔가 퀴즈나 문제 풀이보다도 아주아주 단순해서 내가 생각하고 만든 결과물이 있으면 성장 하실 수 있습니다! 퀴즈풀이랑 만들고 싶은 걸 만드는 것은 목적성 측면에서 아주 다르게 임하게 되실거에요~
2022. 4. 14. 오후 12:23, 유용태 (teo.yu) : 맞아요~ 혼자 한다는 막막함은 참 크죠. 잘 하는 동료가 있는 것도 중요하지만 그냥 얘기를 나눌 사람 자체가 없다는 것은 정말 힘든것 같아요
2022. 4. 14. 오후 12:23, 게으름(lifeisnovel) : 저도 좋은 체계 하에서 많이 배울 수 있는 게 좋아보여요! 사실 제가 볼 때는 프론트 10명 규모도 커보이지만...
저 같은 경우 거의 1~2명이서 프로덕트 전체 퍼블리싱을 하다보니 1년 정도는 라이브 서비스에 바로 영향을 끼칠 수 있는 게 신기했지만 나중에는 어떤 게 체계가 잡히고 좋은 방향인지에 대한 경험과 조언받을 사람이 적어서 점점 실력이 멈춰있는 게 느껴지더라구요🥲
2022. 4. 14. 오후 12:24, 유용태 (teo.yu) : ㅋㅋㅋㅋ 공감합니다. 회사는 그럴지 몰라도 문화는 팀바팀입니다.
2022. 4. 14. 오후 12:29, 파이버 : 엇 다들 조언 정말 감사드립니다..!! 많은 도움이 됐어요 정말 감사합니다 ㅎㅎ
2022. 4. 14. 오후 12:30, 게으름(lifeisnovel) : 주변에 프론트 개발자가 없는 경우에 제 경험상 좀 많이 힘들었던 건 사내에서 프론트에 대한 피드백을 받을 수 없던 것 같네요.
백엔드 개발자분들께는 '항상 게으름씨는 프론트 잘해주고 있으니까~' 라고 하지만 아무리봐도 이건 아니라는 게 보이는데...? 하지만 PM이나 CTO분들께는 어느 부분이 문제라고 말씀드려도 당장 필요한 이슈 수정 때문에 개선시간을 내기도 애매하고(개선방향이 어떤건지 개인적으로 조사하는 것도 별개...)... 그래서 처음엔 꼭 사수나 최소한 동료가 있는 환경이면 좋을 것 같아요!
2022. 4. 14. 오후 12:34, 엄지척 제이지 : 이직도 쉽게 할 수 없고 아플때는 생각도 못해봤습니다 여러모로 가는것에 대해 다시 생각해봐야겠습니다.. 사실 혼자 프로젝트 하다가 팀 프로젝트만 해도 팀원분들께 엄청 배웠는데 회사를 저 혼자만 프론트인 곳을 가면 기술적으로 발전하는 것도 더디겠네요..
2022. 4. 14. 오후 12:42, 게으름(lifeisnovel) : 네 그리고 혹시 규모가 적어서 지금은 프론트 개발자가 없는데 회사가 커는 과정에 있어서 이후에 프론트 개발자 충원이 늘어난다면 1~2년차에 팀리딩을 해야 하는 경우도 있을 것 같아요🥲
저도 인원이 적던 상태에서 회사가 커져서 어쩌다보니 리딩을 하고 있는데 정작 제가 리딩할 실력이 안되어서 이번에 휴가 내고 공부할 예정이에요😂
2022. 4. 14. 오후 12:42, 게으름(lifeisnovel) : 커는 > 커지는
2022. 4. 14. 오후 1:02, 으쓱으쓱 어피치 : 조언 감사합니다! 사실 투두 리스트나 테트리스 만들기 이런거 해보고 싶은데 백지에서 하자니 너무 막막했었거든요 조금씩 해보겠습니다 ㅎㅎ
2022. 4. 14. 오후 1:07, 프론돌이 : 오. 국내 기준 프론트만 50명 이상인 회사가 손에 꼽을텐데. 축하드립니다!
저도 지금 연차시면 무조건 전자 추천드립니다. 
많은 분들 속에서 어꺠너머로 배우는 것도 많으실거에요
2022. 4. 14. 오후 1:15, 나그네 : 들어가는 팀에 몇명이 있는지도 보시는게 좋아요~

FE가 50명이라고 해서 들어갔더니 드래곤볼처럼 다 흩어져서 개발하고 FE가 많은 팀은 따로 있는 경우가 있어서
대규모 팀에서 기술적 교류 없이 1인 FE 하는 경우도 많으니까요
2022. 4. 14. 오후 1:15, 유용태 (teo.yu) : 맞아요! 진짜 중요합니다!!!
2022. 4. 14. 오후 1:16, 프론돌이 : 3년전만해도 if.kakao 가서 카카오에서의 FE 인원은 몇명인가요 했을 때, 30명 이내 였던 것 같은데...

지금은 프론트 개발자가 많아진것 같아요 여기저기
2022. 4. 14. 오후 1:17, 나그네 : 네카라쿠배 안에서도 고립된 FE분들 꽤나 많아요~
2022. 4. 14. 오후 1:17, 유용태 (teo.yu) : FE가 주력인 프로젝트가 있는 반면 백이 주인데 FE가 없을수는 없는 프로젝트가 더 많죠. ㅋ
2022. 4. 14. 오후 1:18, 파이버 : 오오 넵넵 감사합니다 !!
2022. 4. 14. 오후 1:18, 나그네 : 다른 팀으로 전배 신청할 수 있는 제도가 아예 없거나 있는 척하는 회사도 있고요
2022. 4. 14. 오후 1:19, 나그네 : 있더라도 스스로 떳떳하지 못해서 좋은 회사 다니고 있음에도 전배신청못하고 1인 FE 청산하기 위해 이직하는 경우도 있답니다
2022. 4. 14. 오후 1:20, 프론돌이 : 저도 그런 상황이긴 했는데, 일단 FE 인원이 많으면 사내 세미나나 스터디도 참여할 기회가 생기고, 
슬랙 채널 등 적어도 교류할 뭔가가 있다는게, 확실히 다릅니다. 
저흰 그래도 팀 이동이 유연해서, 첫팀에서는 저도 섬나라 였는데...
그나마 위의 것들로 인해서 덜 고립되었고, 
두번째 팀부터는 그 교류를 바탕으로 자주 이야기 하면서 재밌게 개발하고 있습니다. 

50명인 회사 말고 10명인 회사에 가서도 1인 FE 할 수 있는 확률도 당연히 있다보니. 
전자를 추천했어요 !
2022. 4. 14. 오후 1:20, 떨고있는 어피치 : 저도 너무너무 동감합니다.
지인도 좋은 회사 들어가서 너무 좋아했는데,
그 회사가 조직별 FE1명, 백앤드1명, 데이터 1명 막 이런식이어서 거의 신입급인데 혼자서 막중한 책임감을 져야했다는 이야기 들었어용
2022. 4. 14. 오후 1:21, 나그네 : 와 프론돌이님 재미있게 개발하고 있다니 최고네요!
2022. 4. 14. 오후 1:22, 빠밤 : 나그네님
2022. 4. 14. 오후 1:22, 파이버 : 앗 혹시 1인 FE 비추천하시는 이유도 여쭤봐도 될까요??
2022. 4. 14. 오후 1:23, 프론돌이 : 장단점이 있겠지만, 단점이 훨씬 많지 않을까요...
2022. 4. 14. 오후 1:23, 빠밤 : 질문있는데 소위 네카라쿠배라하는곳도 fe인원이많다고해도 특정파트분야에따라서 혼자 작업하는일이있을수도 있고 그런가요??
2022. 4. 14. 오후 1:23, 나그네 : 저는 방장님이 설명해주신 내용으로 비추합니다!
2022. 4. 14. 오후 1:23, 파이버 : 사실 두 회사 다 프론트 개발하고 있는 지인이 있어서
2022. 4. 14. 오후 1:24, 프론돌이 : 1인 FE면 코드리뷰도 여의치 않을거고, 
같은 팀의 비 FE 인원이 리뷰해주는건 한계점이 있고, 
같은 FE지만 다른 팀인 FE 분이 리뷰해주는것도 역시 그 서비스를 잘 모를테니 한계점도 있고
2022. 4. 14. 오후 1:24, 나그네 : 프로젝트 혹은 팀 자체가 FE는 서포터 혹은 굳이 필요하지 않은 경우라 1인인 경우가 있다보니
어려운 문제 해결을 하며 성장하기는 어렵고 재미도 덜어지고용
2022. 4. 14. 오후 1:24, 빠밤 : 이게 인원이 다가아닌가보군요..
2022. 4. 14. 오후 1:24, 프론돌이 : 협업해가면서 으쌰으쌰 발전시켜나가야 하는데, 
혼자면, 내가 산으로 가고 있는건지 바다로 가고 있는건지 나침반 없이 그냥 가기만 할 수도 있습니다.
2022. 4. 14. 오후 1:24, 프론돌이 : 다 가고 나서야 여기가 아닌가벼 하면 매우 현타가 오겠죠 ...ㅜㅜ?
2022. 4. 14. 오후 1:25, 파이버 : 오.. 넵넵 이해했어요 좋은 말씀 감사합니다 :)
2022. 4. 14. 오후 1:25, 유용태 (teo.yu) : 저는 팀은 FE팀에 속해는 있지만 프로젝트는 FE 혼자 하고 있어요. ㅎ
2022. 4. 14. 오후 1:25, 나그네 : 사수, 동료와 함께 성장하는 것도 좋은데요.
FE가 별로 없다는 것은 그 팀 혹은 그 프로젝트에서 FE가 그렇게 중요하지 않아서 일 수 있어요

누군가는 사내 개발팀이 만드는 공통 모듈을 만들면서 성장할 수 있고
누군가는 그  공통 모듈을 가져다 쓰는 1인 FE일 수 있으니까요
2022. 4. 14. 오후 1:25, 나그네 : 물론 모든 팀이 그런건 아닙니다 ㅎㅎ
FE 뽑기가 넘 힘들어서 1년 넘게 혼자 일하시는 분들도 많아용
2022. 4. 14. 오후 1:26, 유용태 (teo.yu) : 이거슨 팩트!
2022. 4. 14. 오후 1:26, 프론돌이 : 여러 팀들이 있으니, 그런 팀에 속하게 되면 그렇게 되기도 합니다. 너무도 당연한 말이 되겠지만...
2022. 4. 14. 오후 1:28, 나그네 : 네카라쿠배당토직야 등등.. 중 몇멏 회사는 지인의 사정을 알기도 하고 또 일부는 직접 겪기도 해봤는데 여전히 많습니다ㅎㅎ
2022. 4. 14. 오후 1:29, 신난 어피치 : fe없는이유가 뭘까용?!??!?!
2022. 4. 14. 오후 1:30, Hardy : fe가 없다기 보단 눈에 차는 fe가 없다 아닐까요 ㅋㅋ
2022. 4. 14. 오후 1:30, 유용태 (teo.yu) : FE가 돈이 안되던 시절에는 잘하는 개발자들은 FE 개발을 안했구요
2022. 4. 14. 오후 1:31, 나그네 : 사람을 못구해서, 퇴사, 외주, BE의 풀스택으로 버티기
다양해용
2022. 4. 14. 오후 1:31, 썰~~ : fe라는 개념이
2022. 4. 14. 오후 1:31, 유용태 (teo.yu) : 이제 FE가 돈이 되기 시작하고 나서 보니 그동안 핍팍받아서 메마른 땅에 싹이 피질 못했어요. ㅠ
2022. 4. 14. 오후 1:31, 썰~~ : 생긴지 몇년안된걸로 알고있어요
2022. 4. 14. 오후 1:31, 나그네 : 백엔드분들이 호기심에 프론트 판 키웠다가 수습못해서 사람 뽑아달라고 하는 경우도 있어요 ㅋㅋ
2022. 4. 14. 오후 1:33, 엄지척 제이지 : 팀내에 1인인것도 기피되는 상황인데 회사내 혼자인것은 정말 힘든 길이겠군요 😵‍💫
2022. 4. 14. 오후 1:33, 신난 어피치 : ㅇㅎㅜㅜ어쩐지 백엔드는 정말 많은데 제 주변에 fe는 많이 없어서 궁금했어요!
2022. 4. 14. 오후 1:36, 나그네 : 클럽하우스 초기 개발에 클라이언트는 오로지 아이폰만 출시한 것과 비슷하게 생각해보셔도 좋아요ㅎㅎ

프론트 개발자인 제가 이런 얘기하는게 참 애매하지만 모든 사업과 서비스에 FE가 필요한건 아니거든요~
2022. 4. 14. 오후 1:37, 프론돌이 : 내부에서 쓰는 대시보드 같은건 애초에 백엔드 분들이 적당히 구현하시기도 했었죠. 
프론트 개발자를 덜 뽑고 이런 간단한 프론트 작업은 백엔드 분들이 같이 하곤 했었는데
2022. 4. 14. 오후 1:37, 프론돌이 : 요샌 FE를 많이 뽑으면서 저런 것도 그냥 다 FE가 하는 경우도 있고
2022. 4. 14. 오후 1:38, 프론돌이 : 오히려 FE가 서버쪽 롤까지 더 가지고 오는 경우도 있고 
(이게 바람직한지는 모르겠지만...)
2022. 4. 14. 오후 1:38, 나그네 : BFF !
2022. 4. 14. 오후 1:38, 프론돌이 : 그 용어가 떠오르지 않고 있어서 못쓰고 있었네요 ㅋ
2022. 4. 14. 오후 1:38, 프론돌이 : 그거 쓰고 걷어낸 것도 최근에 있었어서 ㅋ
2022. 4. 14. 오후 1:39, 나그네 : 여기저기 FE가 부족하다보니 정말 어렵죵.. 다들 피부로 체감하실겁니다 ㅠㅠ
2022. 4. 14. 오후 1:41, 실무뿌론트 : 요건 반대로 서버가 fe롤을 더 가져오는거 아닌가요?
2022. 4. 14. 오후 1:41, 실무뿌론트 : bff라면..
2022. 4. 14. 오후 1:43, 동딩댕동 : bff 를 fe가 관리하기 때문에 그렇게 표현하신게 아닐까요 ..
2022. 4. 14. 오후 1:46, 프론트엔드되고싶어요 : 말씀중에 죄송한데 좋은 프론트개발자라 함은 개발자를 선호하시는지 여쭤봐도 괜찮을까요?
2022. 4. 14. 오후 1:47, 프론트엔드되고싶어요 : 개발자 앞에 어떤이 빠졌습니다..
2022. 4. 14. 오후 1:50, 프론돌이 : BFF를 프론트가 만들게 되면요 -_-;
2022. 4. 14. 오후 1:51, 엄지척 제이지 : https://velog.io/@teo/frontend 오 저도 면접 준비하면서 고민했었는데 테오님 블로그에 좋은 글이 있더라구요!
2022. 4. 14. 오후 2:04, 유용태 (teo.yu) : 구 풀스택 개발자에서 서버만 안해도 괜찮은 느낌? ㅋ
2022. 4. 14. 오후 2:05, 유용태 (teo.yu) : 아.. 아니죠. 서버는 해야죠.. 인프라만 빼고 다 할 줄 아는 개발자?
2022. 4. 14. 오후 2:05, 빠밤 : 아..이거는 충격이네요
2022. 4. 14. 오후 2:05, 빠밤 : 저는 네카라이런곳가면 개발적으로엄청좋고그럴줄알았는데 케바케네요..
2022. 4. 14. 오후 2:05, 유용태 (teo.yu) : FE는 기획,디자인,UX 랑도 일을 밀접하게 하고 백엔드하고도 밀접하게 하죠. 그래서 제품이나 서비스도 관심있고 또 기술도 잘 하는 그런 사람을 원하고 있죠
2022. 4. 14. 오후 2:06, 유용태 (teo.yu) : 보통은 제품에 관심이 있으면 기술쪽이 좀 떨어지고 기술을 파는 사람들은 제품이나 일정 맞춰 주는거에 까다롭고 그래서
2022. 4. 14. 오후 2:07, 유용태 (teo.yu) : 프론트엔드 기술에 관심이 많고 백엔드는 어느정도 할 줄 알면서 서비스를 하고 싶어서 기획 디자인과 잘 소통해서 결과를 만들 줄 아는 개발자를 원하는 건데
2022. 4. 14. 오후 2:09, 퇴근하는 프로도 : B2C나 대규모 사용자가 많은 곳이
프론트가 잘되있는거 같아요(?)
2022. 4. 14. 오후 2:10, 퇴근하는 프로도 : 전 정부 과제 하는 si 다니는데 여기선 잡부..
2022. 4. 14. 오후 2:10, 유용태 (teo.yu) : 사람이나 회사마다 좀 다른 것 같아요. 제품 서비스를 잘 만드는 것을 선호하는 사람과 기술력을 선호하는 개발자들
2022. 4. 14. 오후 2:10, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 4. 14. 오후 2:10, 유용태 (teo.yu) : 원래 FE가 잡부였죠. ㅎ
2022. 4. 14. 오후 2:10, 퇴근하는 프로도 : 국비동기들은 중에 B2C간 동기는
2022. 4. 14. 오후 2:10, 퇴근하는 프로도 : 하는거많다더구요 흑흑
2022. 4. 14. 오후 2:11, 퇴근하는 프로도 : 빨리탈출을..
2022. 4. 14. 오후 2:11, 프론트엔드되고싶어요 : 아하 너무 막연한 질문을 했는데 답변 감사합니다!!
2022. 4. 14. 오후 2:12, 프론트엔드되고싶어요 : 테오님 블로그도 되게 재밌어요 지금 보고있는데
2022. 4. 14. 오후 2:12, 유용태 (teo.yu) : 감사합니다~! ㅎ
2022. 4. 14. 오후 2:13, 카타나 : 백오피스 프론트엔드 개발자의 장단점은 무엇이 있을까요?
2022. 4. 14. 오후 2:13, 카타나 : 커리어 관점에서 살짝 안좋을 수 있다는 생각이 좀 드는데
2022. 4. 14. 오후 2:14, 유용태 (teo.yu) : 백오피스로 인해서 프론트엔드 기술 발전이 많이 된것들이 많아서 (컴포넌트, 리액트 쿼리, 대시보드, 차트, 등등)
2022. 4. 14. 오후 2:15, 유용태 (teo.yu) : 정말 구조적이고 단순하면서 기술적으로 배우기에는 백오피스가 정말 좋구요
2022. 4. 14. 오후 2:15, 나그네 : 정말 많은 기술적인 도전을 할 수 있답니다ㅎㅎ
2022. 4. 14. 오후 2:15, 유용태 (teo.yu) : 맞아요!
2022. 4. 14. 오후 2:15, 유용태 (teo.yu) : 그리고 API 연동쪽도 그렇고
2022. 4. 14. 오후 2:15, 나그네 : 성장에 도움 안된다고 많은 이야기가 나오지만 얻을 수 있는 것도 상당히 많아요!
빠르게 실패해볼 수 있는 기회도 있고
중요한건 동료들을 기쁘게 할 수도 있고요
2022. 4. 14. 오후 2:16, 카타나 : 오... 뭔가 SEO 이런거 고려 안해도 될 것 같아서 불리하다라는 생각이 좀 있었습니다.
2022. 4. 14. 오후 2:16, 유용태 (teo.yu) : 다만 제품이나 서비스 개발을 더 좋아하는 사람들에게는 안 맞을 수 있어요. 일단 제품 퀄리티를 높이는 것을 생각안해도 되니까요
2022. 4. 14. 오후 2:16, 카타나 : 저도 이거 기대돼요 동료들 기쁘게 할 수 있는것.
2022. 4. 14. 오후 2:16, 유용태 (teo.yu) : SEO를 고려한다는 것은 홍보용 웹페이지인데
2022. 4. 14. 오후 2:16, 유용태 (teo.yu) : 그런쪽에서 프론트엔드의 대단한 기술을 쓸만한 곳은 사실 몇군데 없어요
2022. 4. 14. 오후 2:16, 엔 : 백오피스가 배우기엔 좋은 것 같아요
2022. 4. 14. 오후 2:16, 엔 : 근데 재미가 없습니다
2022. 4. 14. 오후 2:16, 엔 : 가장 큰 문제
2022. 4. 14. 오후 2:16, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 14. 오후 2:16, 리린이 : 백오피스 진짜 노잼이에요 ㅋㅋㅋ
2022. 4. 14. 오후 2:16, 나그네 : 신입분들이 뭔가... 결제나 사용자에게 노출된 게 아니면 실패한 취직이다?? 라는 식으로 얘기하고 그런 이야기에 공감하는 시니어분들도 많았어요
2022. 4. 14. 오후 2:16, 유용태 (teo.yu) : 그렇죠. 배우는 입장에서는 재밌지만
2022. 4. 14. 오후 2:16, 나그네 : 근데 저는 큰 공감은 안되네영
2022. 4. 14. 오후 2:16, 게으름(lifeisnovel) : FO에 비해 BO는 발생하는 이슈가 좀 정돈된? 느낌은 있는 것 같아요
2022. 4. 14. 오후 2:17, 유용태 (teo.yu) : 그것도 잠시일뿐
2022. 4. 14. 오후 2:17, 유용태 (teo.yu) : 음... 우리가 알고 있는 유명한 시니어들(?)은 결국 서비스의 이름빨이 있어야 하기 때문에(?)...
2022. 4. 14. 오후 2:17, 유용태 (teo.yu) : 음.. 백오피스가 서비스의 얼굴은 아니다보니
2022. 4. 14. 오후 2:17, 카타나 : 그쵸 ㅜㅜ
2022. 4. 14. 오후 2:18, 유용태 (teo.yu) : 하지만 훨씬 많은 가치를 창출하기에 안 할 수는 없는..
2022. 4. 14. 오후 2:18: 채팅방 관리자가 메시지를 가렸습니다.
2022. 4. 14. 오후 2:18, 카타나 : 이건 또 처음알았네요
2022. 4. 14. 오후 2:19, 유용태 (teo.yu) : 거기는 실제 쿠팡 사이트말고도
2022. 4. 14. 오후 2:19, 디디 : 헐 저도 처음알았어요 ㅋㅋㅋㅋㅋ
2022. 4. 14. 오후 2:19, 유용태 (teo.yu) : 배송, 업체 조회, B2B 등등의
2022. 4. 14. 오후 2:19, 유용태 (teo.yu) : 무시무시한 백오피스 라인이 존재한다고 저도 전해만 들었습ㄴ디ㅏ.
2022. 4. 14. 오후 2:19, 유용태 (teo.yu) : 80% 숫자는 잊어주세요. 수치는 정확한 수치 그런거 아니니까.. ^^;;
2022. 4. 14. 오후 2:19, 유용태 (teo.yu) : 그냥 쿠팡 사이트보다 다른 거 하는 FE 개발자가 훨씬 더 많다는 겁니다.
2022. 4. 14. 오후 2:20, 카타나 : 넵~
2022. 4. 14. 오후 2:20, 유용태 (teo.yu) : 백오피스는 안 할 수도 없고 한번은 해야 되고
2022. 4. 14. 오후 2:20, 유용태 (teo.yu) : 잘하면 기술적인 성장을 할 수 있는 기술의 집약체이자 좋은 교보재이구요~
2022. 4. 14. 오후 2:21, 디디 : 제가 백오피스는 저희회사밖에 안해봤는데 저는 백오피스가 재미가 없더라구요 특히 관심없는 도메인 관련 백오피스면 ....ㅜㅜㅜㅜㅜㅜ 물론 좀더 큰 기업에서 여러 요구사항을 가진거면 다양한 기술적 접근을 할수 있겠지만 작은 규모에서는 기본적ㅇ로 뭔가 신경을 덜..써도 되는 느낌이라 ㅠㅠㅠ근데 직접 사용자랑 24시간 맞닿아 있는 서비스보단 좀더 편한 부분은 있어서 개인의 성향과 회사가 해당 백오피스로 추구하는 방향에 따라 달라질것 같다는 제 의견입니당..ㅎㅎ
2022. 4. 14. 오후 2:21, 게으름(lifeisnovel) : 쿠팡 같은 경우는 백오피스도 고객(판매자)이 보는 백오피스와 실제 사내에서 보는 백오피스로 나뉠테니까요...! 판매자 고객이 보는 백오피스는 피드백도 많고 이슈도 많고 사실상 FO...
2022. 4. 14. 오후 2:21, 유용태 (teo.yu) : 제품이나 서비스를 만들고 발전해가고 싶어하는 사람에게는 재미없다. 그런데 배우고 싶은 사람에게는 재밌을 수 있다고 생각해요
2022. 4. 14. 오후 2:22, 유용태 (teo.yu) : 그렇죠. 사실상 BO같은 FO... ㅋㅋ
2022. 4. 14. 오후 2:22, 파이버 : 우선순위에서 항상 밀리는 레거시 백오피스면 재미없고 서비스의 중추가 되는 백오피스면 재밌는 거 같아요
2022. 4. 14. 오후 2:22, 파이버 : 둘다 해본 경험상..
2022. 4. 14. 오후 2:22, 디디 : ㅎㅎ 서비스를 안만들어본 입장에서는 백오피스도 얻는게 많았지만 다음엔 꼭 서비스를 해보고싶다는 생각도 드네요...그만큼 힘들겠지만..ㅋㅋㅋㅋ
2022. 4. 14. 오후 2:22, 유용태 (teo.yu) : 안할수도 없고 경험이 아예 없으면 그것도 좋은 것은 아니라서요
2022. 4. 14. 오후 2:23, 퇴근하는 프로도 : 헐 진짜요??
2022. 4. 14. 오후 2:23, 유용태 (teo.yu) : 기술적 도약을 할 수 있는 중간 다리 같은 프로젝트로 여기시고 백오피스를 하게 되면 제품성장이나 발전의 재미보다 기술적으로 확~~ 포커싱해주세요
2022. 4. 14. 오후 2:23, 퇴근하는 프로도 : 눈에 안보이는게 많나봐요
2022. 4. 14. 오후 2:23, 퇴근하는 프로도 : 첨알았네여..
2022. 4. 14. 오후 2:23, 유용태 (teo.yu) : 아... 숫자는 지워야곘네요;;; 사이트보다 더 많다는 거에요
2022. 4. 14. 오후 2:24, 빠밤 : https://youtu.be/WG7JHLfClEo
2022. 4. 14. 오후 2:24, 빠밤 : 네이버 신사옥이라네요 ㄷ
2022. 4. 14. 오후 2:24, 카타나 : 좋은답변들 감사합니다!!
2022. 4. 14. 오후 2:24, 유용태 (teo.yu) : 배송, 통계, 물량, 납품 등등 구매보다 훨씬 더 많다는 거죠
2022. 4. 14. 오후 2:24, 유용태 (teo.yu) : 우와!
2022. 4. 14. 오후 2:25, 게으름(lifeisnovel) : 뒷단이지만 고객이 보기 때문에 소중한... 상품관리 페이지 흑흑 ㅠㅠ
2022. 4. 14. 오후 2:25, 유용태 (teo.yu) : ㅋㅋㅋㅋ
2022. 4. 14. 오후 2:27: 채팅방 관리자가 메시지를 가렸습니다.
2022. 4. 14. 오후 3:14, 열심히 일하는 네오 : 안녕하세요 코린이입니다 ㅎㅎ 궁금한것이 생겨서 질문남깁니다.
실무 개발을 할때 협업이 엄청 중요하다고들하시는데 저의 생각은 개발을 다른사람이랑 같이 하니깐 중요한 부분으로 느끼고 있습니다. 그럼 실무에서 협업을 잘하는 사람의 특징은 무엇이 있는지 궁금합니다. 저도 협업을 잘하는 사람이 되고 싶어서요
2022. 4. 14. 오후 3:20, 유용태 (teo.yu) : 엄청 많은데요 그냥 제가 생각하는 것들을 좀 피상적으로 써보자면

- 공유를 빨리 잘 하는 것 (안되고 있는거 마감날까지 혼자 끙끙하다가 터뜨리는거 제발 하지 말아주세요!)
- 빠른 피드백과 리액션!!!! 
- 잘 이해하고 정돈된 문서화
- A vs B 가 아니라 A + B = C로 대화 하는 스킬
- 부정적인 감정 포함하지 않고 말하기
- 한꺼번에 말한 내용을 배경과 의도와 도출과 결과를 분리해서 이해하고 공감과 반대의 포인트를 분명히 하기
- 일관성 있게 행동하기
- 예측가능하게 행동하기
- 아는 것과 모르는 것을 분명하게 전달하기
- 말투를 흐리거나 경앙되지 않고 부드럽게 말하기
2022. 4. 14. 오후 3:27, 열심히 일하는 네오 : 아직 제가 부족한 부분들이 많네요ㅠㅠ 조언 감사합니다! 말씀해주신 것을 토대로 협업을 잘하는 개발자가 되도록 노력하겠습니다 감사합니다!!
2022. 4. 14. 오후 3:27, 인성(현파랑) : 테오의 의견과 일맥상통하는 부분입니다. 협업이라는 단어는 "같이 일하는" 것이고, 일보다는 "같이"에 초점을 둬보세요.

- 내가 말할 때 이야기를 경청하며 공감해준다.
- 내가 다소 업무를 하게 되더라도 기분 좋게 해줄 수 있게 부탁 또는 요구한다.
- 어떤 일정에 맞추기 위해 스퍼트 낼 때 같이 있거나, 나를 지원해준다.
- 그 사람의 의견을 통해 내가, 나아가 팀이 발전하게 된다.

이 모든 건 결국 "커뮤니케이션을 잘하는 사람"으로 귀결됩니다. 여기에 일을 하는 방식이 다른 사람/체계와 정형화 되어 있거나, 배울 점이 있으면 너무 베스트인거죠.

우스갯소리로 말 잘하고 잘 웃고 주변 사람들 잘 챙기는 사람은 일 못해도 어느 회사든 갈 수 있다고 하는데... 그만큼 커뮤니케이션이 강조되기 때문입니다.

테크닉은 공부하면서 갈고 닦을 수 있지만, 커뮤니케이션은 정말 암묵지 영역 그 자체이고, 어떤 경험을 어떻게 받아들이느냐에 따라 독이 될 수도, 약이 될 수도 있거든요.
2022. 4. 14. 오후 3:28, 인성(현파랑) : 논점이 흐려졌나 싶은데 우선은 사람들과 대화를 많이 하고, 어떤 생각을 가지고 어떻게 일하는지를 눈여겨 보세요. 상대방의 시선에 맞게 자신의 입장을 잘 조율할 수 있어야 합니다.
2022. 4. 14. 오후 3:32, 열심히 일하는 네오 : 결국 협업은 다른 사람이랑 하는 것이니 다른 사람에게 집중하고 관심을 갖는 것이 우선이겠네요! 조언 감사합니다!!
2022. 4. 14. 오후 3:34, j : 우선은 같이 밥먹는게 안 불편한 사람..
2022. 4. 14. 오후 3:34, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 14. 오후 3:34, 유용태 (teo.yu) : 와!!! 함축적이지만 거의 모든 것이 들어있네요!
2022. 4. 14. 오후 3:35, j : 다행이네요 전달이 되어서..ㅠㅠ
2022. 4. 14. 오후 3:35, 프론트 공부 : 일이야기 안하면 너무 괜찮은분이 있는데 일 이야기만하면 답답해지시는분도 계시더라구요ㅠㅠ
2022. 4. 14. 오후 3:37, j : 이게 '나'의 고칠것만 너무 고민하는것 보다 '우리'가 일하면서 맞춰 나갈것을 고민해보세요!
2022. 4. 14. 오후 3:38, j : 그렇게 본인에게 적용해 보시고 좋은 영향을 끼치면 널리 전파도 되고
2022. 4. 14. 오후 3:40, 프린이 : 안녕하세요 프론트엔드 개발한지 1년도 채 안된 코린이입니다!
버튼 클릭시 이벤트가 발생하는 건에 대해, 더블 클릭(중복 이벤트)에 대한 처리는 어떻게 하시는지 궁금합니다!
참고로 저는 React를 사용해서 개발하고 있습니다
이전까지는 state:boolean로 mutate를 쏘기전에 true, 끝나면 false 로 처리해서 모든 요청이 완료되기 전에 함수 재 호출시 state값을 확인해 바로 return 되도록해서 막는 형식으로 했습니다. 더 좋은 방법이 있을까요??
2022. 4. 14. 오후 3:41, j : https://www.zerocho.com/category/JavaScript/post/59a8e9cb15ac0000182794fa
2022. 4. 14. 오후 3:42, 최민석 : 쓰로틀써도 괜찮을거같아요
2022. 4. 14. 오후 3:42, j : 또는 기존의 state 방식을 사용하신다면 버튼에 이벤트가 발생했을 시 state로 해당 버튼에 액션이 주어졌을 경우 로딩 버튼으로 처리해서 사용자에게 시각적으로 전달하는 방법도 있을 것 같네요
2022. 4. 14. 오후 3:43, 프린이 : 아하 네!! 쓰로틀 쓰는 방법도 있네요 감사합니다ㅎㅎ
그렇게 로딩으로 보여주는 방식을 사용했는데, 로딩이  짧은 경우에는 화면이 깜박거리는 것 같아서요ㅜㅜ 그냥 의도적으로 시간을 늘리는 게 좋을까요?
2022. 4. 14. 오후 3:45, 프론트 : j님 말씀처럼 로딩을 버튼에 효과를 줘서 disabled처리 하시면 될거같아요
2022. 4. 14. 오후 3:45, j : 저는 디바운스 걸어서 로딩버튼 처리 해서 사용합니다
2022. 4. 14. 오후 3:47, 프린이 : 그렇게 처리해볼게요 감사합니다!👍
2022. 4. 14. 오후 3:50, 유용태 (teo.yu) : 협업과 관련된 글을 쓰고 있는데 한번 읽어봐주세요~ 협업은 제가 관심이 많은 분야라서 연재형식으로 좀 적어 볼 생각입니다. 
https://velog.io/@teo/agile-feedback-game
2022. 4. 14. 오후 5:26, 나그네 : 오~~ 테오님 신상이네요!
2022. 4. 14. 오후 5:57, 여의도개발 : 페북에서 나온 에디터프레임워크라고하네요
https://lexical.dev/docs/intro
2022. 4. 14. 오후 6:07, 프론돌이 : 최근에 에디터 알아보면서 상용에디터 결제해서 붙였는데, 
그 때 이걸 알았으면 고려해봤을텐데 아쉽네요 ㅠ
2022. 4. 14. 오후 6:07, 나그네 : 어차피 페북에 웹 에디터는 이미 있었어요 ㅎㅎ
Draft 라는 녀석이 있죠!
아쉬워 할 필요는 없어용
2022. 4. 14. 오후 6:08, 퇴근하는 프로도 : 이건 꼭 아닌거 같아요..
2022. 4. 14. 오후 6:09, 퇴근하는 프로도 : 원래 성격이 막 장난이나 지적이나 그런 사람두 있드라구요 ㅠ
2022. 4. 14. 오후 6:09, 퇴근하는 프로도 : 공과 사구분못하고..
2022. 4. 14. 오후 6:09, 퇴근하는 프로도 : 불편한농담이나 성희롱 ㅜㅠ등..
2022. 4. 14. 오후 6:09: 시에스에스님이 나갔습니다.
2022. 4. 14. 오후 6:10, 프론돌이 : 그런 분이랑은 같이 일하는게 불편하죠 ㅜ
2022. 4. 14. 오후 6:10, 프론돌이 : 괜히 밥 먹을 때 옆자리 앉지 않게 피해가고 싶고...
2022. 4. 14. 오후 6:11, Hanelle : 헙.. 저 장난기가 많아서 가끔 동료들에게 이것저것 농담 많이하는데 자중해야겠군요...
2022. 4. 14. 오후 6:12, Hanelle : 제 나름대로 선은 넘지않는선에서 한다고 생각하고 하는데 저와 성향이 다르거나 한 분들이라면 가끔은 불편하거나 부담스러울 수도 있다는 생각이 잠깐 들었네욥..
2022. 4. 14. 오후 6:16, 퇴근하는 프로도 : 사람마다 다 다른거 같아요..
2022. 4. 14. 오후 6:16, 퇴근하는 프로도 : 근데 약간 불편해서 피하면
오히려 전체 분위기를 해치는 사람으로간주한다능..
2022. 4. 14. 오후 6:16, 퇴근하는 프로도 : 모르겠네여
2022. 4. 14. 오후 7:08, 쵸키 : 안녕하세요 저 질문 하나 드리려고 하는데요 ㅠㅠ 지난주까지 npm install이 잘만 되던게 갑자기 버전 오류가 뜨면서 안되는데...그러면서 받아온 라이브러리들을 인식하지 못하는 문제까지 생겨서요ㅠㅠ 혹시 이럴땐 어떤걸 확인해봐야할까요ㅠㅠ package.json이나 이외 lock 파일도 전혀 건들인게 없습니다ㅠㅠ
2022. 4. 14. 오후 7:10, 까루 : 혹시 node_modules 삭제 하고 재설치 하셔도 똑같나요?
2022. 4. 14. 오후 7:16, 쵸키 : 네..
2022. 4. 14. 오후 7:17, 까루 : package-lock.json 이나 yarn.lock 제거 하시고 node_modules 다시 제거 하신 다음에 한 번 해보셔도 동일할까요?
2022. 4. 14. 오후 7:17, 쵸키 : 넵.. 해봤습니다ㅠㅠ
2022. 4. 14. 오후 7:17, 쵸키 : 원래는 나지 않던 npm warn 도 엄청 생겨나고 라이브러리 인식 문제로 인해서 jsx파일의 태그들도 에러가 나요ㅠㅠ
2022. 4. 14. 오후 7:18, 쵸키 : 원래 기존에 잘 돌아가던 프로젝트는 잘 작동 하는데 새로 git clone을 받아서 node_modules를 받았을때만 이런 현상이 일어나네요ㅠㅠ
2022. 4. 14. 오후 7:19, 게으름(lifeisnovel) : npm update도 진행해보신 걸까요? 터미널 에러메시지에 추천 명령어 따로 뜬 건 없으실까용
2022. 4. 14. 오후 7:20, 까루 : 저 같은 경우는 vscode 나갓다 오면 해결되는 경우도 종종 있던데 lint 잘못 돌아서 오류 나는 경우도 있더라고요...
2022. 4. 14. 오후 7:27, 결과보단 과정을 / React,JS : log라도 캡쳐 떠서 공유를 하면 아시는분이 조언을 해주시지 않을까요.
2022. 4. 14. 오후 7:29, 쵸키 : 기존버전 / 최신 버전으로도 둘다 작동시켜봤는데 동일하게 라이브러리 인식 오류가 납니다ㅠㅠ
2022. 4. 14. 오후 7:31, 쵸키 : 인스톨시
2022. 4. 14. 오후 7:31, 쵸키 : 사진
2022. 4. 14. 오후 7:31, 쵸키 : 이렇게 오류나요!!!
2022. 4. 14. 오후 7:32, 쵸키 : 그리고 인스톨이 다되고서는 원래 잘 인식되던 태그들이 인식이 안되어서 에러가 뜹니다.,
2022. 4. 14. 오후 7:32, 쵸키 : 지금 현재 node버전은 12.x.x 쓰고있어요
2022. 4. 14. 오후 7:32, 쵸키 : 14도 동일하고
2022. 4. 14. 오후 7:32, 쵸키 : 16은 에러가안나요,,.
2022. 4. 14. 오후 7:35, 동딩댕동 : Package-lock.json 을 보면 lockfileVersion 이 있는데 그게 몇일까요..?
2022. 4. 14. 오후 8:43, 프엔공부중 : 보통 면접시에 자기소개는 몇분 정도 하시나요?
2022. 4. 14. 오후 8:44, 유용태 (teo.yu) : 처음하는거 말하는 거죠? 보통 1분 ~ 1분 30초 정도 하지 않나요!
2022. 4. 14. 오후 8:44, 유용태 (teo.yu) : ?
2022. 4. 14. 오후 8:44, 우오 : 저는 약 1분안쪽..?
2022. 4. 14. 오후 8:54, 프엔공부중 : 넵 처음에 말하는 자기소개입니다!
2022. 4. 14. 오후 8:54, 프엔공부중 : 아하 보통 1분 내외군요 감사합니다
2022. 4. 14. 오후 8:58: 도롱도롱님이 들어왔습니다.
2022. 4. 14. 오후 8:58, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 14. 오후 8:58, 여의도개발 : 1분
2022. 4. 14. 오후 8:59, 도롱도롱 : 안녕하세요!
2022. 4. 14. 오후 8:59, 유용태 (teo.yu) : 안녕하세요 초롱초롱 네오님!! 반갑습니다 :)
2022. 4. 14. 오후 10:27: 무찌님이 들어왔습니다.
2022. 4. 14. 오후 10:27, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 14. 오후 10:28, 유용태 (teo.yu) : 안녕하세요~ 무찌님! 반갑습니다 :)
2022. 4. 14. 오후 10:28, 무찌 : 안녕하세요 반갑습니다~! 😊
2022. 4. 14. 오후 10:29, 유용태 (teo.yu) : 네! 어서오세요~ 여기는 개발을 얘기하고 프론트엔드를 얘기하고 궁금한 내용들을 주고 받으며 함께 성장하는 공간입니다
2022. 4. 14. 오후 10:29, 유용태 (teo.yu) : 내가 궁금한것은 남들도 궁금할거라고 생각하고 뭐든 편하게 글 남겨주세요~
2022. 4. 14. 오후 10:32, 무찌 : 네 감사합니다🙆‍♂️ 앞으로 잘 부탁드립니다🙏 테오님 velog에서 항상 좋은 글 써주셔서 너무 감사드립니다 🥺
2022. 4. 14. 오후 10:33, 유용태 (teo.yu) : 감사합니다~ 여기는 소재를 얻기 위한 공간이기도 해서 ㅋㅋ 일고 싶은 주제가 있다면 제안해주셔도 좋아요 ㅎ
2022. 4. 14. 오후 10:49, 유용태 (teo.yu) : *읽고
2022. 4. 14. 오후 11:20, 유용태 (teo.yu) : 톡게시판 '투표 취소': 이벤트를 한번 해볼까 합니다. 다같이 온라인으로 모여 1시간 정도 할 수 있는 것들로 생각합니다. 자유롭게 의견 주세요!

2022년 4월 15일 금요일
2022. 4. 15. 오전 4:16: 택배 상자를 든 네오님이 들어왔습니다.
2022. 4. 15. 오전 4:16, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 15. 오전 9:00, 유용태 (teo.yu) : 안녕하세요 택배상자를 든 네오님~~ 반갑습니다~
2022. 4. 15. 오전 9:33, 여의도개발 : react-form vs formik 둘중에 어떤게 괜찮을까용?
사용해보신분의 의견이 궁금하네요 ㅎㅎ
2022. 4. 15. 오전 9:34, 썰~~ : formik는 본적없는데 react-form은 쓰시는분들이 보였어요
2022. 4. 15. 오전 9:41, 파이버 : 저 포믹써요!
2022. 4. 15. 오전 9:42, 프론돌이 : 전  react-hook-form 씁니다. 회사 타팀도 이걸로 많이들 쓰시더라구요
2022. 4. 15. 오전 9:42, 썰~~ : 아
2022. 4. 15. 오전 9:42, 썰~~ : 리액트 폼이
2022. 4. 15. 오전 9:42, 썰~~ : 리액트 훅폼이 아니었군요
2022. 4. 15. 오전 9:43, 썰~~ : 저는 react hook form 말한거였어요
2022. 4. 15. 오전 9:43, 프론돌이 : 정황상 리액트 훅폼 말씀하신 것 같아서 ㅋ
2022. 4. 15. 오전 9:44, 파이버 : 일단 저는 포믹 만족하면서 쓰고 있어요 api가 제일 리액트스러워서
2022. 4. 15. 오전 9:44, 프엔공부중 : 저는 둘다 써봤는데 저는 간단하게 쓰기엔 hook form이 편했고 다른건 포믹이 편하더라구요
2022. 4. 15. 오전 9:48, 여의도개발 : 확인 감사합니다.!ㅎㅎ
2022. 4. 15. 오전 11:05, 프엔공부중 : nextjs-express-sequelize로 토이프로젝트를 하고 있는데 간단한 admin 페이지 추천해주실 서비스나 라이브러리가 있을까요?
2022. 4. 15. 오후 12:12, Hola : 저도 포믹써요!
2022. 4. 15. 오후 1:05, 빠밤 : 저 지금 간단한 html,css,js이용해서 포트폴리오만들고있는데요
2022. 4. 15. 오후 1:06, 빠밤 : 혹시 스크롤같은 기능을 라이브러리로 써서 포트폴리오에넣어도 괜찮을까요??
2022. 4. 15. 오후 1:06, 빠밤 : 아니면 순수 js만써서 포트폴리오에 넣는게나을까요?
2022. 4. 15. 오후 1:07, 동딩댕동 : 왜 라이브러리로 썼는지, 왜 순수js로 작성하였는지 이유만 명확하다면 뭘 하던지 상관없다고 생각합니다! 
왜 가 제일 중요한거 같거든요..
2022. 4. 15. 오후 1:10, 빠밤 : 저는 단순하게 간단하게 구현할수있는 기능들은 라이브러리로 써서 구현하는게 낫다고판단해서 라이브러리를 사용해서 구현한건데 이게 왜 라이브러리로썻는지에 대한이유로 부적절할까요?
2022. 4. 15. 오후 1:13, 동딩댕동 : 면접관 성향  따라 생각이 다르기 때문에 정답은 없지만, 단순하게 간단하게 구현할 수 있으면 직접 구현하는게 낫지 않나? 라이브러리에 대한 의존성이 늘어나면 유지보수가 어렵지 않나요? 직접 구현하신다면 어떻게 하실건가요? 이런 꼬리질문에 대해서도 자신의 생각을 정리해두신다면 뭐든 좋다고 생각합니다!
2022. 4. 15. 오후 1:13, 동딩댕동 : 이건 반대도 마찬가지인거 같아요. 반대로 직접 구현하셨다면, 이미 라이브러리가 잇는데 왜 만드셨나요? 간단하고 직접 만들수 있다면 항상 만들어 쓰실건가요? 라이브러리를 고른다면 어떤 기준으로 고르실건가요? 이런 대답에 대한
2022. 4. 15. 오후 1:14, 동딩댕동 : 준비가 되어야 하지 않을까 싶네요 ㅎㅎ..
2022. 4. 15. 오후 1:17, 나그네 : 앞서 답변을 워낙 잘해주셨는데요
2022. 4. 15. 오후 1:17, 나그네 : 포트폴리오에 바닐라JS 순수 JS 뭐 이런 강조는 엄청 했는데 막상 코드를 까보면 라이브러리 의존도가 있다?
그러면 지원자분에 대한 신뢰도가 좀 떨어지게 됩니다
2022. 4. 15. 오후 1:19, 나그네 : 포트폴리오 내용 정리할때 주의하시고 라이브러리도 그냥 아무거나 가져다쓴 것이 아닌 고민하고 선택했다는 명확한 근거를 면접 자리에서 설명할 수 있다면 괜찮을거에요!
2022. 4. 15. 오후 1:21, 프론돌이 : 저는 약간 다른 의견이긴 한데요. 
저도 지원자분들 많이 평가하는 입장에서, 
일일이 바닐라로 구현했냐 자체를 중점적으로 보지는 않습니다. 

실제로 업무에서 구현할 떄, 모든걸 바닐라로 하지도 않고, 
있는걸 잘 조합해서 하는 것도 중요하다고 생각해서요. (바퀴는 새로 발명하지 않는다)

내가 표현하려고 하는게, 내가 짜는 것보다 나와있는 것중에서 잘되어 있는게 있으면 그걸 쓰는게 나쁘지 않다고 봅니다. 


그래서, 포트폴리오에서 바닐라로 짰냐 안짰냐는 고려포인트는 아니고 (제 입장에서는)
UI/UX를 고려해서 잘 짰는지, 코드의 구성, 흐름 같은걸 오히려 보게 됩니다. 


하지만, 실제 업무에서 또 라이브러리 없이 바닐라로 직접 만들어야 되는 것도 생기기 마련이니
이런걸 하려면, 바닐라 지식도 풍부해야 되겠죠. 
그래서 이런건 서류단이 아니라 면접단에서 deep하게 물어보는 편입니다.
2022. 4. 15. 오후 1:23, 프론돌이 : 서류에서 나를 최대한 어필해야 되는 목적이라면, 
포트폴리오에서는 이것저것 구현을 하고, 
html, css, js, 그외 cs 지식들 같은건 따로 기술블로그에 적으면서 정리하는 것도 나쁘지 않다고 봅니다!
2022. 4. 15. 오후 1:23, j : 저는 우선 로직 구현을 어떤 포인트에 초점을 두고 짰는가를 찾아보고 물어봤어요.
로직은 여러가지가 있고, 본인이 생각하기에 왜 이 로직을 선택했는지에 대해 얼마나 생각했는가를 좀 중점적으로 보게되더라구요.
2022. 4. 15. 오후 1:24, j : 잘짠 코드 예제는 이미 라이브러리나 API 등 많이 나오니까 그걸 가져다 쓰더라도 어떤 포인트에 초점을 맞춰서 가져와 썼는가.를 설명해도 좋을 것 같아요
2022. 4. 15. 오후 1:25, 프론돌이 : 근데 포트폴리오에 있는 코드를 설명할 기회 / 그거에 대한 질문을 하시나요? 
전 면접에서 한번도 물어본적 없는데. 
따로 과제가 있었으면 모를까. 그건 그냥 참고로만 봤어서
2022. 4. 15. 오후 1:26, 나그네 : 관심없는 회사나 면접관도 있고 커밋 하나하나 다 보고 코드 한줄 한줄 다 물어보는 경우도 꽤나 있더라고요
2022. 4. 15. 오후 1:26, j : 전 깃헙 보고 물어봤어요. 이부분을 이렇게 해결하셨는데 이런 방법 말고 다른 방법은 뭐가 있는지랑 그런거 물어봤어요
2022. 4. 15. 오후 1:26, 나그네 : 사전 과제가 있느냐 지원자가 무엇을 강조하느냐에 따라 다를 것 같아용
2022. 4. 15. 오후 1:27, j : 플젝 레포 커밋내용 보면서 이 부분으로 분담을 많이 하셨고, 해당 파트에서 이 코드를 인상깊게 봤다. 구현 의도를 알고싶다.
2022. 4. 15. 오후 1:27, j : 그런건 관심있는 지원자들에게는 물어봤습니다.
2022. 4. 15. 오후 1:28, j : 깃헙보다가 안구건조증 심화..
2022. 4. 15. 오후 1:29, 프론돌이 : 저도 그래서 과제랑 포트폴리오랑은 약간 결이 다르다고 생각은 해요. 

과제는 주어진 시간내에 얼마나 최적화된 결과/구현을 보여줄 수 있느냐. 
(즉, 잘 했느냐. 질을 따지기)

포트폴리오는 따로 시간이 주어진게 아니라, 그 사람의 평상시 모습을 보여줄 수 있는거니까, 
얼마나 잘했냐도 중요하지만, 얼마나 다양한 경험을 해봤느냐. 
(즉, 많이 해봤느냐. 양을 따지기)

이러한 양을 늘려가면서, 자연스레 개인적으로 퀄리티를 높여가면서 질도 높여갈 수 있는거구요
2022. 4. 15. 오후 1:29, 빠밤 : 다들 좋은답변감사합니다!!!
2022. 4. 15. 오후 1:30, 나그네 : 지원자가 제 포트폴리오를 물어봐주세요!
하고 이력서에 강조하는 경우가 생각보다 많아요 그것이 대상이 될 수 있어요~!
특히 과제 전형이 없다면 더더욱 그럴 수 있고용
2022. 4. 15. 오후 1:31, j : 기술 이론은 자주 나오는 질문들 구글링만해도 나오는지라 포트폴리오 어필도 좋은 방법이네요!
2022. 4. 15. 오후 1:32, 프론돌이 : 평가자 입장에서는 서류가 무수히 오기 때문에 
현실적으로, 과제면, 요구사항이 딱딱 있고, 나름 생각하는 best-case가 있어서
그대로 쭉 생각하다가 아닌거에 대해서 물어보고, 이런게 되는데, 

포트폴리오는 열린 주제기 때문에 위의 것을 할 수는 있지만 일일이 하기에는 무리가 있거든요 ㅋ 
일일이 하게 되면, 야근하면서 서류만 봐야될테니 ㅠㅠ
2022. 4. 15. 오후 1:32, j : 대표적인 몇몇개만 써도 좋더라구요..
2022. 4. 15. 오후 1:32, j : 서류만 보다가 일정 보내기가 수두룩해서
2022. 4. 15. 오후 1:33, 나그네 : 포폴은 정말 1개만 있어도 충분해요ㅎㅎ
2022. 4. 15. 오후 1:33, 프론돌이 : 팀노바 스타일 이력서가 들어왔고 거기에 평시된 포폴 및 github repo가 수십개면...
일일이 안보겠죠? ㅋ
2022. 4. 15. 오후 1:33, 빠밤 : 팀노바 ㅋㅋ
2022. 4. 15. 오후 1:33, 빠밤 : 거기 유명하지않나요..
2022. 4. 15. 오후 1:33, j : 저 안봐요..
2022. 4. 15. 오후 1:34, j : 보다가 끄는 경우도 있어요..
2022. 4. 15. 오후 1:34, 프론돌이 : 블라에서 팀노바 단톡방 포탈 열려서 들어가봤는데
2022. 4. 15. 오후 1:34, 프론돌이 : 어질어질 하더라구요 ㅋ
2022. 4. 15. 오후 1:34, 빠밤 : 거기
2022. 4. 15. 오후 1:34, 프론돌이 : 무슨 종교 단체 같았음 ㅠㅠ
2022. 4. 15. 오후 1:34, j : 팀노바 플젝만 있으면 보다가 포기..
2022. 4. 15. 오후 1:34, 빠밤 : 유명하지않나요?
2022. 4. 15. 오후 1:34, 빠밤 : 다른의미로..
2022. 4. 15. 오후 1:34, 나그네 : 저는 100명 이상의 FE 지원자가 똑같은 코드, 똑같은 포트포리오를 제출해서 모두 서류 불합격 했던 경험이 있네요ㅎㅎ
2022. 4. 15. 오후 1:34, j : 몇명 불러다 물어보고
2022. 4. 15. 오후 1:34, j : 아 주는 코드 그냥 가져다가 썼네하고
2022. 4. 15. 오후 1:34, 빠밤 : ???? 어떻게 그럴수가있나요
2022. 4. 15. 오후 1:34, j : 네
2022. 4. 15. 오후 1:34, j : 많아요..
2022. 4. 15. 오후 1:34, 빠밤 : 클론코딩 강의내용을 포트폴리오로넣은걸까요??
2022. 4. 15. 오후 1:35, 나그네 : 넵 맞아용
2022. 4. 15. 오후 1:35, j : 학원 비하는 아니지만 대체로 포폴만 보다가 학원 구분 되고 그래요..
2022. 4. 15. 오후 1:35, 빠밤 : 클론코딩강의내용을 포트폴리오에넣는경우가있나..
2022. 4. 15. 오후 1:35, j : 많습니다..
2022. 4. 15. 오후 1:35, 나그네 : 클론코딩의 결과물, 코드, 이름조차 다 똑같은데 그걸 대표 프로젝트라고 제출하시더라고용
2022. 4. 15. 오후 1:35, 빠밤 : 아 정말요??
2022. 4. 15. 오후 1:35, 빠밤 : 헉..
2022. 4. 15. 오후 1:35, j : 넵..
2022. 4. 15. 오후 1:35, 빠밤 : 팀노바거기
2022. 4. 15. 오후 1:35, 나그네 : 제가 인턴 채용할때 겪언던 일인걸요 ㅎㅎ
2022. 4. 15. 오후 1:35, 빠밤 : 오키에서 예전글보니까
2022. 4. 15. 오후 1:35, 빠밤 : 장난아니던데요 ㄷ
2022. 4. 15. 오후 1:35, j : 그리고 최종 플젝들 보면 기초 구성은 다 있어요
2022. 4. 15. 오후 1:36, j : 다 같고
2022. 4. 15. 오후 1:36, 빠밤 : 아
2022. 4. 15. 오후 1:36, 나그네 : 저는 팀노바는 아니였고 유명한 클론코딩 유튜브용
2022. 4. 15. 오후 1:36, 빠밤 : 짜여진틀에 조금씩 수정해서 제출하는건가..
2022. 4. 15. 오후 1:36, j : 웹팩 만져봤다고해서 물어보면
2022. 4. 15. 오후 1:36, j : 이 옵션값이 뭔가요 물어보묜
2022. 4. 15. 오후 1:36, j : 모릅니다..
2022. 4. 15. 오후 1:36, 나그네 : 팀노바가 안드로이드만 했었는데
2022. 4. 15. 오후 1:36, 나그네 : 웹도 하나보네요?!
2022. 4. 15. 오후 1:36, 빠밤 : 그분들 문제점이

1. 왜 이렇게 코드를 짰는지 모르고 제출함
2.포트폴리오 내용이 다똑같음

이거맞나요?
2022. 4. 15. 오후 1:36, 프론돌이 : 클론코딩이나 부트캠프 같은 것들이 나쁜건 아닌데, 
아무것도 안한 것보다는 나으니까. 

문제는 그거 한다고 다 자기것이 된게 아니라
자기것이 되게 만드는 시간이 필요한 것 같아요. 
학원 다니면서 따라하는건 누구나 하니까. 
학원 끝나고 나서 얼마나 꾸준히 발전시켜나가느냐!
2022. 4. 15. 오후 1:37, j : 맞습니다!!
2022. 4. 15. 오후 1:37, 프론돌이 : 그래서 그런 부트캠프 출신중에서도 옥이 있습니다! 
옥석을 잘 가려내야
2022. 4. 15. 오후 1:37, 빠밤 : 저도 지금국비중인데
2022. 4. 15. 오후 1:37, j : 그래서 깃헙을 안볼 수 가 없죠..
2022. 4. 15. 오후 1:37, j : 깃헙 보고 개인 플젝 다 보고..
2022. 4. 15. 오후 1:37, j : 학원 플젝 거르고..
2022. 4. 15. 오후 1:37, 빠밤 : 저도 포트폴리오만들때 참고꼭하겠습니다..
2022. 4. 15. 오후 1:38, j : 부트캠프에서 뭘 배웠는데, 이게 난 내껄로 이렇게 만들었어!
2022. 4. 15. 오후 1:38, 빠밤 : 유명부트캠프 ㅇㅋㄷ이런곳도 거의그렇겠죠..?
2022. 4. 15. 오후 1:38, j : 그부분이 중요하죠
2022. 4. 15. 오후 1:38, j : 저도 국비 출신이에요 ㅋㅋㅋㅋ
2022. 4. 15. 오후 1:38, Hardy : 저도 부트캠프 출신인데 다른 부트캠프 보면 아니다 싶은 곳이 있더라고요...
2022. 4. 15. 오후 1:38, 빠밤 : 그래도 거긴 취업은되게잘되는거같던데 뽑은회사들이 포트폴리오 거의다같은걸 알고도 그냥뽑은건가.. 아니면 정말 거기는 여기계신분들말씀대로 스스로 새로운걸 만들어서 낼수도 있을수도있겠네요..
2022. 4. 15. 오후 1:38, 나그네 : 거기는 실전 프로젝트 + 오프라인 + 이력서 포장 이런 강점이 있는 것 같네여
2022. 4. 15. 오후 1:39, j : 후자인경우인거죠
2022. 4. 15. 오후 1:39, 빠밤 : j님도 국비출신이시군요
2022. 4. 15. 오후 1:39, 빠밤 : 본받고갑니다..
2022. 4. 15. 오후 1:39, j : 넵 저 전공 + 국비 수강..
2022. 4. 15. 오후 1:39, 리린이 : 국비도 하향평준화 되어있다고 생각하지만 좋은곳은 좋음,,
2022. 4. 15. 오후 1:40, j : 그러기엔 깃헙이 너무 꺠끘..
2022. 4. 15. 오후 1:40, j : 해서..
2022. 4. 15. 오후 1:40, 빠밤 : 팀노바거기
2022. 4. 15. 오후 1:40, 빠밤 : 실력을좋나요?? 유튜브알고리즘떠서보니까
2022. 4. 15. 오후 1:41, 빠밤 : 대표강사가 수강생들 실력을좋다고 pr하더라구요
2022. 4. 15. 오후 1:42, 나그네 : 평균적인 수준은 존재하긴 하지만 그게 모든 수강생들을 대표하지는 않아요ㅎㅎ
2022. 4. 15. 오후 1:43, j : 진짜 그 안에서 많은걸 배우고 본인 걸로 습득하시는 분들이 있고 아닌 분들도 있고
2022. 4. 15. 오후 1:44, j : 사바사 케바케
2022. 4. 15. 오후 1:46, 나그네 : 요번에 항ㅇㅇ9 광고도 올라오는데 거기도 광고가.. 엄청 파격적이에요
다들 본인 학원 출신은 연봉이 높고 어디서든 잘한다고 포장을 해야 돈을 벌죠 ㅎㅎ
2022. 4. 15. 오후 1:47, 나그네 : 다만 교육기간이 짧고 기수 간의 텀이 적거나 중복 기수가 존재한다면 수강생들을 진심으로 대하기보다는 돈으로 바라볼 가능성이 크죠
2022. 4. 15. 오후 1:47, 나그네 : 그런 학원들을 빠르게 수료시키고 내보내고 빠르게 가르치고 많이 대량으로 뽑고 회전률을 높여야 매출이 높아질 수 밖에 없거든요
2022. 4. 15. 오후 1:48, 빠밤 : 그렇군요..
2022. 4. 15. 오후 1:49, 빠밤 : 많은생각이드네요ㅕ
2022. 4. 15. 오후 1:49, 신입생 : 저는 첫 회사가 b2b를 주로 하는 회사에서 wpf, c#담당으로 다녔었는데, wpf를 하는 개발자가 혼자라, 방향없이 맨땅에서 헤딩했더니, 지금 프론트엔드를 신입으로 준비하면서도, 이 학습 방향이 맞는지 고민하면서 하는데, 늘 이 방 덕분에 좋은 정보들을 배워갑니다 :>
2022. 4. 15. 오후 1:50, 신입생 : 클론코딩으로 학습하면서도, 매번 끝나면 혼자 일렉트론 써서 캘린더도 만들어보고, 심리테스트 사이트도 해보고, 토이프로젝트 하나 씩은 꼭 해보는 타입인데
많은 생각이 드는 주제들이 오가서 감사합니다..
2022. 4. 15. 오후 1:50, 신입생 : 이모티콘 
2022. 4. 15. 오후 2:14, 핸디(강경석) : 파일: 스벨트_당신도_할_수_있다.pdf
2022. 4. 15. 오후 2:14, 핸디(강경석) : 간단한 스벨트 자료라 한번씩 읽어보시면 좋을것같아 공유합니다
2022. 4. 15. 오후 2:20, Kyle : 이건 어디 발표자료인가요?
2022. 4. 15. 오후 2:22, 핸디(강경석) : 어디서 발표한것인지는 확인을 못했지만 스벨트 코리아 커뮤니티에서 공유되었던 자료라고 합니다.
https://open.kakao.com/o/gCi2sKFb
2022. 4. 15. 오후 2:22, 나그네 : 삭제된 메시지입니다. 
2022. 4. 15. 오후 2:22, 나그네 : 웃긴건.. 스벨트 오너가 버셀로 갔습니다 ㅎㅎ
2022. 4. 15. 오후 2:23, Kyle : 오 감사합니당
2022. 4. 15. 오후 2:29, 음악듣는 어피치 : 와 저 스벨트 처음 보는데 혁신이네요
2022. 4. 15. 오후 2:29, 음악듣는 어피치 : 왜 스벨트 스벨트 하는지 알겠어요
2022. 4. 15. 오후 2:29, 음악듣는 어피치 : 버셀 너무 좋아요 ㅎㅎㅎ
2022. 4. 15. 오후 2:29, 박가영 : (절규)
2022. 4. 15. 오후 2:30, 박가영 : 안녕하세오~ 혹시 자바스크립트 연습은 보통 어디서 하시나요..? 독학중이고요!! 
노마드 코드 통해서 강의는 다 들었는데요,  챌린지 중에.. 문제를 하나도 풀수가 없어서요…ㅜ 좀 이런걸 많이 연습해봐야 하는거 같은뎅..ㅠ 책도 이 방에서 추천 많이 해주시는걸 한 두권 사기는 했는데.. 뭘 어떻게 하나 감이 안오네요.
2022. 4. 15. 오후 2:33, 유용태 (teo.yu) : 오오!! 되게 잘 만들었네요 자료 ㅋㅋ
2022. 4. 15. 오후 2:34, 핸디(강경석) : 그쵸!. 저도 피피티형식이라 간단히 보고 있는데 보면 볼수록 좋은 자료라 공유했습니다
2022. 4. 15. 오후 2:34, 유용태 (teo.yu) : JS로 만들어 보고 싶은거 있나요?
2022. 4. 15. 오후 2:35, 박가영 : 프론트로 직군 전향하려고 지금 공부중인 것입니다! 그래서 수업 다듣고 하면 반응형 웹 하나 만들어보고 싶었습니다. 그런데 당장 이벤트 줘서 색바꾸고 하는 간단한 문제도 풀지 못하구있네요 ㅠㅠ ㅎㅎ
2022. 4. 15. 오후 2:37, 유용태 (teo.yu) : 그런 문제를 되도록 찾아 가는게 개발이니까 화이팅입니다
2022. 4. 15. 오후 2:37, 포유 : 노드 오픈채팅방에 하민님이라고 계시는데 그분이 만드신 자료네요 ㅋㅋㅋ
2022. 4. 15. 오후 2:37, 유용태 (teo.yu) : 그러면 해결해야 할 문제를 좀 쪼개서
2022. 4. 15. 오후 2:37, 유용태 (teo.yu) : 하면 펼쳐보세요
2022. 4. 15. 오후 2:37, 유용태 (teo.yu) : 색만 바꿔보기
2022. 4. 15. 오후 2:37, 박가영 : 호엥
2022. 4. 15. 오후 2:37, 유용태 (teo.yu) : 이벤트만 걸어보기
2022. 4. 15. 오후 2:37, 박가영 : 넵넵!!
2022. 4. 15. 오후 2:38, 유용태 (teo.yu) : 하다가 막히면 일단 되는 것 부터 하고
2022. 4. 15. 오후 2:39, 유용태 (teo.yu) : 비어있는 태스크를 한번 적어보고 다시 일단 되는 것 부터 하고
2022. 4. 15. 오후 2:39, 박가영 : ㅎㅎ 넹 ㅠ 의지 가득이였는데..ㅎㅎ 강의 까지 계획대로 완강해서 슝슝~ 해낼줄 알았는데 막상 혼자 해보려니..ㅎㅎ 턱!!..
2022. 4. 15. 오후 2:39, 유용태 (teo.yu) : 그렇게 쪼개가는 것 한번 연습해보세요 일단 되는 샘플에서 조금씩 바꿔보는 것을 추천합니다
2022. 4. 15. 오후 2:39, 박가영 : 넵넵!!! ㅠㅠ 다시 지금 문제부터 해결해봐야겠오요
2022. 4. 15. 오후 2:41, 유용태 (teo.yu) : 절대로 그렇게 될리가 없죠 ㅋ 롤애서 cs잘먹는 법 영상 본다고 갑자기 안 놓치던 cs 잘먹게 되는 건 아니니까 계속 트라이 하면서 막히면 여기다가 물어보세요! ㅎ
2022. 4. 15. 오후 2:42, 박가영 : 넵~!!ㅎㅎ 감사합니다 ㅠㅠ
2022. 4. 15. 오후 2:42, 0_0 : z-index 혹시 어떻게들 관리하시나요..?
저희 1 ~ 99999 까지 난무해서 정리좀 하려고하는데 ㅠㅠ...
2022. 4. 15. 오후 2:42, 유용태 (teo.yu) : 혼자서 고민을 하는 것도 좋은데 개발은 너무 오래 붙잡고 고민하는 것보다는 일단 되는 걸 찾는게 더 나은 곳이라서 화이팅입니다!
2022. 4. 15. 오후 2:43, 0_0 : 찾아보니 https://www.nielskrijger.com/posts/2021-08-29/zindex-with-css-in-js/
이런 함수 만들어서 사용하는 방법도 있더라구요
2022. 4. 15. 오후 2:43, 유용태 (teo.yu) : 저는 :root {

--z--modal: 100;
--z--dropdown: 200;
}
2022. 4. 15. 오후 2:43, 유용태 (teo.yu) : 이런식으로 css variable로 하고 있어요
2022. 4. 15. 오후 2:44, 유용태 (teo.yu) : 오오!
2022. 4. 15. 오후 2:50, 유용태 (teo.yu) : 스벨트가 리액트보다 좋다는 놈들이 있는데
https://www.youtube.com/watch?v=o4HPzbwx_Xk
2022. 4. 15. 오후 2:52, 핸디(강경석) : 제가 가져온 자료도 여기 댓글에도 있습니다.
2022. 4. 15. 오후 2:53, 유용태 (teo.yu) : 아! ㅋ 감사합니다.
2022. 4. 15. 오후 2:53, 나그네 : 여기는 볼때마다... 어그로가 심하네요
컨셉이지만 애매한...
2022. 4. 15. 오후 2:54, 유용태 (teo.yu) : 그래요? 꽤 재밌게 설명잘했다고 생각을 했는데
2022. 4. 15. 오후 2:54, 핸디(강경석) : 저는 그래서 코딩애플님꺼 좋아라합니다 ㅎㅎ컨셉보는 맛도 있는데 짧은 내용에 핵심과 팁이 많이 담겨있었어요
2022. 4. 15. 오후 2:55, 유용태 (teo.yu) : 네~ 저도 짧은 시각에 다 때려박는 컨텐츠와 내용 좋아요. 강의는 안봤습니다.
2022. 4. 15. 오후 2:56, 나그네 : 설명도 잘하고 컨텐츠도 좋고 여러가지로 대단하시지만 오해가 있을만한 어그로 제목이나 멘트가 자주 활용되서 아쉽더라고요ㅠㅠ
2022. 4. 15. 오후 2:56, 유용태 (teo.yu) : 그렇군요... 아무래도 조회수 때문에 그런거겠죠?
2022. 4. 15. 오후 2:58, 조조 : 제목은 좀 자극적인데 내용은 임팩트하고 좋네요 ㅎㅎ
2022. 4. 15. 오후 2:59, 나그네 : 맞아용
저번에 어떤 강연때 앵귤러 비하한다고 엄청 민감해하시는 분들도 계셨는데 조심스럽긴하더라고요ㅋㅋ
자꾸 이것만 배우면 됨
다른 건 몰라도 됨
MDN 문서 어려워서 안봐도 됨 이런 것들?
2022. 4. 15. 오후 2:59, 나그네 : 이래도 되나? 그냥 혼자 끄적끄적 생각했던 것들이 있었습니다 ㅎㅎ
2022. 4. 15. 오후 3:22, 민석 : 그래도 mdn 은 너무 사랑해요 ㅜㅠ
2022. 4. 15. 오후 3:23, 민석 : 어떤 메서드에도 mdn 을 붙이면 답해주는 스윗한 분,,,
2022. 4. 15. 오후 3:23, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
2022. 4. 15. 오후 3:24, 프론돌이 : 우아한테크세미나 1월달꺼 말씀하시는듯? ㅋ
2022. 4. 15. 오후 3:26, 나그네 : 맞아요 ㅋㅋ그때 누가 앵귤러 비난한다고 엄청 강하게 따지셔서 분위기가..
2022. 4. 15. 오후 3:28, 프론돌이 : 무심코 던진돌에 개구리가 죽은꼴이긴 했는데, 
그래서 말, 글 이라는게 참 조심스러운 것 같아요. ㅜ
2022. 4. 15. 오후 3:28, 프론돌이 : 그래도 2부 시작하면서 사과 멘트로 시작하시면서 진화는 되었던듯
2022. 4. 15. 오후 3:51, 설아아빠 : 마무리가 재미있네용 ㅎ
2022. 4. 15. 오후 5:35: JS척척박사가꿈님이 들어왔습니다.
2022. 4. 15. 오후 5:35, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 15. 오후 5:47, 유용태 (teo.yu) : JS척척박사가꿈님~ ㅋㅋ 반갑습니다 닉네임이 인상깊네요 ㅎ
2022. 4. 15. 오후 5:49, JS척척박사가꿈 : 안녕하세요 ㅎㅎ 잘부탁드립니다~!!!
2022. 4. 15. 오후 5:55, 유용태 (teo.yu) : 네! 언제든 궁금한거 있으면 글 남겨주세요. JS든 뭐든 해보고 부딫이고 물어보고 답하는게 큰 성장이 됩니다. ㅎ
2022. 4. 15. 오후 5:56: 정충일 [FLAG 회장]님이 들어왔습니다.
2022. 4. 15. 오후 5:56, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 15. 오후 6:00, 유용태 (teo.yu) : 안녕하세요 42311님~~ 반갑습니다 :)
2022. 4. 15. 오후 6:00, 정충일 [FLAG 회장] : 안녕하세요
2022. 4. 15. 오후 6:00, 유용태 (teo.yu) : 네! 안녕하세요~
2022. 4. 15. 오후 6:01, 유용태 (teo.yu) : 여기는 프론트엔드에 대해서 아니면 다른 개발자들이나 다른 취준생이나 공부하는 사람들 모두 서로 궁금한것을 묻고 또 답하면서 함께 성장하고자 만든 공간입니다 ㅎ
2022. 4. 15. 오후 6:01, 유용태 (teo.yu) : 언제든 편하게 글 남겨주세요~ ㅎ
2022. 4. 15. 오후 6:01, 정충일 [FLAG 회장] : 프론트엔드에서 MV* 아키텍쳐란 무엇인가요? 글 읽고 왔어요! 너무 좋은 글 감사합니다 ㅎㅎ
2022. 4. 15. 오후 6:02, 유용태 (teo.yu) : 감사합니다! ㅎ 여기서 나오는 질문중에서도 호흡을 좀 길게 쓰면 좋다고 싶은 것들을 블로그 소재로 쓰고 있어요 ㅎㅎ
2022. 4. 15. 오후 6:02, 유용태 (teo.yu) : 제 블로그 글(?)로 보고 싶은 주제가 있다면 또 제안주시면 너무 너무 감사하겠습니다.
2022. 4. 15. 오후 6:05, 정충일 [FLAG 회장] : 혹시 용태님이 해석한 hook에 대한 글도 따로 있을까요?
2022. 4. 15. 오후 6:05, 유용태 (teo.yu) : 오~ 아니요는 react를 실무에서 쓰고 있지 않아서 react 관련 글은 아직 하나도 써보지 않았습니다.
2022. 4. 15. 오후 6:05, 유용태 (teo.yu) : hook에 대한 해석 소재 keep 해두고 글 쓰게 되면 공유 해볼게요~
2022. 4. 15. 오후 6:06, 유용태 (teo.yu) : hook에 대한 해석이라면 어떤 구체적인 질문이나 궁금증이 있나요? ㅎ
2022. 4. 15. 오후 6:06, 유용태 (teo.yu) : +_+
2022. 4. 15. 오후 6:07, 정충일 [FLAG 회장] : 음
2022. 4. 15. 오후 6:08, 정충일 [FLAG 회장] : 제가 웹에 접한지 얼마 안 되어서 class 문법을 잘 모르는데 class에 대해서 가볍게 짚고 그 한계와 hook이 나온 배경

class -> hook으로 변경되면서 class의 어떠한 기능이 hook에 어떻게 담겼는지

또한 그 hook 기능 (useEffect 등..)에서 유의해야할 사항이나 가장 큰 장점 등에 대해

용태님이 해석한 글을 보고싶네요..! MV*관련 글이 너무 좋아서 반했습니다.
2022. 4. 15. 오후 6:10, 유용태 (teo.yu) : 우와! 글 다 써주셨네요. ㅋㅋ 감사합니다 네! 알곘습니다 :)
2022. 4. 15. 오후 6:37, JS척척박사가꿈 : 안녕하세요 프론트엔드 테스트 코드 작성에 대해 고민이 많습니다.

팀에서 (프론트엔드 개발자 3명) 테스트 코드 도입을 고려하고있는데, 오히려 테스트 코드 작성에서 병목이생겨 생산성이 저하되지는 않을까 하는 고민도 있습니다 ㅠㅠ 

테스트코드 작성의 목적은 품질 향상인데 오히려 주객전도 되는 현상이 발생할까 우려됩니다. 

이에 대해 태오님의 의견이 궁금합니다
2022. 4. 15. 오후 6:41, 유용태 (teo.yu) : 맞습니다. ㅠㅠ 사실 테스트 코드 작성은 프론트엔드에서는 참 어려운 존재입니다
2022. 4. 15. 오후 6:42, 리린이 : 저도 항상 고민입니다.ㅎ
2022. 4. 15. 오후 6:42, 정충일 [FLAG 회장] : 저두용
2022. 4. 15. 오후 6:43, 유용태 (teo.yu) : 제가 예전에도 답한게 있어서 찾는 중인데
2022. 4. 15. 오후 6:43, 유용태 (teo.yu) : 일단 저는 테스트코드를 아직은 도입을 하고 있지 않습니다.
2022. 4. 15. 오후 6:43, 유용태 (teo.yu) : 프로젝트 초기기도 하고 실제 FE 개발이 2명(1명은 마크업)이기도 하고
2022. 4. 15. 오후 6:45, 유용태 (teo.yu) : 사진
2022. 4. 15. 오후 6:45, 유용태 (teo.yu) : 사진
2022. 4. 15. 오후 6:45, 유용태 (teo.yu) : 저희 팀 내부에서도 설왕설래 하는 부분입니다. 프론트 테스트가 의미가 있나?

오후 4:18
분명이 이론상 그리고 경험상 필요한데

오후 4:19
*분명히

오후 4:19
그정도의 효용체감을 느낄만한 테스트를 작성하는 비용이 너무 비싸서 되려 비효율을 야기하지 않나 정도가 중론인데

오후 4:20
그래서 방법을 찾아야 한다! 각자 찾게 되면 꼭 공유하자

오후 4:20
이정도로 논의 해본 적이 있어서 상당히 궁금하네요!

오후 4:20
•‿•
개발닥
테오님은 어떻게 생각하시나여?

오후 4:23
•‿•
유용태 (teo.yu)
제 생각도 동일합니다. 테스트는 확실히 필요한것은 맞는데 현존하는 유닛 테스트 건 e2e 테스트건 프론트엔드와 궁합은 별로 좋지 않은 것 같다

오후 4:24
Jest와 같은 류는 대부분 Node 기반으로 이루어져 있다보니 테스트를 작성하면서 개발을 한다는 TDD를 쓰기에도 브라우저 개발하고는 좀 맞지 않는 측면이 있구요 (콘솔이나 화면 구성에 불리함)

오후 4:25
그리고 REST API를 주축으로 서버와의 통신 이후 벌어지는 비동기로 엮이는 종속성들이 가장 큰 이슈인데 이걸 테스트 하기 위해서는 mock를 범벅해야 하는데 테스트의 신뢰도 문제가 있고

오후 4:26
정작 이러한 테스트들이 UI 이슈를 검증해 주지 못한다는 문제가 있어서

오후 4:26
실제 현장에서 느끼는 필요성을 충족시켜주는 테스트 도구나 TDD 개발 방법이 아직은 킬러도구가 프론트엔드에는 없다라는 생각입니다
2022. 4. 15. 오후 6:46, 유용태 (teo.yu) : 예전에 적었던 제 테스트 입장인데요. 유닛 테스트는 옛날 개발(?) 웹으로 치면 백엔드 쪽에 더 포커싱을 둔 것이고
2022. 4. 15. 오후 6:47, 유용태 (teo.yu) : 지금 UI를 어떻게 하면 테스트하는게 좋을지에 대해서는 아직 이게 너무 좋다 하는 방법이 아직은 없는 것 같습니다.
2022. 4. 15. 오후 6:47, 유용태 (teo.yu) : 그나마 스냅샷테스트가 있기는 한데
2022. 4. 15. 오후 6:47, 유용태 (teo.yu) : 그것도 개발 중에는 그렇게 도움이 안되기 때문에
2022. 4. 15. 오후 6:47, 유용태 (teo.yu) : 볼륨이 커지고 나면 테스트의 필요성을 느끼게 되는게 (과감한 리팩토링에 대한 부분이라던가) 그때 하려고 하면 솔직히 안되는거라서
2022. 4. 15. 오후 6:48, 유용태 (teo.yu) : 제가 생각하는 이상향은 테스트 코드를 개발하는게 곧 개발이 되는 형태의 TDD 이자 상태관리 이자 라이브러리 인 형태가 제일 좋지 않을까 생각을 합니다.
2022. 4. 15. 오후 6:49, 유용태 (teo.yu) : 시도는 해보시되 주객전도가 되서는 절대 안된다고 생각을 해서 팀 볼륨이 커지면 테스트만 작성을 하는 담당자를 둬볼까? 생각을 하고 있습니다.
2022. 4. 15. 오후 6:49, 유용태 (teo.yu) : TDD에서도 테스트를 짜는 사람은 요구사항을 Task를 Test 코드 형태로 전달하게 되고 개발하는 사람은 그 테스트를 통과하도록 하는 방법론이 있는데 흥미는 있지만 혼자서 테스트하고 개발하고 검증하는 것은 조금 힘들지 않나 생각을 합니다.
2022. 4. 15. 오후 6:50, 유용태 (teo.yu) : 케바케라 제 의견이 절대 정답이 아니므로 참고만 해주세요~
2022. 4. 15. 오후 6:51, 유용태 (teo.yu) : 사진
2022. 4. 15. 오후 6:51, 유용태 (teo.yu) : 프론트엔드 테스팅의 딜레마가 여기서 시작하는데 

1) 무엇을 테스트 해야 하는가? -> 동작과 부수효과

=> 부수효과는 이론적으로 테스트가 불가능함.
=> mock 데이터가 필수적으로 필요함.
=> mock 데이터를 테스트하는것을 신뢰 할 수 있나요?

1) 무엇을 테스트 하지 않을 것인가?
- 컴포넌트들이 제대로 합성되는가
- 컴포넌트들이 화면에 제대로 렌더링 되는가
- 컴포넌트에 어떠한 동작을 했을 때, 무엇인가 트리거가 되는가

=> 실제로 QA분들이 제일 많이 테스트를 하고 유의미하게 보고 계시는 것들.. (클릭했을때 펼접이 잘되나 데이터는 잘 보이나.. 잘리는 것은 없나...)
2022. 4. 15. 오후 6:51, JS척척박사가꿈 : 와 감사합니다!! 테스트를 하는 목적과 효용성에 내부적으로 잘 협의해봐야겟네요..
2022. 4. 15. 오후 6:52, JS척척박사가꿈 : 그냥 개발을 빨리하고 qa를 할 시간을 늘리고 리팩토링하는게 제품품질을 높이는데 더 도움이 되지않나 하는 생각도있었는데
2022. 4. 15. 오후 6:52, JS척척박사가꿈 : 좋은 의견 감사합니다..!
2022. 4. 15. 오후 6:53, 유용태 (teo.yu) : https://www.youtube.com/watch?v=9AUEfGZslmw
2022. 4. 15. 오후 6:53, 유용태 (teo.yu) : 배민에서도 풀 테스트 보다는 결제같은 리스크가 높은 주요로직만 자동화를 한다고 하더라구요~
2022. 4. 15. 오후 6:57, JS척척박사가꿈 : 네 프론트환경에 찰떡궁합인 테스팅 툴이 나오면 좋겠네요 ㅠㅠ 친절한 답변 정말 감사합니다 🤗
2022. 4. 15. 오후 7:01, 유용태 (teo.yu) : 스프린트 피그마 권한 추가했습니다 깜빡했네요~
2022. 4. 15. 오후 7:02, 유용태 (teo.yu) : 그러게요~ 언젠가 본격 테스트가 필요한 시점이 오면 공유드려볼게요 ㅎ
2022. 4. 15. 오후 7:04, 프론트 공부 : 저는 간단하게 bdd 테스트만 진행하고있어요
2022. 4. 15. 오후 7:05, 프론트 공부 : 근데 팀원분들중에 저만 하는거라.. 의미는크게없는거같긴합니다ㅠ
2022. 4. 15. 오후 7:15, 유용태 (teo.yu) : 저는 bdd를 오히려 기획단계에서 쓰니까 좋더라구요 기획자들한테 전파중입니다 ㅋ
2022. 4. 15. 오후 7:21, 훌온텐드 : bdd 하니 프로게이머 생각나네요 ㅎㅎ
2022. 4. 15. 오후 8:06, 부끄러워하는 라이언 : 리덕스랑 리덕스 사가를 어떻게 공부하면 좋을까요? 구글링하면서 보고 있는데 공식문서를 보고 공부하는 것도 약간 어렵네요 🥲
2022. 4. 15. 오후 8:06, 부끄러워하는 라이언 : 약간 뺄게요…
2022. 4. 15. 오후 8:07, 유용태 (teo.yu) : redux는 지금 살짝 사양길이라서 배우는 목적이 어디에 있나요?
2022. 4. 15. 오후 8:16, 부끄러워하는 라이언 : 저는 지금 취준생인데 채용공고 중 여러 곳에서 상태관리시스템을 써본 적이 있냐고 물어보더라고요. 프로젝트 하면서 컴포넌트를 많이 사용할수록 자식 컴포넌트 끝까지 props를 넘겨주는 경험을 해봐서 필요성을 완전 못 느끼는 거는 아닌데, 배우는 게 너무 어려워서 갈피를 못잡고 있습니다 😭
2022. 4. 15. 오후 8:16, 김동현 : recoil 을 가장 많이 씁니다!
2022. 4. 15. 오후 8:17, 김동현 : 제가 느끼는트랜드로는?
2022. 4. 15. 오후 8:17, 유용태 (teo.yu) : 그쵸 지금은 react-query와 recoil조합이 제일 무난해서
2022. 4. 15. 오후 8:17, 넉스트 : 들어보면 요즘 리액트쿼리도 많이 전환하는거같아요!
2022. 4. 15. 오후 8:17, 넉스트 : 오!
2022. 4. 15. 오후 8:17, 핸디(강경석) : redux가 어렵다고 느끼신다면 react의 context api 또는 recoil한번 써보세요
2022. 4. 15. 오후 8:17, 부끄러워하는 라이언 : 오!
2022. 4. 15. 오후 8:17, 유용태 (teo.yu) : 그 둘을 배우고 상태관리를 하고 있다고 하셔도 됩니다
2022. 4. 15. 오후 8:18, 프론돌이 : 사진
2022. 4. 15. 오후 8:18, 프론돌이 : redux 선호자로서 반론을 펼칩니다! ㅋ
2022. 4. 15. 오후 8:18, 유용태 (teo.yu) : 다만 redux는 상태관리늬 약간 교과서? 그런 느낌이라서 이런에 대해서는 알고는 계시면 좋을 것 같아요
2022. 4. 15. 오후 8:18, 프론돌이 : 사양길이라기 보다는 전에는 상태 관리 하면 redux가 압도적 원탑이었고 다른 대체제가 별로 없었는데
지금은 조금 더 편한 대체제가 생긴 상태라,  
이것저것 선택하시기는 해요
2022. 4. 15. 오후 8:18, 유용태 (teo.yu) : 통계는 인정합니다 ㅋ 상태관리라는 개념을 만든 라이브러리라서 개국공신이뇨 ㅋ
2022. 4. 15. 오후 8:19, 유용태 (teo.yu) : 이죠*
2022. 4. 15. 오후 8:19, 프론돌이 : redux의 치명적인 단점은 주렁주렁 달린 코드가 많다. 귀찮다, (상대적으로) 어렵다 인데 
이거 극복하고 쓰면,  개인적으로는 제일 깔끔해서 좋긴 했어요. 
react의 철학과도 어울리고 FP 스럽게 잘 할 수 있어서요
2022. 4. 15. 오후 8:19, JS척척박사가꿈 : 저는 redux 랑 recoil 중에 고민하다가 redux toolkit이 주는 보일러플레이트의 안정감이 좋아서 리덕스를 선택햇습니다..
2022. 4. 15. 오후 8:19, 프론돌이 : recoil은 아직 1.0을 안찍어서 선뜻 선택하기는 망설여지긴 하죠. 저도 스터디용으론 가져가고 있습니다.
2022. 4. 15. 오후 8:20, 프론돌이 : (이렇게 말했지만 현재 팀의 실무는 mobx입니다 ㅠㅠ)
2022. 4. 15. 오후 8:20, 부끄러워하는 라이언 : 많은 분들 답변 감사합니다:) redux와 redux-thunk, saga는 무슨 차이가 있나요?
2022. 4. 15. 오후 8:21, 프론돌이 : redux, mobx, recoil, jotai 이런게 상태 관리하는거고 

redux-thunk와 redux-saga는 앞에 redux가 붙었으니...

redux에서 쓰는 미들웨어 입니다. 

redux-thunk의 경우는 실제 코드가 10줄 정도 되었나? 매우 간단해서 한번 뜯어보셔도 좋아요 ㅋ
2022. 4. 15. 오후 8:21, 유용태 (teo.yu) : 사진
2022. 4. 15. 오후 8:22, 부끄러워하는 라이언 : 용태님께서 반론을 제기하러 오셨군요….ㅋㅋㅋㅋㅋ
2022. 4. 15. 오후 8:22, 프론돌이 : 테오님 말씀하신 것도 맞아요 ㅋ  예전보다 대체제가 더 생겨진거니까 ㅜ
2022. 4. 15. 오후 8:22, 프론돌이 : 근데 저 그래프에서도 보시면 아시겠지만 상태 관리에선 아직 1등 입니다 ㅋ
2022. 4. 15. 오후 8:22, 유용태 (teo.yu) : 사양길은 워딩이 너무 쏀것 같아요 정정합니다. 만족도가 점점 떨어지고 있어서 대체제를 찾으려고 하는데 redux때 만큼의 원탑이 있는 것은 아닌 상황이긴 합니다
2022. 4. 15. 오후 8:22, 유용태 (teo.yu) : 그건 맞아요 절대 부정하지 않습니다. ㅎ
2022. 4. 15. 오후 8:22, 나그네 : vuex라…
2022. 4. 15. 오후 8:23, 유용태 (teo.yu) : 특히 현업에서는 아직 쟁쟁해서 지금 취준이랑 학습을 하신다고 하면 1~2년이 더 지날거라서
2022. 4. 15. 오후 8:23, 유용태 (teo.yu) : 기대주에 투자할지 고배당주에 투자할지는 본인 선택이죠 ㅎ
2022. 4. 15. 오후 8:23, 프론돌이 : 아까 정도의 워딩 나쁘지 않다고 생각합니다 ㅋ  그냥 제가 좋아하는거 나와서 저도 그냥 말해본거라 ㅋ
2022. 4. 15. 오후 8:23, 프론돌이 : 전 redux를 좋아하게 된계기가,   그동안의 OOP 위주의 프로그래밍 패러다임을 저게 어느정도 체계적으로 잘 깨준 느낌이라서 -_-?
2022. 4. 15. 오후 8:23, 프론돌이 : 거기에서 좀 번쩍 했네요
2022. 4. 15. 오후 8:24, 유용태 (teo.yu) : redux는 thunk는 Promise(resolve => {}) 정도 같은 느낌이라서 금방 배우실거구요
2022. 4. 15. 오후 8:24, 프론돌이 : 근데 저도 vue 쓸 때는 vuex 밖에 못본 것 같은데, 

vue 상태 관리는 vuex 말고 다른게 없나요?
2022. 4. 15. 오후 8:25, 포유 : redux도 toolkit 쓰고 전역상태만 관리하면 하면 코드 그리 많진 않아용 saga 가 넘 코드가 많아서 좀.. 별로
2022. 4. 15. 오후 8:25, 유용태 (teo.yu) : saga는 호불호가 갈리는데 generator와 yield가 주류가 문법이 아니다보니까 코드 가독성이 아는 사람과 모르는 사람간의 격차가 너무 커서
2022. 4. 15. 오후 8:25, 프론돌이 : 맞아요. 그것도 하나의 장벽으로 존재하죠 ㅜ
2022. 4. 15. 오후 8:25, 부끄러워하는 라이언 : 맞아요 외계어 같다는 말도 들어봤어요 ㅋㅋ
2022. 4. 15. 오후 8:25, 유용태 (teo.yu) : 팀 전체가 saga가 좋다면 좋고 아니라면 무난하기는 힘든 거라서
2022. 4. 15. 오후 8:26, 프론돌이 : 근데, 애초에 vue vs react에서도 러닝커브로 조금의 장벽이 있는 것처럼 
thunk vs saga도 비슷한 궤로 보면, 
어차피 러닝커브 넘어서 쓰는거면 saga에 한표이긴 합니다. 코드가 더 깔끔해져서. 비동기 처리도 편하고
2022. 4. 15. 오후 8:26, 나그네 : 리덕스 팀도 그걸 알고 RTK에 엄청나게 공을 들이고 있죠
2022. 4. 15. 오후 8:26, 나그네 : React Query의 유사품 RTK Query까지.....
2022. 4. 15. 오후 8:26, 유용태 (teo.yu) : 그쵸 작정하고 넘어간다면... saga 괜찮을 수도 있습니다.
2022. 4. 15. 오후 8:26, 유용태 (teo.yu) : 일단 react-query는 결이 달라서
2022. 4. 15. 오후 8:27, 유용태 (teo.yu) : 그냥 react쪽에서는 REST를 다룰때 업계표준이 될 가능성이 높다고 봅니다 일단 대체제가 딱히 없는데 패러다임 쉬프트도 한 케이스라서
2022. 4. 15. 오후 8:27, 유용태 (teo.yu) : 생각보다 graphQL이 흥행하지 못했고
2022. 4. 15. 오후 8:27, 프론돌이 : recoil 같은 경우도 페북에서 공식적으로 만드는만큼, 
추후에는 recoil로 많이 흡수될 것 같아요.   

거기에 테오님이 말씀하신 react-query나 swr
2022. 4. 15. 오후 8:28, 유용태 (teo.yu) : recoil은 안 할수가 없는게 외부 라이브러리가 아니라 React에서 만든 거라서 Context처럼 그냥 알기는 해야하는 거
2022. 4. 15. 오후 8:28, 유용태 (teo.yu) : 찌찌뽕!
2022. 4. 15. 오후 8:28, 프론돌이 : next를 쓰게 된다면 같은 회사에서 만드는 swr을 쓰는게 더 낫지도 않나? 라는 생각도 조금은 있는데
2022. 4. 15. 오후 8:28, 프론돌이 : 아직 이거에 대한 결론은 안내려서;
2022. 4. 15. 오후 8:28, 유용태 (teo.yu) : swr이 근데 react-query에 좀 밀리는 추세입니다. 인지도 면에서
2022. 4. 15. 오후 8:28, 유용태 (teo.yu) : react-query가 너무 성장해버렸어요 ㅠ
2022. 4. 15. 오후 8:28, 나그네 : swr쓰기에는 Query..가 너무 컸어요
2022. 4. 15. 오후 8:28, 프론돌이 : 맞아요~  그래서 next라는 전제를 달았지요.   둘다 같은 회사에서 만든거다보니
2022. 4. 15. 오후 8:28, 최민석 : Jotai는 안쓰시나요?
2022. 4. 15. 오후 8:28, 떨고있는 어피치 : https://react-query.tanstack.com/comparison
2022. 4. 15. 오후 8:29, 프론돌이 : next가 아니라면 react-query가 무조건 일 것 같고
2022. 4. 15. 오후 8:29, 떨고있는 어피치 : react Query에서 대놓고…비교를 해뒀더라구여
2022. 4. 15. 오후 8:29, 떨고있는 어피치 : (우리가 짱이다)
2022. 4. 15. 오후 8:29, 유용태 (teo.yu) : jotai나 zustand는 뭔가 엔터프라이즈 레벨에서
2022. 4. 15. 오후 8:29, 프론돌이 : next라면, 아무래도 같은 회사에서 만든게 뭔가 더 낫지 않을 수도 있지 않을까? 생각만 해봤습니다. 결론은 아니었고 ㅋ
2022. 4. 15. 오후 8:29, 유용태 (teo.yu) : 좀 신중한 느낌이랄까요?
2022. 4. 15. 오후 8:29, 나그네 : 저도 몇년전에는 비슷하게 생각했던 1인입니다 ㅋㅋ
2022. 4. 15. 오후 8:29, 유용태 (teo.yu) : 뭔가 표준 1티어가 아니라서... 언제가는 바뀔지도 몰라.. 같은 느낌? jotai 하는 개발자를 구할수 있을까?
2022. 4. 15. 오후 8:30, 유용태 (teo.yu) : 이런 우려...
2022. 4. 15. 오후 8:30, 나그네 : 폭풍 성장 +  Suspense 조화가 고내찮아요
2022. 4. 15. 오후 8:30, 프론돌이 : 몇년전에도 swr을 써보셨었나요?
2022. 4. 15. 오후 8:30, 나그네 : 넵넵 저는 GET 하는 상태만 따로 쓰는걸 선호해요
2022. 4. 15. 오후 8:30, 프론돌이 : 맞아요.   옛날의 prototype.js,   backbone, 이런거 쓰는 느낌 ㅡㅡ?
2022. 4. 15. 오후 8:30, 나그네 : 그런걸 섞어서 사용했어용
2022. 4. 15. 오후 8:30, 프론돌이 : 나그네님의 지금 결론은 뭔가요?   next 쓸 때  react-query가 낫다.  swr이 낫다?
2022. 4. 15. 오후 8:30, 유용태 (teo.yu) : 그쵸.. 그래서 대다수가 배우고 있는게 결국 그게 좋든 싫든 많이 쓰게 되는거로 되는 것 같아요
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : Java가 그랬고 React가 그랬고
2022. 4. 15. 오후 8:31, 나그네 : 무조건 Query 죵
2022. 4. 15. 오후 8:31, 프론돌이 : 테오님 리액트로 오시나요...?
2022. 4. 15. 오후 8:31, 정충일 [FLAG 회장] : 오우.. 상태관리에 대한 고찰들 너무 귀한ㅔ요….
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : 아뇨. ㅋㅋ 당분간은 svelte 계속 할 것 같아요
2022. 4. 15. 오후 8:31, 프론돌이 : ㅋㅋㅋㅋㅋ
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : React는 아직 찍먹중입니다 ㅋ
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : 안한다고 하면 안될것 같아서요 ㅠ
2022. 4. 15. 오후 8:31, 프론돌이 : 그래도 먹고는 계시는군요 !
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : 네~
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : 그럼요
2022. 4. 15. 오후 8:31, 유용태 (teo.yu) : 다 한번씩은 해보고 있어요. jotai건 zustnad건 react-query건
2022. 4. 15. 오후 8:31, 프론돌이 : 나그네님이 몇년전부터 고민하셨던거에 결론이 react-query면 

저도 next 쓰게 되더라도 굳이 swr을 고려 안해봐도 되겠네요!
2022. 4. 15. 오후 8:32, 유용태 (teo.yu) : 다만 실무에서 안쓰니까 실무에서 발생하는 그런 경험담(?) 같은게 없어서
2022. 4. 15. 오후 8:32, 유용태 (teo.yu) : 대화에 잘 못끼어요 ㅠ
2022. 4. 15. 오후 8:32, 프론돌이 : ㅠㅠ
2022. 4. 15. 오후 8:32, 나그네 : 기술의 성숙도도 중요하지만 생태계의 크기를 무시못하죠..
2022. 4. 15. 오후 8:33, 프론돌이 : 아까 saga thunk 얘기 나와서 링크 하나 투척합니다.
https://www.youtube.com/watch?v=UxpREAHZ7Ck
2022. 4. 15. 오후 8:34, 부끄러워하는 라이언 : 많은 분들 의견 정말 감사합니다! 영상도 볼게요 하하
2022. 4. 15. 오후 8:37, 핸디(강경석) : 오늘도 많이 배웠습니다.
2022. 4. 15. 오후 8:38, 프론돌이 : rxjs는 아직 안써봤는데 어떨지 궁금하네요...
2022. 4. 15. 오후 8:38, 프론돌이 : 앵귤러에서는 많이 쓰는 것 같은데, 다른쪽은 아니어서 아직 찍먹도 못해본...
2022. 4. 15. 오후 8:43, 유용태 (teo.yu) : 저는 svelte 상태관리는 rxjs랑 엮어서 쓰고 있어요
2022. 4. 15. 오후 8:43, 프론돌이 : 오! 스벨트도 rxjs로 하는군요!
2022. 4. 15. 오후 8:44, 유용태 (teo.yu) : 둘의 궁합은 정말 좋습니다
2022. 4. 15. 오후 8:44, 유용태 (teo.yu) : 다만 rxjs자체가 허들이 높아서
2022. 4. 15. 오후 8:44, 프론돌이 : ㅜㅜ
2022. 4. 15. 오후 8:45, 유용태 (teo.yu) : 사실 rxjs도 알면 어렵지 않은데 선언적 함수형 반응형 프로그래밍 패러다임을 금방 와닿지 않으시더라구요
2022. 4. 15. 오후 8:47, 프론돌이 : 언젠가 꼭 배워보고 싶습니다 !
2022. 4. 15. 오후 8:47, 유용태 (teo.yu) : 정확히 다시 말하면 rxjs는 어렵지 않은데 operator가 너무 많아서 진입장벽을 엄청 높여놨는데 비주류다보니 차근차근 배울만한 가이드나 강의가 부족하고
2022. 4. 15. 오후 8:48, 유용태 (teo.yu) : 애써배워둬도 이게 덩치가 커지거나 복잡한 비동기 로직에서 빛을 발하는 녀석인데 그냥 강의 수준이나 실습 수준에서는 더 상황을 어렵게 만들다보니 이럴거면 이걸 왜 써? 이렇게 되는 악순환입니다 ㅋㅋ
2022. 4. 15. 오후 8:49, 유용태 (teo.yu) : 원하시면 알려드릴게요! ㅎㅎ
2022. 4. 15. 오후 8:49, 정충일 [FLAG 회장] : 저는 인생을 알려주세요
2022. 4. 15. 오후 8:49, 유용태 (teo.yu) : ㅋㅋㅋㅋㅋㅋ
2022. 4. 15. 오후 8:50, 유용태 (teo.yu) : 무엇이 고민인가요?
2022. 4. 15. 오후 8:54, 정충일 [FLAG 회장] : ㅎㅎ장난입니다. 용태님 진짜 개발을 사랑하시는게 느껴져서 너무 좋아요
2022. 4. 15. 오후 8:55, 유용태 (teo.yu) : 개발자들이 다 그렇죠 뭐 ㅋㅋ 괜히 너드겠습니까? ㅋㅋ
2022. 4. 15. 오후 9:29, 남대영 : 여러분 외국 기술트렌드 같은거 어디서보시나요?
2022. 4. 15. 오후 9:45, 훌온텐드 : 구글검색해보면 많이 나옵니다.. ex)web frontend trend
2022. 4. 15. 오후 9:53, 나그네 : dev.to
2022. 4. 15. 오후 9:53, 나그네 : medium
2022. 4. 15. 오후 9:53, 나그네 : github trends
2022. 4. 15. 오후 9:53, 나그네 : 요런 것들만 구독하고 있어도 충분합니다!
2022. 4. 15. 오후 9:54, Frontend Engineer : 오늘 dev 커뮤니티 가입했습니다
2022. 4. 15. 오후 9:54, Frontend Engineer : 종종 들어가보려구요
2022. 4. 15. 오후 9:55, 나그네 : 들어가실 필요는 없고
2022. 4. 15. 오후 9:55, 빠밤 : 사진
2022. 4. 15. 오후 9:55, 나그네 : 위클리 + 먼슬리 구독해놓으면 지겨울정도로 메일옵니다 ㅎㅎ
2022. 4. 15. 오후 9:57, 빠밤 : 안녕하세요 인프런 클론코딩해보고있는데요 제가 hover로 강의 로드맵 이런식의 태그에 마우스되면 사진처럼 블록이나오도록 css를 설정했습니다

문제는 처음에는 위의 블록을 Opacity:0으로하고 hover될때 opacity:1로 하는식으로 css를작성했는데 opacity:1이되면 위의 사진처럼 배경에 겹쳐서나옵니다.. 이럴때는 어떻게 설정을하는게맞을까요?
2022. 4. 15. 오후 9:57, 빠밤 : 사진
2022. 4. 15. 오후 9:57, 빠밤 : 사진
2022. 4. 15. 오후 9:57, 빠밤 : 이게 제가구현하려는모습입니ㅏㄷ
2022. 4. 15. 오후 10:03, 프린이 : z-index 가 궁금하네용
2022. 4. 15. 오후 10:07, 빠밤 : 앗 z-index쓰니까 됐습니다 감사합니다
2022. 4. 15. 오후 10:08, 빠밤 : 저는 z-index값이 작을수록 위로오는줄알았는데 반대로알고있었네요..
2022. 4. 15. 오후 10:51, 프론돌이 : https://frontendfoc.us
여기도 메일링!
2022. 4. 15. 오후 11:00, 유용태 (teo.yu) : 제가 항상 추천해드리는 https://bestofjs.org/ 도 가끔 들어가시면 좋아요
2022. 4. 15. 오후 11:00, 유용태 (teo.yu) : 제일 핫하게 트렌드를 쫓을수 있습니다. ㅎ
2022. 4. 15. 오후 11:01, 유용태 (teo.yu) : 조금 듣보 같은것들이 올라면서 응 이게 뭐야? 하는데
2022. 4. 15. 오후 11:02, 유용태 (teo.yu) : 막 유명해지고 그러더라구요. ㅎ
2022. 4. 15. 오후 11:09: 하트어피치님이 들어왔습니다.
2022. 4. 15. 오후 11:09, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 15. 오후 11:10, 유용태 (teo.yu) : 안녕하세요 하트어피치님 반갑습니다 :)
2022. 4. 15. 오후 11:10, 하트어피치 : 안녕하세여! 잘부탁드립니당 ㅎㅎ
2022. 4. 15. 오후 11:10, 유용태 (teo.yu) : 네~ 어서오세요! 잘 부탁드립니다.
2022. 4. 15. 오후 11:11, 유용태 (teo.yu) : 많이 질문하고 많이 답변하고 많이 얻어가세요!
2022. 4. 15. 오후 11:33, 하트어피치 : 네엡!!!
2022. 4. 15. 오후 11:38, 유용태 (teo.yu) : 어피치님은 최근 관심사는 뭔가요? +_+

2022년 4월 16일 토요일
2022. 4. 16. 오전 12:03, 하트어피치 : 최근 기술과제를 진행하면서 좌절을 많이해서 리액트와 nextJS 기본적인 것들을 다시 복습하고 깊이 이해하기위해 노력중입니다 ㅠㅠ
2022. 4. 16. 오전 12:03, 유용태 (teo.yu) : 화이팅입니다!! 기술과제 해결은 하신건가요?
2022. 4. 16. 오전 12:07, 하트어피치 : 감사합니다 기능 구현은 다했지만  적절한 접근법과 코드 퀄리티면에서 부족한면이 있었던것 같습니다
2022. 4. 16. 오전 12:09, 유용태 (teo.yu) : 기능 구현이 제일 중요하죠!ㅋㅋ 해결되는 방법 찾게 되면 어떤 문제였는지 어떻게 해결했는지 나중에 한번 알려주세요. ㅎ
2022. 4. 16. 오전 12:11, 떨고있는 어피치 : 저도 과제 하면서 또 성장하는 것같더라구여……ㅋㅋㅋ(물론 떨어지긴 하지만…)
2022. 4. 16. 오전 12:12, 정충일 [FLAG 회장] : ㅋㅋ저도요... 과제하면서 벽느끼고 좌절하면서 공부합니다.
2022. 4. 16. 오전 12:12, 하트어피치 : 네엡 ㅎㅎ 맞아요 떨어지면 마음은 아프지만 도움은 엄청 돼요 ㅎㅎ
2022. 4. 16. 오전 12:19, 리린이 : 프론트 과제하면서 테스트코드는 다들 넣으시나요?
2022. 4. 16. 오전 12:19, 리린이 : 오늘 낮에도 테스트코드 토픽은 나왔었는데 과제할때는 다들 넣으시는지 궁금하네요 ㅎ
2022. 4. 16. 오전 1:04: 이직할거에요님이 들어왔습니다.
2022. 4. 16. 오전 1:04, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 16. 오전 1:04, 유용태 (teo.yu) : 안녕하세요 눈빛 애교 어치피님~~ 반갑습ㄴ디ㅏ :)
2022. 4. 16. 오전 1:05, 이직할거에요 : 안녕하세요 !! 닉변했습니다 ㅋㅋ
2022. 4. 16. 오전 8:41, 유용태 (teo.yu) : 어서오세요~ 어제는 너무 늦은 시간인것 같아서 답을 안 드렸어요 ^^;
2022. 4. 16. 오전 8:42, 유용태 (teo.yu) : 환영합니다 여기는 각자 궁금한 것들을 모아서 다 같이 성장하고자 만든 공간입니다. 혼자라서 막막하거나 개발 얘기에 대한 갈증을 해소 할 수 있길 바래요 ㅋ
2022. 4. 16. 오전 8:42, 유용태 (teo.yu) : 커리어든 학습이든 실무든 멘탈이든 뭐든 좋으니 편하게 글 남겨주세요 :)
2022. 4. 16. 오전 11:06: 벨로그보고왔어요님이 들어왔습니다.
2022. 4. 16. 오전 11:06, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 16. 오전 11:06, 유용태 (teo.yu) : 안녕하세요 벨로그보고왔어요님!! 반갑습니다 :)
2022. 4. 16. 오전 11:06, 이직할거에요 : 감사합니당 <~
2022. 4. 16. 오전 11:06, 벨로그보고왔어요 : 홉! 안녕하세요~!!!
2022. 4. 16. 오전 11:07, 유용태 (teo.yu) : 벨로그보고 와주셨군요 ㅋㅋ 감사합니다 +_+
2022. 4. 16. 오전 11:07, 벨로그보고왔어요 : 넹! 글이 너무 쏙쏙 잘 읽어져서 도움 많이 받고 있습니다 ! ! 감사합니다 : )
2022. 4. 16. 오전 11:08, 유용태 (teo.yu) : 칭찬 감사합니다~ 여기는 블로그 보다는 짧은 호흡으로 소소하게 궁금해할만 것들을 답하려고 시작한 공간입니다만
2022. 4. 16. 오전 11:09, 유용태 (teo.yu) : 많은 사람들이 참여해주셔서 이제 함께 묻고 성장하는 공간이 되었네요!! 언젠든 궁금한게 생기면 편하게 글 남겨주세요
2022. 4. 16. 오전 11:10, 유용태 (teo.yu) : 그리고 내가 아는 거다 싶으면 또 바로 바로 답해주세요 :) 늘 주시하고 있어서 저도 아는 거다 싶으면 바로 와서 답변 드리고 있어요 ㅋ (그중에 좋다 싶은 내용은 블로그 소재로 쓰고 있습니다 ㅋ)
2022. 4. 16. 오전 11:12, 벨로그보고왔어요 : 넵넵! 저도 앞으로 소통하면서 성장할 수 있기를 바랍니당 ( 이제 개발자의 길을 시작했지만..ㅋㅋ)
2022. 4. 16. 오전 11:29, 유용태 (teo.yu) : 좋아요! 좋은 개발자의 덕목 중에 하나 좋은 질문을 잘하는 것인데~ 그것도 해버릇해야 느니까요! 잘부탁드려요 ㅎ
2022. 4. 16. 오전 11:47, 벨로그보고왔어요 : 넵넵 앞으로 잘 부탁드립니다 : )
2022. 4. 16. 오전 11:53, JS척척박사가꿈 : 혹시 주니어 프론트엔드 개발자가에게 추천해줄만한 서적 있으신가요
2022. 4. 16. 오전 11:53, JS척척박사가꿈 : *개발자에게
2022. 4. 16. 오전 11:54, 썰~~ : 공식문서요..
2022. 4. 16. 오전 11:54, 썰~~ : 흠 리팩토링?
2022. 4. 16. 오전 11:55, 유용태 (teo.yu) : 지금 주니어책이 뭐가 있는지를 모르겠네요 책으로 공부를 안한지 오래되서요~
2022. 4. 16. 오전 11:55, 유용태 (teo.yu) : 책을 고르는 요령은 알려드릴게요
2022. 4. 16. 오전 11:55, 유용태 (teo.yu) : 일단 서점으로 가서 직접 보시구요
2022. 4. 16. 오전 11:56, 이직할거에요 : 네
2022. 4. 16. 오전 11:57, 유용태 (teo.yu) : 일단 초반부가 읽히고 쉽네.... 하는 느낌이 드는 책을 사세요
2022. 4. 16. 오전 11:57, 유용태 (teo.yu) : 그리고 예제.. 라기보다 해보고 싶은 걸 많이 제시하는 걸 사세요
2022. 4. 16. 오전 11:58, 유용태 (teo.yu) : 로드맵에나 가이드가 되어 줄거에요
2022. 4. 16. 오전 11:58, 유용태 (teo.yu) : 이나*
2022. 4. 16. 오전 11:58, 유용태 (teo.yu) : 개발은 이론을 배우는게 아니라
2022. 4. 16. 오전 11:58, 유용태 (teo.yu) : 그냥 많이 만들어보는 경험치가 훨씬 중요하니까요
2022. 4. 16. 오전 11:58, 프론트 공부 : 저는 요즘 오브젝트 책 읽고있는데 잘 이해는 안가지만 읽을수록 개발할때 시야가 풍부해지더라구요!!
2022. 4. 16. 오전 11:58, JS척척박사가꿈 : 오 넵 감사합니다..!!
2022. 4. 16. 오전 11:58, 유용태 (teo.yu) : 그런게 그냥 만들고 싶은거 만들라라고 말하면
2022. 4. 16. 오전 11:59, 유용태 (teo.yu) : 뭘 해야할지 막막해하죠 다들 ㅋ
2022. 4. 16. 오전 11:59, JS척척박사가꿈 : 사실 얼마전에 기술면접봤는데 이미지 1픽셀에 몇바이트냐는 질문에서 제대로 대답을 못해서 ㅠ기본기가 부족한 저스스로에게 너무 실망스러웠습니다 🥺
2022. 4. 16. 오전 11:59, 이직할거에요 : 중고신입 코테는 어떻게 준비하는게 좋을까요 ...?
2022. 4. 16. 오전 11:59, 유용태 (teo.yu) : 그런 가이드나 로드맵이 될만한 해볼만한 것들이 많은 책을 입문용으로는 추천합니다
2022. 4. 16. 오후 12:00, 유용태 (teo.yu) : leetcode나 프로그래머스 백준등 코테 사이트에서 중급 정도로 자스로 한번 간을 먼저 보세요 ㅎ
2022. 4. 16. 오후 12:01, 유용태 (teo.yu) : 코테 흐름에  익숙해지면 좋은데
2022. 4. 16. 오후 12:01, 이직할거에요 : 아하 ...
2022. 4. 16. 오후 12:01, 이직할거에요 : 공부는 계속 풀어보는거 밖에 없을까요 ?
2022. 4. 16. 오후 12:01, 유용태 (teo.yu) : 지문 분석 -> 데이터로 변환 -> 요구사항 구현 -> 굉장히 복잡한 케이스로 인한 최적화
2022. 4. 16. 오후 12:01, 유용태 (teo.yu) : 계속 풀어보는 것은 맞는데요
2022. 4. 16. 오후 12:02, 썰~~ : 자료구조 먼저 쭉 보시고 그다음에 코테 유형별로 풀어보시는걸 추천드립니다
2022. 4. 16. 오후 12:02, 이직할거에요 : 네네
2022. 4. 16. 오후 12:02, 유용태 (teo.yu) : 좀 분석하면서 분리하고 나눠서
2022. 4. 16. 오후 12:02, 이직할거에요 : 아
2022. 4. 16. 오후 12:02, 유용태 (teo.yu) : 단계별로 좀 익숙해지면 좋을 것 같아요
2022. 4. 16. 오후 12:03, 유용태 (teo.yu) : 요구사항분석 - 데이터 구조 설계 - 일단 테스트 케이스 1개라도 하드코딩해서 통과
2022. 4. 16. 오후 12:03, 유용태 (teo.yu) : 조금씩 반복이나 조건추가 하면서 나머지 케이스 정복
2022. 4. 16. 오후 12:03, 유용태 (teo.yu) : 오래걸릴만한 요인이나 반복제거 최적화는 어떻게할까
2022. 4. 16. 오후 12:03, 유용태 (teo.yu) : 모두 통과
2022. 4. 16. 오후 12:04, 유용태 (teo.yu) : 대충 이런 패턴입니다
2022. 4. 16. 오후 12:04, 이직할거에요 : 아하 !
2022. 4. 16. 오후 12:04, 이직할거에요 : 가을에 퇴사하고
2022. 4. 16. 오후 12:04, 이직할거에요 : 중고신입으로 공부하려구여ㅠ...
2022. 4. 16. 오후 12:04, 이직할거에요 : 이직하구싶어여
2022. 4. 16. 오후 12:04, 유용태 (teo.yu) : 내가 어느 파트가 약한지 체크를 하면서 이론도 필요한 걸 찾아보시면 좋을 것 같아요
2022. 4. 16. 오후 12:04, 유용태 (teo.yu) : 화이팅입니다
2022. 4. 16. 오후 12:05, 이직할거에요 : 감사합니다 !!
2022. 4. 16. 오후 12:05, 이직할거에요 : 아 테오님
2022. 4. 16. 오후 12:05, 이직할거에요 : 인강 같은거는
2022. 4. 16. 오후 12:05, 이직할거에요 : 어떤가요 ?
2022. 4. 16. 오후 12:05, 유용태 (teo.yu) : 제가 공부할때는 인강이 없었고 인강은 한번도 들어 본적이 없어서
2022. 4. 16. 오후 12:05, 유용태 (teo.yu) : 제가 아니라 여기 다른 분들에게 추천을 받아 보세요 ㅎ
2022. 4. 16. 오후 12:06, 이직할거에요 : 넵넵 !! 감사합니다 ~~
2022. 4. 16. 오후 12:06, 썰~~ : 저도 인강은 듣지 않았고 자료구조먼저 하고 풀이법 카테고리대로 문제 풀어봤습니다
2022. 4. 16. 오후 12:06, 넉스트 : 코딩테스트 준비는 문제해결전략 책 추천드려요! 기초 탄탄해집니다 ㅎㅎ
2022. 4. 16. 오후 12:06, 이직할거에요 : 메모하겠습니다 감사합니다 !!
2022. 4. 16. 오후 12:06, 넉스트 : 샵검색 : #알고리즘 문제 해결 전략 세트
2022. 4. 16. 오후 12:06, 이직할거에요 : 감사합니다 !!! 책도 하나 봐야겠네요 ㅋㅋ
2022. 4. 16. 오후 12:07, 넉스트 : 여러분 제가 처음 직장에서 신입 프론트엔드 개발자로 일을 하게되었는데 탄탄한 실력을 갖춘 프론트엔드 개발자가 되기위한 로드맵이나 커리큘럼등을 추천해주실 수 있으실까요??
2022. 4. 16. 오후 12:08, 썰~~ : roadmap.sh
2022. 4. 16. 오후 12:08, 넉스트 : 와..
2022. 4. 16. 오후 12:08, 썰~~ : https://roadmap.sh/
2022. 4. 16. 오후 12:08, 썰~~ : 링크가 안걸리네요
2022. 4. 16. 오후 12:08, 유용태 (teo.yu) : 무슨 서비스를 만들고 싶나요? 혹은 하고 있어요?
2022. 4. 16. 오후 12:09, 넉스트 : 음 현재 사내서비스 화면단을 만들고있습니다!
2022. 4. 16. 오후 12:10, 유용태 (teo.yu) : 일단 하고 있는 것을 먼저 분석을 해보세요! 프론트 뿐 만 아니라 전부다요
2022. 4. 16. 오후 12:11, 유용태 (teo.yu) : 그러면서 사내서비스 기술 스택 지도랑 데이터 구조 흐름도 같은 걸 일단 먼저 잏하시면서
2022. 4. 16. 오후 12:11, 유용태 (teo.yu) : 해당 기술 스택별로 비슷한 것들을 좀 파고 들면
2022. 4. 16. 오후 12:11, 썰~~ : 혹시 지도에서 경로 그려보신분 있으신가요
2022. 4. 16. 오후 12:11, 유용태 (teo.yu) : 이게 주류인지 레거시인지 최신인지 알게 되는데
2022. 4. 16. 오후 12:11, 유용태 (teo.yu) : 그렇게 각자의 맥락을 정리하고 나면
2022. 4. 16. 오후 12:12, 유용태 (teo.yu) : 남들이 만들어 놓은 로드맵꼭 안 따라가도
2022. 4. 16. 오후 12:12, 넉스트 : 오호..먼저 제가 하고있는것부터 잘하는게 우선이군요.. 제가 성급했네요! 조언 감사합니다 테오님!
2022. 4. 16. 오후 12:12, 유용태 (teo.yu) : 현재 하고 있는 것에서 어떤걸 배워서 최신화 할 수 있을지 로드맵이 세워질거에요
2022. 4. 16. 오후 12:13, 넉스트 : 프론트엔드 개발자로 일하게되었는데 테오님 벨로그의 css도 잘모르는것같고 리액트도 잘모르는것 같아 조급해졌네요..
2022. 4. 16. 오후 12:13, 넉스트 : *벨로그의 css자가진단에서도
2022. 4. 16. 오후 12:13, 유용태 (teo.yu) : 아.. 하고 있는 걸 잘하라기보다 하고 있는 기술 스태부터 출발해서 최신화할것을 찾아가는 방법으로 로드맵을 세울수 있다는 거였어요
2022. 4. 16. 오후 12:14, 유용태 (teo.yu) : 스택*
2022. 4. 16. 오후 12:14, DARTZ : 취업하신거 보면 능력이 충분히 있으신 것 같아요!
2022. 4. 16. 오후 12:14, 넉스트 : 이모티콘 
2022. 4. 16. 오후 12:21, 유용태 (teo.yu) : 지금 쓰는 기술 스택이 최선인가? 하는
생각으로 검색을 하다보면 가장 최신이면서도 주류를 찾을 수가 있는데 내가 모르는 거라면 그걸 배우시면 됩니다 ㅎ
2022. 4. 16. 오후 12:29, 유용태 (teo.yu) : axios vs fetch
https://meticulous.ai/blog/fetch-vs-axios/
2022. 4. 16. 오후 1:33: roka님이 들어왔습니다.
2022. 4. 16. 오후 1:33, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 16. 오후 1:33, 유용태 (teo.yu) : 안녕하세요 roka님
반갑습니다 :)
2022. 4. 16. 오후 1:39, roka : 안녕하세요!
2022. 4. 16. 오후 1:39, 유용태 (teo.yu) : 네! 어서오세요 환영합니다
2022. 4. 16. 오후 1:40, 유용태 (teo.yu) : 여기는 프론트엔드을 주력으로 개발이나 실무 커리어등 각종 이야기들을 함께 하고자 만든 공간입니다 :)
2022. 4. 16. 오후 1:40, 유용태 (teo.yu) : 언제든 편하게 하고 싶은 말 궁금한 내용들 생각나면 글 남겨 주세요 :)
2022. 4. 16. 오후 1:52, 프론트 공부 : 혹시 회사에서 msp 를 사용하시는분 계신가요? 
계신다면 도입 배경이 궁금합니다!
2022. 4. 16. 오후 1:57, 하자코딩 : 🙋🏻‍♂️다들 프론트엔드 개발자 분들이시니깐,, js문법관련 질문 하나만 할게요-!(도와주세요😢)

예시 코드)
const check = Array.from({ length: MAX_SIZE + 1 }, () =>
  Array(MAX_SIZE + 1).fill(0)
);

질문1) 다들 js에서 2차원 배열은 어떻게 생성하시는 편인가요? 이유도 궁금해요! 

질문2) 객체 생성시 '{ length:5 }' 이렇게 리터럴로 객체 크기를 지정해서 생성하는 문법이 있나요?!

감사합니다 😭
2022. 4. 16. 오후 1:59, 카타나 : 2번째 질문

제가생각하기에 첫 번째 인자에 array like object를 넣고
2022. 4. 16. 오후 1:59, 카타나 : 배열로 반환받는 것 같아요.
2022. 4. 16. 오후 2:00, 카타나 : Array.from(array-like object, 각원소마다 적용될 함수)
2022. 4. 16. 오후 2:02, 민석 : 2번 객체 크기를 지정해야 하는 이유를 혹시 여쭤봐도 될까요?
2022. 4. 16. 오후 2:06, 하자코딩 : 감사합니다 유사배열객체는 속성으로 length를 가져서 저런식으로 선언해도 문제가 없는 것 같습니다. 덕분에 이해했어요
2022. 4. 16. 오후 2:06, 동딩댕동 : 객체 크기를 지정한다기보다 유사배열객체를 임의로 만든거라고 생각하시면 됩미다
2022. 4. 16. 오후 2:07, 하자코딩 : 2차원 배열을 생성하기위해서 크기지정을 하는 것 같아요
2022. 4. 16. 오후 2:07, 하자코딩 : 아하 이해했습니다. 감사합니다 🙏🏻
2022. 4. 16. 오후 2:07, 동딩댕동 : 저는 Array(N).fill().map( ()=> Array(N).fill(0)) 요렇게 하는걸 선호합니다 ㅎㅎ
2022. 4. 16. 오후 2:08, 유용태 (teo.yu) : 저도요 ㅎ
2022. 4. 16. 오후 2:09, 하자코딩 : 성능차이는 크게 없는거겠죠?! 다들감사합니다 ! 해결완료입니다 🥰
2022. 4. 16. 오후 2:16, 하자코딩 : https://stackoverflow.com/questions/26052699/array-from-vs-array-prototype-map
2022. 4. 16. 오후 2:17, 하자코딩 : map이 성능은 조금 더 좋은 것 같아요- 
감사합니다 ~
2022. 4. 16. 오후 2:22, 동딩댕동 : 코테 땜에 그러시나용? 실무에서 이차원 배열을 만들 일이 거의 없긴 하던데..
2022. 4. 16. 오후 2:24, 동딩댕동 : 요즘 브라우저에서는 최적화가 더 되어서 예전 결과랑 다를수도 있어요 
한번 직접 돌려봐서 비교해보는 것도 좋을거 같아요 ㅎㅎ..
2022. 4. 16. 오후 2:26, 하자코딩 : 넵 코테 때문이에요- 실무에선 사용하는 경우가 거의 없겠군요,,
넵 가능하다면 한번 돌려보겠습니다 !!🙏🏻
2022. 4. 16. 오후 2:32, 동딩댕동 : 코테도 자바스크립트 지원하는 경우면 그 두개 차이로 갈리는 경우는 없어서 너무 신경 안쓰셔도 좋을거 같네여 👍👍
백준 빡센 문제도 다른 병목을 처리하는게 더 중요한 경우가 많더라구요 (sweat)(sweat)
2022. 4. 16. 오후 2:32, 동딩댕동 : 코테 화이팅!!
2022. 4. 16. 오후 7:25, 자라자 : 안녕하세요, 혹시 '소프트웨어 마에스트로'(이하 소마)라는 프로그램을 아시는 분 계신가요..? 현업에서 이 프로그램에 대해 어떻게 생각하는 지 궁금합니다..! 
현재 스타트업에서 프론트엔드 인턴을 하고 있고 소마에도 합격을 한 상태입니다. 계약이 끝날 무렵 회사에서는 인턴 연장을 제의해 주셨는데, 취업 관점에서 어떤게 더 현명한 선택인지 모르겠네요.. 
회사는 근무환경은 매우 좋고 사람들과도 잘 맞고 일하는 것이 즐겁습니다. 무엇보다 사람들이 정말 똑똑합니다. 다만 구현 위주의 업무가 주이다보니 기술적인 성장이나 코드 품질 개선은 기대하기 어려울 것 같습니다. 속도위주로 작업이 진행되어서요. 보고 배울 사수나 코드리뷰 문화등이 없습니다.
소마는 금전적, 교육적 지원을 해주고 기간 후 나만의 산출물이 생기지만 11월까지 묶여있어야 한다는 단점이 너무 뼈아프네요. 하반기를 제대로 준비하려면 하지 않는 것이 맞는 것 같기도 하구요..(취준에 시간을 쏟으면 프로젝트 퀄리티가 낮아져서요,) 소마를 정말 잘 마친다면 기존 이력서의 포트폴리오를 더 좋게 교체할 수 있을 것 같습니다.
이에 관해 조언해주실 것이 있다면 선택하는데 큰 도움이 될 것 같습니다. 지혜를 빌려주세요. 긴 글 읽어주셔서 감사드립니다.🙏
2022. 4. 16. 오후 7:31, 프린이 : 인턴 연장은 계속 계약직이라는 말씀이신가요?
2022. 4. 16. 오후 7:32, 자라자 : 네 그렇습니다..
2022. 4. 16. 오후 7:38, 게으름(lifeisnovel) : 소마를 고려해보는 것도 괜찮을 것 같아요! 꼭 소마가 아니더라도 인턴 하면서 기술적인 성장이 어려웠다고 생각된다면 업무를 지속하면서 벽에 막힌 느낌으로 실력 향상이 필요한 시간을 느낄 수도 있는데(사실 제 얘기...) 회사에서 사수 등이 있어서 실력 향상이 되고 있다면 계속 배우면서 성장하는 것도 괜찮겠지만 아직 인턴이고 회사에서 성장이 어렵다면 소마를 거쳐 하반기를 준비하는 것도 좋은 생각일 것 같아요!
소마 자체에 대해서는 주변에 하던 분들도 있던 것 같고 여러번 듣긴 했지만 현재 과정이 어떤지는 자세히 몰라서 더 잘 아시는 분들께...!
2022. 4. 16. 오후 7:41, 자라자 : 그렇군요...! 조언 감사드립니다...!!
2022. 4. 16. 오후 7:46, 게으름(lifeisnovel) : 네 스타트업은 항상 사람이 필요하기 때문에 정말 회사가 좋으셨다면 소마 끝나고서라도 다시 회사에 연락을(대신 인턴이 아니라 정규직으로) 넣어봐도 되지 않을까 싶어요...!
물론 회사나 상황에 따라 다르고 쉽게 되는 상황은 아니지만 저라면 예전에 좋게 근무하셨던 분이 다시 오신다면 언제든 두팔 벌려 환영이니까요😂
2022. 4. 16. 오후 7:51, 자라자 : 네 말씀해주셔서 감사합니다..!! 올하반기까지는 취업을 마무리짓고 싶은데, 소마를 하게 되면 내년으로 넘어가게 될 것 같아 그 부분이 걱정이네요. 조언해주셔서 감사드립니다..!!
2022. 4. 16. 오후 9:26, 애교뿜뿜 무지 : 혹시 자바스크립트 완벽가이드 책, 초보자가 읽기에 어려운가요?
2022. 4. 16. 오후 9:28, 실무뿌론트 : 조금 난이도있긴한데
자바스크립트 짬좀 먹은 병장이 썰풀어주는 느낌입니다
2022. 4. 16. 오후 9:29, 실무뿌론트 : 아 취소입미다..제가 말한건 
자바스크립트 핵심가이드;
2022. 4. 16. 오후 9:34, 애교뿜뿜 무지 : 오호 ㅋㅋㅋ 그래도 감사합니다. 🙂
2022. 4. 16. 오후 11:39: 초롱초롱 튜브님이 들어왔습니다.
2022. 4. 16. 오후 11:39, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 16. 오후 11:40, 유용태 (teo.yu) : 안녕하세요 초롱초롱 튜브님~~ 어서오세요 :)
2022. 4. 16. 오후 11:40, 초롱초롱 튜브 : 안녕하세여 신입풀스택 개발자인데, 신입은 리액트 위주로 시킨다고 해서 들어왓습니다!!! ㅋㅋ 잘부탁 드립니다~~
2022. 4. 16. 오후 11:41, 정충일 [FLAG 회장] : 혹시 다들 스타일 어떤거 사용하시나요? (스타일 컴포넌트, Emotion 등)
2022. 4. 16. 오후 11:41, 유용태 (teo.yu) : 네~ 잘부탁드립니다! 하다가 궁금한게 생기면 글 편하게 남겨주세요 :)
2022. 4. 16. 오후 11:42, 유용태 (teo.yu) : 아시다시피 저는 제가 만든 AdorableCSS를 쓰고 있습니다 ㅋㅋ (홍보) https://developer-1px.github.io/adorable-css/
2022. 4. 16. 오후 11:43, 유용태 (teo.yu) : 홍보말고 일반적으로는 Sass와 스타일드컴포넌트가 제일 주류이긴 한데요
2022. 4. 16. 오후 11:45, 유용태 (teo.yu) : 태일윈드도 조심씩 주류로 편입되어가고 있고 css-in-js는 스타일드컴포넌트에서 물갈이가 필요하다는분위기이긴 하나 이거다 하는 것은 아직 없어요
2022. 4. 16. 오후 11:45, 유용태 (teo.yu) : 조금씩*
2022. 4. 16. 오후 11:46, 포유 : 전 이모션과 태일윈드써용
2022. 4. 16. 오후 11:46, 초롱초롱 튜브 : 저희 회사도 태일윈드 사용했습니당
2022. 4. 16. 오후 11:46, 정충일 [FLAG 회장] : 왜 사용하시는지도 궁금해요
2022. 4. 16. 오후 11:46, 유용태 (teo.yu) : 어떤것을요?
2022. 4. 16. 오후 11:47, DARTZ : 전 bulma 사용합니다. buefy와..
2022. 4. 16. 오후 11:48, 유용태 (teo.yu) : css 흐름에 대해서는 제가 발표한 영상 전반부에 설명했어요 한번 보세요 :) https://m.youtube.com/watch?v=RUJTkFR1jko
2022. 4. 16. 오후 11:48, 정충일 [FLAG 회장] : 오 ㅋㅋ 따끈따끈한거네요
2022. 4. 16. 오후 11:49, 유용태 (teo.yu) : 총4부로 되어 있는데 1부 2부는 css 역사랑 변천사 얘기라서 원하는 내용이 들어가 있을 거에요 ㅎ
2022. 4. 16. 오후 11:55, Vintz : 스타일드 컴포넌트, 테일윈드 사용하고 있습니다. 사실 테일윈드가 정말 편해서 프로덕션에도 사용하고 싶은데 아직 협업 측면이나 프로덕션에 사용해도 될지 지켜보고 있어요. 그래서 테일윈드는 사이드 플젝에서만 사용하고, 팀원분들과는 스타일드 컴포넌트로 작업하고 있습니다. ㅎㅎ
2022. 4. 16. 오후 11:55, 민석 : 아하... 그렇군요!!

2022년 4월 17일 일요일
2022. 4. 17. 오전 12:05, 정충일 [FLAG 회장] : 아하 그렇군요!! 테일윈드도 많이 사용되고있지않나요?
2022. 4. 17. 오전 12:05, 정충일 [FLAG 회장] : ㅋㅋ 기회가된다면 AdorableCSS 한번 사용해봐야겠어요
2022. 4. 17. 오전 12:06, 유용태 (teo.yu) : 감사합니다 :)
2022. 4. 17. 오전 12:07, 정충일 [FLAG 회장] : 테일윈드와 비슷해서 사용하는것도 그렇게 어렵지않을것같아요
2022. 4. 17. 오전 12:11, 민석 : 와,, 영상 보고 있는데 w(~30) 은 엄청 귀엽고 직관적이네요
2022. 4. 17. 오전 12:11, 민석 : w(10~40~50) 이렇게 작성되면.. .엄청 큐트할거같아요
2022. 4. 17. 오전 1:00, Vintz : 사용은 많이 하시는 것 같은데 배포용으로 사용하는건 잘 모르겠어서 좀 더 지켜보고 있습니다 ㅎㅎ 더 사용해보려구요!
2022. 4. 17. 오전 4:05: 좌절하는 라이언님이 들어왔습니다.
2022. 4. 17. 오전 4:05, 방장봇 : 안녕하세요. 프론트엔드 시니어 개발자 테오입니다. :)

여기는 개발을 하다가 문득 궁금해진 것들을 서로 물어보고 좋은 것들은 공유 하는 공간입니다.
환영합니다 ♥

지난 글 지난 링크 보기: https://developer-1px.github.io/teo-yu-frontend/

디스코드 채널: https://discord.gg/2pwX6y9dwj
2022. 4. 17. 오전 8:15, 유용태 (teo.yu) : 안녕하세요 좌절하는 라이언님! 반갑습니다 :)
2022. 4. 17. 오전 8:16, 유용태 (teo.yu) : 오! 좋은 아이디어네요! 당장 업데이트 하러 갑니다 +_+
2022. 4. 17. 오전 10:16, 리린이 : 안녕하세요 ! vue 사용하면서 keydown 이벤트에대해서 좀 궁금해서요!  현재 vue로 프로젝트 진행중인데, 
<input @keydown="handleKeyDown" />
이런식으로 작성했는데,

handleKeyDown 함수에서 
현재 input에 값을 입력해도 한박자 느리게 나옵니다..!
2022. 4. 17. 오전 10:17, 리린이 : 실제로 input에 "안녕하세요"를 작성하면
console에는 "안녕하세" 까지만 나옵니다.! 어떤방식으로 해결하면 좋을까요?
2022. 4. 17. 오전 10:21, 리린이 : 일단 keyup, keydown, keypress, change 이벤트 사용해봤는데 다 안되고 있습니다.
2022. 4. 17. 오전 10:28, 유용태 (teo.yu) : input 이벤트를 써보세요
2022. 4. 17. 오전 10:28, 유용태 (teo.yu) : @input
2022. 4. 17. 오전 10:36, 리린이 : 아.. 감사합니다!! input으로 변경해보니 바로 해결됐네요. .ㅎㅎㅎ
2022. 4. 17. 오후 1:41, 콩 : 안녕하세요! OAuth 로그인 구현 처음 해보고 있는데 헷갈리는 부분이 있어서 여쭤봅니당ㅎㅎ
1. Login page는 직접 제작하는 것이 아니라 사용자가 소셜 로그인 버튼을 누르면 Resource Server에서 로그인 페이지를 제공하는 것이 맞나요?
2. Authorization Code는 browser에 저장할 필요없이 백엔드에서 해당 코드를 받으면 바로 Access Token 요청을 하는게 맞나요?
2022. 4. 17. 오후 2:56, 게으름(lifeisnovel) : 1. 소셜 로그인 버튼만 제작되면, 소셜 로그인 버튼을 눌렀을 때 '이 정보를 사이트에 제공에 동의' 페이지는 소셜 사이트쪽(구글/네이버 등)으로 이동되어서 진행될 거에요!
다만 추가 정보가 필요하다면 소셜 사이트에서 돌아온 이후에 추가정보를 받는 페이지는 직접 제작해주셔야 합니다.
2. 백엔드에서 사용하고 브라우저에 저장할 필요는 없을 거에요!
2022. 4. 17. 오후 2:59, 콩 : 앗 감사합니다ㅠㅠ!!
그러면 해당 사이트에서 로그인이 성공적으로 이루어지면 Authorization Code를 설정한 redirect uri로 넘겨주게 되는거군요!!!
2022. 4. 17. 오후 3:00: 떨고있는 어피치님이 나갔습니다.
